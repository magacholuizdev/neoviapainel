/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkIscUJBQXFCOztBQUVyQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMsU0FBUztBQUM1QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLFNBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixTQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkNBQTJDLFVBQVU7QUFDckQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzPzM3NzAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmV4cG9ydHMuYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGhcbmV4cG9ydHMudG9CeXRlQXJyYXkgPSB0b0J5dGVBcnJheVxuZXhwb3J0cy5mcm9tQnl0ZUFycmF5ID0gZnJvbUJ5dGVBcnJheVxuXG52YXIgbG9va3VwID0gW11cbnZhciByZXZMb29rdXAgPSBbXVxudmFyIEFyciA9IHR5cGVvZiBVaW50OEFycmF5ICE9PSAndW5kZWZpbmVkJyA/IFVpbnQ4QXJyYXkgOiBBcnJheVxuXG52YXIgY29kZSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJ1xuZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNvZGUubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgbG9va3VwW2ldID0gY29kZVtpXVxuICByZXZMb29rdXBbY29kZS5jaGFyQ29kZUF0KGkpXSA9IGlcbn1cblxuLy8gU3VwcG9ydCBkZWNvZGluZyBVUkwtc2FmZSBiYXNlNjQgc3RyaW5ncywgYXMgTm9kZS5qcyBkb2VzLlxuLy8gU2VlOiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CYXNlNjQjVVJMX2FwcGxpY2F0aW9uc1xucmV2TG9va3VwWyctJy5jaGFyQ29kZUF0KDApXSA9IDYyXG5yZXZMb29rdXBbJ18nLmNoYXJDb2RlQXQoMCldID0gNjNcblxuZnVuY3Rpb24gZ2V0TGVucyAoYjY0KSB7XG4gIHZhciBsZW4gPSBiNjQubGVuZ3RoXG5cbiAgaWYgKGxlbiAlIDQgPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0JylcbiAgfVxuXG4gIC8vIFRyaW0gb2ZmIGV4dHJhIGJ5dGVzIGFmdGVyIHBsYWNlaG9sZGVyIGJ5dGVzIGFyZSBmb3VuZFxuICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9iZWF0Z2FtbWl0L2Jhc2U2NC1qcy9pc3N1ZXMvNDJcbiAgdmFyIHZhbGlkTGVuID0gYjY0LmluZGV4T2YoJz0nKVxuICBpZiAodmFsaWRMZW4gPT09IC0xKSB2YWxpZExlbiA9IGxlblxuXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSB2YWxpZExlbiA9PT0gbGVuXG4gICAgPyAwXG4gICAgOiA0IC0gKHZhbGlkTGVuICUgNClcblxuICByZXR1cm4gW3ZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW5dXG59XG5cbi8vIGJhc2U2NCBpcyA0LzMgKyB1cCB0byB0d28gY2hhcmFjdGVycyBvZiB0aGUgb3JpZ2luYWwgZGF0YVxuZnVuY3Rpb24gYnl0ZUxlbmd0aCAoYjY0KSB7XG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIF9ieXRlTGVuZ3RoIChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pIHtcbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIHRvQnl0ZUFycmF5IChiNjQpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVucyA9IGdldExlbnMoYjY0KVxuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBsZW5zWzFdXG5cbiAgdmFyIGFyciA9IG5ldyBBcnIoX2J5dGVMZW5ndGgoYjY0LCB2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuKSlcblxuICB2YXIgY3VyQnl0ZSA9IDBcblxuICAvLyBpZiB0aGVyZSBhcmUgcGxhY2Vob2xkZXJzLCBvbmx5IGdldCB1cCB0byB0aGUgbGFzdCBjb21wbGV0ZSA0IGNoYXJzXG4gIHZhciBsZW4gPSBwbGFjZUhvbGRlcnNMZW4gPiAwXG4gICAgPyB2YWxpZExlbiAtIDRcbiAgICA6IHZhbGlkTGVuXG5cbiAgdmFyIGlcbiAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDE4KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgMTIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA8PCA2KSB8XG4gICAgICByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDMpXVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiAxNikgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMikge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAyKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPj4gNClcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDEpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTApIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCA0KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPj4gMilcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICByZXR1cm4gYXJyXG59XG5cbmZ1bmN0aW9uIHRyaXBsZXRUb0Jhc2U2NCAobnVtKSB7XG4gIHJldHVybiBsb29rdXBbbnVtID4+IDE4ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gPj4gMTIgJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiA2ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gJiAweDNGXVxufVxuXG5mdW5jdGlvbiBlbmNvZGVDaHVuayAodWludDgsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHRtcFxuICB2YXIgb3V0cHV0ID0gW11cbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpICs9IDMpIHtcbiAgICB0bXAgPVxuICAgICAgKCh1aW50OFtpXSA8PCAxNikgJiAweEZGMDAwMCkgK1xuICAgICAgKCh1aW50OFtpICsgMV0gPDwgOCkgJiAweEZGMDApICtcbiAgICAgICh1aW50OFtpICsgMl0gJiAweEZGKVxuICAgIG91dHB1dC5wdXNoKHRyaXBsZXRUb0Jhc2U2NCh0bXApKVxuICB9XG4gIHJldHVybiBvdXRwdXQuam9pbignJylcbn1cblxuZnVuY3Rpb24gZnJvbUJ5dGVBcnJheSAodWludDgpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVuID0gdWludDgubGVuZ3RoXG4gIHZhciBleHRyYUJ5dGVzID0gbGVuICUgMyAvLyBpZiB3ZSBoYXZlIDEgYnl0ZSBsZWZ0LCBwYWQgMiBieXRlc1xuICB2YXIgcGFydHMgPSBbXVxuICB2YXIgbWF4Q2h1bmtMZW5ndGggPSAxNjM4MyAvLyBtdXN0IGJlIG11bHRpcGxlIG9mIDNcblxuICAvLyBnbyB0aHJvdWdoIHRoZSBhcnJheSBldmVyeSB0aHJlZSBieXRlcywgd2UnbGwgZGVhbCB3aXRoIHRyYWlsaW5nIHN0dWZmIGxhdGVyXG4gIGZvciAodmFyIGkgPSAwLCBsZW4yID0gbGVuIC0gZXh0cmFCeXRlczsgaSA8IGxlbjI7IGkgKz0gbWF4Q2h1bmtMZW5ndGgpIHtcbiAgICBwYXJ0cy5wdXNoKGVuY29kZUNodW5rKHVpbnQ4LCBpLCAoaSArIG1heENodW5rTGVuZ3RoKSA+IGxlbjIgPyBsZW4yIDogKGkgKyBtYXhDaHVua0xlbmd0aCkpKVxuICB9XG5cbiAgLy8gcGFkIHRoZSBlbmQgd2l0aCB6ZXJvcywgYnV0IG1ha2Ugc3VyZSB0byBub3QgZm9yZ2V0IHRoZSBleHRyYSBieXRlc1xuICBpZiAoZXh0cmFCeXRlcyA9PT0gMSkge1xuICAgIHRtcCA9IHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgNCkgJiAweDNGXSArXG4gICAgICAnPT0nXG4gICAgKVxuICB9IGVsc2UgaWYgKGV4dHJhQnl0ZXMgPT09IDIpIHtcbiAgICB0bXAgPSAodWludDhbbGVuIC0gMl0gPDwgOCkgKyB1aW50OFtsZW4gLSAxXVxuICAgIHBhcnRzLnB1c2goXG4gICAgICBsb29rdXBbdG1wID4+IDEwXSArXG4gICAgICBsb29rdXBbKHRtcCA+PiA0KSAmIDB4M0ZdICtcbiAgICAgIGxvb2t1cFsodG1wIDw8IDIpICYgMHgzRl0gK1xuICAgICAgJz0nXG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIHBhcnRzLmpvaW4oJycpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/base64-js/index.js\n"));

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/buffer/index.js\n"));

/***/ }),

/***/ "./node_modules/cookie/index.js":
/*!**************************************!*\
  !*** ./node_modules/cookie/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(';')\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var index = pair.indexOf('=')\n\n    // skip things that don't look like key=value\n    if (index < 0) {\n      continue;\n    }\n\n    var key = pair.substring(0, index).trim()\n\n    // only assign once\n    if (undefined == obj[key]) {\n      var val = pair.substring(index + 1, pair.length).trim()\n\n      // quoted values\n      if (val[0] === '\"') {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29va2llL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhO0FBQ2IsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjs7QUFFQSxrQkFBa0Isa0JBQWtCO0FBQ3BDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixnQkFBZ0I7QUFDN0Msa0JBQWtCO0FBQ2xCO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGNBQWM7QUFDZDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjO0FBQ2Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYztBQUNkOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWM7QUFDZDs7QUFFQTtBQUNBLGNBQWM7QUFDZDs7QUFFQTtBQUNBLGNBQWM7QUFDZDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2Nvb2tpZS9pbmRleC5qcz81ZDMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogY29va2llXG4gKiBDb3B5cmlnaHQoYykgMjAxMi0yMDE0IFJvbWFuIFNodHlsbWFuXG4gKiBDb3B5cmlnaHQoYykgMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbmV4cG9ydHMucGFyc2UgPSBwYXJzZTtcbmV4cG9ydHMuc2VyaWFsaXplID0gc2VyaWFsaXplO1xuXG4vKipcbiAqIE1vZHVsZSB2YXJpYWJsZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBkZWNvZGUgPSBkZWNvZGVVUklDb21wb25lbnQ7XG52YXIgZW5jb2RlID0gZW5jb2RlVVJJQ29tcG9uZW50O1xuXG4vKipcbiAqIFJlZ0V4cCB0byBtYXRjaCBmaWVsZC1jb250ZW50IGluIFJGQyA3MjMwIHNlYyAzLjJcbiAqXG4gKiBmaWVsZC1jb250ZW50ID0gZmllbGQtdmNoYXIgWyAxKiggU1AgLyBIVEFCICkgZmllbGQtdmNoYXIgXVxuICogZmllbGQtdmNoYXIgICA9IFZDSEFSIC8gb2JzLXRleHRcbiAqIG9icy10ZXh0ICAgICAgPSAleDgwLUZGXG4gKi9cblxudmFyIGZpZWxkQ29udGVudFJlZ0V4cCA9IC9eW1xcdTAwMDlcXHUwMDIwLVxcdTAwN2VcXHUwMDgwLVxcdTAwZmZdKyQvO1xuXG4vKipcbiAqIFBhcnNlIGEgY29va2llIGhlYWRlci5cbiAqXG4gKiBQYXJzZSB0aGUgZ2l2ZW4gY29va2llIGhlYWRlciBzdHJpbmcgaW50byBhbiBvYmplY3RcbiAqIFRoZSBvYmplY3QgaGFzIHRoZSB2YXJpb3VzIGNvb2tpZXMgYXMga2V5cyhuYW1lcykgPT4gdmFsdWVzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICogQHJldHVybiB7b2JqZWN0fVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHBhcnNlKHN0ciwgb3B0aW9ucykge1xuICBpZiAodHlwZW9mIHN0ciAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBzdHIgbXVzdCBiZSBhIHN0cmluZycpO1xuICB9XG5cbiAgdmFyIG9iaiA9IHt9XG4gIHZhciBvcHQgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgcGFpcnMgPSBzdHIuc3BsaXQoJzsnKVxuICB2YXIgZGVjID0gb3B0LmRlY29kZSB8fCBkZWNvZGU7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYWlycy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBwYWlyID0gcGFpcnNbaV07XG4gICAgdmFyIGluZGV4ID0gcGFpci5pbmRleE9mKCc9JylcblxuICAgIC8vIHNraXAgdGhpbmdzIHRoYXQgZG9uJ3QgbG9vayBsaWtlIGtleT12YWx1ZVxuICAgIGlmIChpbmRleCA8IDApIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIHZhciBrZXkgPSBwYWlyLnN1YnN0cmluZygwLCBpbmRleCkudHJpbSgpXG5cbiAgICAvLyBvbmx5IGFzc2lnbiBvbmNlXG4gICAgaWYgKHVuZGVmaW5lZCA9PSBvYmpba2V5XSkge1xuICAgICAgdmFyIHZhbCA9IHBhaXIuc3Vic3RyaW5nKGluZGV4ICsgMSwgcGFpci5sZW5ndGgpLnRyaW0oKVxuXG4gICAgICAvLyBxdW90ZWQgdmFsdWVzXG4gICAgICBpZiAodmFsWzBdID09PSAnXCInKSB7XG4gICAgICAgIHZhbCA9IHZhbC5zbGljZSgxLCAtMSlcbiAgICAgIH1cblxuICAgICAgb2JqW2tleV0gPSB0cnlEZWNvZGUodmFsLCBkZWMpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbi8qKlxuICogU2VyaWFsaXplIGRhdGEgaW50byBhIGNvb2tpZSBoZWFkZXIuXG4gKlxuICogU2VyaWFsaXplIHRoZSBhIG5hbWUgdmFsdWUgcGFpciBpbnRvIGEgY29va2llIHN0cmluZyBzdWl0YWJsZSBmb3JcbiAqIGh0dHAgaGVhZGVycy4gQW4gb3B0aW9uYWwgb3B0aW9ucyBvYmplY3Qgc3BlY2lmaWVkIGNvb2tpZSBwYXJhbWV0ZXJzLlxuICpcbiAqIHNlcmlhbGl6ZSgnZm9vJywgJ2JhcicsIHsgaHR0cE9ubHk6IHRydWUgfSlcbiAqICAgPT4gXCJmb289YmFyOyBodHRwT25seVwiXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWxcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBzZXJpYWxpemUobmFtZSwgdmFsLCBvcHRpb25zKSB7XG4gIHZhciBvcHQgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgZW5jID0gb3B0LmVuY29kZSB8fCBlbmNvZGU7XG5cbiAgaWYgKHR5cGVvZiBlbmMgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gZW5jb2RlIGlzIGludmFsaWQnKTtcbiAgfVxuXG4gIGlmICghZmllbGRDb250ZW50UmVnRXhwLnRlc3QobmFtZSkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBuYW1lIGlzIGludmFsaWQnKTtcbiAgfVxuXG4gIHZhciB2YWx1ZSA9IGVuYyh2YWwpO1xuXG4gIGlmICh2YWx1ZSAmJiAhZmllbGRDb250ZW50UmVnRXhwLnRlc3QodmFsdWUpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgdmFsIGlzIGludmFsaWQnKTtcbiAgfVxuXG4gIHZhciBzdHIgPSBuYW1lICsgJz0nICsgdmFsdWU7XG5cbiAgaWYgKG51bGwgIT0gb3B0Lm1heEFnZSkge1xuICAgIHZhciBtYXhBZ2UgPSBvcHQubWF4QWdlIC0gMDtcblxuICAgIGlmIChpc05hTihtYXhBZ2UpIHx8ICFpc0Zpbml0ZShtYXhBZ2UpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gbWF4QWdlIGlzIGludmFsaWQnKVxuICAgIH1cblxuICAgIHN0ciArPSAnOyBNYXgtQWdlPScgKyBNYXRoLmZsb29yKG1heEFnZSk7XG4gIH1cblxuICBpZiAob3B0LmRvbWFpbikge1xuICAgIGlmICghZmllbGRDb250ZW50UmVnRXhwLnRlc3Qob3B0LmRvbWFpbikpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBkb21haW4gaXMgaW52YWxpZCcpO1xuICAgIH1cblxuICAgIHN0ciArPSAnOyBEb21haW49JyArIG9wdC5kb21haW47XG4gIH1cblxuICBpZiAob3B0LnBhdGgpIHtcbiAgICBpZiAoIWZpZWxkQ29udGVudFJlZ0V4cC50ZXN0KG9wdC5wYXRoKSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uIHBhdGggaXMgaW52YWxpZCcpO1xuICAgIH1cblxuICAgIHN0ciArPSAnOyBQYXRoPScgKyBvcHQucGF0aDtcbiAgfVxuXG4gIGlmIChvcHQuZXhwaXJlcykge1xuICAgIGlmICh0eXBlb2Ygb3B0LmV4cGlyZXMudG9VVENTdHJpbmcgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBleHBpcmVzIGlzIGludmFsaWQnKTtcbiAgICB9XG5cbiAgICBzdHIgKz0gJzsgRXhwaXJlcz0nICsgb3B0LmV4cGlyZXMudG9VVENTdHJpbmcoKTtcbiAgfVxuXG4gIGlmIChvcHQuaHR0cE9ubHkpIHtcbiAgICBzdHIgKz0gJzsgSHR0cE9ubHknO1xuICB9XG5cbiAgaWYgKG9wdC5zZWN1cmUpIHtcbiAgICBzdHIgKz0gJzsgU2VjdXJlJztcbiAgfVxuXG4gIGlmIChvcHQuc2FtZVNpdGUpIHtcbiAgICB2YXIgc2FtZVNpdGUgPSB0eXBlb2Ygb3B0LnNhbWVTaXRlID09PSAnc3RyaW5nJ1xuICAgICAgPyBvcHQuc2FtZVNpdGUudG9Mb3dlckNhc2UoKSA6IG9wdC5zYW1lU2l0ZTtcblxuICAgIHN3aXRjaCAoc2FtZVNpdGUpIHtcbiAgICAgIGNhc2UgdHJ1ZTpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPVN0cmljdCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbGF4JzpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPUxheCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc3RyaWN0JzpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPVN0cmljdCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbm9uZSc6XG4gICAgICAgIHN0ciArPSAnOyBTYW1lU2l0ZT1Ob25lJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gc2FtZVNpdGUgaXMgaW52YWxpZCcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzdHI7XG59XG5cbi8qKlxuICogVHJ5IGRlY29kaW5nIGEgc3RyaW5nIHVzaW5nIGEgZGVjb2RpbmcgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxuICogQHBhcmFtIHtmdW5jdGlvbn0gZGVjb2RlXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHRyeURlY29kZShzdHIsIGRlY29kZSkge1xuICB0cnkge1xuICAgIHJldHVybiBkZWNvZGUoc3RyKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBzdHI7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/cookie/index.js\n"));

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsV0FBVzs7QUFFcEI7QUFDQTtBQUNBO0FBQ0EsU0FBUyxXQUFXOztBQUVwQjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTLFdBQVc7O0FBRXBCO0FBQ0E7QUFDQSxTQUFTLFVBQVU7O0FBRW5CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2llZWU3NTQvaW5kZXguanM/ZWJjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgaWVlZTc1NC4gQlNELTMtQ2xhdXNlIExpY2Vuc2UuIEZlcm9zcyBBYm91a2hhZGlqZWggPGh0dHBzOi8vZmVyb3NzLm9yZy9vcGVuc291cmNlPiAqL1xuZXhwb3J0cy5yZWFkID0gZnVuY3Rpb24gKGJ1ZmZlciwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG1cbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIG5CaXRzID0gLTdcbiAgdmFyIGkgPSBpc0xFID8gKG5CeXRlcyAtIDEpIDogMFxuICB2YXIgZCA9IGlzTEUgPyAtMSA6IDFcbiAgdmFyIHMgPSBidWZmZXJbb2Zmc2V0ICsgaV1cblxuICBpICs9IGRcblxuICBlID0gcyAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBzID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBlTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IGUgPSAoZSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBtID0gZSAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBlID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBtTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IG0gPSAobSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBpZiAoZSA9PT0gMCkge1xuICAgIGUgPSAxIC0gZUJpYXNcbiAgfSBlbHNlIGlmIChlID09PSBlTWF4KSB7XG4gICAgcmV0dXJuIG0gPyBOYU4gOiAoKHMgPyAtMSA6IDEpICogSW5maW5pdHkpXG4gIH0gZWxzZSB7XG4gICAgbSA9IG0gKyBNYXRoLnBvdygyLCBtTGVuKVxuICAgIGUgPSBlIC0gZUJpYXNcbiAgfVxuICByZXR1cm4gKHMgPyAtMSA6IDEpICogbSAqIE1hdGgucG93KDIsIGUgLSBtTGVuKVxufVxuXG5leHBvcnRzLndyaXRlID0gZnVuY3Rpb24gKGJ1ZmZlciwgdmFsdWUsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtLCBjXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBydCA9IChtTGVuID09PSAyMyA/IE1hdGgucG93KDIsIC0yNCkgLSBNYXRoLnBvdygyLCAtNzcpIDogMClcbiAgdmFyIGkgPSBpc0xFID8gMCA6IChuQnl0ZXMgLSAxKVxuICB2YXIgZCA9IGlzTEUgPyAxIDogLTFcbiAgdmFyIHMgPSB2YWx1ZSA8IDAgfHwgKHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDApID8gMSA6IDBcblxuICB2YWx1ZSA9IE1hdGguYWJzKHZhbHVlKVxuXG4gIGlmIChpc05hTih2YWx1ZSkgfHwgdmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgbSA9IGlzTmFOKHZhbHVlKSA/IDEgOiAwXG4gICAgZSA9IGVNYXhcbiAgfSBlbHNlIHtcbiAgICBlID0gTWF0aC5mbG9vcihNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMilcbiAgICBpZiAodmFsdWUgKiAoYyA9IE1hdGgucG93KDIsIC1lKSkgPCAxKSB7XG4gICAgICBlLS1cbiAgICAgIGMgKj0gMlxuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIHZhbHVlICs9IHJ0IC8gY1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSArPSBydCAqIE1hdGgucG93KDIsIDEgLSBlQmlhcylcbiAgICB9XG4gICAgaWYgKHZhbHVlICogYyA+PSAyKSB7XG4gICAgICBlKytcbiAgICAgIGMgLz0gMlxuICAgIH1cblxuICAgIGlmIChlICsgZUJpYXMgPj0gZU1heCkge1xuICAgICAgbSA9IDBcbiAgICAgIGUgPSBlTWF4XG4gICAgfSBlbHNlIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgbSA9ICgodmFsdWUgKiBjKSAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSBlICsgZUJpYXNcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHZhbHVlICogTWF0aC5wb3coMiwgZUJpYXMgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gMFxuICAgIH1cbiAgfVxuXG4gIGZvciAoOyBtTGVuID49IDg7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IG0gJiAweGZmLCBpICs9IGQsIG0gLz0gMjU2LCBtTGVuIC09IDgpIHt9XG5cbiAgZSA9IChlIDw8IG1MZW4pIHwgbVxuICBlTGVuICs9IG1MZW5cbiAgZm9yICg7IGVMZW4gPiAwOyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBlICYgMHhmZiwgaSArPSBkLCBlIC89IDI1NiwgZUxlbiAtPSA4KSB7fVxuXG4gIGJ1ZmZlcltvZmZzZXQgKyBpIC0gZF0gfD0gcyAqIDEyOFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ieee754/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./styles/globals.css":
/*!**********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./styles/globals.css ***!
  \**********************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html,\\nbody {\\n  padding: 0;\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\\n    height: 100vh;\\n    width: 100vw;\\n}\\n\\na {\\n  color: inherit;\\n  text-decoration: none;\\n}\\n\\n* {\\n  box-sizing: border-box;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/globals.css\"],\"names\":[],\"mappings\":\"AAAA;;EAEE,UAAU;EACV,SAAS;EACT;wEACsE;IACpE,aAAa;IACb,YAAY;AAChB;;AAEA;EACE,cAAc;EACd,qBAAqB;AACvB;;AAEA;EACE,sBAAsB;AACxB\",\"sourcesContent\":[\"html,\\nbody {\\n  padding: 0;\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\\n    height: 100vh;\\n    width: 100vw;\\n}\\n\\na {\\n  color: inherit;\\n  text-decoration: none;\\n}\\n\\n* {\\n  box-sizing: border-box;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS5vbmVPZlsxM10udXNlWzFdIS4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLm9uZU9mWzEzXS51c2VbMl0hLi9zdHlsZXMvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDd0g7QUFDeEgsOEJBQThCLGtIQUEyQjtBQUN6RDtBQUNBLHVEQUF1RCxlQUFlLGNBQWMsd0pBQXdKLG9CQUFvQixtQkFBbUIsR0FBRyxPQUFPLG1CQUFtQiwwQkFBMEIsR0FBRyxPQUFPLDJCQUEyQixHQUFHLFNBQVMsb0ZBQW9GLFVBQVUsVUFBVSxLQUFLLE9BQU8sV0FBVyxVQUFVLE9BQU8sS0FBSyxVQUFVLFlBQVksT0FBTyxLQUFLLFlBQVksdUNBQXVDLGVBQWUsY0FBYyx3SkFBd0osb0JBQW9CLG1CQUFtQixHQUFHLE9BQU8sbUJBQW1CLDBCQUEwQixHQUFHLE9BQU8sMkJBQTJCLEdBQUcscUJBQXFCO0FBQ3I3QjtBQUNBLCtEQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlcy9nbG9iYWxzLmNzcz8wNGRkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJodG1sLFxcbmJvZHkge1xcbiAgcGFkZGluZzogMDtcXG4gIG1hcmdpbjogMDtcXG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFNlZ29lIFVJLCBSb2JvdG8sIE94eWdlbixcXG4gICAgVWJ1bnR1LCBDYW50YXJlbGwsIEZpcmEgU2FucywgRHJvaWQgU2FucywgSGVsdmV0aWNhIE5ldWUsIHNhbnMtc2VyaWY7XFxuICAgIGhlaWdodDogMTAwdmg7XFxuICAgIHdpZHRoOiAxMDB2dztcXG59XFxuXFxuYSB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG59XFxuXFxuKiB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vc3R5bGVzL2dsb2JhbHMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBOztFQUVFLFVBQVU7RUFDVixTQUFTO0VBQ1Q7d0VBQ3NFO0lBQ3BFLGFBQWE7SUFDYixZQUFZO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztFQUNkLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJodG1sLFxcbmJvZHkge1xcbiAgcGFkZGluZzogMDtcXG4gIG1hcmdpbjogMDtcXG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFNlZ29lIFVJLCBSb2JvdG8sIE94eWdlbixcXG4gICAgVWJ1bnR1LCBDYW50YXJlbGwsIEZpcmEgU2FucywgRHJvaWQgU2FucywgSGVsdmV0aWNhIE5ldWUsIHNhbnMtc2VyaWY7XFxuICAgIGhlaWdodDogMTAwdmg7XFxuICAgIHdpZHRoOiAxMDB2dztcXG59XFxuXFxuYSB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG59XFxuXFxuKiB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n            }\n            return content;\n        }).join(\"\");\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    \"\"\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join(\"\\n\");\n    }\n    return [\n        content\n    ].join(\"\\n\");\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELHFCQUFxQjtBQUN6RTtBQUNBO0FBQ0EsU0FBUztBQUNULE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IscUJBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qLyAvLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETzogZml4IHR5cGVcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgICAgIG1vZHVsZXMgPSBbXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGVzLFxuICAgICAgICAgICAgICAgICAgICBcIlwiXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgICAgICBpZiAoZGVkdXBlKSB7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcih2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKXtcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcbiAgICAgICAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGxpc3Q7XG59O1xuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgXCJcIiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICA7XG4gICAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICAgIGlmICghY3NzTWFwcGluZykge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICB9XG4gICAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb250ZW50XG4gICAgICAgIF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXG4gICAgICAgIF0pLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJldHVybiBbXG4gICAgICAgIGNvbnRlbnRcbiAgICBdLmpvaW4oXCJcXG5cIik7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxpREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./styles/globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./styles/globals.css\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./styles/globals.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLG9OQUF3RztBQUMxSCwwQkFBMEIsbUJBQU8sQ0FBQywyZUFBaVA7O0FBRW5SOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZCx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxpQkFBaUI7QUFDckIsTUFBTSwyZUFBaVA7QUFDdlA7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQywyZUFBaVA7O0FBRTNROztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixVQUFVOztBQUUxQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsVUFBVTtBQUNaO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlcy9nbG9iYWxzLmNzcz80MmE4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS5vbmVPZlsxM10udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS5vbmVPZlsxM10udXNlWzJdIS4vZ2xvYmFscy5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEJ5IGRlZmF1bHQsIHN0eWxlLWxvYWRlciBpbmplY3RzIENTUyBpbnRvIHRoZSBib3R0b21cbiAgICAgICAgICAgICAgICAgICAgLy8gb2YgPGhlYWQ+LiBUaGlzIGNhdXNlcyBvcmRlcmluZyBwcm9ibGVtcyBiZXR3ZWVuIGRldlxuICAgICAgICAgICAgICAgICAgICAvLyBhbmQgcHJvZC4gVG8gZml4IHRoaXMsIHdlIHJlbmRlciBhIDxub3NjcmlwdD4gdGFnIGFzXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuIGFuY2hvciBmb3IgdGhlIHN0eWxlcyB0byBiZSBwbGFjZWQgYmVmb3JlLiBUaGVzZVxuICAgICAgICAgICAgICAgICAgICAvLyBzdHlsZXMgd2lsbCBiZSBhcHBsaWVkIF9iZWZvcmVfIDxzdHlsZSBqc3ggZ2xvYmFsPi5cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGFuY2hvckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfX1wiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGUvLyBOb3JtYWxseSA8aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgICAgICAvLyBFYWNoIHN0eWxlIHRhZyBzaG91bGQgYmUgcGxhY2VkIHJpZ2h0IGJlZm9yZSBvdXJcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuICAgICAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIGFuY2hvckVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH07XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcbiAgICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHA7XG4gICAgZm9yKHAgaW4gYSl7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLm9uZU9mWzEzXS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLm9uZU9mWzEzXS51c2VbMl0hLi9nbG9iYWxzLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0ub25lT2ZbMTNdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0ub25lT2ZbMTNdLnVzZVsyXSEuL2dsb2JhbHMuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === \"undefined\") {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === \"undefined\") {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + \" \" + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement(\"style\");\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === \"undefined\") {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === \"function\") {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || \"head\");\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join(\"\\n\");\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute(\"media\", media);\n    } else {\n        style.removeAttribute(\"media\");\n    }\n    if (sourceMap && typeof btoa !== \"undefined\") {\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _src_context_DepartmentContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/context/DepartmentContext */ \"./src/context/DepartmentContext.tsx\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _azure_msal_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-react */ \"./node_modules/@azure/msal-react/dist/index.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var context_AuthContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! context/AuthContext */ \"./src/context/AuthContext.tsx\");\n/* harmony import */ var components_AuthContainer_Microsoft_authConfig__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! components/AuthContainer/Microsoft/authConfig */ \"./src/components/AuthContainer/Microsoft/authConfig.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\nfunction MyApp(param) {\n    let { Component, pageProps } = param;\n    _s();\n    const { pathname } = (0,next_router__WEBPACK_IMPORTED_MODULE_6__.useRouter)();\n    (0,react__WEBPACK_IMPORTED_MODULE_5__.useEffect)(()=>{\n        if (pathname === \"/\") next_router__WEBPACK_IMPORTED_MODULE_6___default().push(\"/login\");\n    }, [\n        pathname\n    ]);\n    const msalInstance = new _azure_msal_browser__WEBPACK_IMPORTED_MODULE_9__.PublicClientApplication(components_AuthContainer_Microsoft_authConfig__WEBPACK_IMPORTED_MODULE_8__.msalConfig);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                    children: \"Neovia Engenharia - Portal\"\n                }, void 0, false, {\n                    fileName: \"/Users/luizfernandomagacho/Desktop/Projetos/neoviapainel/pages/_app.tsx\",\n                    lineNumber: 27,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/luizfernandomagacho/Desktop/Projetos/neoviapainel/pages/_app.tsx\",\n                lineNumber: 26,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(context_AuthContext__WEBPACK_IMPORTED_MODULE_7__.AuthProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_azure_msal_react__WEBPACK_IMPORTED_MODULE_4__.MsalProvider, {\n                    instance: msalInstance,\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_src_context_DepartmentContext__WEBPACK_IMPORTED_MODULE_2__.DepartmentContextProvider, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                            ...pageProps\n                        }, void 0, false, {\n                            fileName: \"/Users/luizfernandomagacho/Desktop/Projetos/neoviapainel/pages/_app.tsx\",\n                            lineNumber: 32,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/luizfernandomagacho/Desktop/Projetos/neoviapainel/pages/_app.tsx\",\n                        lineNumber: 31,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/luizfernandomagacho/Desktop/Projetos/neoviapainel/pages/_app.tsx\",\n                    lineNumber: 30,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/luizfernandomagacho/Desktop/Projetos/neoviapainel/pages/_app.tsx\",\n                lineNumber: 29,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(MyApp, \"qzkUnVqW1BcXSCbIIFP8iqxzteQ=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_6__.useRouter\n    ];\n});\n_c = MyApp;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNkI7QUFFZ0Q7QUFDOUM7QUFDa0I7QUFDYTtBQUU1QjtBQUNjO0FBQ0c7QUFDd0I7QUFNM0UsU0FBU1MsTUFBTSxLQUFvQztRQUFwQyxFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBYyxHQUFwQzs7SUFDYixNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHTixzREFBU0E7SUFFOUJGLGdEQUFTQSxDQUFDO1FBQ1IsSUFBSVEsYUFBYSxLQUFLUCx1REFBVyxDQUFDO0lBQ3BDLEdBQUc7UUFBQ087S0FBUztJQUNiLE1BQU1FLGVBQWUsSUFBSVgsd0VBQXVCQSxDQUFDSyxxRkFBVUE7SUFDM0QscUJBQ0U7OzBCQUNFLDhEQUFDUixrREFBSUE7MEJBQ0gsNEVBQUNlOzhCQUFNOzs7Ozs7Ozs7OzswQkFFVCw4REFBQ1IsNkRBQVlBOzBCQUNYLDRFQUFDTCwyREFBWUE7b0JBQUNjLFVBQVVGOzhCQUN0Qiw0RUFBQ2IscUZBQXlCQTtrQ0FDeEIsNEVBQUNTOzRCQUFXLEdBQUdDLFNBQVM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTXBDO0dBckJTRjs7UUFDY0gsa0RBQVNBOzs7S0FEdkJHO0FBdUJULCtEQUFlQSxLQUFLQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL19hcHAudHN4PzJmYmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiO1xuaW1wb3J0IHR5cGUgeyBBcHBQcm9wcyB9IGZyb20gXCJuZXh0L2FwcFwiO1xuaW1wb3J0IHsgRGVwYXJ0bWVudENvbnRleHRQcm92aWRlciB9IGZyb20gXCIuLi9zcmMvY29udGV4dC9EZXBhcnRtZW50Q29udGV4dFwiO1xuaW1wb3J0IFwiLi4vc3R5bGVzL2dsb2JhbHMuY3NzXCI7XG5pbXBvcnQgeyBNc2FsUHJvdmlkZXIgfSBmcm9tIFwiQGF6dXJlL21zYWwtcmVhY3RcIjtcbmltcG9ydCB7IFB1YmxpY0NsaWVudEFwcGxpY2F0aW9uIH0gZnJvbSBcIkBhenVyZS9tc2FsLWJyb3dzZXJcIjtcbmltcG9ydCB7IFBhZ2VXaXRoTGF5b3V0IH0gZnJvbSBcIi4uL3R5cGVzL1BhZ2VXaXRoTGF5b3V0XCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCByb3V0ZXIsIHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvcm91dGVyXCI7XG5pbXBvcnQgeyBBdXRoUHJvdmlkZXIgfSBmcm9tIFwiY29udGV4dC9BdXRoQ29udGV4dFwiO1xuaW1wb3J0IHsgbXNhbENvbmZpZyB9IGZyb20gXCJjb21wb25lbnRzL0F1dGhDb250YWluZXIvTWljcm9zb2Z0L2F1dGhDb25maWdcIjtcblxuaW50ZXJmYWNlIE15QXBwUHJvcHMgZXh0ZW5kcyBBcHBQcm9wcyB7XG4gIENvbXBvbmVudDogUGFnZVdpdGhMYXlvdXQ7XG59XG5cbmZ1bmN0aW9uIE15QXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfTogTXlBcHBQcm9wcykge1xuICBjb25zdCB7IHBhdGhuYW1lIH0gPSB1c2VSb3V0ZXIoKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChwYXRobmFtZSA9PT0gXCIvXCIpIHJvdXRlci5wdXNoKFwiL2xvZ2luXCIpO1xuICB9LCBbcGF0aG5hbWVdKTtcbiAgY29uc3QgbXNhbEluc3RhbmNlID0gbmV3IFB1YmxpY0NsaWVudEFwcGxpY2F0aW9uKG1zYWxDb25maWcpO1xuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPk5lb3ZpYSBFbmdlbmhhcmlhIC0gUG9ydGFsPC90aXRsZT5cbiAgICAgIDwvSGVhZD5cbiAgICAgIDxBdXRoUHJvdmlkZXI+XG4gICAgICAgIDxNc2FsUHJvdmlkZXIgaW5zdGFuY2U9e21zYWxJbnN0YW5jZX0+XG4gICAgICAgICAgPERlcGFydG1lbnRDb250ZXh0UHJvdmlkZXI+XG4gICAgICAgICAgICA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG4gICAgICAgICAgPC9EZXBhcnRtZW50Q29udGV4dFByb3ZpZGVyPlxuICAgICAgICA8L01zYWxQcm92aWRlcj5cbiAgICAgIDwvQXV0aFByb3ZpZGVyPlxuICAgIDwvPlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBNeUFwcDtcbiJdLCJuYW1lcyI6WyJIZWFkIiwiRGVwYXJ0bWVudENvbnRleHRQcm92aWRlciIsIk1zYWxQcm92aWRlciIsIlB1YmxpY0NsaWVudEFwcGxpY2F0aW9uIiwidXNlRWZmZWN0Iiwicm91dGVyIiwidXNlUm91dGVyIiwiQXV0aFByb3ZpZGVyIiwibXNhbENvbmZpZyIsIk15QXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwicGF0aG5hbWUiLCJwdXNoIiwibXNhbEluc3RhbmNlIiwidGl0bGUiLCJpbnN0YW5jZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n"));

/***/ }),

/***/ "./src/components/AuthContainer/Microsoft/authConfig.ts":
/*!**************************************************************!*\
  !*** ./src/components/AuthContainer/Microsoft/authConfig.ts ***!
  \**************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   graphConfig: function() { return /* binding */ graphConfig; },\n/* harmony export */   loginRequest: function() { return /* binding */ loginRequest; },\n/* harmony export */   msalConfig: function() { return /* binding */ msalConfig; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */ \n/**\n * Configuration object to be passed to MSAL instance on creation.\n * For a full list of MSAL.js configuration parameters, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md\n */ const msalConfig = {\n    auth: {\n        clientId: \"bf09fd59-6b55-4384-8ef0-fad31cd240c5\",\n        authority: \"https://login.microsoftonline.com/e121ff35-e664-4910-b9e1-50689b8ea690\",\n        //redirectUri: \"https://neoviapainel.azurewebsites.net/home\",\n        //clientId: process.env.MICROSOFT_CLIENT_ID || \"\",\n        //authority: process.env.MICROSOFT_AUTHORITY || \"\",\n        redirectUri: \"http://localhost:3000/\"\n    },\n    cache: {\n        cacheLocation: \"localStorage\",\n        storeAuthStateInCookie: false\n    },\n    system: {\n        loggerOptions: {\n            loggerCallback: (level, message, containsPii)=>{\n                if (containsPii) {\n                    return;\n                }\n                switch(level){\n                    case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Error:\n                        console.error(message);\n                        return;\n                    case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Info:\n                        console.info(message);\n                        return;\n                    case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Verbose:\n                        console.debug(message);\n                        return;\n                    case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Warning:\n                        console.warn(message);\n                        return;\n                    default:\n                        return;\n                }\n            }\n        }\n    }\n};\n/**\n * Scopes you add here will be prompted for user consent during sign-in.\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\n * For more information about OIDC scopes, visit:\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\n */ const loginRequest = {\n    scopes: [\n        \"User.Read\"\n    ]\n};\n/**\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\n */ const graphConfig = {\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9BdXRoQ29udGFpbmVyL01pY3Jvc29mdC9hdXRoQ29uZmlnLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7O0NBR0MsR0FFOEM7QUFFL0M7Ozs7Q0FJQyxHQUVNLE1BQU1DLGFBQWE7SUFDeEJDLE1BQU07UUFDSkMsVUFBVTtRQUNWQyxXQUNFO1FBQ0YsNkRBQTZEO1FBQzdELGtEQUFrRDtRQUNsRCxtREFBbUQ7UUFDbkRDLGFBQWFDLHdCQUFrQztJQUNqRDtJQUNBRyxPQUFPO1FBQ0xDLGVBQWU7UUFDZkMsd0JBQXdCO0lBQzFCO0lBQ0FDLFFBQVE7UUFDTkMsZUFBZTtZQUNiQyxnQkFBZ0IsQ0FBQ0MsT0FBWUMsU0FBY0M7Z0JBQ3pDLElBQUlBLGFBQWE7b0JBQ2Y7Z0JBQ0Y7Z0JBQ0EsT0FBUUY7b0JBQ04sS0FBS2YseURBQVFBLENBQUNrQixLQUFLO3dCQUNqQkMsUUFBUUMsS0FBSyxDQUFDSjt3QkFDZDtvQkFDRixLQUFLaEIseURBQVFBLENBQUNxQixJQUFJO3dCQUNoQkYsUUFBUUcsSUFBSSxDQUFDTjt3QkFDYjtvQkFDRixLQUFLaEIseURBQVFBLENBQUN1QixPQUFPO3dCQUNuQkosUUFBUUssS0FBSyxDQUFDUjt3QkFDZDtvQkFDRixLQUFLaEIseURBQVFBLENBQUN5QixPQUFPO3dCQUNuQk4sUUFBUU8sSUFBSSxDQUFDVjt3QkFDYjtvQkFDRjt3QkFDRTtnQkFDSjtZQUNGO1FBQ0Y7SUFDRjtBQUNGLEVBQUU7QUFFRjs7Ozs7Q0FLQyxHQUNNLE1BQU1XLGVBQWU7SUFDMUJDLFFBQVE7UUFBQztLQUFZO0FBQ3ZCLEVBQUU7QUFFRjs7O0NBR0MsR0FDTSxNQUFNQyxjQUFjO0lBQ3pCQyxpQkFBaUI7QUFDbkIsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9BdXRoQ29udGFpbmVyL01pY3Jvc29mdC9hdXRoQ29uZmlnLnRzPzU3Y2EiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IExvZ0xldmVsIH0gZnJvbSBcIkBhenVyZS9tc2FsLWJyb3dzZXJcIjtcblxuLyoqXG4gKiBDb25maWd1cmF0aW9uIG9iamVjdCB0byBiZSBwYXNzZWQgdG8gTVNBTCBpbnN0YW5jZSBvbiBjcmVhdGlvbi5cbiAqIEZvciBhIGZ1bGwgbGlzdCBvZiBNU0FMLmpzIGNvbmZpZ3VyYXRpb24gcGFyYW1ldGVycywgdmlzaXQ6XG4gKiBodHRwczovL2dpdGh1Yi5jb20vQXp1cmVBRC9taWNyb3NvZnQtYXV0aGVudGljYXRpb24tbGlicmFyeS1mb3ItanMvYmxvYi9kZXYvbGliL21zYWwtYnJvd3Nlci9kb2NzL2NvbmZpZ3VyYXRpb24ubWRcbiAqL1xuXG5leHBvcnQgY29uc3QgbXNhbENvbmZpZyA9IHtcbiAgYXV0aDoge1xuICAgIGNsaWVudElkOiBcImJmMDlmZDU5LTZiNTUtNDM4NC04ZWYwLWZhZDMxY2QyNDBjNVwiLFxuICAgIGF1dGhvcml0eTpcbiAgICAgIFwiaHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUuY29tL2UxMjFmZjM1LWU2NjQtNDkxMC1iOWUxLTUwNjg5YjhlYTY5MFwiLFxuICAgIC8vcmVkaXJlY3RVcmk6IFwiaHR0cHM6Ly9uZW92aWFwYWluZWwuYXp1cmV3ZWJzaXRlcy5uZXQvaG9tZVwiLFxuICAgIC8vY2xpZW50SWQ6IHByb2Nlc3MuZW52Lk1JQ1JPU09GVF9DTElFTlRfSUQgfHwgXCJcIixcbiAgICAvL2F1dGhvcml0eTogcHJvY2Vzcy5lbnYuTUlDUk9TT0ZUX0FVVEhPUklUWSB8fCBcIlwiLFxuICAgIHJlZGlyZWN0VXJpOiBwcm9jZXNzLmVudi5NSUNST1NPRlRfUkVESVJFQ1RfVVJJLFxuICB9LFxuICBjYWNoZToge1xuICAgIGNhY2hlTG9jYXRpb246IFwibG9jYWxTdG9yYWdlXCIsIC8vIFRoaXMgY29uZmlndXJlcyB3aGVyZSB5b3VyIGNhY2hlIHdpbGwgYmUgc3RvcmVkXG4gICAgc3RvcmVBdXRoU3RhdGVJbkNvb2tpZTogZmFsc2UsIC8vIFNldCB0aGlzIHRvIFwidHJ1ZVwiIGlmIHlvdSBhcmUgaGF2aW5nIGlzc3VlcyBvbiBJRTExIG9yIEVkZ2VcbiAgfSxcbiAgc3lzdGVtOiB7XG4gICAgbG9nZ2VyT3B0aW9uczoge1xuICAgICAgbG9nZ2VyQ2FsbGJhY2s6IChsZXZlbDogYW55LCBtZXNzYWdlOiBhbnksIGNvbnRhaW5zUGlpOiBhbnkpID0+IHtcbiAgICAgICAgaWYgKGNvbnRhaW5zUGlpKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHN3aXRjaCAobGV2ZWwpIHtcbiAgICAgICAgICBjYXNlIExvZ0xldmVsLkVycm9yOlxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBjYXNlIExvZ0xldmVsLkluZm86XG4gICAgICAgICAgICBjb25zb2xlLmluZm8obWVzc2FnZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgY2FzZSBMb2dMZXZlbC5WZXJib3NlOlxuICAgICAgICAgICAgY29uc29sZS5kZWJ1ZyhtZXNzYWdlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBjYXNlIExvZ0xldmVsLldhcm5pbmc6XG4gICAgICAgICAgICBjb25zb2xlLndhcm4obWVzc2FnZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufTtcblxuLyoqXG4gKiBTY29wZXMgeW91IGFkZCBoZXJlIHdpbGwgYmUgcHJvbXB0ZWQgZm9yIHVzZXIgY29uc2VudCBkdXJpbmcgc2lnbi1pbi5cbiAqIEJ5IGRlZmF1bHQsIE1TQUwuanMgd2lsbCBhZGQgT0lEQyBzY29wZXMgKG9wZW5pZCwgcHJvZmlsZSwgZW1haWwpIHRvIGFueSBsb2dpbiByZXF1ZXN0LlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgT0lEQyBzY29wZXMsIHZpc2l0OlxuICogaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvYXp1cmUvYWN0aXZlLWRpcmVjdG9yeS9kZXZlbG9wL3YyLXBlcm1pc3Npb25zLWFuZC1jb25zZW50I29wZW5pZC1jb25uZWN0LXNjb3Blc1xuICovXG5leHBvcnQgY29uc3QgbG9naW5SZXF1ZXN0ID0ge1xuICBzY29wZXM6IFtcIlVzZXIuUmVhZFwiXSxcbn07XG5cbi8qKlxuICogQWRkIGhlcmUgdGhlIHNjb3BlcyB0byByZXF1ZXN0IHdoZW4gb2J0YWluaW5nIGFuIGFjY2VzcyB0b2tlbiBmb3IgTVMgR3JhcGggQVBJLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlOlxuICogaHR0cHM6Ly9naXRodWIuY29tL0F6dXJlQUQvbWljcm9zb2Z0LWF1dGhlbnRpY2F0aW9uLWxpYnJhcnktZm9yLWpzL2Jsb2IvZGV2L2xpYi9tc2FsLWJyb3dzZXIvZG9jcy9yZXNvdXJjZXMtYW5kLXNjb3Blcy5tZFxuICovXG5leHBvcnQgY29uc3QgZ3JhcGhDb25maWcgPSB7XG4gIGdyYXBoTWVFbmRwb2ludDogXCJodHRwczovL2dyYXBoLm1pY3Jvc29mdC5jb20vdjEuMC9tZVwiLFxufTtcbiJdLCJuYW1lcyI6WyJMb2dMZXZlbCIsIm1zYWxDb25maWciLCJhdXRoIiwiY2xpZW50SWQiLCJhdXRob3JpdHkiLCJyZWRpcmVjdFVyaSIsInByb2Nlc3MiLCJlbnYiLCJNSUNST1NPRlRfUkVESVJFQ1RfVVJJIiwiY2FjaGUiLCJjYWNoZUxvY2F0aW9uIiwic3RvcmVBdXRoU3RhdGVJbkNvb2tpZSIsInN5c3RlbSIsImxvZ2dlck9wdGlvbnMiLCJsb2dnZXJDYWxsYmFjayIsImxldmVsIiwibWVzc2FnZSIsImNvbnRhaW5zUGlpIiwiRXJyb3IiLCJjb25zb2xlIiwiZXJyb3IiLCJJbmZvIiwiaW5mbyIsIlZlcmJvc2UiLCJkZWJ1ZyIsIldhcm5pbmciLCJ3YXJuIiwibG9naW5SZXF1ZXN0Iiwic2NvcGVzIiwiZ3JhcGhDb25maWciLCJncmFwaE1lRW5kcG9pbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/AuthContainer/Microsoft/authConfig.ts\n"));

/***/ }),

/***/ "./src/context/AuthContext.tsx":
/*!*************************************!*\
  !*** ./src/context/AuthContext.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthContext: function() { return /* binding */ AuthContext; },\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var models_UserProfile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/UserProfile */ \"./src/models/UserProfile.ts\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var nookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! nookies */ \"./node_modules/nookies/dist/index.js\");\n/* harmony import */ var nookies__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(nookies__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var services_AuthService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! services/AuthService */ \"./src/services/AuthService.ts\");\n/* harmony import */ var services_UserProfileService__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! services/UserProfileService */ \"./src/services/UserProfileService.ts\");\n/* harmony import */ var utils_store__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! utils/store */ \"./src/utils/store.ts\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_4__.createContext)({});\nfunction AuthProvider(param, props) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n    const [userProfile, setUserProfile] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n    const cookieParams = {\n        secure: true,\n        sameSite: \"Strict\"\n    };\n    const [msg, setMsg] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(\"\");\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    function setUserCookies(user, profile) {\n        (0,nookies__WEBPACK_IMPORTED_MODULE_3__.setCookie)(undefined, \"userData\", JSON.stringify(user), cookieParams);\n        (0,nookies__WEBPACK_IMPORTED_MODULE_3__.setCookie)(undefined, \"userProfileData\", JSON.stringify(profile), cookieParams);\n    }\n    function setTempMessage(message) {\n        setMsg(message);\n        setTimeout(()=>setMsg(\"\"), 3000);\n    }\n    async function getToken(data) {\n        try {\n            let loginResult = {};\n            loginResult = await services_AuthService__WEBPACK_IMPORTED_MODULE_5__.AuthService.login(data);\n            services_AuthService__WEBPACK_IMPORTED_MODULE_5__.AuthService.setToken(loginResult.token);\n            (0,nookies__WEBPACK_IMPORTED_MODULE_3__.setCookie)(undefined, \"painel.token\", loginResult.token, cookieParams);\n            return true;\n        } catch (_) {\n            setTempMessage(\"Login ou senha incorretos\");\n        }\n        return false;\n    }\n    async function signInData(dto) {\n        setMsg(\"\");\n        if (await getToken(dto)) {\n            const profile = await getUserInfo(dto.email);\n            console.log(\"Profile: \", profile);\n            routeIt(profile);\n        }\n    }\n    async function getUserInfo(email) {\n        try {\n            const lUSer = await services_AuthService__WEBPACK_IMPORTED_MODULE_5__.AuthService.getUserInfo(email);\n            setUser(lUSer);\n            const lUserProfile = await services_UserProfileService__WEBPACK_IMPORTED_MODULE_6__.UserProfileService.getUserProfileById(lUSer.profileId);\n            setUserProfile(lUserProfile);\n            setUserCookies(lUSer, lUserProfile);\n            return lUserProfile;\n        } catch (_) {\n            setTempMessage(\"Erro no login.\");\n        }\n    }\n    function routeIt(profile) {\n        if (profile) {\n            switch(profile.name){\n                case models_UserProfile__WEBPACK_IMPORTED_MODULE_1__.UserProfileName.USER:\n                    router.push(\"/home\");\n                    break;\n                default:\n                    router.push(\"/home\");\n            }\n        }\n    }\n    function logout() {\n        (0,nookies__WEBPACK_IMPORTED_MODULE_3__.destroyCookie)(null, \"painel.token\");\n        (0,nookies__WEBPACK_IMPORTED_MODULE_3__.destroyCookie)(null, \"user\");\n        utils_store__WEBPACK_IMPORTED_MODULE_7__[\"default\"].cleanAll();\n        next_router__WEBPACK_IMPORTED_MODULE_2___default().push(\"/login\");\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            signInData,\n            logout,\n            msg\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/luizfernandomagacho/Desktop/Projetos/neoviapainel/src/context/AuthContext.tsx\",\n        lineNumber: 111,\n        columnNumber: 5\n    }, this);\n}\n_s(AuthProvider, \"WI44OoEoxY72xV9Q7ZKw1hu4cXQ=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = AuthProvider;\nconst useAuth = ()=>{\n    _s1();\n    return (0,react__WEBPACK_IMPORTED_MODULE_4__.useContext)(AuthContext);\n};\n_s1(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29udGV4dC9BdXRoQ29udGV4dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHa0U7QUFDbEI7QUFDRztBQUNvQjtBQUNwQjtBQUNjO0FBQ2pDO0FBZXpCLE1BQU1XLDRCQUFjTixvREFBYUEsQ0FBQyxDQUFDLEdBQXNCO0FBRXpELFNBQVNPLGFBQWEsS0FBaUIsRUFBRUMsS0FBVTtRQUE3QixFQUFFQyxRQUFRLEVBQU8sR0FBakI7O0lBQzNCLE1BQU0sQ0FBQ0MsTUFBTUMsUUFBUSxHQUFHVCwrQ0FBUUE7SUFDaEMsTUFBTSxDQUFDVSxhQUFhQyxlQUFlLEdBQUdYLCtDQUFRQTtJQUM5QyxNQUFNWSxlQUFlO1FBQUVDLFFBQVE7UUFBTUMsVUFBVTtJQUFTO0lBQ3hELE1BQU0sQ0FBQ0MsS0FBS0MsT0FBTyxHQUFHaEIsK0NBQVFBLENBQUM7SUFDL0IsTUFBTWlCLFNBQVN0QixzREFBU0E7SUFFeEIsU0FBU3VCLGVBQWVWLElBQVUsRUFBRVcsT0FBb0I7UUFDdER0QixrREFBU0EsQ0FBQ3VCLFdBQVcsWUFBWUMsS0FBS0MsU0FBUyxDQUFDZCxPQUFPSTtRQUN2RGYsa0RBQVNBLENBQ1B1QixXQUNBLG1CQUNBQyxLQUFLQyxTQUFTLENBQUNILFVBQ2ZQO0lBRUo7SUFFQSxTQUFTVyxlQUFlQyxPQUFlO1FBQ3JDUixPQUFPUTtRQUNQQyxXQUFXLElBQU1ULE9BQU8sS0FBSztJQUMvQjtJQUVBLGVBQWVVLFNBQVNDLElBQWdCO1FBQ3RDLElBQUk7WUFDRixJQUFJQyxjQUFjLENBQUM7WUFDbkJBLGNBQWMsTUFBTTNCLDZEQUFXQSxDQUFDNEIsS0FBSyxDQUFDRjtZQUN0QzFCLDZEQUFXQSxDQUFDNkIsUUFBUSxDQUFDRixZQUFZRyxLQUFLO1lBQ3RDbEMsa0RBQVNBLENBQUN1QixXQUFXLGdCQUFnQlEsWUFBWUcsS0FBSyxFQUFFbkI7WUFDeEQsT0FBTztRQUNULEVBQUUsT0FBT29CLEdBQUc7WUFDVlQsZUFBZTtRQUNqQjtRQUVBLE9BQU87SUFDVDtJQUVBLGVBQWVVLFdBQVdDLEdBQWU7UUFDdkNsQixPQUFPO1FBQ1AsSUFBSSxNQUFNVSxTQUFTUSxNQUFNO1lBQ3ZCLE1BQU1mLFVBQVUsTUFBTWdCLFlBQVlELElBQUlFLEtBQUs7WUFDM0NDLFFBQVFDLEdBQUcsQ0FBQyxhQUFhbkI7WUFDekJvQixRQUFRcEI7UUFDVjtJQUNGO0lBRUEsZUFBZWdCLFlBQVlDLEtBQWE7UUFDdEMsSUFBSTtZQUNGLE1BQU1JLFFBQVEsTUFBTXZDLDZEQUFXQSxDQUFDa0MsV0FBVyxDQUFDQztZQUM1QzNCLFFBQVErQjtZQUVSLE1BQU1DLGVBQWUsTUFBTXZDLDJFQUFrQkEsQ0FBQ3dDLGtCQUFrQixDQUM5REYsTUFBTUcsU0FBUztZQUVqQmhDLGVBQWU4QjtZQUVmdkIsZUFBZXNCLE9BQU9DO1lBQ3RCLE9BQU9BO1FBQ1QsRUFBRSxPQUFPVCxHQUFHO1lBQ1ZULGVBQWU7UUFDakI7SUFDRjtJQUVBLFNBQVNnQixRQUFRcEIsT0FBcUI7UUFDcEMsSUFBSUEsU0FBUztZQUNYLE9BQVFBLFFBQVF5QixJQUFJO2dCQUNsQixLQUFLbkQsK0RBQWVBLENBQUNvRCxJQUFJO29CQUN2QjVCLE9BQU82QixJQUFJLENBQUM7b0JBQ1o7Z0JBQ0Y7b0JBQ0U3QixPQUFPNkIsSUFBSSxDQUFDO1lBQ2hCO1FBQ0Y7SUFDRjtJQUVBLFNBQVNDO1FBQ1BuRCxzREFBYUEsQ0FBQyxNQUFNO1FBQ3BCQSxzREFBYUEsQ0FBQyxNQUFNO1FBRXBCTyw0REFBYztRQUVkVCx1REFBVyxDQUFDO0lBQ2Q7SUFFQSxxQkFDRSw4REFBQ1UsWUFBWTZDLFFBQVE7UUFDbkJDLE9BQU87WUFDTGpCO1lBQ0FjO1lBQ0FoQztRQUNGO2tCQUVDUjs7Ozs7O0FBR1A7R0E5RmdCRjs7UUFLQ1Ysa0RBQVNBOzs7S0FMVlU7QUFnR1QsTUFBTThDLFVBQVU7O0lBQU1wRCxPQUFBQSxpREFBVUEsQ0FBQ0s7QUFBVyxFQUFFO0lBQXhDK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbnRleHQvQXV0aENvbnRleHQudHN4PzZlZTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNpZ25JbkRhdGEgZnJvbSBcIm1vZGVscy9BdXRoL1NpZ25JbkRhdGFcIjtcbmltcG9ydCB7IExvZ2luUmVzdWx0IH0gZnJvbSBcIm1vZGVscy9Mb2dpblJlc3VsdC9Mb2dpblJlc3VsdFwiO1xuaW1wb3J0IHsgVXNlciB9IGZyb20gXCJtb2RlbHMvVXNlclwiO1xuaW1wb3J0IHsgVXNlclByb2ZpbGUsIFVzZXJQcm9maWxlTmFtZSB9IGZyb20gXCJtb2RlbHMvVXNlclByb2ZpbGVcIjtcbmltcG9ydCBSb3V0ZXIsIHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvcm91dGVyXCI7XG5pbXBvcnQgeyBkZXN0cm95Q29va2llLCBzZXRDb29raWUgfSBmcm9tIFwibm9va2llc1wiO1xuaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tIFwic2VydmljZXMvQXV0aFNlcnZpY2VcIjtcbmltcG9ydCB7IFVzZXJQcm9maWxlU2VydmljZSB9IGZyb20gXCJzZXJ2aWNlcy9Vc2VyUHJvZmlsZVNlcnZpY2VcIjtcbmltcG9ydCBzdG9yZSBmcm9tIFwidXRpbHMvc3RvcmVcIjtcblxudHlwZSBBdXRoQ29udGV4dFR5cGUgPSB7XG4gIHNpZ25JbkRhdGE6IChkYXRhOiBTaWduSW5EYXRhKSA9PiB2b2lkO1xuICBsb2dvdXQ6ICgpID0+IHZvaWQ7XG4gIG1zZzogc3RyaW5nO1xufTtcblxudHlwZSBTdHVkZW50SW5mbyA9IHtcbiAgaWQ6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBlbWFpbDogc3RyaW5nO1xuICBwcm9kdWN0SWQ6IHN0cmluZztcbn07XG5cbmV4cG9ydCBjb25zdCBBdXRoQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoe30gYXMgQXV0aENvbnRleHRUeXBlKTtcblxuZXhwb3J0IGZ1bmN0aW9uIEF1dGhQcm92aWRlcih7IGNoaWxkcmVuIH06IGFueSwgcHJvcHM6IGFueSkge1xuICBjb25zdCBbdXNlciwgc2V0VXNlcl0gPSB1c2VTdGF0ZTxVc2VyPigpO1xuICBjb25zdCBbdXNlclByb2ZpbGUsIHNldFVzZXJQcm9maWxlXSA9IHVzZVN0YXRlPFVzZXJQcm9maWxlPigpO1xuICBjb25zdCBjb29raWVQYXJhbXMgPSB7IHNlY3VyZTogdHJ1ZSwgc2FtZVNpdGU6IFwiU3RyaWN0XCIgfTtcbiAgY29uc3QgW21zZywgc2V0TXNnXSA9IHVzZVN0YXRlKFwiXCIpO1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcblxuICBmdW5jdGlvbiBzZXRVc2VyQ29va2llcyh1c2VyOiBVc2VyLCBwcm9maWxlOiBVc2VyUHJvZmlsZSkge1xuICAgIHNldENvb2tpZSh1bmRlZmluZWQsIFwidXNlckRhdGFcIiwgSlNPTi5zdHJpbmdpZnkodXNlciksIGNvb2tpZVBhcmFtcyk7XG4gICAgc2V0Q29va2llKFxuICAgICAgdW5kZWZpbmVkLFxuICAgICAgXCJ1c2VyUHJvZmlsZURhdGFcIixcbiAgICAgIEpTT04uc3RyaW5naWZ5KHByb2ZpbGUpLFxuICAgICAgY29va2llUGFyYW1zXG4gICAgKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNldFRlbXBNZXNzYWdlKG1lc3NhZ2U6IHN0cmluZykge1xuICAgIHNldE1zZyhtZXNzYWdlKTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHNldE1zZyhcIlwiKSwgMzAwMCk7XG4gIH1cblxuICBhc3luYyBmdW5jdGlvbiBnZXRUb2tlbihkYXRhOiBTaWduSW5EYXRhKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgdHJ5IHtcbiAgICAgIGxldCBsb2dpblJlc3VsdCA9IHt9IGFzIExvZ2luUmVzdWx0O1xuICAgICAgbG9naW5SZXN1bHQgPSBhd2FpdCBBdXRoU2VydmljZS5sb2dpbihkYXRhKTtcbiAgICAgIEF1dGhTZXJ2aWNlLnNldFRva2VuKGxvZ2luUmVzdWx0LnRva2VuKTtcbiAgICAgIHNldENvb2tpZSh1bmRlZmluZWQsIFwicGFpbmVsLnRva2VuXCIsIGxvZ2luUmVzdWx0LnRva2VuLCBjb29raWVQYXJhbXMpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoXykge1xuICAgICAgc2V0VGVtcE1lc3NhZ2UoXCJMb2dpbiBvdSBzZW5oYSBpbmNvcnJldG9zXCIpO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGFzeW5jIGZ1bmN0aW9uIHNpZ25JbkRhdGEoZHRvOiBTaWduSW5EYXRhKSB7XG4gICAgc2V0TXNnKFwiXCIpO1xuICAgIGlmIChhd2FpdCBnZXRUb2tlbihkdG8pKSB7XG4gICAgICBjb25zdCBwcm9maWxlID0gYXdhaXQgZ2V0VXNlckluZm8oZHRvLmVtYWlsKTtcbiAgICAgIGNvbnNvbGUubG9nKFwiUHJvZmlsZTogXCIsIHByb2ZpbGUpO1xuICAgICAgcm91dGVJdChwcm9maWxlKTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBmdW5jdGlvbiBnZXRVc2VySW5mbyhlbWFpbDogc3RyaW5nKTogUHJvbWlzZTxVc2VyUHJvZmlsZSB8IHVuZGVmaW5lZD4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBsVVNlciA9IGF3YWl0IEF1dGhTZXJ2aWNlLmdldFVzZXJJbmZvKGVtYWlsKTtcbiAgICAgIHNldFVzZXIobFVTZXIpO1xuXG4gICAgICBjb25zdCBsVXNlclByb2ZpbGUgPSBhd2FpdCBVc2VyUHJvZmlsZVNlcnZpY2UuZ2V0VXNlclByb2ZpbGVCeUlkKFxuICAgICAgICBsVVNlci5wcm9maWxlSWRcbiAgICAgICk7XG4gICAgICBzZXRVc2VyUHJvZmlsZShsVXNlclByb2ZpbGUpO1xuXG4gICAgICBzZXRVc2VyQ29va2llcyhsVVNlciwgbFVzZXJQcm9maWxlKTtcbiAgICAgIHJldHVybiBsVXNlclByb2ZpbGU7XG4gICAgfSBjYXRjaCAoXykge1xuICAgICAgc2V0VGVtcE1lc3NhZ2UoXCJFcnJvIG5vIGxvZ2luLlwiKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByb3V0ZUl0KHByb2ZpbGU/OiBVc2VyUHJvZmlsZSkge1xuICAgIGlmIChwcm9maWxlKSB7XG4gICAgICBzd2l0Y2ggKHByb2ZpbGUubmFtZSkge1xuICAgICAgICBjYXNlIFVzZXJQcm9maWxlTmFtZS5VU0VSOlxuICAgICAgICAgIHJvdXRlci5wdXNoKFwiL2hvbWVcIik7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgcm91dGVyLnB1c2goXCIvaG9tZVwiKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBsb2dvdXQoKSB7XG4gICAgZGVzdHJveUNvb2tpZShudWxsLCBcInBhaW5lbC50b2tlblwiKTtcbiAgICBkZXN0cm95Q29va2llKG51bGwsIFwidXNlclwiKTtcblxuICAgIHN0b3JlLmNsZWFuQWxsKCk7XG5cbiAgICBSb3V0ZXIucHVzaChcIi9sb2dpblwiKTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPEF1dGhDb250ZXh0LlByb3ZpZGVyXG4gICAgICB2YWx1ZT17e1xuICAgICAgICBzaWduSW5EYXRhLFxuICAgICAgICBsb2dvdXQsXG4gICAgICAgIG1zZyxcbiAgICAgIH19XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQXV0aENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59XG5cbmV4cG9ydCBjb25zdCB1c2VBdXRoID0gKCkgPT4gdXNlQ29udGV4dChBdXRoQ29udGV4dCk7XG4iXSwibmFtZXMiOlsiVXNlclByb2ZpbGVOYW1lIiwiUm91dGVyIiwidXNlUm91dGVyIiwiZGVzdHJveUNvb2tpZSIsInNldENvb2tpZSIsImNyZWF0ZUNvbnRleHQiLCJ1c2VDb250ZXh0IiwidXNlU3RhdGUiLCJBdXRoU2VydmljZSIsIlVzZXJQcm9maWxlU2VydmljZSIsInN0b3JlIiwiQXV0aENvbnRleHQiLCJBdXRoUHJvdmlkZXIiLCJwcm9wcyIsImNoaWxkcmVuIiwidXNlciIsInNldFVzZXIiLCJ1c2VyUHJvZmlsZSIsInNldFVzZXJQcm9maWxlIiwiY29va2llUGFyYW1zIiwic2VjdXJlIiwic2FtZVNpdGUiLCJtc2ciLCJzZXRNc2ciLCJyb3V0ZXIiLCJzZXRVc2VyQ29va2llcyIsInByb2ZpbGUiLCJ1bmRlZmluZWQiLCJKU09OIiwic3RyaW5naWZ5Iiwic2V0VGVtcE1lc3NhZ2UiLCJtZXNzYWdlIiwic2V0VGltZW91dCIsImdldFRva2VuIiwiZGF0YSIsImxvZ2luUmVzdWx0IiwibG9naW4iLCJzZXRUb2tlbiIsInRva2VuIiwiXyIsInNpZ25JbkRhdGEiLCJkdG8iLCJnZXRVc2VySW5mbyIsImVtYWlsIiwiY29uc29sZSIsImxvZyIsInJvdXRlSXQiLCJsVVNlciIsImxVc2VyUHJvZmlsZSIsImdldFVzZXJQcm9maWxlQnlJZCIsInByb2ZpbGVJZCIsIm5hbWUiLCJVU0VSIiwicHVzaCIsImxvZ291dCIsImNsZWFuQWxsIiwiUHJvdmlkZXIiLCJ2YWx1ZSIsInVzZUF1dGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/context/AuthContext.tsx\n"));

/***/ }),

/***/ "./src/context/DepartmentContext.tsx":
/*!*******************************************!*\
  !*** ./src/context/DepartmentContext.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DepartmentContextProvider: function() { return /* binding */ DepartmentContextProvider; },\n/* harmony export */   useDepartmentContext: function() { return /* binding */ useDepartmentContext; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst DepartmentContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({});\nconst DepartmentContextProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [selectedDepartment, setSelectedDepartment] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DepartmentContext.Provider, {\n        value: {\n            selectedDepartment,\n            setSelectedDepartment\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/luizfernandomagacho/Desktop/Projetos/neoviapainel/src/context/DepartmentContext.tsx\",\n        lineNumber: 22,\n        columnNumber: 5\n    }, undefined);\n};\n_s(DepartmentContextProvider, \"CRR6Ftogfv1Uvsj9gxAkBNkQ474=\");\n_c = DepartmentContextProvider;\nconst useDepartmentContext = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(DepartmentContext);\n    return context;\n};\n_s1(useDepartmentContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n$RefreshReg$(_c, \"DepartmentContextProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29udGV4dC9EZXBhcnRtZW50Q29udGV4dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBNEQ7QUFXNUQsTUFBTUcsa0NBQW9CSCxvREFBYUEsQ0FDckMsQ0FBQztBQUdILE1BQU1JLDRCQUFzRTtRQUFDLEVBQzNFQyxRQUFRLEVBQ1Q7O0lBQ0MsTUFBTSxDQUFDQyxvQkFBb0JDLHNCQUFzQixHQUFHTCwrQ0FBUUEsQ0FBQztJQUU3RCxxQkFDRSw4REFBQ0Msa0JBQWtCSyxRQUFRO1FBQ3pCQyxPQUFPO1lBQUVIO1lBQW9CQztRQUFzQjtrQkFFbERGOzs7Ozs7QUFHUDtHQVpNRDtLQUFBQTtBQWNOLE1BQU1NLHVCQUF1Qjs7SUFDM0IsTUFBTUMsVUFBVVYsaURBQVVBLENBQUNFO0lBQzNCLE9BQU9RO0FBQ1Q7SUFITUQ7QUFLcUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbnRleHQvRGVwYXJ0bWVudENvbnRleHQudHN4P2UzYjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcblxuaW50ZXJmYWNlIERlcGFydG1lbnRDb250ZXh0UHJvcHMge1xuICBzZWxlY3RlZERlcGFydG1lbnQ6IHN0cmluZztcbiAgc2V0U2VsZWN0ZWREZXBhcnRtZW50OiAodmFsdWU6IHN0cmluZykgPT4gdm9pZDtcbn1cblxuaW50ZXJmYWNlIERlcGFydG1lbnRDb250ZXh0UHJvdmlkZXJQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG59XG5cbmNvbnN0IERlcGFydG1lbnRDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxEZXBhcnRtZW50Q29udGV4dFByb3BzPihcbiAge30gYXMgRGVwYXJ0bWVudENvbnRleHRQcm9wc1xuKTtcblxuY29uc3QgRGVwYXJ0bWVudENvbnRleHRQcm92aWRlcjogUmVhY3QuRkM8RGVwYXJ0bWVudENvbnRleHRQcm92aWRlclByb3BzPiA9ICh7XG4gIGNoaWxkcmVuLFxufSkgPT4ge1xuICBjb25zdCBbc2VsZWN0ZWREZXBhcnRtZW50LCBzZXRTZWxlY3RlZERlcGFydG1lbnRdID0gdXNlU3RhdGUoXCJcIik7XG5cbiAgcmV0dXJuIChcbiAgICA8RGVwYXJ0bWVudENvbnRleHQuUHJvdmlkZXJcbiAgICAgIHZhbHVlPXt7IHNlbGVjdGVkRGVwYXJ0bWVudCwgc2V0U2VsZWN0ZWREZXBhcnRtZW50IH19XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvRGVwYXJ0bWVudENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG5jb25zdCB1c2VEZXBhcnRtZW50Q29udGV4dCA9ICgpOiBEZXBhcnRtZW50Q29udGV4dFByb3BzID0+IHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoRGVwYXJ0bWVudENvbnRleHQpO1xuICByZXR1cm4gY29udGV4dDtcbn07XG5cbmV4cG9ydCB7IERlcGFydG1lbnRDb250ZXh0UHJvdmlkZXIsIHVzZURlcGFydG1lbnRDb250ZXh0IH07XG4iXSwibmFtZXMiOlsiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VTdGF0ZSIsIkRlcGFydG1lbnRDb250ZXh0IiwiRGVwYXJ0bWVudENvbnRleHRQcm92aWRlciIsImNoaWxkcmVuIiwic2VsZWN0ZWREZXBhcnRtZW50Iiwic2V0U2VsZWN0ZWREZXBhcnRtZW50IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsInVzZURlcGFydG1lbnRDb250ZXh0IiwiY29udGV4dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/context/DepartmentContext.tsx\n"));

/***/ }),

/***/ "./src/models/UserProfile.ts":
/*!***********************************!*\
  !*** ./src/models/UserProfile.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserProfileLevels: function() { return /* binding */ UserProfileLevels; },\n/* harmony export */   UserProfileName: function() { return /* binding */ UserProfileName; }\n/* harmony export */ });\nvar UserProfileName;\n(function(UserProfileName) {\n    UserProfileName[\"ADMIN\"] = \"ADMIN\";\n    UserProfileName[\"FINANCIAL\"] = \"FINANCIAL\";\n    UserProfileName[\"ENGINEER\"] = \"ENGINEER\";\n    UserProfileName[\"USER\"] = \"USER\";\n})(UserProfileName || (UserProfileName = {}));\nconst UserProfileLevels = {\n    ADMIN: 4,\n    FINANCIAL: 3,\n    ENGINEER: 2,\n    USER: 1\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kZWxzL1VzZXJQcm9maWxlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0lBU087VUFBS0EsZUFBZTtJQUFmQSxnQkFDVkMsV0FBQUE7SUFEVUQsZ0JBRVZFLGVBQUFBO0lBRlVGLGdCQUdWRyxjQUFBQTtJQUhVSCxnQkFJVkksVUFBQUE7R0FKVUosb0JBQUFBO0FBT0wsTUFBTUssb0JBQW9CO0lBQy9CSixPQUFPO0lBQ1BDLFdBQVc7SUFDWEMsVUFBVTtJQUNWQyxNQUFNO0FBQ1IsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbW9kZWxzL1VzZXJQcm9maWxlLnRzP2M1MGMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgVXNlclByb2ZpbGUgPSB7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgcm9sZXM6IHN0cmluZ1tdO1xuICBlbmFibGVkOiBib29sZWFuO1xuICBjcmVhdGVkQXQ6IHN0cmluZztcbiAgdXBkYXRlZEF0OiBzdHJpbmc7XG59O1xuXG5leHBvcnQgZW51bSBVc2VyUHJvZmlsZU5hbWUge1xuICBBRE1JTiA9IFwiQURNSU5cIixcbiAgRklOQU5DSUFMID0gXCJGSU5BTkNJQUxcIixcbiAgRU5HSU5FRVIgPSBcIkVOR0lORUVSXCIsXG4gIFVTRVIgPSBcIlVTRVJcIixcbn1cblxuZXhwb3J0IGNvbnN0IFVzZXJQcm9maWxlTGV2ZWxzID0ge1xuICBBRE1JTjogNCxcbiAgRklOQU5DSUFMOiAzLFxuICBFTkdJTkVFUjogMixcbiAgVVNFUjogMSxcbn07XG4iXSwibmFtZXMiOlsiVXNlclByb2ZpbGVOYW1lIiwiQURNSU4iLCJGSU5BTkNJQUwiLCJFTkdJTkVFUiIsIlVTRVIiLCJVc2VyUHJvZmlsZUxldmVscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/models/UserProfile.ts\n"));

/***/ }),

/***/ "./src/services/AuthService.ts":
/*!*************************************!*\
  !*** ./src/services/AuthService.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthService: function() { return /* binding */ AuthService; }\n/* harmony export */ });\n/* harmony import */ var _axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./axios */ \"./src/services/axios.ts\");\n\nconst api = (0,_axios__WEBPACK_IMPORTED_MODULE_0__.getAPIClient)();\nconst headers = {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"content-type\": \"application/json\"\n};\nconst AuthService = {\n    setToken (token) {\n        api.defaults.headers[\"Authorization\"] = \"Bearer \".concat(token);\n    },\n    async portalLogin (email) {\n        const response = await api.get(\"/user/\".concat(email));\n        return response.data;\n    },\n    async login (data) {\n        const response = await api.post(\"/login\", data, {\n            headers\n        });\n        return response.data;\n    },\n    async getUserInfo (email) {\n        const response = await api.get(\"user/\".concat(email), {\n            headers\n        });\n        return response.data;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2VydmljZXMvQXV0aFNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDdUM7QUFJdkMsTUFBTUMsTUFBTUQsb0RBQVlBO0FBQ3hCLE1BQU1FLFVBQVU7SUFDZCwrQkFBK0I7SUFDL0IsZ0JBQWdCO0FBQ2xCO0FBRU8sTUFBTUMsY0FBYztJQUN6QkMsVUFBU0MsS0FBYTtRQUNwQkosSUFBSUssUUFBUSxDQUFDSixPQUFPLENBQUMsZ0JBQWdCLEdBQUcsVUFBZ0IsT0FBTkc7SUFDcEQ7SUFDQSxNQUFNRSxhQUFZQyxLQUFhO1FBQzdCLE1BQU1DLFdBQVcsTUFBTVIsSUFBSVMsR0FBRyxDQUFDLFNBQWUsT0FBTkY7UUFDeEMsT0FBT0MsU0FBU0UsSUFBSTtJQUN0QjtJQUVBLE1BQU1DLE9BQU1ELElBQWdCO1FBQzFCLE1BQU1GLFdBQVcsTUFBTVIsSUFBSVksSUFBSSxDQUFFLFVBQVNGLE1BQU07WUFDOUNUO1FBQ0Y7UUFDQSxPQUFPTyxTQUFTRSxJQUFJO0lBQ3RCO0lBRUEsTUFBTUcsYUFBWU4sS0FBYTtRQUM3QixNQUFNQyxXQUFXLE1BQU1SLElBQUlTLEdBQUcsQ0FBQyxRQUFjLE9BQU5GLFFBQVM7WUFDOUNOO1FBQ0Y7UUFDQSxPQUFPTyxTQUFTRSxJQUFJO0lBQ3RCO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2VydmljZXMvQXV0aFNlcnZpY2UudHM/ZTMyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2lnbkluRGF0YSBmcm9tIFwibW9kZWxzL0F1dGgvU2lnbkluRGF0YVwiO1xuaW1wb3J0IHsgZ2V0QVBJQ2xpZW50IH0gZnJvbSBcIi4vYXhpb3NcIjtcbmltcG9ydCB7IFVzZXIgfSBmcm9tIFwibW9kZWxzL1VzZXJcIjtcbmltcG9ydCB7IExvZ2luUmVzdWx0IH0gZnJvbSBcIm1vZGVscy9Mb2dpblJlc3VsdC9Mb2dpblJlc3VsdFwiO1xuXG5jb25zdCBhcGkgPSBnZXRBUElDbGllbnQoKTtcbmNvbnN0IGhlYWRlcnMgPSB7XG4gIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luXCI6IFwiKlwiLFxuICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbn07XG5cbmV4cG9ydCBjb25zdCBBdXRoU2VydmljZSA9IHtcbiAgc2V0VG9rZW4odG9rZW46IHN0cmluZykge1xuICAgIGFwaS5kZWZhdWx0cy5oZWFkZXJzW1wiQXV0aG9yaXphdGlvblwiXSA9IGBCZWFyZXIgJHt0b2tlbn1gO1xuICB9LFxuICBhc3luYyBwb3J0YWxMb2dpbihlbWFpbDogc3RyaW5nKTogUHJvbWlzZTxVc2VyPiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGkuZ2V0KGAvdXNlci8ke2VtYWlsfWApO1xuICAgIHJldHVybiByZXNwb25zZS5kYXRhIGFzIFVzZXI7XG4gIH0sXG5cbiAgYXN5bmMgbG9naW4oZGF0YTogU2lnbkluRGF0YSkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpLnBvc3QoYC9sb2dpbmAsIGRhdGEsIHtcbiAgICAgIGhlYWRlcnMsXG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGEgYXMgTG9naW5SZXN1bHQ7XG4gIH0sXG5cbiAgYXN5bmMgZ2V0VXNlckluZm8oZW1haWw6IHN0cmluZyk6IFByb21pc2U8VXNlcj4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpLmdldChgdXNlci8ke2VtYWlsfWAsIHtcbiAgICAgIGhlYWRlcnMsXG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGEgYXMgVXNlcjtcbiAgfSxcbn07XG4iXSwibmFtZXMiOlsiZ2V0QVBJQ2xpZW50IiwiYXBpIiwiaGVhZGVycyIsIkF1dGhTZXJ2aWNlIiwic2V0VG9rZW4iLCJ0b2tlbiIsImRlZmF1bHRzIiwicG9ydGFsTG9naW4iLCJlbWFpbCIsInJlc3BvbnNlIiwiZ2V0IiwiZGF0YSIsImxvZ2luIiwicG9zdCIsImdldFVzZXJJbmZvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/services/AuthService.ts\n"));

/***/ }),

/***/ "./src/services/UserProfileService.ts":
/*!********************************************!*\
  !*** ./src/services/UserProfileService.ts ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserProfileService: function() { return /* binding */ UserProfileService; }\n/* harmony export */ });\n/* harmony import */ var _axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./axios */ \"./src/services/axios.ts\");\n\nconst UserProfileService = {\n    async getUserProfileById (id) {\n        const api = (0,_axios__WEBPACK_IMPORTED_MODULE_0__.getAPIClient)();\n        const response = await api.get(\"/profiles/\".concat(id));\n        return response.data;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2VydmljZXMvVXNlclByb2ZpbGVTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQ3VDO0FBRWhDLE1BQU1DLHFCQUFxQjtJQUNoQyxNQUFNQyxvQkFBbUJDLEVBQVU7UUFDakMsTUFBTUMsTUFBTUosb0RBQVlBO1FBQ3hCLE1BQU1LLFdBQVcsTUFBTUQsSUFBSUUsR0FBRyxDQUFDLGFBQWdCLE9BQUhIO1FBQzVDLE9BQU9FLFNBQVNFLElBQUk7SUFDdEI7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zZXJ2aWNlcy9Vc2VyUHJvZmlsZVNlcnZpY2UudHM/MmI2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVc2VyUHJvZmlsZSB9IGZyb20gXCJtb2RlbHMvVXNlclByb2ZpbGVcIjtcbmltcG9ydCB7IGdldEFQSUNsaWVudCB9IGZyb20gXCIuL2F4aW9zXCI7XG5cbmV4cG9ydCBjb25zdCBVc2VyUHJvZmlsZVNlcnZpY2UgPSB7XG4gIGFzeW5jIGdldFVzZXJQcm9maWxlQnlJZChpZDogU3RyaW5nKTogUHJvbWlzZTxVc2VyUHJvZmlsZT4ge1xuICAgIGNvbnN0IGFwaSA9IGdldEFQSUNsaWVudCgpO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpLmdldChgL3Byb2ZpbGVzLyR7aWR9YCk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gIH0sXG59O1xuIl0sIm5hbWVzIjpbImdldEFQSUNsaWVudCIsIlVzZXJQcm9maWxlU2VydmljZSIsImdldFVzZXJQcm9maWxlQnlJZCIsImlkIiwiYXBpIiwicmVzcG9uc2UiLCJnZXQiLCJkYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/services/UserProfileService.ts\n"));

/***/ }),

/***/ "./src/services/axios.ts":
/*!*******************************!*\
  !*** ./src/services/axios.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAPIClient: function() { return /* binding */ getAPIClient; },\n/* harmony export */   getExternalClient: function() { return /* binding */ getExternalClient; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var nookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nookies */ \"./node_modules/nookies/dist/index.js\");\n/* harmony import */ var nookies__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(nookies__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction getAPIClient(ctx) {\n    const { \"portal.token\": token } = (0,nookies__WEBPACK_IMPORTED_MODULE_0__.parseCookies)(ctx);\n    const api = axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n        baseURL: \"http://localhost:8080/\"\n    });\n    if (token) {\n        api.defaults.headers[\"Authorization\"] = \"Bearer \".concat(token);\n    }\n    api.interceptors.response.use((response)=>{\n        return response;\n    }, (error)=>{\n        if (error.response.status === 401) {\n            (0,nookies__WEBPACK_IMPORTED_MODULE_0__.destroyCookie)(null, \"portal.token\");\n            window.location.href = \"/login\";\n        }\n        return Promise.reject(error.response);\n    });\n    return api;\n}\nfunction getExternalClient(baseURL) {\n    const externalApi = axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n        baseURL: baseURL\n    });\n    externalApi.defaults.headers.put[\"Content-Type\"] = \"application/pdf\";\n    externalApi.interceptors.response.use((response)=>{\n        return response;\n    }, (error)=>{\n        return Promise.reject(error.response);\n    });\n    return externalApi;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2VydmljZXMvYXhpb3MudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMEI7QUFDNEI7QUFFL0MsU0FBU0csYUFBYUMsR0FBUztJQUNwQyxNQUFNLEVBQUUsZ0JBQWdCQyxLQUFLLEVBQUUsR0FBR0gscURBQVlBLENBQUNFO0lBQy9DLE1BQU1FLE1BQU1OLG9EQUFZLENBQUM7UUFDdkJRLFNBQVNDLHdCQUFnQztJQUMzQztJQUVBLElBQUlKLE9BQU87UUFDVEMsSUFBSU0sUUFBUSxDQUFDQyxPQUFPLENBQUMsZ0JBQWdCLEdBQUcsVUFBZ0IsT0FBTlI7SUFDcEQ7SUFDQUMsSUFBSVEsWUFBWSxDQUFDQyxRQUFRLENBQUNDLEdBQUcsQ0FDM0IsQ0FBQ0Q7UUFDQyxPQUFPQTtJQUNULEdBQ0EsQ0FBQ0U7UUFDQyxJQUFJQSxNQUFNRixRQUFRLENBQUNHLE1BQU0sS0FBSyxLQUFLO1lBQ2pDakIsc0RBQWFBLENBQUMsTUFBTTtZQUNwQmtCLE9BQU9DLFFBQVEsQ0FBQ0MsSUFBSSxHQUFHO1FBQ3pCO1FBQ0EsT0FBT0MsUUFBUUMsTUFBTSxDQUFDTixNQUFNRixRQUFRO0lBQ3RDO0lBRUYsT0FBT1Q7QUFDVDtBQUVPLFNBQVNrQixrQkFBa0JoQixPQUFlO0lBQy9DLE1BQU1pQixjQUFjekIsb0RBQVksQ0FBQztRQUMvQlEsU0FBU0E7SUFDWDtJQUNBaUIsWUFBWWIsUUFBUSxDQUFDQyxPQUFPLENBQUNhLEdBQUcsQ0FBQyxlQUFlLEdBQUc7SUFFbkRELFlBQVlYLFlBQVksQ0FBQ0MsUUFBUSxDQUFDQyxHQUFHLENBQ25DLENBQUNEO1FBQ0MsT0FBT0E7SUFDVCxHQUNBLENBQUNFO1FBQ0MsT0FBT0ssUUFBUUMsTUFBTSxDQUFDTixNQUFNRixRQUFRO0lBQ3RDO0lBRUYsT0FBT1U7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2VydmljZXMvYXhpb3MudHM/MWU4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XG5pbXBvcnQgeyBkZXN0cm95Q29va2llLCBwYXJzZUNvb2tpZXMgfSBmcm9tIFwibm9va2llc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QVBJQ2xpZW50KGN0eD86IGFueSkge1xuICBjb25zdCB7IFwicG9ydGFsLnRva2VuXCI6IHRva2VuIH0gPSBwYXJzZUNvb2tpZXMoY3R4KTtcbiAgY29uc3QgYXBpID0gYXhpb3MuY3JlYXRlKHtcbiAgICBiYXNlVVJMOiBwcm9jZXNzLmVudi5CQUNLRU5EX0VORFBPSU5UX0FQSSxcbiAgfSk7XG5cbiAgaWYgKHRva2VuKSB7XG4gICAgYXBpLmRlZmF1bHRzLmhlYWRlcnNbXCJBdXRob3JpemF0aW9uXCJdID0gYEJlYXJlciAke3Rva2VufWA7XG4gIH1cbiAgYXBpLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoXG4gICAgKHJlc3BvbnNlKSA9PiB7XG4gICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfSxcbiAgICAoZXJyb3IpID0+IHtcbiAgICAgIGlmIChlcnJvci5yZXNwb25zZS5zdGF0dXMgPT09IDQwMSkge1xuICAgICAgICBkZXN0cm95Q29va2llKG51bGwsIFwicG9ydGFsLnRva2VuXCIpO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IFwiL2xvZ2luXCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IucmVzcG9uc2UpO1xuICAgIH1cbiAgKTtcbiAgcmV0dXJuIGFwaTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEV4dGVybmFsQ2xpZW50KGJhc2VVUkw6IHN0cmluZykge1xuICBjb25zdCBleHRlcm5hbEFwaSA9IGF4aW9zLmNyZWF0ZSh7XG4gICAgYmFzZVVSTDogYmFzZVVSTCxcbiAgfSk7XG4gIGV4dGVybmFsQXBpLmRlZmF1bHRzLmhlYWRlcnMucHV0W1wiQ29udGVudC1UeXBlXCJdID0gXCJhcHBsaWNhdGlvbi9wZGZcIjtcblxuICBleHRlcm5hbEFwaS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKFxuICAgIChyZXNwb25zZSkgPT4ge1xuICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH0sXG4gICAgKGVycm9yKSA9PiB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IucmVzcG9uc2UpO1xuICAgIH1cbiAgKTtcbiAgcmV0dXJuIGV4dGVybmFsQXBpO1xufVxuIl0sIm5hbWVzIjpbImF4aW9zIiwiZGVzdHJveUNvb2tpZSIsInBhcnNlQ29va2llcyIsImdldEFQSUNsaWVudCIsImN0eCIsInRva2VuIiwiYXBpIiwiY3JlYXRlIiwiYmFzZVVSTCIsInByb2Nlc3MiLCJlbnYiLCJCQUNLRU5EX0VORFBPSU5UX0FQSSIsImRlZmF1bHRzIiwiaGVhZGVycyIsImludGVyY2VwdG9ycyIsInJlc3BvbnNlIiwidXNlIiwiZXJyb3IiLCJzdGF0dXMiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJQcm9taXNlIiwicmVqZWN0IiwiZ2V0RXh0ZXJuYWxDbGllbnQiLCJleHRlcm5hbEFwaSIsInB1dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/services/axios.ts\n"));

/***/ }),

/***/ "./src/utils/store.ts":
/*!****************************!*\
  !*** ./src/utils/store.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var nookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nookies */ \"./node_modules/nookies/dist/index.js\");\n/* harmony import */ var nookies__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(nookies__WEBPACK_IMPORTED_MODULE_0__);\n\nconst cookieParams = {\n    secure: true,\n    sameSite: \"Strict\"\n};\nconst RECORD_KEY = \"_@records\";\nconst CTX = null;\nconst store = {\n    save (key, value) {\n        if (value !== undefined) {\n            persist(key, value);\n            register(key);\n        }\n    },\n    get (key) {\n        const cookies = (0,nookies__WEBPACK_IMPORTED_MODULE_0__.parseCookies)(CTX);\n        if (cookies[key] !== undefined) {\n            return JSON.parse(cookies[key]);\n        }\n    },\n    delete (key) {\n        (0,nookies__WEBPACK_IMPORTED_MODULE_0__.destroyCookie)(CTX, key);\n        unregister(key);\n    },\n    exists (key) {\n        const cookies = (0,nookies__WEBPACK_IMPORTED_MODULE_0__.parseCookies)(CTX);\n        if (cookies[key]) {\n            return true;\n        }\n        return false;\n    },\n    cleanAll () {\n        const records = getRecords();\n        records.forEach((key)=>{\n            (0,nookies__WEBPACK_IMPORTED_MODULE_0__.destroyCookie)(CTX, key);\n        });\n        (0,nookies__WEBPACK_IMPORTED_MODULE_0__.destroyCookie)(CTX, RECORD_KEY);\n    }\n};\nfunction persist(key, value) {\n    (0,nookies__WEBPACK_IMPORTED_MODULE_0__.setCookie)(CTX, key, JSON.stringify(value), cookieParams);\n}\nfunction register(key) {\n    const records = getRecords();\n    records.add(key);\n    persist(RECORD_KEY, Array.from(records));\n}\nfunction unregister(key) {\n    const records = getRecords();\n    records.delete(key);\n    persist(RECORD_KEY, Array.from(records));\n}\nfunction getRecords() {\n    const records = store.get(RECORD_KEY);\n    if (records) {\n        if (Object.keys(records).length > 0) return new Set(records);\n    }\n    return new Set();\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (store);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvc3RvcmUudHMiLCJtYXBwaW5ncyI6Ijs7O0FBQWlFO0FBRWpFLE1BQU1HLGVBQWU7SUFBRUMsUUFBUTtJQUFNQyxVQUFVO0FBQVM7QUFDeEQsTUFBTUMsYUFBYTtBQUNuQixNQUFNQyxNQUFNO0FBRVosTUFBTUMsUUFBUTtJQUNaQyxNQUFLQyxHQUFXLEVBQUVDLEtBQVU7UUFDMUIsSUFBSUEsVUFBVUMsV0FBVztZQUN2QkMsUUFBUUgsS0FBS0M7WUFDYkcsU0FBU0o7UUFDWDtJQUNGO0lBRUFLLEtBQU9MLEdBQVc7UUFDaEIsTUFBTU0sVUFBVWQscURBQVlBLENBQUNLO1FBQzdCLElBQUlTLE9BQU8sQ0FBQ04sSUFBSSxLQUFLRSxXQUFXO1lBQzlCLE9BQU9LLEtBQUtDLEtBQUssQ0FBQ0YsT0FBTyxDQUFDTixJQUFJO1FBQ2hDO0lBQ0Y7SUFFQVMsUUFBT1QsR0FBVztRQUNoQlQsc0RBQWFBLENBQUNNLEtBQUtHO1FBQ25CVSxXQUFXVjtJQUNiO0lBRUFXLFFBQU9YLEdBQVc7UUFDaEIsTUFBTU0sVUFBVWQscURBQVlBLENBQUNLO1FBQzdCLElBQUlTLE9BQU8sQ0FBQ04sSUFBSSxFQUFFO1lBQ2hCLE9BQU87UUFDVDtRQUVBLE9BQU87SUFDVDtJQUVBWTtRQUNFLE1BQU1DLFVBQVVDO1FBQ2hCRCxRQUFRRSxPQUFPLENBQUMsQ0FBQ2Y7WUFDZlQsc0RBQWFBLENBQUNNLEtBQUtHO1FBQ3JCO1FBRUFULHNEQUFhQSxDQUFDTSxLQUFLRDtJQUNyQjtBQUNGO0FBRUEsU0FBU08sUUFBUUgsR0FBVyxFQUFFQyxLQUFVO0lBQ3RDWCxrREFBU0EsQ0FBQ08sS0FBS0csS0FBS08sS0FBS1MsU0FBUyxDQUFDZixRQUFRUjtBQUM3QztBQUVBLFNBQVNXLFNBQVNKLEdBQVc7SUFDM0IsTUFBTWEsVUFBVUM7SUFDaEJELFFBQVFJLEdBQUcsQ0FBQ2pCO0lBQ1pHLFFBQVFQLFlBQVlzQixNQUFNQyxJQUFJLENBQUNOO0FBQ2pDO0FBRUEsU0FBU0gsV0FBV1YsR0FBVztJQUM3QixNQUFNYSxVQUFVQztJQUNoQkQsUUFBUUosTUFBTSxDQUFDVDtJQUNmRyxRQUFRUCxZQUFZc0IsTUFBTUMsSUFBSSxDQUFDTjtBQUNqQztBQUVBLFNBQVNDO0lBQ1AsTUFBTUQsVUFBVWYsTUFBTU8sR0FBRyxDQUFDVDtJQUMxQixJQUFJaUIsU0FBUztRQUNYLElBQUlPLE9BQU9DLElBQUksQ0FBQ1IsU0FBU1MsTUFBTSxHQUFHLEdBQ2hDLE9BQU8sSUFBSUMsSUFBWVY7SUFDM0I7SUFFQSxPQUFPLElBQUlVO0FBQ2I7QUFFQSwrREFBZXpCLEtBQUtBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3V0aWxzL3N0b3JlLnRzPzZmMjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2V0Q29va2llLCBkZXN0cm95Q29va2llLCBwYXJzZUNvb2tpZXMgfSBmcm9tIFwibm9va2llc1wiO1xuXG5jb25zdCBjb29raWVQYXJhbXMgPSB7IHNlY3VyZTogdHJ1ZSwgc2FtZVNpdGU6IFwiU3RyaWN0XCIgfTtcbmNvbnN0IFJFQ09SRF9LRVkgPSBcIl9AcmVjb3Jkc1wiO1xuY29uc3QgQ1RYID0gbnVsbDtcblxuY29uc3Qgc3RvcmUgPSB7XG4gIHNhdmUoa2V5OiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcbiAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcGVyc2lzdChrZXksIHZhbHVlKTtcbiAgICAgIHJlZ2lzdGVyKGtleSk7XG4gICAgfVxuICB9LFxuXG4gIGdldDxUPihrZXk6IHN0cmluZyk6IFQgfCB1bmRlZmluZWQge1xuICAgIGNvbnN0IGNvb2tpZXMgPSBwYXJzZUNvb2tpZXMoQ1RYKTtcbiAgICBpZiAoY29va2llc1trZXldICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBKU09OLnBhcnNlKGNvb2tpZXNba2V5XSkgYXMgVDtcbiAgICB9XG4gIH0sXG5cbiAgZGVsZXRlKGtleTogc3RyaW5nKSB7XG4gICAgZGVzdHJveUNvb2tpZShDVFgsIGtleSk7XG4gICAgdW5yZWdpc3RlcihrZXkpO1xuICB9LFxuXG4gIGV4aXN0cyhrZXk6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IGNvb2tpZXMgPSBwYXJzZUNvb2tpZXMoQ1RYKTtcbiAgICBpZiAoY29va2llc1trZXldKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sXG5cbiAgY2xlYW5BbGwoKSB7XG4gICAgY29uc3QgcmVjb3JkcyA9IGdldFJlY29yZHMoKTtcbiAgICByZWNvcmRzLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgZGVzdHJveUNvb2tpZShDVFgsIGtleSk7XG4gICAgfSk7XG5cbiAgICBkZXN0cm95Q29va2llKENUWCwgUkVDT1JEX0tFWSk7XG4gIH0sXG59O1xuXG5mdW5jdGlvbiBwZXJzaXN0KGtleTogc3RyaW5nLCB2YWx1ZTogYW55KSB7XG4gIHNldENvb2tpZShDVFgsIGtleSwgSlNPTi5zdHJpbmdpZnkodmFsdWUpLCBjb29raWVQYXJhbXMpO1xufVxuXG5mdW5jdGlvbiByZWdpc3RlcihrZXk6IHN0cmluZykge1xuICBjb25zdCByZWNvcmRzID0gZ2V0UmVjb3JkcygpO1xuICByZWNvcmRzLmFkZChrZXkpO1xuICBwZXJzaXN0KFJFQ09SRF9LRVksIEFycmF5LmZyb20ocmVjb3JkcykpO1xufVxuXG5mdW5jdGlvbiB1bnJlZ2lzdGVyKGtleTogc3RyaW5nKSB7XG4gIGNvbnN0IHJlY29yZHMgPSBnZXRSZWNvcmRzKCk7XG4gIHJlY29yZHMuZGVsZXRlKGtleSk7XG4gIHBlcnNpc3QoUkVDT1JEX0tFWSwgQXJyYXkuZnJvbShyZWNvcmRzKSk7XG59XG5cbmZ1bmN0aW9uIGdldFJlY29yZHMoKSB7XG4gIGNvbnN0IHJlY29yZHMgPSBzdG9yZS5nZXQoUkVDT1JEX0tFWSkgYXMgc3RyaW5nW107XG4gIGlmIChyZWNvcmRzKSB7XG4gICAgaWYgKE9iamVjdC5rZXlzKHJlY29yZHMpLmxlbmd0aCA+IDApXG4gICAgICByZXR1cm4gbmV3IFNldDxzdHJpbmc+KHJlY29yZHMgYXMgc3RyaW5nW10pO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBTZXQ8c3RyaW5nPigpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdG9yZTtcbiJdLCJuYW1lcyI6WyJzZXRDb29raWUiLCJkZXN0cm95Q29va2llIiwicGFyc2VDb29raWVzIiwiY29va2llUGFyYW1zIiwic2VjdXJlIiwic2FtZVNpdGUiLCJSRUNPUkRfS0VZIiwiQ1RYIiwic3RvcmUiLCJzYXZlIiwia2V5IiwidmFsdWUiLCJ1bmRlZmluZWQiLCJwZXJzaXN0IiwicmVnaXN0ZXIiLCJnZXQiLCJjb29raWVzIiwiSlNPTiIsInBhcnNlIiwiZGVsZXRlIiwidW5yZWdpc3RlciIsImV4aXN0cyIsImNsZWFuQWxsIiwicmVjb3JkcyIsImdldFJlY29yZHMiLCJmb3JFYWNoIiwic3RyaW5naWZ5IiwiYWRkIiwiQXJyYXkiLCJmcm9tIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsIlNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/store.ts\n"));

/***/ }),

/***/ "./node_modules/next/head.js":
/*!***********************************!*\
  !*** ./node_modules/next/head.js ***!
  \***********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/shared/lib/head */ \"./node_modules/next/dist/shared/lib/head.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlIQUFrRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzPzg4NDkiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3Qvc2hhcmVkL2xpYi9oZWFkJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/head.js\n"));

/***/ }),

/***/ "./node_modules/next/router.js":
/*!*************************************!*\
  !*** ./node_modules/next/router.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/router */ \"./node_modules/next/dist/client/router.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9yb3V0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsNkdBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L3JvdXRlci5qcz8xYmI2Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9yb3V0ZXInKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/router.js\n"));

/***/ }),

/***/ "./node_modules/nookies/dist/index.js":
/*!********************************************!*\
  !*** ./node_modules/nookies/dist/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.destroyCookie = exports.setCookie = exports.parseCookies = void 0;\nvar cookie = __webpack_require__(/*! cookie */ \"./node_modules/cookie/index.js\");\nvar setCookieParser = __webpack_require__(/*! set-cookie-parser */ \"./node_modules/set-cookie-parser/lib/set-cookie.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/nookies/dist/utils.js\");\n/**\n * Parses cookies.\n *\n * @param ctx NextJS page or API context, express context, null or undefined.\n * @param options Options that we pass down to `cookie` library.\n */\nfunction parseCookies(ctx, options) {\n    var _a, _b;\n    if ((_b = (_a = ctx === null || ctx === void 0 ? void 0 : ctx.req) === null || _a === void 0 ? void 0 : _a.headers) === null || _b === void 0 ? void 0 : _b.cookie) {\n        return cookie.parse(ctx.req.headers.cookie, options);\n    }\n    if (utils_1.isBrowser()) {\n        return cookie.parse(document.cookie, options);\n    }\n    return {};\n}\nexports.parseCookies = parseCookies;\n/**\n * Sets a cookie.\n *\n * @param ctx NextJS page or API context, express context, null or undefined.\n * @param name The name of your cookie.\n * @param value The value of your cookie.\n * @param options Options that we pass down to `cookie` library.\n */\nfunction setCookie(ctx, name, value, options) {\n    var _a, _b;\n    if (options === void 0) { options = {}; }\n    // SSR\n    if (((_a = ctx === null || ctx === void 0 ? void 0 : ctx.res) === null || _a === void 0 ? void 0 : _a.getHeader) && ctx.res.setHeader) {\n        // Check if response has finished and warn about it.\n        if ((_b = ctx === null || ctx === void 0 ? void 0 : ctx.res) === null || _b === void 0 ? void 0 : _b.finished) {\n            console.warn(\"Not setting \\\"\" + name + \"\\\" cookie. Response has finished.\");\n            console.warn(\"You should set cookie before res.send()\");\n            return {};\n        }\n        /**\n         * Load existing cookies from the header and parse them.\n         */\n        var cookies = ctx.res.getHeader('Set-Cookie') || [];\n        if (typeof cookies === 'string')\n            cookies = [cookies];\n        if (typeof cookies === 'number')\n            cookies = [];\n        /**\n         * Parse cookies but ignore values - we've already encoded\n         * them in the previous call.\n         */\n        var parsedCookies = setCookieParser.parse(cookies, {\n            decodeValues: false,\n        });\n        /**\n         * We create the new cookie and make sure that none of\n         * the existing cookies match it.\n         */\n        var newCookie_1 = utils_1.createCookie(name, value, options);\n        var cookiesToSet_1 = [];\n        parsedCookies.forEach(function (parsedCookie) {\n            if (!utils_1.areCookiesEqual(parsedCookie, newCookie_1)) {\n                /**\n                 * We serialize the cookie back to the original format\n                 * if it isn't the same as the new one.\n                 */\n                var serializedCookie = cookie.serialize(parsedCookie.name, parsedCookie.value, __assign({ \n                    // we prevent reencoding by default, but you might override it\n                    encode: function (val) { return val; } }, parsedCookie));\n                cookiesToSet_1.push(serializedCookie);\n            }\n        });\n        cookiesToSet_1.push(cookie.serialize(name, value, options));\n        // Update the header.\n        ctx.res.setHeader('Set-Cookie', cookiesToSet_1);\n    }\n    // Browser\n    if (utils_1.isBrowser()) {\n        if (options && options.httpOnly) {\n            throw new Error('Can not set a httpOnly cookie in the browser.');\n        }\n        document.cookie = cookie.serialize(name, value, options);\n    }\n    return {};\n}\nexports.setCookie = setCookie;\n/**\n * Destroys a cookie with a particular name.\n *\n * @param ctx NextJS page or API context, express context, null or undefined.\n * @param name Cookie name.\n * @param options Options that we pass down to `cookie` library.\n */\nfunction destroyCookie(ctx, name, options) {\n    /**\n     * We forward the request destroy to setCookie function\n     * as it is the same function with modified maxAge value.\n     */\n    return setCookie(ctx, name, '', __assign(__assign({}, (options || {})), { maxAge: -1 }));\n}\nexports.destroyCookie = destroyCookie;\n/* Utility Exports */\nexports[\"default\"] = {\n    set: setCookie,\n    get: parseCookies,\n    destroy: destroyCookie,\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbm9va2llcy9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLGlEQUFpRCxPQUFPO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsaUJBQWlCLEdBQUcsb0JBQW9CO0FBQ2hFLGFBQWEsbUJBQU8sQ0FBQyw4Q0FBUTtBQUM3QixzQkFBc0IsbUJBQU8sQ0FBQyw2RUFBbUI7QUFDakQsY0FBYyxtQkFBTyxDQUFDLHFEQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsZUFBZTtBQUM1RDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxnQkFBZ0IsTUFBTSxZQUFZO0FBQzFGO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0Esa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ub29raWVzL2Rpc3QvaW5kZXguanM/NWJmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlc3Ryb3lDb29raWUgPSBleHBvcnRzLnNldENvb2tpZSA9IGV4cG9ydHMucGFyc2VDb29raWVzID0gdm9pZCAwO1xudmFyIGNvb2tpZSA9IHJlcXVpcmUoXCJjb29raWVcIik7XG52YXIgc2V0Q29va2llUGFyc2VyID0gcmVxdWlyZShcInNldC1jb29raWUtcGFyc2VyXCIpO1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbi8qKlxuICogUGFyc2VzIGNvb2tpZXMuXG4gKlxuICogQHBhcmFtIGN0eCBOZXh0SlMgcGFnZSBvciBBUEkgY29udGV4dCwgZXhwcmVzcyBjb250ZXh0LCBudWxsIG9yIHVuZGVmaW5lZC5cbiAqIEBwYXJhbSBvcHRpb25zIE9wdGlvbnMgdGhhdCB3ZSBwYXNzIGRvd24gdG8gYGNvb2tpZWAgbGlicmFyeS5cbiAqL1xuZnVuY3Rpb24gcGFyc2VDb29raWVzKGN0eCwgb3B0aW9ucykge1xuICAgIHZhciBfYSwgX2I7XG4gICAgaWYgKChfYiA9IChfYSA9IGN0eCA9PT0gbnVsbCB8fCBjdHggPT09IHZvaWQgMCA/IHZvaWQgMCA6IGN0eC5yZXEpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5oZWFkZXJzKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY29va2llKSB7XG4gICAgICAgIHJldHVybiBjb29raWUucGFyc2UoY3R4LnJlcS5oZWFkZXJzLmNvb2tpZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIGlmICh1dGlsc18xLmlzQnJvd3NlcigpKSB7XG4gICAgICAgIHJldHVybiBjb29raWUucGFyc2UoZG9jdW1lbnQuY29va2llLCBvcHRpb25zKTtcbiAgICB9XG4gICAgcmV0dXJuIHt9O1xufVxuZXhwb3J0cy5wYXJzZUNvb2tpZXMgPSBwYXJzZUNvb2tpZXM7XG4vKipcbiAqIFNldHMgYSBjb29raWUuXG4gKlxuICogQHBhcmFtIGN0eCBOZXh0SlMgcGFnZSBvciBBUEkgY29udGV4dCwgZXhwcmVzcyBjb250ZXh0LCBudWxsIG9yIHVuZGVmaW5lZC5cbiAqIEBwYXJhbSBuYW1lIFRoZSBuYW1lIG9mIHlvdXIgY29va2llLlxuICogQHBhcmFtIHZhbHVlIFRoZSB2YWx1ZSBvZiB5b3VyIGNvb2tpZS5cbiAqIEBwYXJhbSBvcHRpb25zIE9wdGlvbnMgdGhhdCB3ZSBwYXNzIGRvd24gdG8gYGNvb2tpZWAgbGlicmFyeS5cbiAqL1xuZnVuY3Rpb24gc2V0Q29va2llKGN0eCwgbmFtZSwgdmFsdWUsIG9wdGlvbnMpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgLy8gU1NSXG4gICAgaWYgKCgoX2EgPSBjdHggPT09IG51bGwgfHwgY3R4ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjdHgucmVzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZ2V0SGVhZGVyKSAmJiBjdHgucmVzLnNldEhlYWRlcikge1xuICAgICAgICAvLyBDaGVjayBpZiByZXNwb25zZSBoYXMgZmluaXNoZWQgYW5kIHdhcm4gYWJvdXQgaXQuXG4gICAgICAgIGlmICgoX2IgPSBjdHggPT09IG51bGwgfHwgY3R4ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjdHgucmVzKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZmluaXNoZWQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIk5vdCBzZXR0aW5nIFxcXCJcIiArIG5hbWUgKyBcIlxcXCIgY29va2llLiBSZXNwb25zZSBoYXMgZmluaXNoZWQuXCIpO1xuICAgICAgICAgICAgY29uc29sZS53YXJuKFwiWW91IHNob3VsZCBzZXQgY29va2llIGJlZm9yZSByZXMuc2VuZCgpXCIpO1xuICAgICAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgICB9XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBMb2FkIGV4aXN0aW5nIGNvb2tpZXMgZnJvbSB0aGUgaGVhZGVyIGFuZCBwYXJzZSB0aGVtLlxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIGNvb2tpZXMgPSBjdHgucmVzLmdldEhlYWRlcignU2V0LUNvb2tpZScpIHx8IFtdO1xuICAgICAgICBpZiAodHlwZW9mIGNvb2tpZXMgPT09ICdzdHJpbmcnKVxuICAgICAgICAgICAgY29va2llcyA9IFtjb29raWVzXTtcbiAgICAgICAgaWYgKHR5cGVvZiBjb29raWVzID09PSAnbnVtYmVyJylcbiAgICAgICAgICAgIGNvb2tpZXMgPSBbXTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFBhcnNlIGNvb2tpZXMgYnV0IGlnbm9yZSB2YWx1ZXMgLSB3ZSd2ZSBhbHJlYWR5IGVuY29kZWRcbiAgICAgICAgICogdGhlbSBpbiB0aGUgcHJldmlvdXMgY2FsbC5cbiAgICAgICAgICovXG4gICAgICAgIHZhciBwYXJzZWRDb29raWVzID0gc2V0Q29va2llUGFyc2VyLnBhcnNlKGNvb2tpZXMsIHtcbiAgICAgICAgICAgIGRlY29kZVZhbHVlczogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgICAgICAvKipcbiAgICAgICAgICogV2UgY3JlYXRlIHRoZSBuZXcgY29va2llIGFuZCBtYWtlIHN1cmUgdGhhdCBub25lIG9mXG4gICAgICAgICAqIHRoZSBleGlzdGluZyBjb29raWVzIG1hdGNoIGl0LlxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIG5ld0Nvb2tpZV8xID0gdXRpbHNfMS5jcmVhdGVDb29raWUobmFtZSwgdmFsdWUsIG9wdGlvbnMpO1xuICAgICAgICB2YXIgY29va2llc1RvU2V0XzEgPSBbXTtcbiAgICAgICAgcGFyc2VkQ29va2llcy5mb3JFYWNoKGZ1bmN0aW9uIChwYXJzZWRDb29raWUpIHtcbiAgICAgICAgICAgIGlmICghdXRpbHNfMS5hcmVDb29raWVzRXF1YWwocGFyc2VkQ29va2llLCBuZXdDb29raWVfMSkpIHtcbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiBXZSBzZXJpYWxpemUgdGhlIGNvb2tpZSBiYWNrIHRvIHRoZSBvcmlnaW5hbCBmb3JtYXRcbiAgICAgICAgICAgICAgICAgKiBpZiBpdCBpc24ndCB0aGUgc2FtZSBhcyB0aGUgbmV3IG9uZS5cbiAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICB2YXIgc2VyaWFsaXplZENvb2tpZSA9IGNvb2tpZS5zZXJpYWxpemUocGFyc2VkQ29va2llLm5hbWUsIHBhcnNlZENvb2tpZS52YWx1ZSwgX19hc3NpZ24oeyBcbiAgICAgICAgICAgICAgICAgICAgLy8gd2UgcHJldmVudCByZWVuY29kaW5nIGJ5IGRlZmF1bHQsIGJ1dCB5b3UgbWlnaHQgb3ZlcnJpZGUgaXRcbiAgICAgICAgICAgICAgICAgICAgZW5jb2RlOiBmdW5jdGlvbiAodmFsKSB7IHJldHVybiB2YWw7IH0gfSwgcGFyc2VkQ29va2llKSk7XG4gICAgICAgICAgICAgICAgY29va2llc1RvU2V0XzEucHVzaChzZXJpYWxpemVkQ29va2llKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGNvb2tpZXNUb1NldF8xLnB1c2goY29va2llLnNlcmlhbGl6ZShuYW1lLCB2YWx1ZSwgb3B0aW9ucykpO1xuICAgICAgICAvLyBVcGRhdGUgdGhlIGhlYWRlci5cbiAgICAgICAgY3R4LnJlcy5zZXRIZWFkZXIoJ1NldC1Db29raWUnLCBjb29raWVzVG9TZXRfMSk7XG4gICAgfVxuICAgIC8vIEJyb3dzZXJcbiAgICBpZiAodXRpbHNfMS5pc0Jyb3dzZXIoKSkge1xuICAgICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmh0dHBPbmx5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NhbiBub3Qgc2V0IGEgaHR0cE9ubHkgY29va2llIGluIHRoZSBicm93c2VyLicpO1xuICAgICAgICB9XG4gICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGNvb2tpZS5zZXJpYWxpemUobmFtZSwgdmFsdWUsIG9wdGlvbnMpO1xuICAgIH1cbiAgICByZXR1cm4ge307XG59XG5leHBvcnRzLnNldENvb2tpZSA9IHNldENvb2tpZTtcbi8qKlxuICogRGVzdHJveXMgYSBjb29raWUgd2l0aCBhIHBhcnRpY3VsYXIgbmFtZS5cbiAqXG4gKiBAcGFyYW0gY3R4IE5leHRKUyBwYWdlIG9yIEFQSSBjb250ZXh0LCBleHByZXNzIGNvbnRleHQsIG51bGwgb3IgdW5kZWZpbmVkLlxuICogQHBhcmFtIG5hbWUgQ29va2llIG5hbWUuXG4gKiBAcGFyYW0gb3B0aW9ucyBPcHRpb25zIHRoYXQgd2UgcGFzcyBkb3duIHRvIGBjb29raWVgIGxpYnJhcnkuXG4gKi9cbmZ1bmN0aW9uIGRlc3Ryb3lDb29raWUoY3R4LCBuYW1lLCBvcHRpb25zKSB7XG4gICAgLyoqXG4gICAgICogV2UgZm9yd2FyZCB0aGUgcmVxdWVzdCBkZXN0cm95IHRvIHNldENvb2tpZSBmdW5jdGlvblxuICAgICAqIGFzIGl0IGlzIHRoZSBzYW1lIGZ1bmN0aW9uIHdpdGggbW9kaWZpZWQgbWF4QWdlIHZhbHVlLlxuICAgICAqL1xuICAgIHJldHVybiBzZXRDb29raWUoY3R4LCBuYW1lLCAnJywgX19hc3NpZ24oX19hc3NpZ24oe30sIChvcHRpb25zIHx8IHt9KSksIHsgbWF4QWdlOiAtMSB9KSk7XG59XG5leHBvcnRzLmRlc3Ryb3lDb29raWUgPSBkZXN0cm95Q29va2llO1xuLyogVXRpbGl0eSBFeHBvcnRzICovXG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gICAgc2V0OiBzZXRDb29raWUsXG4gICAgZ2V0OiBwYXJzZUNvb2tpZXMsXG4gICAgZGVzdHJveTogZGVzdHJveUNvb2tpZSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/nookies/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/nookies/dist/utils.js":
/*!********************************************!*\
  !*** ./node_modules/nookies/dist/utils.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.areCookiesEqual = exports.hasSameProperties = exports.createCookie = exports.isBrowser = void 0;\n/**\n * Tells whether we are in a browser or server.\n */\nfunction isBrowser() {\n    return typeof window !== 'undefined';\n}\nexports.isBrowser = isBrowser;\n/**\n * Create an instance of the Cookie interface\n */\nfunction createCookie(name, value, options) {\n    var sameSite = options.sameSite;\n    if (sameSite === true) {\n        sameSite = 'strict';\n    }\n    if (sameSite === undefined || sameSite === false) {\n        sameSite = 'lax';\n    }\n    var cookieToSet = __assign(__assign({}, options), { sameSite: sameSite });\n    delete cookieToSet.encode;\n    return __assign({ name: name, value: value }, cookieToSet);\n}\nexports.createCookie = createCookie;\n/**\n * Tells whether given objects have the same properties.\n */\nfunction hasSameProperties(a, b) {\n    var aProps = Object.getOwnPropertyNames(a);\n    var bProps = Object.getOwnPropertyNames(b);\n    if (aProps.length !== bProps.length) {\n        return false;\n    }\n    for (var i = 0; i < aProps.length; i++) {\n        var propName = aProps[i];\n        if (a[propName] !== b[propName]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.hasSameProperties = hasSameProperties;\n/**\n * Compare the cookie and return true if the cookies have equivalent\n * options and the cookies would be overwritten in the browser storage.\n *\n * @param a first Cookie for comparison\n * @param b second Cookie for comparison\n */\nfunction areCookiesEqual(a, b) {\n    var sameSiteSame = a.sameSite === b.sameSite;\n    if (typeof a.sameSite === 'string' && typeof b.sameSite === 'string') {\n        sameSiteSame = a.sameSite.toLowerCase() === b.sameSite.toLowerCase();\n    }\n    return (hasSameProperties(__assign(__assign({}, a), { sameSite: undefined }), __assign(__assign({}, b), { sameSite: undefined })) && sameSiteSame);\n}\nexports.areCookiesEqual = areCookiesEqual;\n/* Functions */\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbm9va2llcy9kaXN0L3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLGlEQUFpRCxPQUFPO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCLEdBQUcseUJBQXlCLEdBQUcsb0JBQW9CLEdBQUcsaUJBQWlCO0FBQzlGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLGNBQWMsb0JBQW9CO0FBQzVFO0FBQ0Esc0JBQXNCLDBCQUEwQjtBQUNoRDtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxRQUFRLHFCQUFxQix1QkFBdUIsUUFBUSxxQkFBcUI7QUFDbkk7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbm9va2llcy9kaXN0L3V0aWxzLmpzP2MxNTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hcmVDb29raWVzRXF1YWwgPSBleHBvcnRzLmhhc1NhbWVQcm9wZXJ0aWVzID0gZXhwb3J0cy5jcmVhdGVDb29raWUgPSBleHBvcnRzLmlzQnJvd3NlciA9IHZvaWQgMDtcbi8qKlxuICogVGVsbHMgd2hldGhlciB3ZSBhcmUgaW4gYSBicm93c2VyIG9yIHNlcnZlci5cbiAqL1xuZnVuY3Rpb24gaXNCcm93c2VyKCkge1xuICAgIHJldHVybiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJztcbn1cbmV4cG9ydHMuaXNCcm93c2VyID0gaXNCcm93c2VyO1xuLyoqXG4gKiBDcmVhdGUgYW4gaW5zdGFuY2Ugb2YgdGhlIENvb2tpZSBpbnRlcmZhY2VcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ29va2llKG5hbWUsIHZhbHVlLCBvcHRpb25zKSB7XG4gICAgdmFyIHNhbWVTaXRlID0gb3B0aW9ucy5zYW1lU2l0ZTtcbiAgICBpZiAoc2FtZVNpdGUgPT09IHRydWUpIHtcbiAgICAgICAgc2FtZVNpdGUgPSAnc3RyaWN0JztcbiAgICB9XG4gICAgaWYgKHNhbWVTaXRlID09PSB1bmRlZmluZWQgfHwgc2FtZVNpdGUgPT09IGZhbHNlKSB7XG4gICAgICAgIHNhbWVTaXRlID0gJ2xheCc7XG4gICAgfVxuICAgIHZhciBjb29raWVUb1NldCA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBvcHRpb25zKSwgeyBzYW1lU2l0ZTogc2FtZVNpdGUgfSk7XG4gICAgZGVsZXRlIGNvb2tpZVRvU2V0LmVuY29kZTtcbiAgICByZXR1cm4gX19hc3NpZ24oeyBuYW1lOiBuYW1lLCB2YWx1ZTogdmFsdWUgfSwgY29va2llVG9TZXQpO1xufVxuZXhwb3J0cy5jcmVhdGVDb29raWUgPSBjcmVhdGVDb29raWU7XG4vKipcbiAqIFRlbGxzIHdoZXRoZXIgZ2l2ZW4gb2JqZWN0cyBoYXZlIHRoZSBzYW1lIHByb3BlcnRpZXMuXG4gKi9cbmZ1bmN0aW9uIGhhc1NhbWVQcm9wZXJ0aWVzKGEsIGIpIHtcbiAgICB2YXIgYVByb3BzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoYSk7XG4gICAgdmFyIGJQcm9wcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGIpO1xuICAgIGlmIChhUHJvcHMubGVuZ3RoICE9PSBiUHJvcHMubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhUHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHByb3BOYW1lID0gYVByb3BzW2ldO1xuICAgICAgICBpZiAoYVtwcm9wTmFtZV0gIT09IGJbcHJvcE5hbWVdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnRzLmhhc1NhbWVQcm9wZXJ0aWVzID0gaGFzU2FtZVByb3BlcnRpZXM7XG4vKipcbiAqIENvbXBhcmUgdGhlIGNvb2tpZSBhbmQgcmV0dXJuIHRydWUgaWYgdGhlIGNvb2tpZXMgaGF2ZSBlcXVpdmFsZW50XG4gKiBvcHRpb25zIGFuZCB0aGUgY29va2llcyB3b3VsZCBiZSBvdmVyd3JpdHRlbiBpbiB0aGUgYnJvd3NlciBzdG9yYWdlLlxuICpcbiAqIEBwYXJhbSBhIGZpcnN0IENvb2tpZSBmb3IgY29tcGFyaXNvblxuICogQHBhcmFtIGIgc2Vjb25kIENvb2tpZSBmb3IgY29tcGFyaXNvblxuICovXG5mdW5jdGlvbiBhcmVDb29raWVzRXF1YWwoYSwgYikge1xuICAgIHZhciBzYW1lU2l0ZVNhbWUgPSBhLnNhbWVTaXRlID09PSBiLnNhbWVTaXRlO1xuICAgIGlmICh0eXBlb2YgYS5zYW1lU2l0ZSA9PT0gJ3N0cmluZycgJiYgdHlwZW9mIGIuc2FtZVNpdGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHNhbWVTaXRlU2FtZSA9IGEuc2FtZVNpdGUudG9Mb3dlckNhc2UoKSA9PT0gYi5zYW1lU2l0ZS50b0xvd2VyQ2FzZSgpO1xuICAgIH1cbiAgICByZXR1cm4gKGhhc1NhbWVQcm9wZXJ0aWVzKF9fYXNzaWduKF9fYXNzaWduKHt9LCBhKSwgeyBzYW1lU2l0ZTogdW5kZWZpbmVkIH0pLCBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgYiksIHsgc2FtZVNpdGU6IHVuZGVmaW5lZCB9KSkgJiYgc2FtZVNpdGVTYW1lKTtcbn1cbmV4cG9ydHMuYXJlQ29va2llc0VxdWFsID0gYXJlQ29va2llc0VxdWFsO1xuLyogRnVuY3Rpb25zICovXG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/nookies/dist/utils.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "./node_modules/set-cookie-parser/lib/set-cookie.js":
/*!**********************************************************!*\
  !*** ./node_modules/set-cookie-parser/lib/set-cookie.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false,\n};\n\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\n\nfunction parseString(setCookieValue, options) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  try {\n    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\n  } catch (e) {\n    console.error(\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" +\n        value +\n        \"'. Set options.decodeValues to false to disable this feature.\",\n      e\n    );\n  }\n\n  var cookie = {\n    name: name,\n    value: value,\n  };\n\n  parts.forEach(function (part) {\n    var sides = part.split(\"=\");\n    var key = sides.shift().trimLeft().toLowerCase();\n    var value = sides.join(\"=\");\n    if (key === \"expires\") {\n      cookie.expires = new Date(value);\n    } else if (key === \"max-age\") {\n      cookie.maxAge = parseInt(value, 10);\n    } else if (key === \"secure\") {\n      cookie.secure = true;\n    } else if (key === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key === \"samesite\") {\n      cookie.sameSite = value;\n    } else {\n      cookie[key] = value;\n    }\n  });\n\n  return cookie;\n}\n\nfunction parseNameValuePair(nameValuePairStr) {\n  // Parses name-value-pair according to rfc6265bis draft\n\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\n  } else {\n    value = nameValuePairStr;\n  }\n\n  return { name: name, value: value };\n}\n\nfunction parse(input, options) {\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!input) {\n    if (!options.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      // for fetch responses - they combine headers of the same type in the headers array,\n      // but getSetCookie returns an uncombined array\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      // fast-path for node.js (which automatically normalizes header names to lower-case\n      input = input.headers[\"set-cookie\"];\n    } else {\n      // slow-path for other environments - see #25\n      var sch =\n        input.headers[\n          Object.keys(input.headers).find(function (key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })\n        ];\n      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\n      if (!sch && input.headers.cookie && !options.silent) {\n        console.warn(\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n        );\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!options.map) {\n    return input.filter(isNonEmptyString).map(function (str) {\n      return parseString(str, options);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function (cookies, str) {\n      var cookie = parseString(str, options);\n      cookies[cookie.name] = cookie;\n      return cookies;\n    }, cookies);\n  }\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos;\n        pos += 1;\n\n        skipWhitespace();\n        nextStart = pos;\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          // we found cookies separator\n          cookiesSeparatorFound = true;\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n\n  return cookiesStrings;\n}\n\nmodule.exports = parse;\nmodule.exports.parse = parse;\nmodule.exports.parseString = parseString;\nmodule.exports.splitCookiesString = splitCookiesString;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/set-cookie-parser/lib/set-cookie.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/app/IPublicClientApplication.mjs":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/app/IPublicClientApplication.mjs ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stubbedPublicClientApplication: function() { return /* binding */ stubbedPublicClientApplication; }\n/* harmony export */ });\n/* harmony import */ var _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst stubbedPublicClientApplication = {\n    initialize: () => {\n        return Promise.reject(_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    acquireTokenPopup: () => {\n        return Promise.reject(_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    acquireTokenRedirect: () => {\n        return Promise.reject(_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    acquireTokenSilent: () => {\n        return Promise.reject(_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    acquireTokenByCode: () => {\n        return Promise.reject(_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    getAllAccounts: () => {\n        return [];\n    },\n    getAccountByHomeId: () => {\n        return null;\n    },\n    getAccountByUsername: () => {\n        return null;\n    },\n    getAccountByLocalId: () => {\n        return null;\n    },\n    handleRedirectPromise: () => {\n        return Promise.reject(_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    loginPopup: () => {\n        return Promise.reject(_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    loginRedirect: () => {\n        return Promise.reject(_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    logout: () => {\n        return Promise.reject(_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    logoutRedirect: () => {\n        return Promise.reject(_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    logoutPopup: () => {\n        return Promise.reject(_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    ssoSilent: () => {\n        return Promise.reject(_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    addEventCallback: () => {\n        return null;\n    },\n    removeEventCallback: () => {\n        return;\n    },\n    addPerformanceCallback: () => {\n        return \"\";\n    },\n    removePerformanceCallback: () => {\n        return false;\n    },\n    enableAccountStorageEvents: () => {\n        return;\n    },\n    disableAccountStorageEvents: () => {\n        return;\n    },\n    getTokenCache: () => {\n        throw _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n    },\n    getLogger: () => {\n        throw _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n    },\n    setLogger: () => {\n        return;\n    },\n    setActiveAccount: () => {\n        return;\n    },\n    getActiveAccount: () => {\n        return null;\n    },\n    initializeWrapperLibrary: () => {\n        return;\n    },\n    setNavigationClient: () => {\n        return;\n    },\n    getConfiguration: () => {\n        throw _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n    },\n    hydrateCache: () => {\n        return Promise.reject(_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n};\n\n\n//# sourceMappingURL=IPublicClientApplication.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2FwcC9JUHVibGljQ2xpZW50QXBwbGljYXRpb24ubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUM4RTs7QUFFM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLG1HQUE2QjtBQUMzRCxLQUFLO0FBQ0w7QUFDQSw4QkFBOEIsbUdBQTZCO0FBQzNELEtBQUs7QUFDTDtBQUNBLDhCQUE4QixtR0FBNkI7QUFDM0QsS0FBSztBQUNMO0FBQ0EsOEJBQThCLG1HQUE2QjtBQUMzRCxLQUFLO0FBQ0w7QUFDQSw4QkFBOEIsbUdBQTZCO0FBQzNELEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOEJBQThCLG1HQUE2QjtBQUMzRCxLQUFLO0FBQ0w7QUFDQSw4QkFBOEIsbUdBQTZCO0FBQzNELEtBQUs7QUFDTDtBQUNBLDhCQUE4QixtR0FBNkI7QUFDM0QsS0FBSztBQUNMO0FBQ0EsOEJBQThCLG1HQUE2QjtBQUMzRCxLQUFLO0FBQ0w7QUFDQSw4QkFBOEIsbUdBQTZCO0FBQzNELEtBQUs7QUFDTDtBQUNBLDhCQUE4QixtR0FBNkI7QUFDM0QsS0FBSztBQUNMO0FBQ0EsOEJBQThCLG1HQUE2QjtBQUMzRCxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxjQUFjLG1HQUE2QjtBQUMzQyxLQUFLO0FBQ0w7QUFDQSxjQUFjLG1HQUE2QjtBQUMzQyxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsY0FBYyxtR0FBNkI7QUFDM0MsS0FBSztBQUNMO0FBQ0EsOEJBQThCLG1HQUE2QjtBQUMzRCxLQUFLO0FBQ0w7O0FBRTBDO0FBQzFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvYXBwL0lQdWJsaWNDbGllbnRBcHBsaWNhdGlvbi5tanM/NzdlMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvci5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNvbnN0IHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbiA9IHtcbiAgICBpbml0aWFsaXplOiAoKSA9PiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvci5jcmVhdGVTdHViUGNhSW5zdGFuY2VDYWxsZWRFcnJvcigpKTtcbiAgICB9LFxuICAgIGFjcXVpcmVUb2tlblBvcHVwOiAoKSA9PiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvci5jcmVhdGVTdHViUGNhSW5zdGFuY2VDYWxsZWRFcnJvcigpKTtcbiAgICB9LFxuICAgIGFjcXVpcmVUb2tlblJlZGlyZWN0OiAoKSA9PiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvci5jcmVhdGVTdHViUGNhSW5zdGFuY2VDYWxsZWRFcnJvcigpKTtcbiAgICB9LFxuICAgIGFjcXVpcmVUb2tlblNpbGVudDogKCkgPT4ge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3IuY3JlYXRlU3R1YlBjYUluc3RhbmNlQ2FsbGVkRXJyb3IoKSk7XG4gICAgfSxcbiAgICBhY3F1aXJlVG9rZW5CeUNvZGU6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLmNyZWF0ZVN0dWJQY2FJbnN0YW5jZUNhbGxlZEVycm9yKCkpO1xuICAgIH0sXG4gICAgZ2V0QWxsQWNjb3VudHM6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH0sXG4gICAgZ2V0QWNjb3VudEJ5SG9tZUlkOiAoKSA9PiB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH0sXG4gICAgZ2V0QWNjb3VudEJ5VXNlcm5hbWU6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSxcbiAgICBnZXRBY2NvdW50QnlMb2NhbElkOiAoKSA9PiB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH0sXG4gICAgaGFuZGxlUmVkaXJlY3RQcm9taXNlOiAoKSA9PiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvci5jcmVhdGVTdHViUGNhSW5zdGFuY2VDYWxsZWRFcnJvcigpKTtcbiAgICB9LFxuICAgIGxvZ2luUG9wdXA6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLmNyZWF0ZVN0dWJQY2FJbnN0YW5jZUNhbGxlZEVycm9yKCkpO1xuICAgIH0sXG4gICAgbG9naW5SZWRpcmVjdDogKCkgPT4ge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3IuY3JlYXRlU3R1YlBjYUluc3RhbmNlQ2FsbGVkRXJyb3IoKSk7XG4gICAgfSxcbiAgICBsb2dvdXQ6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLmNyZWF0ZVN0dWJQY2FJbnN0YW5jZUNhbGxlZEVycm9yKCkpO1xuICAgIH0sXG4gICAgbG9nb3V0UmVkaXJlY3Q6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLmNyZWF0ZVN0dWJQY2FJbnN0YW5jZUNhbGxlZEVycm9yKCkpO1xuICAgIH0sXG4gICAgbG9nb3V0UG9wdXA6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLmNyZWF0ZVN0dWJQY2FJbnN0YW5jZUNhbGxlZEVycm9yKCkpO1xuICAgIH0sXG4gICAgc3NvU2lsZW50OiAoKSA9PiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvci5jcmVhdGVTdHViUGNhSW5zdGFuY2VDYWxsZWRFcnJvcigpKTtcbiAgICB9LFxuICAgIGFkZEV2ZW50Q2FsbGJhY2s6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSxcbiAgICByZW1vdmVFdmVudENhbGxiYWNrOiAoKSA9PiB7XG4gICAgICAgIHJldHVybjtcbiAgICB9LFxuICAgIGFkZFBlcmZvcm1hbmNlQ2FsbGJhY2s6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfSxcbiAgICByZW1vdmVQZXJmb3JtYW5jZUNhbGxiYWNrOiAoKSA9PiB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxuICAgIGVuYWJsZUFjY291bnRTdG9yYWdlRXZlbnRzOiAoKSA9PiB7XG4gICAgICAgIHJldHVybjtcbiAgICB9LFxuICAgIGRpc2FibGVBY2NvdW50U3RvcmFnZUV2ZW50czogKCkgPT4ge1xuICAgICAgICByZXR1cm47XG4gICAgfSxcbiAgICBnZXRUb2tlbkNhY2hlOiAoKSA9PiB7XG4gICAgICAgIHRocm93IEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLmNyZWF0ZVN0dWJQY2FJbnN0YW5jZUNhbGxlZEVycm9yKCk7XG4gICAgfSxcbiAgICBnZXRMb2dnZXI6ICgpID0+IHtcbiAgICAgICAgdGhyb3cgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3IuY3JlYXRlU3R1YlBjYUluc3RhbmNlQ2FsbGVkRXJyb3IoKTtcbiAgICB9LFxuICAgIHNldExvZ2dlcjogKCkgPT4ge1xuICAgICAgICByZXR1cm47XG4gICAgfSxcbiAgICBzZXRBY3RpdmVBY2NvdW50OiAoKSA9PiB7XG4gICAgICAgIHJldHVybjtcbiAgICB9LFxuICAgIGdldEFjdGl2ZUFjY291bnQ6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSxcbiAgICBpbml0aWFsaXplV3JhcHBlckxpYnJhcnk6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH0sXG4gICAgc2V0TmF2aWdhdGlvbkNsaWVudDogKCkgPT4ge1xuICAgICAgICByZXR1cm47XG4gICAgfSxcbiAgICBnZXRDb25maWd1cmF0aW9uOiAoKSA9PiB7XG4gICAgICAgIHRocm93IEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLmNyZWF0ZVN0dWJQY2FJbnN0YW5jZUNhbGxlZEVycm9yKCk7XG4gICAgfSxcbiAgICBoeWRyYXRlQ2FjaGU6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLmNyZWF0ZVN0dWJQY2FJbnN0YW5jZUNhbGxlZEVycm9yKCkpO1xuICAgIH0sXG59O1xuXG5leHBvcnQgeyBzdHViYmVkUHVibGljQ2xpZW50QXBwbGljYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlQdWJsaWNDbGllbnRBcHBsaWNhdGlvbi5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/app/IPublicClientApplication.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PublicClientApplication: function() { return /* binding */ PublicClientApplication; }\n/* harmony export */ });\n/* harmony import */ var _controllers_ControllerFactory_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controllers/ControllerFactory.mjs */ \"./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs\");\n/* harmony import */ var _controllers_StandardController_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../controllers/StandardController.mjs */ \"./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs\");\n/* harmony import */ var _operatingcontext_StandardOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operatingcontext/StandardOperatingContext.mjs */ \"./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\n */\nclass PublicClientApplication {\n    static async createPublicClientApplication(configuration) {\n        const factory = new _controllers_ControllerFactory_mjs__WEBPACK_IMPORTED_MODULE_0__.ControllerFactory(configuration);\n        const controller = await factory.createController();\n        const pca = new PublicClientApplication(configuration, controller);\n        return pca;\n    }\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     * @param IController Optional parameter to explictly set the controller. (Will be removed when we remove public constructor)\n     */\n    constructor(configuration, controller) {\n        if (controller) {\n            this.controller = controller;\n        }\n        else {\n            const standardOperatingContext = new _operatingcontext_StandardOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_1__.StandardOperatingContext(configuration);\n            this.controller = new _controllers_StandardController_mjs__WEBPACK_IMPORTED_MODULE_2__.StandardController(standardOperatingContext);\n        }\n    }\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     */\n    async initialize() {\n        return this.controller.initialize();\n    }\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenPopup(request) {\n        return this.controller.acquireTokenPopup(request);\n    }\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    acquireTokenRedirect(request) {\n        return this.controller.acquireTokenRedirect(request);\n    }\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthenticationResult} object\n     */\n    acquireTokenSilent(silentRequest) {\n        return this.controller.acquireTokenSilent(silentRequest);\n    }\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenByCode(request) {\n        return this.controller.acquireTokenByCode(request);\n    }\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback) {\n        return this.controller.addEventCallback(callback);\n    }\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId) {\n        return this.controller.removeEventCallback(callbackId);\n    }\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback) {\n        return this.controller.addPerformanceCallback(callback);\n    }\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId) {\n        return this.controller.removePerformanceCallback(callbackId);\n    }\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents() {\n        this.controller.enableAccountStorageEvents();\n    }\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents() {\n        this.controller.disableAccountStorageEvents();\n    }\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByHomeId(homeAccountId) {\n        return this.controller.getAccountByHomeId(homeAccountId);\n    }\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByLocalId(localId) {\n        return this.controller.getAccountByLocalId(localId);\n    }\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param userName\n     * @returns The account object stored in MSAL\n     */\n    getAccountByUsername(userName) {\n        return this.controller.getAccountByUsername(userName);\n    }\n    /**\n     * Returns all accounts that MSAL currently has data for.\n     * (the account object is created at the time of successful login)\n     * or empty array when no accounts are found\n     * @returns Array of account objects in cache\n     */\n    getAllAccounts() {\n        return this.controller.getAllAccounts();\n    }\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    handleRedirectPromise(hash) {\n        return this.controller.handleRedirectPromise(hash);\n    }\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(request) {\n        return this.controller.loginPopup(request);\n    }\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    loginRedirect(request) {\n        return this.controller.loginRedirect(request);\n    }\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    logout(logoutRequest) {\n        return this.controller.logout(logoutRequest);\n    }\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    logoutRedirect(logoutRequest) {\n        return this.controller.logoutRedirect(logoutRequest);\n    }\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest) {\n        return this.controller.logoutPopup(logoutRequest);\n    }\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    ssoSilent(request) {\n        return this.controller.ssoSilent(request);\n    }\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache() {\n        return this.controller.getTokenCache();\n    }\n    /**\n     * Returns the logger instance\n     */\n    getLogger() {\n        return this.controller.getLogger();\n    }\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger) {\n        this.controller.setLogger(logger);\n    }\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account) {\n        this.controller.setActiveAccount(account);\n    }\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount() {\n        return this.controller.getActiveAccount();\n    }\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku, version) {\n        return this.controller.initializeWrapperLibrary(sku, version);\n    }\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient) {\n        this.controller.setNavigationClient(navigationClient);\n    }\n    /**\n     * Returns the configuration object\n     * @internal\n     */\n    getConfiguration() {\n        return this.controller.getConfiguration();\n    }\n    /**\n     * Hydrates cache with the tokens and account in the AuthenticationResult object\n     * @param result\n     * @param request - The request object that was used to obtain the AuthenticationResult\n     * @returns\n     */\n    async hydrateCache(result, request) {\n        return this.controller.hydrateCache(result, request);\n    }\n}\n\n\n//# sourceMappingURL=PublicClientApplication.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NativeMessageHandler: function() { return /* binding */ NativeMessageHandler; }\n/* harmony export */ });\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/NativeAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NativeMessageHandler {\n    constructor(logger, handshakeTimeoutMs, performanceClient, crypto, extensionId) {\n        this.logger = logger;\n        this.handshakeTimeoutMs = handshakeTimeoutMs;\n        this.extensionId = extensionId;\n        this.resolvers = new Map(); // Used for non-handshake messages\n        this.handshakeResolvers = new Map(); // Used for handshake messages\n        this.messageChannel = new MessageChannel();\n        this.windowListener = this.onWindowMessage.bind(this); // Window event callback doesn't have access to 'this' unless it's bound\n        this.performanceClient = performanceClient;\n        this.handshakeEvent = performanceClient.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.NativeMessageHandlerHandshake);\n        this.crypto = crypto;\n    }\n    /**\n     * Sends a given message to the extension and resolves with the extension response\n     * @param body\n     */\n    async sendMessage(body) {\n        this.logger.trace(\"NativeMessageHandler - sendMessage called.\");\n        const req = {\n            channel: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: this.crypto.createNewGuid(),\n            body: body,\n        };\n        this.logger.trace(\"NativeMessageHandler - Sending request to browser extension\");\n        this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(req)}`);\n        this.messageChannel.port1.postMessage(req);\n        return new Promise((resolve, reject) => {\n            this.resolvers.set(req.responseId, { resolve, reject });\n        });\n    }\n    /**\n     * Returns an instance of the MessageHandler that has successfully established a connection with an extension\n     * @param {Logger} logger\n     * @param {number} handshakeTimeoutMs\n     * @param {IPerformanceClient} performanceClient\n     * @param {ICrypto} crypto\n     */\n    static async createProvider(logger, handshakeTimeoutMs, performanceClient, crypto) {\n        logger.trace(\"NativeMessageHandler - createProvider called.\");\n        try {\n            const preferredProvider = new NativeMessageHandler(logger, handshakeTimeoutMs, performanceClient, crypto, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeConstants.PREFERRED_EXTENSION_ID);\n            await preferredProvider.sendHandshakeRequest();\n            return preferredProvider;\n        }\n        catch (e) {\n            // If preferred extension fails for whatever reason, fallback to using any installed extension\n            const backupProvider = new NativeMessageHandler(logger, handshakeTimeoutMs, performanceClient, crypto);\n            await backupProvider.sendHandshakeRequest();\n            return backupProvider;\n        }\n    }\n    /**\n     * Send handshake request helper.\n     */\n    async sendHandshakeRequest() {\n        this.logger.trace(\"NativeMessageHandler - sendHandshakeRequest called.\");\n        // Register this event listener before sending handshake\n        window.addEventListener(\"message\", this.windowListener, false); // false is important, because content script message processing should work first\n        const req = {\n            channel: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: this.crypto.createNewGuid(),\n            body: {\n                method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeExtensionMethod.HandshakeRequest,\n            },\n        };\n        this.handshakeEvent.add({\n            extensionId: this.extensionId,\n            extensionHandshakeTimeoutMs: this.handshakeTimeoutMs,\n        });\n        this.messageChannel.port1.onmessage = (event) => {\n            this.onChannelMessage(event);\n        };\n        window.postMessage(req, window.origin, [this.messageChannel.port2]);\n        return new Promise((resolve, reject) => {\n            this.handshakeResolvers.set(req.responseId, { resolve, reject });\n            this.timeoutId = window.setTimeout(() => {\n                /*\n                 * Throw an error if neither HandshakeResponse nor original Handshake request are received in a reasonable timeframe.\n                 * This typically suggests an event handler stopped propagation of the Handshake request but did not respond to it on the MessageChannel port\n                 */\n                window.removeEventListener(\"message\", this.windowListener, false);\n                this.messageChannel.port1.close();\n                this.messageChannel.port2.close();\n                this.handshakeEvent.end({\n                    extensionHandshakeTimedOut: true,\n                    success: false,\n                });\n                reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserAuthError.createNativeHandshakeTimeoutError());\n                this.handshakeResolvers.delete(req.responseId);\n            }, this.handshakeTimeoutMs); // Use a reasonable timeout in milliseconds here\n        });\n    }\n    /**\n     * Invoked when a message is posted to the window. If a handshake request is received it means the extension is not installed.\n     * @param event\n     */\n    onWindowMessage(event) {\n        this.logger.trace(\"NativeMessageHandler - onWindowMessage called\");\n        // We only accept messages from ourselves\n        if (event.source !== window) {\n            return;\n        }\n        const request = event.data;\n        if (!request.channel ||\n            request.channel !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeConstants.CHANNEL_ID) {\n            return;\n        }\n        if (request.extensionId && request.extensionId !== this.extensionId) {\n            return;\n        }\n        if (request.body.method === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeExtensionMethod.HandshakeRequest) {\n            const handshakeResolver = this.handshakeResolvers.get(request.responseId);\n            /*\n             * Filter out responses with no matched resolvers sooner to keep channel ports open while waiting for\n             * the proper response.\n             */\n            if (!handshakeResolver) {\n                this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${request.responseId}`);\n                return;\n            }\n            // If we receive this message back it means no extension intercepted the request, meaning no extension supporting handshake protocol is installed\n            this.logger.verbose(request.extensionId\n                ? `Extension with id: ${request.extensionId} not installed`\n                : \"No extension installed\");\n            clearTimeout(this.timeoutId);\n            this.messageChannel.port1.close();\n            this.messageChannel.port2.close();\n            window.removeEventListener(\"message\", this.windowListener, false);\n            this.handshakeEvent.end({\n                success: false,\n                extensionInstalled: false,\n            });\n            handshakeResolver.reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserAuthError.createNativeExtensionNotInstalledError());\n        }\n    }\n    /**\n     * Invoked when a message is received from the extension on the MessageChannel port\n     * @param event\n     */\n    onChannelMessage(event) {\n        this.logger.trace(\"NativeMessageHandler - onChannelMessage called.\");\n        const request = event.data;\n        const resolver = this.resolvers.get(request.responseId);\n        const handshakeResolver = this.handshakeResolvers.get(request.responseId);\n        try {\n            const method = request.body.method;\n            if (method === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeExtensionMethod.Response) {\n                if (!resolver) {\n                    return;\n                }\n                const response = request.body.response;\n                this.logger.trace(\"NativeMessageHandler - Received response from browser extension\");\n                this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(response)}`);\n                if (response.status !== \"Success\") {\n                    resolver.reject(_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.NativeAuthError.createError(response.code, response.description, response.ext));\n                }\n                else if (response.result) {\n                    if (response.result[\"code\"] &&\n                        response.result[\"description\"]) {\n                        resolver.reject(_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.NativeAuthError.createError(response.result[\"code\"], response.result[\"description\"], response.result[\"ext\"]));\n                    }\n                    else {\n                        resolver.resolve(response.result);\n                    }\n                }\n                else {\n                    throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AuthError.createUnexpectedError(\"Event does not contain result.\");\n                }\n                this.resolvers.delete(request.responseId);\n            }\n            else if (method === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeExtensionMethod.HandshakeResponse) {\n                if (!handshakeResolver) {\n                    this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${request.responseId}`);\n                    return;\n                }\n                clearTimeout(this.timeoutId); // Clear setTimeout\n                window.removeEventListener(\"message\", this.windowListener, false); // Remove 'No extension' listener\n                this.extensionId = request.extensionId;\n                this.extensionVersion = request.body.version;\n                this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`);\n                this.handshakeEvent.end({\n                    extensionInstalled: true,\n                    success: true,\n                });\n                handshakeResolver.resolve();\n                this.handshakeResolvers.delete(request.responseId);\n            }\n            // Do nothing if method is not Response or HandshakeResponse\n        }\n        catch (err) {\n            this.logger.error(\"Error parsing response from WAM Extension\");\n            this.logger.errorPii(`Error parsing response from WAM Extension: ${err}`);\n            this.logger.errorPii(`Unable to parse ${event}`);\n            if (resolver) {\n                resolver.reject(err);\n            }\n            else if (handshakeResolver) {\n                handshakeResolver.reject(err);\n            }\n        }\n    }\n    /**\n     * Returns the Id for the browser extension this handler is communicating with\n     * @returns\n     */\n    getExtensionId() {\n        return this.extensionId;\n    }\n    /**\n     * Returns the version for the browser extension this handler is communicating with\n     * @returns\n     */\n    getExtensionVersion() {\n        return this.extensionVersion;\n    }\n    /**\n     * Returns boolean indicating whether or not the request should attempt to use native broker\n     * @param logger\n     * @param config\n     * @param nativeExtensionProvider\n     * @param authenticationScheme\n     */\n    static isNativeAvailable(config, logger, nativeExtensionProvider, authenticationScheme) {\n        logger.trace(\"isNativeAvailable called\");\n        if (!config.system.allowNativeBroker) {\n            logger.trace(\"isNativeAvailable: allowNativeBroker is not enabled, returning false\");\n            // Developer disabled WAM\n            return false;\n        }\n        if (!nativeExtensionProvider) {\n            logger.trace(\"isNativeAvailable: WAM extension provider is not initialized, returning false\");\n            // Extension is not available\n            return false;\n        }\n        if (authenticationScheme) {\n            switch (authenticationScheme) {\n                case _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER:\n                case _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.POP:\n                    logger.trace(\"isNativeAvailable: authenticationScheme is supported, returning true\");\n                    return true;\n                default:\n                    logger.trace(\"isNativeAvailable: authenticationScheme is not supported, returning false\");\n                    return false;\n            }\n        }\n        return true;\n    }\n}\n\n\n//# sourceMappingURL=NativeMessageHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.mjs ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncMemoryStorage: function() { return /* binding */ AsyncMemoryStorage; }\n/* harmony export */ });\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _DatabaseStorage_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DatabaseStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.mjs\");\n/* harmony import */ var _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MemoryStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\n */\nclass AsyncMemoryStorage {\n    constructor(logger, storeName) {\n        this.inMemoryCache = new _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_0__.MemoryStorage();\n        this.indexedDBCache = new _DatabaseStorage_mjs__WEBPACK_IMPORTED_MODULE_1__.DatabaseStorage();\n        this.logger = logger;\n        this.storeName = storeName;\n    }\n    handleDatabaseAccessError(error) {\n        if (error instanceof _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserAuthError &&\n            error.errorCode === _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserAuthErrorMessage.databaseUnavailable.code) {\n            this.logger.error(\"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\");\n        }\n        else {\n            throw error;\n        }\n    }\n    /**\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\n     * storage object if item isn't found in-memory.\n     * @param key\n     */\n    async getItem(key) {\n        const item = this.inMemoryCache.getItem(key);\n        if (!item) {\n            try {\n                this.logger.verbose(\"Queried item not found in in-memory cache, now querying persistent storage.\");\n                return await this.indexedDBCache.getItem(key);\n            }\n            catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return item;\n    }\n    /**\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\n     * storage object with the given key.\n     * @param key\n     * @param value\n     */\n    async setItem(key, value) {\n        this.inMemoryCache.setItem(key, value);\n        try {\n            await this.indexedDBCache.setItem(key, value);\n        }\n        catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n    /**\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\n     * @param key\n     */\n    async removeItem(key) {\n        this.inMemoryCache.removeItem(key);\n        try {\n            await this.indexedDBCache.removeItem(key);\n        }\n        catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n    /**\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the\n     * asynchronous storage object.\n     */\n    async getKeys() {\n        const cacheKeys = this.inMemoryCache.getKeys();\n        if (cacheKeys.length === 0) {\n            try {\n                this.logger.verbose(\"In-memory cache is empty, now querying persistent storage.\");\n                return await this.indexedDBCache.getKeys();\n            }\n            catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return cacheKeys;\n    }\n    /**\n     * Returns true or false if the given key is present in the cache.\n     * @param key\n     */\n    async containsKey(key) {\n        const containsKey = this.inMemoryCache.containsKey(key);\n        if (!containsKey) {\n            try {\n                this.logger.verbose(\"Key not found in in-memory cache, now querying persistent storage.\");\n                return await this.indexedDBCache.containsKey(key);\n            }\n            catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return containsKey;\n    }\n    /**\n     * Clears in-memory Map\n     */\n    clearInMemory() {\n        // InMemory cache is a Map instance, clear is straightforward\n        this.logger.verbose(`Deleting in-memory keystore ${this.storeName}`);\n        this.inMemoryCache.clear();\n        this.logger.verbose(`In-memory keystore ${this.storeName} deleted`);\n    }\n    /**\n     * Tries to delete the IndexedDB database\n     * @returns\n     */\n    async clearPersistent() {\n        try {\n            this.logger.verbose(\"Deleting persistent keystore\");\n            const dbDeleted = await this.indexedDBCache.deleteDatabase();\n            if (dbDeleted) {\n                this.logger.verbose(\"Persistent keystore deleted\");\n            }\n            return dbDeleted;\n        }\n        catch (e) {\n            this.handleDatabaseAccessError(e);\n            return false;\n        }\n    }\n}\n\n\n//# sourceMappingURL=AsyncMemoryStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserCacheManager: function() { return /* binding */ BrowserCacheManager; },\n/* harmony export */   DEFAULT_BROWSER_CACHE_MANAGER: function() { return /* binding */ DEFAULT_BROWSER_CACHE_MANAGER; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _BrowserStorage_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BrowserStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/BrowserStorage.mjs\");\n/* harmony import */ var _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MemoryStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs\");\n/* harmony import */ var _utils_BrowserProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/BrowserProtocolUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class implements the cache storage interface for MSAL through browser local or session storage.\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\n * parameters such as state and nonce, generally.\n */\nclass BrowserCacheManager extends _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CacheManager {\n    constructor(clientId, cacheConfig, cryptoImpl, logger) {\n        super(clientId, cryptoImpl, logger);\n        // Cookie life calculation (hours * minutes * seconds * ms)\n        this.COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\n        this.cacheConfig = cacheConfig;\n        this.logger = logger;\n        this.internalStorage = new _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_1__.MemoryStorage();\n        this.browserStorage = this.setupBrowserStorage(this.cacheConfig.cacheLocation);\n        this.temporaryCacheStorage = this.setupTemporaryCacheStorage(this.cacheConfig.temporaryCacheLocation, this.cacheConfig.cacheLocation);\n        // Migrate cache entries from older versions of MSAL.\n        if (cacheConfig.cacheMigrationEnabled) {\n            this.migrateCacheEntries();\n            this.createKeyMaps();\n        }\n    }\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\n     * @param cacheLocation\n     */\n    setupBrowserStorage(cacheLocation) {\n        switch (cacheLocation) {\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.LocalStorage:\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.SessionStorage:\n                try {\n                    return new _BrowserStorage_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserStorage(cacheLocation);\n                }\n                catch (e) {\n                    this.logger.verbose(e);\n                    break;\n                }\n        }\n        this.cacheConfig.cacheLocation = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.MemoryStorage;\n        return new _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_1__.MemoryStorage();\n    }\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured temporaryCacheLocation.\n     * @param temporaryCacheLocation\n     * @param cacheLocation\n     */\n    setupTemporaryCacheStorage(temporaryCacheLocation, cacheLocation) {\n        switch (cacheLocation) {\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.LocalStorage:\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.SessionStorage:\n                try {\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\n                    return new _BrowserStorage_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserStorage(temporaryCacheLocation ||\n                        _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.SessionStorage);\n                }\n                catch (e) {\n                    this.logger.verbose(e);\n                    return this.internalStorage;\n                }\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.MemoryStorage:\n            default:\n                return this.internalStorage;\n        }\n    }\n    /**\n     * Migrate all old cache entries to new schema. No rollback supported.\n     * @param storeAuthStateInCookie\n     */\n    migrateCacheEntries() {\n        const idTokenKey = `${_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ID_TOKEN}`;\n        const clientInfoKey = `${_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.CLIENT_INFO}`;\n        const errorKey = `${_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ERROR}`;\n        const errorDescKey = `${_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ERROR_DESC}`;\n        const idTokenValue = this.browserStorage.getItem(idTokenKey);\n        const clientInfoValue = this.browserStorage.getItem(clientInfoKey);\n        const errorValue = this.browserStorage.getItem(errorKey);\n        const errorDescValue = this.browserStorage.getItem(errorDescKey);\n        const values = [\n            idTokenValue,\n            clientInfoValue,\n            errorValue,\n            errorDescValue,\n        ];\n        const keysToMigrate = [\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ID_TOKEN,\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.CLIENT_INFO,\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ERROR,\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ERROR_DESC,\n        ];\n        keysToMigrate.forEach((cacheKey, index) => this.migrateCacheEntry(cacheKey, values[index]));\n    }\n    /**\n     * Utility function to help with migration.\n     * @param newKey\n     * @param value\n     * @param storeAuthStateInCookie\n     */\n    migrateCacheEntry(newKey, value) {\n        if (value) {\n            this.setTemporaryCache(newKey, value, true);\n        }\n    }\n    /**\n     * Searches all cache entries for MSAL accounts and creates the account key map\n     * This is used to migrate users from older versions of MSAL which did not create the map.\n     * @returns\n     */\n    createKeyMaps() {\n        this.logger.trace(\"BrowserCacheManager - createKeyMaps called.\");\n        const accountKeys = this.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.ACCOUNT_KEYS);\n        const tokenKeys = this.getItem(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`);\n        if (accountKeys && tokenKeys) {\n            this.logger.verbose(\"BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.\");\n            // Key maps already exist, no need to iterate through cache\n            return;\n        }\n        const allKeys = this.browserStorage.getKeys();\n        allKeys.forEach((key) => {\n            if (this.isCredentialKey(key)) {\n                // Get item, parse, validate and write key to map\n                const value = this.getItem(key);\n                if (value) {\n                    const credObj = this.validateAndParseJson(value);\n                    if (credObj && credObj.hasOwnProperty(\"credentialType\")) {\n                        switch (credObj[\"credentialType\"]) {\n                            case _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN:\n                                if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.IdTokenEntity.isIdTokenEntity(credObj)) {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${key} found, saving key to token key map`);\n                                    const idTokenEntity = _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CacheManager.toObject(new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.IdTokenEntity(), credObj);\n                                    const newKey = this.updateCredentialCacheKey(key, idTokenEntity);\n                                    this.addTokenKey(newKey, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN);\n                                    return;\n                                }\n                                else {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping.\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${key}`);\n                                }\n                                break;\n                            case _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN:\n                            case _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                                if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AccessTokenEntity.isAccessTokenEntity(credObj)) {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${key} found, saving key to token key map`);\n                                    const accessTokenEntity = _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CacheManager.toObject(new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AccessTokenEntity(), credObj);\n                                    const newKey = this.updateCredentialCacheKey(key, accessTokenEntity);\n                                    this.addTokenKey(newKey, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN);\n                                    return;\n                                }\n                                else {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping.\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${key}`);\n                                }\n                                break;\n                            case _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN:\n                                if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.RefreshTokenEntity.isRefreshTokenEntity(credObj)) {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${key} found, saving key to token key map`);\n                                    const refreshTokenEntity = _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CacheManager.toObject(new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.RefreshTokenEntity(), credObj);\n                                    const newKey = this.updateCredentialCacheKey(key, refreshTokenEntity);\n                                    this.addTokenKey(newKey, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN);\n                                    return;\n                                }\n                                else {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping.\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${key}`);\n                                }\n                                break;\n                            // If credentialType isn't one of our predefined ones, it may not be an MSAL cache value. Ignore.\n                        }\n                    }\n                }\n            }\n            if (this.isAccountKey(key)) {\n                const value = this.getItem(key);\n                if (value) {\n                    const accountObj = this.validateAndParseJson(value);\n                    if (accountObj &&\n                        _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AccountEntity.isAccountEntity(accountObj)) {\n                        this.logger.trace(\"BrowserCacheManager:createKeyMaps - account found, saving key to account key map\");\n                        this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${key} found, saving key to account key map`);\n                        this.addAccountKeyToMap(key);\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\n     * @param input\n     */\n    validateAndParseJson(jsonValue) {\n        try {\n            const parsedJson = JSON.parse(jsonValue);\n            /**\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\n             *\n             */\n            return parsedJson && typeof parsedJson === \"object\"\n                ? parsedJson\n                : null;\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    /**\n     * fetches the entry from the browser storage based off the key\n     * @param key\n     */\n    getItem(key) {\n        return this.browserStorage.getItem(key);\n    }\n    /**\n     * sets the entry in the browser storage\n     * @param key\n     * @param value\n     */\n    setItem(key, value) {\n        this.browserStorage.setItem(key, value);\n    }\n    /**\n     * fetch the account entity from the platform cache\n     * @param accountKey\n     */\n    getAccount(accountKey) {\n        this.logger.trace(\"BrowserCacheManager.getAccount called\");\n        const account = this.getItem(accountKey);\n        if (!account) {\n            this.removeAccountKeyFromMap(accountKey);\n            return null;\n        }\n        const parsedAccount = this.validateAndParseJson(account);\n        if (!parsedAccount || !_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AccountEntity.isAccountEntity(parsedAccount)) {\n            this.removeAccountKeyFromMap(accountKey);\n            return null;\n        }\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CacheManager.toObject(new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AccountEntity(), parsedAccount);\n    }\n    /**\n     * set account entity in the platform cache\n     * @param account\n     */\n    setAccount(account) {\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\n        const key = account.generateAccountKey();\n        this.setItem(key, JSON.stringify(account));\n        this.addAccountKeyToMap(key);\n    }\n    /**\n     * Returns the array of account keys currently cached\n     * @returns\n     */\n    getAccountKeys() {\n        this.logger.trace(\"BrowserCacheManager.getAccountKeys called\");\n        const accountKeys = this.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.ACCOUNT_KEYS);\n        if (accountKeys) {\n            return JSON.parse(accountKeys);\n        }\n        this.logger.verbose(\"BrowserCacheManager.getAccountKeys - No account keys found\");\n        return [];\n    }\n    /**\n     * Add a new account to the key map\n     * @param key\n     */\n    addAccountKeyToMap(key) {\n        this.logger.trace(\"BrowserCacheManager.addAccountKeyToMap called\");\n        this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${key}`);\n        const accountKeys = this.getAccountKeys();\n        if (accountKeys.indexOf(key) === -1) {\n            // Only add key if it does not already exist in the map\n            accountKeys.push(key);\n            this.setItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\n            this.logger.verbose(\"BrowserCacheManager.addAccountKeyToMap account key added\");\n        }\n        else {\n            this.logger.verbose(\"BrowserCacheManager.addAccountKeyToMap account key already exists in map\");\n        }\n    }\n    /**\n     * Remove an account from the key map\n     * @param key\n     */\n    removeAccountKeyFromMap(key) {\n        this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap called\");\n        this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${key}`);\n        const accountKeys = this.getAccountKeys();\n        const removalIndex = accountKeys.indexOf(key);\n        if (removalIndex > -1) {\n            accountKeys.splice(removalIndex, 1);\n            this.setItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\n            this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap account key removed\");\n        }\n        else {\n            this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap key not found in existing map\");\n        }\n    }\n    /**\n     * Extends inherited removeAccount function to include removal of the account key from the map\n     * @param key\n     */\n    async removeAccount(key) {\n        super.removeAccount(key);\n        this.removeAccountKeyFromMap(key);\n    }\n    /**\n     * Removes given idToken from the cache and from the key map\n     * @param key\n     */\n    removeIdToken(key) {\n        super.removeIdToken(key);\n        this.removeTokenKey(key, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN);\n    }\n    /**\n     * Removes given accessToken from the cache and from the key map\n     * @param key\n     */\n    async removeAccessToken(key) {\n        super.removeAccessToken(key);\n        this.removeTokenKey(key, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN);\n    }\n    /**\n     * Removes given refreshToken from the cache and from the key map\n     * @param key\n     */\n    removeRefreshToken(key) {\n        super.removeRefreshToken(key);\n        this.removeTokenKey(key, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN);\n    }\n    /**\n     * Gets the keys for the cached tokens associated with this clientId\n     * @returns\n     */\n    getTokenKeys() {\n        this.logger.trace(\"BrowserCacheManager.getTokenKeys called\");\n        const item = this.getItem(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`);\n        if (item) {\n            const tokenKeys = this.validateAndParseJson(item);\n            if (tokenKeys &&\n                tokenKeys.hasOwnProperty(\"idToken\") &&\n                tokenKeys.hasOwnProperty(\"accessToken\") &&\n                tokenKeys.hasOwnProperty(\"refreshToken\")) {\n                return tokenKeys;\n            }\n            else {\n                this.logger.error(\"BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.\");\n            }\n        }\n        else {\n            this.logger.verbose(\"BrowserCacheManager.getTokenKeys - No token keys found\");\n        }\n        return {\n            idToken: [],\n            accessToken: [],\n            refreshToken: [],\n        };\n    }\n    /**\n     * Adds the given key to the token key map\n     * @param key\n     * @param type\n     */\n    addTokenKey(key, type) {\n        this.logger.trace(\"BrowserCacheManager addTokenKey called\");\n        const tokenKeys = this.getTokenKeys();\n        switch (type) {\n            case _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN:\n                if (tokenKeys.idToken.indexOf(key) === -1) {\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - idToken added to map\");\n                    tokenKeys.idToken.push(key);\n                }\n                break;\n            case _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN:\n                if (tokenKeys.accessToken.indexOf(key) === -1) {\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - accessToken added to map\");\n                    tokenKeys.accessToken.push(key);\n                }\n                break;\n            case _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN:\n                if (tokenKeys.refreshToken.indexOf(key) === -1) {\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - refreshToken added to map\");\n                    tokenKeys.refreshToken.push(key);\n                }\n                break;\n            default:\n                this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${type}`);\n                _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createUnexpectedCredentialTypeError();\n        }\n        this.setItem(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(tokenKeys));\n    }\n    /**\n     * Removes the given key from the token key map\n     * @param key\n     * @param type\n     */\n    removeTokenKey(key, type) {\n        this.logger.trace(\"BrowserCacheManager removeTokenKey called\");\n        const tokenKeys = this.getTokenKeys();\n        switch (type) {\n            case _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN:\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${key} from map`);\n                const idRemoval = tokenKeys.idToken.indexOf(key);\n                if (idRemoval > -1) {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - idToken removed from map\");\n                    tokenKeys.idToken.splice(idRemoval, 1);\n                }\n                else {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.\");\n                }\n                break;\n            case _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN:\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${key} from map`);\n                const accessRemoval = tokenKeys.accessToken.indexOf(key);\n                if (accessRemoval > -1) {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - accessToken removed from map\");\n                    tokenKeys.accessToken.splice(accessRemoval, 1);\n                }\n                else {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.\");\n                }\n                break;\n            case _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN:\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${key} from map`);\n                const refreshRemoval = tokenKeys.refreshToken.indexOf(key);\n                if (refreshRemoval > -1) {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - refreshToken removed from map\");\n                    tokenKeys.refreshToken.splice(refreshRemoval, 1);\n                }\n                else {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.\");\n                }\n                break;\n            default:\n                this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${type}`);\n                _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createUnexpectedCredentialTypeError();\n        }\n        this.setItem(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(tokenKeys));\n    }\n    /**\n     * generates idToken entity from a string\n     * @param idTokenKey\n     */\n    getIdTokenCredential(idTokenKey) {\n        const value = this.getItem(idTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\n            this.removeTokenKey(idTokenKey, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN);\n            return null;\n        }\n        const parsedIdToken = this.validateAndParseJson(value);\n        if (!parsedIdToken || !_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.IdTokenEntity.isIdTokenEntity(parsedIdToken)) {\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\n            this.removeTokenKey(idTokenKey, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN);\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: cache hit\");\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CacheManager.toObject(new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.IdTokenEntity(), parsedIdToken);\n    }\n    /**\n     * set IdToken credential to the platform cache\n     * @param idToken\n     */\n    setIdTokenCredential(idToken) {\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\n        const idTokenKey = idToken.generateCredentialKey();\n        this.setItem(idTokenKey, JSON.stringify(idToken));\n        this.addTokenKey(idTokenKey, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN);\n    }\n    /**\n     * generates accessToken entity from a string\n     * @param key\n     */\n    getAccessTokenCredential(accessTokenKey) {\n        const value = this.getItem(accessTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\n            this.removeTokenKey(accessTokenKey, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN);\n            return null;\n        }\n        const parsedAccessToken = this.validateAndParseJson(value);\n        if (!parsedAccessToken ||\n            !_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AccessTokenEntity.isAccessTokenEntity(parsedAccessToken)) {\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\n            this.removeTokenKey(accessTokenKey, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN);\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: cache hit\");\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CacheManager.toObject(new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AccessTokenEntity(), parsedAccessToken);\n    }\n    /**\n     * set accessToken credential to the platform cache\n     * @param accessToken\n     */\n    setAccessTokenCredential(accessToken) {\n        this.logger.trace(\"BrowserCacheManager.setAccessTokenCredential called\");\n        const accessTokenKey = accessToken.generateCredentialKey();\n        this.setItem(accessTokenKey, JSON.stringify(accessToken));\n        this.addTokenKey(accessTokenKey, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN);\n    }\n    /**\n     * generates refreshToken entity from a string\n     * @param refreshTokenKey\n     */\n    getRefreshTokenCredential(refreshTokenKey) {\n        const value = this.getItem(refreshTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\n            this.removeTokenKey(refreshTokenKey, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN);\n            return null;\n        }\n        const parsedRefreshToken = this.validateAndParseJson(value);\n        if (!parsedRefreshToken ||\n            !_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.RefreshTokenEntity.isRefreshTokenEntity(parsedRefreshToken)) {\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\n            this.removeTokenKey(refreshTokenKey, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN);\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: cache hit\");\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CacheManager.toObject(new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.RefreshTokenEntity(), parsedRefreshToken);\n    }\n    /**\n     * set refreshToken credential to the platform cache\n     * @param refreshToken\n     */\n    setRefreshTokenCredential(refreshToken) {\n        this.logger.trace(\"BrowserCacheManager.setRefreshTokenCredential called\");\n        const refreshTokenKey = refreshToken.generateCredentialKey();\n        this.setItem(refreshTokenKey, JSON.stringify(refreshToken));\n        this.addTokenKey(refreshTokenKey, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN);\n    }\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    getAppMetadata(appMetadataKey) {\n        const value = this.getItem(appMetadataKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (!parsedMetadata ||\n            !_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AppMetadataEntity.isAppMetadataEntity(appMetadataKey, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CacheManager.toObject(new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AppMetadataEntity(), parsedMetadata);\n    }\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    setAppMetadata(appMetadata) {\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\n        const appMetadataKey = appMetadata.generateAppMetadataKey();\n        this.setItem(appMetadataKey, JSON.stringify(appMetadata));\n    }\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    getServerTelemetry(serverTelemetryKey) {\n        const value = this.getItem(serverTelemetryKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (!parsedMetadata ||\n            !_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ServerTelemetryEntity.isServerTelemetryEntity(serverTelemetryKey, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CacheManager.toObject(new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ServerTelemetryEntity(), parsedMetadata);\n    }\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    setServerTelemetry(serverTelemetryKey, serverTelemetry) {\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\n        this.setItem(serverTelemetryKey, JSON.stringify(serverTelemetry));\n    }\n    /**\n     *\n     */\n    getAuthorityMetadata(key) {\n        const value = this.internalStorage.getItem(key);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\");\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (parsedMetadata &&\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AuthorityMetadataEntity.isAuthorityMetadataEntity(key, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: cache hit\");\n            return _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CacheManager.toObject(new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AuthorityMetadataEntity(), parsedMetadata);\n        }\n        return null;\n    }\n    /**\n     *\n     */\n    getAuthorityMetadataKeys() {\n        const allKeys = this.internalStorage.getKeys();\n        return allKeys.filter((key) => {\n            return this.isAuthorityMetadata(key);\n        });\n    }\n    /**\n     * Sets wrapper metadata in memory\n     * @param wrapperSKU\n     * @param wrapperVersion\n     */\n    setWrapperMetadata(wrapperSKU, wrapperVersion) {\n        this.internalStorage.setItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\n        this.internalStorage.setItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InMemoryCacheKeys.WRAPPER_VER, wrapperVersion);\n    }\n    /**\n     * Returns wrapper metadata from in-memory storage\n     */\n    getWrapperMetadata() {\n        const sku = this.internalStorage.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InMemoryCacheKeys.WRAPPER_SKU) ||\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        const version = this.internalStorage.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InMemoryCacheKeys.WRAPPER_VER) ||\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        return [sku, version];\n    }\n    /**\n     *\n     * @param entity\n     */\n    setAuthorityMetadata(key, entity) {\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\n        this.internalStorage.setItem(key, JSON.stringify(entity));\n    }\n    /**\n     * Gets the active account\n     */\n    getActiveAccount() {\n        const activeAccountKeyFilters = this.generateCacheKey(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS);\n        const activeAccountValueFilters = this.getItem(activeAccountKeyFilters);\n        if (!activeAccountValueFilters) {\n            // if new active account cache type isn't found, it's an old version, so look for that instead\n            this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema\");\n            const activeAccountKeyLocal = this.generateCacheKey(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ACTIVE_ACCOUNT);\n            const activeAccountValueLocal = this.getItem(activeAccountKeyLocal);\n            if (!activeAccountValueLocal) {\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account found\");\n                return null;\n            }\n            const activeAccount = this.getAccountInfoByFilter({\n                localAccountId: activeAccountValueLocal,\n            })[0] || null;\n            if (activeAccount) {\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: Legacy active account cache schema found\");\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: Adding active account filters cache schema\");\n                this.setActiveAccount(activeAccount);\n                return activeAccount;\n            }\n            return null;\n        }\n        const activeAccountValueObj = this.validateAndParseJson(activeAccountValueFilters);\n        if (activeAccountValueObj) {\n            this.logger.trace(\"BrowserCacheManager.getActiveAccount: Active account filters schema found\");\n            return (this.getAccountInfoByFilter({\n                homeAccountId: activeAccountValueObj.homeAccountId,\n                localAccountId: activeAccountValueObj.localAccountId,\n            })[0] || null);\n        }\n        this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account found\");\n        return null;\n    }\n    /**\n     * Sets the active account's localAccountId in cache\n     * @param account\n     */\n    setActiveAccount(account) {\n        const activeAccountKey = this.generateCacheKey(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS);\n        const activeAccountKeyLocal = this.generateCacheKey(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ACTIVE_ACCOUNT);\n        if (account) {\n            this.logger.verbose(\"setActiveAccount: Active account set\");\n            const activeAccountValue = {\n                homeAccountId: account.homeAccountId,\n                localAccountId: account.localAccountId,\n            };\n            this.browserStorage.setItem(activeAccountKey, JSON.stringify(activeAccountValue));\n            this.browserStorage.setItem(activeAccountKeyLocal, account.localAccountId);\n        }\n        else {\n            this.logger.verbose(\"setActiveAccount: No account passed, active account not set\");\n            this.browserStorage.removeItem(activeAccountKey);\n            this.browserStorage.removeItem(activeAccountKeyLocal);\n        }\n    }\n    /**\n     * Gets a list of accounts that match all of the filters provided\n     * @param account\n     */\n    getAccountInfoByFilter(accountFilter) {\n        const allAccounts = this.getAllAccounts();\n        this.logger.trace(`BrowserCacheManager.getAccountInfoByFilter: total ${allAccounts.length} accounts found`);\n        return allAccounts.filter((accountObj) => {\n            if (accountFilter.username &&\n                accountFilter.username.toLowerCase() !==\n                    accountObj.username.toLowerCase()) {\n                return false;\n            }\n            if (accountFilter.homeAccountId &&\n                accountFilter.homeAccountId !== accountObj.homeAccountId) {\n                return false;\n            }\n            if (accountFilter.localAccountId &&\n                accountFilter.localAccountId !== accountObj.localAccountId) {\n                return false;\n            }\n            if (accountFilter.tenantId &&\n                accountFilter.tenantId !== accountObj.tenantId) {\n                return false;\n            }\n            if (accountFilter.environment &&\n                accountFilter.environment !== accountObj.environment) {\n                return false;\n            }\n            return true;\n        });\n    }\n    /**\n     * Checks the cache for accounts matching loginHint or SID\n     * @param loginHint\n     * @param sid\n     */\n    getAccountInfoByHints(loginHint, sid) {\n        const matchingAccounts = this.getAllAccounts().filter((accountInfo) => {\n            if (sid) {\n                const accountSid = accountInfo.idTokenClaims &&\n                    accountInfo.idTokenClaims[\"sid\"];\n                return sid === accountSid;\n            }\n            if (loginHint) {\n                return loginHint === accountInfo.username;\n            }\n            return false;\n        });\n        if (matchingAccounts.length === 1) {\n            return matchingAccounts[0];\n        }\n        else if (matchingAccounts.length > 1) {\n            throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createMultipleMatchingAccountsInCacheError();\n        }\n        return null;\n    }\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    getThrottlingCache(throttlingCacheKey) {\n        const value = this.getItem(throttlingCacheKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\n            return null;\n        }\n        const parsedThrottlingCache = this.validateAndParseJson(value);\n        if (!parsedThrottlingCache ||\n            !_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ThrottlingEntity.isThrottlingEntity(throttlingCacheKey, parsedThrottlingCache)) {\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CacheManager.toObject(new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ThrottlingEntity(), parsedThrottlingCache);\n    }\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    setThrottlingCache(throttlingCacheKey, throttlingCache) {\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\n        this.setItem(throttlingCacheKey, JSON.stringify(throttlingCache));\n    }\n    /**\n     * Gets cache item with given key.\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    getTemporaryCache(cacheKey, generateKey) {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            const itemCookie = this.getItemCookie(key);\n            if (itemCookie) {\n                this.logger.trace(\"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\");\n                return itemCookie;\n            }\n        }\n        const value = this.temporaryCacheStorage.getItem(key);\n        if (!value) {\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\n            if (this.cacheConfig.cacheLocation ===\n                _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.LocalStorage) {\n                const item = this.browserStorage.getItem(key);\n                if (item) {\n                    this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\");\n                    return item;\n                }\n            }\n            this.logger.trace(\"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\");\n        return value;\n    }\n    /**\n     * Sets the cache item with the key and value given.\n     * Stores in cookie if storeAuthStateInCookie is set to true.\n     * This can cause cookie overflow if used incorrectly.\n     * @param key\n     * @param value\n     */\n    setTemporaryCache(cacheKey, value, generateKey) {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n        this.temporaryCacheStorage.setItem(key, value);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\");\n            this.setItemCookie(key, value);\n        }\n    }\n    /**\n     * Removes the cache item with the given key.\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    removeItem(key) {\n        this.browserStorage.removeItem(key);\n        this.temporaryCacheStorage.removeItem(key);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\");\n            this.clearItemCookie(key);\n        }\n    }\n    /**\n     * Checks whether key is in cache.\n     * @param key\n     */\n    containsKey(key) {\n        return (this.browserStorage.containsKey(key) ||\n            this.temporaryCacheStorage.containsKey(key));\n    }\n    /**\n     * Gets all keys in window.\n     */\n    getKeys() {\n        return [\n            ...this.browserStorage.getKeys(),\n            ...this.temporaryCacheStorage.getKeys(),\n        ];\n    }\n    /**\n     * Clears all cache entries created by MSAL.\n     */\n    async clear() {\n        // Removes all accounts and their credentials\n        await this.removeAllAccounts();\n        this.removeAppMetadata();\n        // Removes all remaining MSAL cache items\n        this.getKeys().forEach((cacheKey) => {\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\n            if ((this.browserStorage.containsKey(cacheKey) ||\n                this.temporaryCacheStorage.containsKey(cacheKey)) &&\n                (cacheKey.indexOf(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX) !== -1 ||\n                    cacheKey.indexOf(this.clientId) !== -1)) {\n                this.removeItem(cacheKey);\n            }\n        });\n        this.internalStorage.clear();\n    }\n    /**\n     * Add value to cookies\n     * @param cookieName\n     * @param cookieValue\n     * @param expires\n     */\n    setItemCookie(cookieName, cookieValue, expires) {\n        let cookieStr = `${encodeURIComponent(cookieName)}=${encodeURIComponent(cookieValue)};path=/;SameSite=Lax;`;\n        if (expires) {\n            const expireTime = this.getCookieExpirationTime(expires);\n            cookieStr += `expires=${expireTime};`;\n        }\n        if (this.cacheConfig.secureCookies) {\n            cookieStr += \"Secure;\";\n        }\n        document.cookie = cookieStr;\n    }\n    /**\n     * Get one item by key from cookies\n     * @param cookieName\n     */\n    getItemCookie(cookieName) {\n        const name = `${encodeURIComponent(cookieName)}=`;\n        const cookieList = document.cookie.split(\";\");\n        for (let i = 0; i < cookieList.length; i++) {\n            let cookie = cookieList[i];\n            while (cookie.charAt(0) === \" \") {\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(name) === 0) {\n                return decodeURIComponent(cookie.substring(name.length, cookie.length));\n            }\n        }\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n    }\n    /**\n     * Clear all msal-related cookies currently set in the browser. Should only be used to clear temporary cache items.\n     */\n    clearMsalCookies() {\n        const cookiePrefix = `${_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${this.clientId}`;\n        const cookieList = document.cookie.split(\";\");\n        cookieList.forEach((cookie) => {\n            while (cookie.charAt(0) === \" \") {\n                // eslint-disable-next-line no-param-reassign\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(cookiePrefix) === 0) {\n                const cookieKey = cookie.split(\"=\")[0];\n                this.clearItemCookie(cookieKey);\n            }\n        });\n    }\n    /**\n     * Clear an item in the cookies by key\n     * @param cookieName\n     */\n    clearItemCookie(cookieName) {\n        this.setItemCookie(cookieName, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING, -1);\n    }\n    /**\n     * Get cookie expiration time\n     * @param cookieLifeDays\n     */\n    getCookieExpirationTime(cookieLifeDays) {\n        const today = new Date();\n        const expr = new Date(today.getTime() + cookieLifeDays * this.COOKIE_LIFE_MULTIPLIER);\n        return expr.toUTCString();\n    }\n    /**\n     * Gets the cache object referenced by the browser\n     */\n    getCache() {\n        return this.browserStorage;\n    }\n    /**\n     * interface compat, we cannot overwrite browser cache; Functionality is supported by individual entities in browser\n     */\n    setCache() {\n        // sets nothing\n    }\n    /**\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\n     * @param key\n     * @param addInstanceId\n     */\n    generateCacheKey(key) {\n        const generatedKey = this.validateAndParseJson(key);\n        if (!generatedKey) {\n            if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.StringUtils.startsWith(key, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX) ||\n                _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.StringUtils.startsWith(key, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ADAL_ID_TOKEN)) {\n                return key;\n            }\n            return `${_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\n        }\n        return JSON.stringify(key);\n    }\n    /**\n     * Create authorityKey to cache authority\n     * @param state\n     */\n    generateAuthorityKey(stateString) {\n        const { libraryState: { id: stateId }, } = _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.AUTHORITY}.${stateId}`);\n    }\n    /**\n     * Create Nonce key to cache nonce\n     * @param state\n     */\n    generateNonceKey(stateString) {\n        const { libraryState: { id: stateId }, } = _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.NONCE_IDTOKEN}.${stateId}`);\n    }\n    /**\n     * Creates full cache key for the request state\n     * @param stateString State string for the request\n     */\n    generateStateKey(stateString) {\n        // Use the library state id to key temp storage for uniqueness for multiple concurrent requests\n        const { libraryState: { id: stateId }, } = _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.REQUEST_STATE}.${stateId}`);\n    }\n    /**\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\n     */\n    getCachedAuthority(cachedState) {\n        const stateCacheKey = this.generateStateKey(cachedState);\n        const state = this.getTemporaryCache(stateCacheKey);\n        if (!state) {\n            return null;\n        }\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        return this.getTemporaryCache(authorityCacheKey);\n    }\n    /**\n     * Updates account, authority, and state in cache\n     * @param serverAuthenticationRequest\n     * @param account\n     */\n    updateCacheEntries(state, nonce, authorityInstance, loginHint, account) {\n        this.logger.trace(\"BrowserCacheManager.updateCacheEntries called\");\n        // Cache the request state\n        const stateCacheKey = this.generateStateKey(state);\n        this.setTemporaryCache(stateCacheKey, state, false);\n        // Cache the nonce\n        const nonceCacheKey = this.generateNonceKey(state);\n        this.setTemporaryCache(nonceCacheKey, nonce, false);\n        // Cache authorityKey\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        this.setTemporaryCache(authorityCacheKey, authorityInstance, false);\n        if (account) {\n            const ccsCredential = {\n                credential: account.homeAccountId,\n                type: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CcsCredentialType.HOME_ACCOUNT_ID,\n            };\n            this.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\n        }\n        else if (!_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(loginHint)) {\n            const ccsCredential = {\n                credential: loginHint,\n                type: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CcsCredentialType.UPN,\n            };\n            this.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\n        }\n    }\n    /**\n     * Reset all temporary cache items\n     * @param state\n     */\n    resetRequestCache(state) {\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\n        // check state and remove associated cache items\n        if (!_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(state)) {\n            this.getKeys().forEach((key) => {\n                if (key.indexOf(state) !== -1) {\n                    this.removeItem(key);\n                }\n            });\n        }\n        // delete generic interactive request parameters\n        if (state) {\n            this.removeItem(this.generateStateKey(state));\n            this.removeItem(this.generateNonceKey(state));\n            this.removeItem(this.generateAuthorityKey(state));\n        }\n        this.removeItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.REQUEST_PARAMS));\n        this.removeItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.ORIGIN_URI));\n        this.removeItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.URL_HASH));\n        this.removeItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.CORRELATION_ID));\n        this.removeItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.CCS_CREDENTIAL));\n        this.removeItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.NATIVE_REQUEST));\n        this.setInteractionInProgress(false);\n    }\n    /**\n     * Removes temporary cache for the provided state\n     * @param stateString\n     */\n    cleanRequestByState(stateString) {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByState called\");\n        // Interaction is completed - remove interaction status.\n        if (stateString) {\n            const stateKey = this.generateStateKey(stateString);\n            const cachedState = this.temporaryCacheStorage.getItem(stateKey);\n            this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${cachedState}`);\n            this.resetRequestCache(cachedState || _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING);\n        }\n        this.clearMsalCookies();\n    }\n    /**\n     * Looks in temporary cache for any state values with the provided interactionType and removes all temporary cache items for that state\n     * Used in scenarios where temp cache needs to be cleaned but state is not known, such as clicking browser back button.\n     * @param interactionType\n     */\n    cleanRequestByInteractionType(interactionType) {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByInteractionType called\");\n        // Loop through all keys to find state key\n        this.getKeys().forEach((key) => {\n            // If this key is not the state key, move on\n            if (key.indexOf(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.REQUEST_STATE) === -1) {\n                return;\n            }\n            // Retrieve state value, return if not a valid value\n            const stateValue = this.temporaryCacheStorage.getItem(key);\n            if (!stateValue) {\n                return;\n            }\n            // Extract state and ensure it matches given InteractionType, then clean request cache\n            const parsedState = _utils_BrowserProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserProtocolUtils.extractBrowserRequestState(this.cryptoImpl, stateValue);\n            if (parsedState &&\n                parsedState.interactionType === interactionType) {\n                this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${stateValue}`);\n                this.resetRequestCache(stateValue);\n            }\n        });\n        this.clearMsalCookies();\n        this.setInteractionInProgress(false);\n    }\n    cacheCodeRequest(authCodeRequest, browserCrypto) {\n        this.logger.trace(\"BrowserCacheManager.cacheCodeRequest called\");\n        const encodedValue = browserCrypto.base64Encode(JSON.stringify(authCodeRequest));\n        this.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.REQUEST_PARAMS, encodedValue, true);\n    }\n    /**\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\n     */\n    getCachedRequest(state, browserCrypto) {\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\n        // Get token request from cache and parse as TokenExchangeParameters.\n        const encodedTokenRequest = this.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.REQUEST_PARAMS, true);\n        if (!encodedTokenRequest) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserAuthError.createNoTokenRequestCacheError();\n        }\n        const parsedRequest = this.validateAndParseJson(browserCrypto.base64Decode(encodedTokenRequest));\n        if (!parsedRequest) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserAuthError.createUnableToParseTokenRequestCacheError();\n        }\n        this.removeItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.REQUEST_PARAMS));\n        // Get cached authority and use if no authority is cached with request.\n        if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(parsedRequest.authority)) {\n            const authorityCacheKey = this.generateAuthorityKey(state);\n            const cachedAuthority = this.getTemporaryCache(authorityCacheKey);\n            if (!cachedAuthority) {\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserAuthError.createNoCachedAuthorityError();\n            }\n            parsedRequest.authority = cachedAuthority;\n        }\n        return parsedRequest;\n    }\n    /**\n     * Gets cached native request for redirect flows\n     */\n    getCachedNativeRequest() {\n        this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest called\");\n        const cachedRequest = this.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.NATIVE_REQUEST, true);\n        if (!cachedRequest) {\n            this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest: No cached native request found\");\n            return null;\n        }\n        const parsedRequest = this.validateAndParseJson(cachedRequest);\n        if (!parsedRequest) {\n            this.logger.error(\"BrowserCacheManager.getCachedNativeRequest: Unable to parse native request\");\n            return null;\n        }\n        return parsedRequest;\n    }\n    isInteractionInProgress(matchClientId) {\n        const clientId = this.getInteractionInProgress();\n        if (matchClientId) {\n            return clientId === this.clientId;\n        }\n        else {\n            return !!clientId;\n        }\n    }\n    getInteractionInProgress() {\n        const key = `${_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        return this.getTemporaryCache(key, false);\n    }\n    setInteractionInProgress(inProgress) {\n        // Ensure we don't overwrite interaction in progress for a different clientId\n        const key = `${_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        if (inProgress) {\n            if (this.getInteractionInProgress()) {\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserAuthError.createInteractionInProgressError();\n            }\n            else {\n                // No interaction is in progress\n                this.setTemporaryCache(key, this.clientId, false);\n            }\n        }\n        else if (!inProgress &&\n            this.getInteractionInProgress() === this.clientId) {\n            this.removeItem(key);\n        }\n    }\n    /**\n     * Returns username retrieved from ADAL or MSAL v1 idToken\n     */\n    getLegacyLoginHint() {\n        // Only check for adal/msal token if no SSO params are being used\n        const adalIdTokenString = this.getTemporaryCache(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ADAL_ID_TOKEN);\n        if (adalIdTokenString) {\n            this.browserStorage.removeItem(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ADAL_ID_TOKEN);\n            this.logger.verbose(\"Cached ADAL id token retrieved.\");\n        }\n        // Check for cached MSAL v1 id token\n        const msalIdTokenString = this.getTemporaryCache(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ID_TOKEN, true);\n        if (msalIdTokenString) {\n            this.removeItem(this.generateCacheKey(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ID_TOKEN));\n            this.logger.verbose(\"Cached MSAL.js v1 id token retrieved\");\n        }\n        const cachedIdTokenString = msalIdTokenString || adalIdTokenString;\n        if (cachedIdTokenString) {\n            const cachedIdToken = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.IdToken(cachedIdTokenString, this.cryptoImpl);\n            if (cachedIdToken.claims &&\n                cachedIdToken.claims.preferred_username) {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint\");\n                return cachedIdToken.claims.preferred_username;\n            }\n            else if (cachedIdToken.claims && cachedIdToken.claims.upn) {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint\");\n                return cachedIdToken.claims.upn;\n            }\n            else {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.\");\n            }\n        }\n        return null;\n    }\n    /**\n     * Updates a credential's cache key if the current cache key is outdated\n     */\n    updateCredentialCacheKey(currentCacheKey, credential) {\n        const updatedCacheKey = credential.generateCredentialKey();\n        if (currentCacheKey !== updatedCacheKey) {\n            const cacheItem = this.getItem(currentCacheKey);\n            if (cacheItem) {\n                this.removeItem(currentCacheKey);\n                this.setItem(updatedCacheKey, cacheItem);\n                this.logger.verbose(`Updated an outdated ${credential.credentialType} cache key`);\n                return updatedCacheKey;\n            }\n            else {\n                this.logger.error(`Attempted to update an outdated ${credential.credentialType} cache key but no item matching the outdated key was found in storage`);\n            }\n        }\n        return currentCacheKey;\n    }\n    /**\n     * Returns application id as redirect context during AcquireTokenRedirect flow.\n     */\n    getRedirectRequestContext() {\n        return this.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.REDIRECT_CONTEXT, true);\n    }\n    /**\n     * Sets application id as the redirect context during AcquireTokenRedirect flow.\n     * @param value\n     */\n    setRedirectRequestContext(value) {\n        this.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.REDIRECT_CONTEXT, value, true);\n    }\n    /**\n     * Builds credential entities from AuthenticationResult object and saves the resulting credentials to the cache\n     * @param result\n     * @param request\n     */\n    async hydrateCache(result, request) {\n        const idTokenEntity = _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.IdTokenEntity.createIdTokenEntity(result.account?.homeAccountId, result.account?.environment, result.idToken, this.clientId, result.tenantId);\n        let claimsHash;\n        if (request.claims) {\n            claimsHash = await this.cryptoImpl.hashString(request.claims);\n        }\n        const accessTokenEntity = _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AccessTokenEntity.createAccessTokenEntity(result.account?.homeAccountId, result.account.environment, result.accessToken, this.clientId, result.tenantId, result.scopes.join(\" \"), result.expiresOn?.getTime() || 0, result.extExpiresOn?.getTime() || 0, this.cryptoImpl, undefined, // refreshOn\n        result.tokenType, undefined, // userAssertionHash\n        request.sshKid, request.claims, claimsHash);\n        const cacheRecord = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CacheRecord(undefined, idTokenEntity, accessTokenEntity);\n        return this.saveCacheRecord(cacheRecord);\n    }\n}\nconst DEFAULT_BROWSER_CACHE_MANAGER = (clientId, logger) => {\n    const cacheOptions = {\n        cacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.MemoryStorage,\n        temporaryCacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.MemoryStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false,\n        cacheMigrationEnabled: false,\n        claimsBasedCachingEnabled: false,\n    };\n    return new BrowserCacheManager(clientId, cacheOptions, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CRYPTO_IMPLEMENTATION, logger);\n};\n\n\n//# sourceMappingURL=BrowserCacheManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/BrowserStorage.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/BrowserStorage.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserStorage: function() { return /* binding */ BrowserStorage; }\n/* harmony export */ });\n/* harmony import */ var _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass BrowserStorage {\n    constructor(cacheLocation) {\n        this.validateWindowStorage(cacheLocation);\n        this.windowStorage = window[cacheLocation];\n    }\n    validateWindowStorage(cacheLocation) {\n        if (cacheLocation !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserCacheLocation.LocalStorage &&\n            cacheLocation !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserCacheLocation.SessionStorage) {\n            throw _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n        }\n        const storageSupported = !!window[cacheLocation];\n        if (!storageSupported) {\n            throw _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n        }\n    }\n    getItem(key) {\n        return this.windowStorage.getItem(key);\n    }\n    setItem(key, value) {\n        this.windowStorage.setItem(key, value);\n    }\n    removeItem(key) {\n        this.windowStorage.removeItem(key);\n    }\n    getKeys() {\n        return Object.keys(this.windowStorage);\n    }\n    containsKey(key) {\n        return this.windowStorage.hasOwnProperty(key);\n    }\n}\n\n\n//# sourceMappingURL=BrowserStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NhY2hlL0Jyb3dzZXJTdG9yYWdlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQzhFO0FBQ3RCOztBQUVyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qiw2RUFBb0I7QUFDbEQsOEJBQThCLDZFQUFvQjtBQUNsRCxrQkFBa0IsbUdBQTZCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtR0FBNkI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NhY2hlL0Jyb3dzZXJTdG9yYWdlLm1qcz85YTBmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBCcm93c2VyQ2FjaGVMb2NhdGlvbiB9IGZyb20gJy4uL3V0aWxzL0Jyb3dzZXJDb25zdGFudHMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jbGFzcyBCcm93c2VyU3RvcmFnZSB7XG4gICAgY29uc3RydWN0b3IoY2FjaGVMb2NhdGlvbikge1xuICAgICAgICB0aGlzLnZhbGlkYXRlV2luZG93U3RvcmFnZShjYWNoZUxvY2F0aW9uKTtcbiAgICAgICAgdGhpcy53aW5kb3dTdG9yYWdlID0gd2luZG93W2NhY2hlTG9jYXRpb25dO1xuICAgIH1cbiAgICB2YWxpZGF0ZVdpbmRvd1N0b3JhZ2UoY2FjaGVMb2NhdGlvbikge1xuICAgICAgICBpZiAoY2FjaGVMb2NhdGlvbiAhPT0gQnJvd3NlckNhY2hlTG9jYXRpb24uTG9jYWxTdG9yYWdlICYmXG4gICAgICAgICAgICBjYWNoZUxvY2F0aW9uICE9PSBCcm93c2VyQ2FjaGVMb2NhdGlvbi5TZXNzaW9uU3RvcmFnZSkge1xuICAgICAgICAgICAgdGhyb3cgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3IuY3JlYXRlU3RvcmFnZU5vdFN1cHBvcnRlZEVycm9yKGNhY2hlTG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHN0b3JhZ2VTdXBwb3J0ZWQgPSAhIXdpbmRvd1tjYWNoZUxvY2F0aW9uXTtcbiAgICAgICAgaWYgKCFzdG9yYWdlU3VwcG9ydGVkKSB7XG4gICAgICAgICAgICB0aHJvdyBCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvci5jcmVhdGVTdG9yYWdlTm90U3VwcG9ydGVkRXJyb3IoY2FjaGVMb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0SXRlbShrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMud2luZG93U3RvcmFnZS5nZXRJdGVtKGtleSk7XG4gICAgfVxuICAgIHNldEl0ZW0oa2V5LCB2YWx1ZSkge1xuICAgICAgICB0aGlzLndpbmRvd1N0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKTtcbiAgICB9XG4gICAgcmVtb3ZlSXRlbShrZXkpIHtcbiAgICAgICAgdGhpcy53aW5kb3dTdG9yYWdlLnJlbW92ZUl0ZW0oa2V5KTtcbiAgICB9XG4gICAgZ2V0S2V5cygpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMud2luZG93U3RvcmFnZSk7XG4gICAgfVxuICAgIGNvbnRhaW5zS2V5KGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy53aW5kb3dTdG9yYWdlLmhhc093blByb3BlcnR5KGtleSk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBCcm93c2VyU3RvcmFnZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QnJvd3NlclN0b3JhZ2UubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/BrowserStorage.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/CryptoKeyStore.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/CryptoKeyStore.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CryptoKeyStore: function() { return /* binding */ CryptoKeyStore; },\n/* harmony export */   CryptoKeyStoreNames: function() { return /* binding */ CryptoKeyStoreNames; }\n/* harmony export */ });\n/* harmony import */ var _AsyncMemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsyncMemoryStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst CryptoKeyStoreNames = {\n    asymmetricKeys: \"asymmetricKeys\",\n    symmetricKeys: \"symmetricKeys\",\n};\n/**\n * MSAL CryptoKeyStore DB Version 2\n */\nclass CryptoKeyStore {\n    constructor(logger) {\n        this.logger = logger;\n        this.asymmetricKeys = new _AsyncMemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_0__.AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.asymmetricKeys);\n        this.symmetricKeys = new _AsyncMemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_0__.AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.symmetricKeys);\n    }\n    async clear() {\n        // Delete in-memory keystores\n        this.asymmetricKeys.clearInMemory();\n        this.symmetricKeys.clearInMemory();\n        /**\n         * There is only one database, so calling clearPersistent on asymmetric keystore takes care of\n         * every persistent keystore\n         */\n        try {\n            await this.asymmetricKeys.clearPersistent();\n            return true;\n        }\n        catch (e) {\n            if (e instanceof Error) {\n                this.logger.error(`Clearing keystore failed with error: ${e.message}`);\n            }\n            else {\n                this.logger.error(\"Clearing keystore failed with unknown error\");\n            }\n            return false;\n        }\n    }\n}\n\n\n//# sourceMappingURL=CryptoKeyStore.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NhY2hlL0NyeXB0b0tleVN0b3JlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQ2lEOztBQUU5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHVFQUFrQjtBQUNwRCxpQ0FBaUMsdUVBQWtCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBFQUEwRSxVQUFVO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRStDO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvY2FjaGUvQ3J5cHRvS2V5U3RvcmUubWpzP2JkNDYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEFzeW5jTWVtb3J5U3RvcmFnZSB9IGZyb20gJy4vQXN5bmNNZW1vcnlTdG9yYWdlLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY29uc3QgQ3J5cHRvS2V5U3RvcmVOYW1lcyA9IHtcbiAgICBhc3ltbWV0cmljS2V5czogXCJhc3ltbWV0cmljS2V5c1wiLFxuICAgIHN5bW1ldHJpY0tleXM6IFwic3ltbWV0cmljS2V5c1wiLFxufTtcbi8qKlxuICogTVNBTCBDcnlwdG9LZXlTdG9yZSBEQiBWZXJzaW9uIDJcbiAqL1xuY2xhc3MgQ3J5cHRvS2V5U3RvcmUge1xuICAgIGNvbnN0cnVjdG9yKGxvZ2dlcikge1xuICAgICAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlcjtcbiAgICAgICAgdGhpcy5hc3ltbWV0cmljS2V5cyA9IG5ldyBBc3luY01lbW9yeVN0b3JhZ2UodGhpcy5sb2dnZXIsIENyeXB0b0tleVN0b3JlTmFtZXMuYXN5bW1ldHJpY0tleXMpO1xuICAgICAgICB0aGlzLnN5bW1ldHJpY0tleXMgPSBuZXcgQXN5bmNNZW1vcnlTdG9yYWdlKHRoaXMubG9nZ2VyLCBDcnlwdG9LZXlTdG9yZU5hbWVzLnN5bW1ldHJpY0tleXMpO1xuICAgIH1cbiAgICBhc3luYyBjbGVhcigpIHtcbiAgICAgICAgLy8gRGVsZXRlIGluLW1lbW9yeSBrZXlzdG9yZXNcbiAgICAgICAgdGhpcy5hc3ltbWV0cmljS2V5cy5jbGVhckluTWVtb3J5KCk7XG4gICAgICAgIHRoaXMuc3ltbWV0cmljS2V5cy5jbGVhckluTWVtb3J5KCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGVyZSBpcyBvbmx5IG9uZSBkYXRhYmFzZSwgc28gY2FsbGluZyBjbGVhclBlcnNpc3RlbnQgb24gYXN5bW1ldHJpYyBrZXlzdG9yZSB0YWtlcyBjYXJlIG9mXG4gICAgICAgICAqIGV2ZXJ5IHBlcnNpc3RlbnQga2V5c3RvcmVcbiAgICAgICAgICovXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLmFzeW1tZXRyaWNLZXlzLmNsZWFyUGVyc2lzdGVudCgpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGlmIChlIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci5lcnJvcihgQ2xlYXJpbmcga2V5c3RvcmUgZmFpbGVkIHdpdGggZXJyb3I6ICR7ZS5tZXNzYWdlfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoXCJDbGVhcmluZyBrZXlzdG9yZSBmYWlsZWQgd2l0aCB1bmtub3duIGVycm9yXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgeyBDcnlwdG9LZXlTdG9yZSwgQ3J5cHRvS2V5U3RvcmVOYW1lcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q3J5cHRvS2V5U3RvcmUubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/CryptoKeyStore.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.mjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseStorage: function() { return /* binding */ DatabaseStorage; }\n/* harmony export */ });\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\n */\nclass DatabaseStorage {\n    constructor() {\n        this.dbName = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.DB_NAME;\n        this.version = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.DB_VERSION;\n        this.tableName = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.DB_TABLE_NAME;\n        this.dbOpen = false;\n    }\n    /**\n     * Opens IndexedDB instance.\n     */\n    async open() {\n        return new Promise((resolve, reject) => {\n            const openDB = window.indexedDB.open(this.dbName, this.version);\n            openDB.addEventListener(\"upgradeneeded\", (e) => {\n                const event = e;\n                event.target.result.createObjectStore(this.tableName);\n            });\n            openDB.addEventListener(\"success\", (e) => {\n                const event = e;\n                this.db = event.target.result;\n                this.dbOpen = true;\n                resolve();\n            });\n            openDB.addEventListener(\"error\", () => reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createDatabaseUnavailableError()));\n        });\n    }\n    /**\n     * Closes the connection to IndexedDB database when all pending transactions\n     * complete.\n     */\n    closeConnection() {\n        const db = this.db;\n        if (db && this.dbOpen) {\n            db.close();\n            this.dbOpen = false;\n        }\n    }\n    /**\n     * Opens database if it's not already open\n     */\n    async validateDbIsOpen() {\n        if (!this.dbOpen) {\n            return await this.open();\n        }\n    }\n    /**\n     * Retrieves item from IndexedDB instance.\n     * @param key\n     */\n    async getItem(key) {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createDatabaseNotOpenError());\n            }\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGet = objectStore.get(key);\n            dbGet.addEventListener(\"success\", (e) => {\n                const event = e;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n            dbGet.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     * Adds item to IndexedDB under given key\n     * @param key\n     * @param payload\n     */\n    async setItem(key, payload) {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createDatabaseNotOpenError());\n            }\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbPut = objectStore.put(payload, key);\n            dbPut.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n            dbPut.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     * Removes item from IndexedDB under given key\n     * @param key\n     */\n    async removeItem(key) {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            if (!this.db) {\n                return reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createDatabaseNotOpenError());\n            }\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbDelete = objectStore.delete(key);\n            dbDelete.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n            dbDelete.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     * Get all the keys from the storage object as an iterable array of strings.\n     */\n    async getKeys() {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            if (!this.db) {\n                return reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createDatabaseNotOpenError());\n            }\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGetKeys = objectStore.getAllKeys();\n            dbGetKeys.addEventListener(\"success\", (e) => {\n                const event = e;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n            dbGetKeys.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     *\n     * Checks whether there is an object under the search key in the object store\n     */\n    async containsKey(key) {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            if (!this.db) {\n                return reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createDatabaseNotOpenError());\n            }\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbContainsKey = objectStore.count(key);\n            dbContainsKey.addEventListener(\"success\", (e) => {\n                const event = e;\n                this.closeConnection();\n                resolve(event.target.result === 1);\n            });\n            dbContainsKey.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\n     * with IndexedDB database versions.\n     */\n    async deleteDatabase() {\n        // Check if database being deleted exists\n        if (this.db && this.dbOpen) {\n            this.closeConnection();\n        }\n        return new Promise((resolve, reject) => {\n            const deleteDbRequest = window.indexedDB.deleteDatabase(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.DB_NAME);\n            deleteDbRequest.addEventListener(\"success\", () => resolve(true));\n            deleteDbRequest.addEventListener(\"blocked\", () => resolve(true));\n            deleteDbRequest.addEventListener(\"error\", () => reject(false));\n        });\n    }\n}\n\n\n//# sourceMappingURL=DatabaseStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MemoryStorage: function() { return /* binding */ MemoryStorage; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass MemoryStorage {\n    constructor() {\n        this.cache = new Map();\n    }\n    getItem(key) {\n        return this.cache.get(key) || null;\n    }\n    setItem(key, value) {\n        this.cache.set(key, value);\n    }\n    removeItem(key) {\n        this.cache.delete(key);\n    }\n    getKeys() {\n        const cacheKeys = [];\n        this.cache.forEach((value, key) => {\n            cacheKeys.push(key);\n        });\n        return cacheKeys;\n    }\n    containsKey(key) {\n        return this.cache.has(key);\n    }\n    clear() {\n        this.cache.clear();\n    }\n}\n\n\n//# sourceMappingURL=MemoryStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NhY2hlL01lbW9yeVN0b3JhZ2UubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9jYWNoZS9NZW1vcnlTdG9yYWdlLm1qcz8xMjU5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIE1lbW9yeVN0b3JhZ2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmNhY2hlID0gbmV3IE1hcCgpO1xuICAgIH1cbiAgICBnZXRJdGVtKGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5jYWNoZS5nZXQoa2V5KSB8fCBudWxsO1xuICAgIH1cbiAgICBzZXRJdGVtKGtleSwgdmFsdWUpIHtcbiAgICAgICAgdGhpcy5jYWNoZS5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgfVxuICAgIHJlbW92ZUl0ZW0oa2V5KSB7XG4gICAgICAgIHRoaXMuY2FjaGUuZGVsZXRlKGtleSk7XG4gICAgfVxuICAgIGdldEtleXMoKSB7XG4gICAgICAgIGNvbnN0IGNhY2hlS2V5cyA9IFtdO1xuICAgICAgICB0aGlzLmNhY2hlLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgICAgIGNhY2hlS2V5cy5wdXNoKGtleSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gY2FjaGVLZXlzO1xuICAgIH1cbiAgICBjb250YWluc0tleShrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FjaGUuaGFzKGtleSk7XG4gICAgfVxuICAgIGNsZWFyKCkge1xuICAgICAgICB0aGlzLmNhY2hlLmNsZWFyKCk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBNZW1vcnlTdG9yYWdlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NZW1vcnlTdG9yYWdlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/TokenCache.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/TokenCache.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TokenCache: function() { return /* binding */ TokenCache; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Token cache manager\n */\nclass TokenCache {\n    constructor(configuration, storage, logger, cryptoObj) {\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\n        this.config = configuration;\n        this.storage = storage;\n        this.logger = logger;\n        this.cryptoObj = cryptoObj;\n    }\n    // Move getAllAccounts here and cache utility APIs\n    /**\n     * API to load tokens to msal-browser cache.\n     * @param request\n     * @param response\n     * @param options\n     * @returns `AuthenticationResult` for the response that was loaded.\n     */\n    loadExternalTokens(request, response, options) {\n        this.logger.info(\"TokenCache - loadExternalTokens called\");\n        if (!response.id_token) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserAuthError.createUnableToLoadTokenError(\"Please ensure server response includes id token.\");\n        }\n        const idToken = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthToken(response.id_token, this.cryptoObj);\n        let cacheRecord;\n        let authority;\n        let cacheRecordAccount;\n        if (request.account) {\n            cacheRecordAccount = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AccountEntity.createFromAccountInfo(request.account);\n            cacheRecord = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.CacheRecord(cacheRecordAccount, this.loadIdToken(idToken, cacheRecordAccount.homeAccountId, request.account.environment, request.account.tenantId), this.loadAccessToken(request, response, cacheRecordAccount.homeAccountId, request.account.environment, request.account.tenantId, options), this.loadRefreshToken(request, response, cacheRecordAccount.homeAccountId, request.account.environment));\n        }\n        else if (request.authority) {\n            const authorityUrl = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Authority.generateAuthority(request.authority, request.azureCloudOptions);\n            const authorityOptions = {\n                protocolMode: this.config.auth.protocolMode,\n                knownAuthorities: this.config.auth.knownAuthorities,\n                cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n                authorityMetadata: this.config.auth.authorityMetadata,\n                skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\n            };\n            authority = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Authority(authorityUrl, this.config.system.networkClient, this.storage, authorityOptions, this.logger);\n            // \"clientInfo\" from options takes precedence over \"clientInfo\" in response\n            if (options.clientInfo) {\n                this.logger.trace(\"TokenCache - homeAccountId from options\");\n                cacheRecordAccount = this.loadAccount(idToken, authority, options.clientInfo);\n                cacheRecord = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.CacheRecord(cacheRecordAccount, this.loadIdToken(idToken, cacheRecordAccount.homeAccountId, authority.hostnameAndPort, authority.tenant), this.loadAccessToken(request, response, cacheRecordAccount.homeAccountId, authority.hostnameAndPort, authority.tenant, options), this.loadRefreshToken(request, response, cacheRecordAccount.homeAccountId, authority.hostnameAndPort));\n            }\n            else if (response.client_info) {\n                this.logger.trace(\"TokenCache - homeAccountId from response\");\n                cacheRecordAccount = this.loadAccount(idToken, authority, response.client_info);\n                cacheRecord = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.CacheRecord(cacheRecordAccount, this.loadIdToken(idToken, cacheRecordAccount.homeAccountId, authority.hostnameAndPort, authority.tenant), this.loadAccessToken(request, response, cacheRecordAccount.homeAccountId, authority.hostnameAndPort, authority.tenant, options), this.loadRefreshToken(request, response, cacheRecordAccount.homeAccountId, authority.hostnameAndPort));\n            }\n            else {\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserAuthError.createUnableToLoadTokenError(\"Please provide clientInfo in the response or options.\");\n            }\n        }\n        else {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserAuthError.createUnableToLoadTokenError(\"Please provide a request with an account or a request with authority.\");\n        }\n        return this.generateAuthenticationResult(request, idToken, cacheRecord, cacheRecordAccount, authority);\n    }\n    /**\n     * Helper function to load account to msal-browser cache\n     * @param idToken\n     * @param environment\n     * @param clientInfo\n     * @param authorityType\n     * @param requestHomeAccountId\n     * @returns `AccountEntity`\n     */\n    loadAccount(idToken, authority, clientInfo, requestHomeAccountId) {\n        let homeAccountId;\n        if (requestHomeAccountId) {\n            homeAccountId = requestHomeAccountId;\n        }\n        else if (authority.authorityType !== undefined && clientInfo) {\n            homeAccountId = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AccountEntity.generateHomeAccountId(clientInfo, authority.authorityType, this.logger, this.cryptoObj, idToken.claims);\n        }\n        if (!homeAccountId) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserAuthError.createUnableToLoadTokenError(\"Unexpected missing homeAccountId\");\n        }\n        const accountEntity = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AccountEntity.createAccount({\n            homeAccountId,\n            idTokenClaims: idToken.claims,\n            clientInfo,\n            environment: authority.hostnameAndPort,\n        }, authority);\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading account\");\n            this.storage.setAccount(accountEntity);\n            return accountEntity;\n        }\n        else {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserAuthError.createUnableToLoadTokenError(\"loadExternalTokens is designed to work in browser environments only.\");\n        }\n    }\n    /**\n     * Helper function to load id tokens to msal-browser cache\n     * @param idToken\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns `IdTokenEntity`\n     */\n    loadIdToken(idToken, homeAccountId, environment, tenantId) {\n        const idTokenEntity = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.IdTokenEntity.createIdTokenEntity(homeAccountId, environment, idToken.rawToken, this.config.auth.clientId, tenantId);\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading id token\");\n            this.storage.setIdTokenCredential(idTokenEntity);\n            return idTokenEntity;\n        }\n        else {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserAuthError.createUnableToLoadTokenError(\"loadExternalTokens is designed to work in browser environments only.\");\n        }\n    }\n    /**\n     * Helper function to load access tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns `AccessTokenEntity`\n     */\n    loadAccessToken(request, response, homeAccountId, environment, tenantId, options) {\n        if (!response.access_token) {\n            this.logger.verbose(\"TokenCache - No access token provided for caching\");\n            return null;\n        }\n        if (!response.expires_in) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserAuthError.createUnableToLoadTokenError(\"Please ensure server response includes expires_in value.\");\n        }\n        if (!options.extendedExpiresOn) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserAuthError.createUnableToLoadTokenError(\"Please provide an extendedExpiresOn value in the options.\");\n        }\n        const scopes = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ScopeSet(request.scopes).printScopes();\n        const expiresOn = options.expiresOn ||\n            response.expires_in + new Date().getTime() / 1000;\n        const extendedExpiresOn = options.extendedExpiresOn;\n        const accessTokenEntity = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AccessTokenEntity.createAccessTokenEntity(homeAccountId, environment, response.access_token, this.config.auth.clientId, tenantId, scopes, expiresOn, extendedExpiresOn, this.cryptoObj);\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading access token\");\n            this.storage.setAccessTokenCredential(accessTokenEntity);\n            return accessTokenEntity;\n        }\n        else {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserAuthError.createUnableToLoadTokenError(\"loadExternalTokens is designed to work in browser environments only.\");\n        }\n    }\n    /**\n     * Helper function to load refresh tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param homeAccountId\n     * @param environment\n     * @returns `RefreshTokenEntity`\n     */\n    loadRefreshToken(request, response, homeAccountId, environment) {\n        if (!response.refresh_token) {\n            this.logger.verbose(\"TokenCache - No refresh token provided for caching\");\n            return null;\n        }\n        const refreshTokenEntity = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.RefreshTokenEntity.createRefreshTokenEntity(homeAccountId, environment, response.refresh_token, this.config.auth.clientId);\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading refresh token\");\n            this.storage.setRefreshTokenCredential(refreshTokenEntity);\n            return refreshTokenEntity;\n        }\n        else {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserAuthError.createUnableToLoadTokenError(\"loadExternalTokens is designed to work in browser environments only.\");\n        }\n    }\n    /**\n     * Helper function to generate an `AuthenticationResult` for the result.\n     * @param request\n     * @param idTokenObj\n     * @param cacheRecord\n     * @param authority\n     * @returns `AuthenticationResult`\n     */\n    generateAuthenticationResult(request, idTokenObj, cacheRecord, accountEntity, authority) {\n        let accessToken = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n        let responseScopes = [];\n        let expiresOn = null;\n        let extExpiresOn;\n        if (cacheRecord?.accessToken) {\n            accessToken = cacheRecord.accessToken.secret;\n            responseScopes = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\n        }\n        const uid = idTokenObj?.claims.oid ||\n            idTokenObj?.claims.sub ||\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n        const tid = idTokenObj?.claims.tid || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n        return {\n            authority: authority\n                ? authority.canonicalAuthority\n                : _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: accountEntity.getAccountInfo(),\n            idToken: idTokenObj ? idTokenObj.rawToken : _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n            idTokenClaims: idTokenObj ? idTokenObj.claims : {},\n            accessToken: accessToken,\n            fromCache: true,\n            expiresOn: expiresOn,\n            correlationId: request.correlationId || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n            requestId: _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n            extExpiresOn: extExpiresOn,\n            familyId: _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n            tokenType: cacheRecord?.accessToken?.tokenType || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n            state: _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n            cloudGraphHostName: accountEntity.cloudGraphHostName || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n            msGraphHost: accountEntity.msGraphHost || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n            code: undefined,\n            fromNativeBroker: false,\n        };\n    }\n}\n\n\n//# sourceMappingURL=TokenCache.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/TokenCache.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/config/Configuration.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/config/Configuration.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_IFRAME_TIMEOUT_MS: function() { return /* binding */ DEFAULT_IFRAME_TIMEOUT_MS; },\n/* harmony export */   DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS: function() { return /* binding */ DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS; },\n/* harmony export */   DEFAULT_POPUP_TIMEOUT_MS: function() { return /* binding */ DEFAULT_POPUP_TIMEOUT_MS; },\n/* harmony export */   DEFAULT_REDIRECT_TIMEOUT_MS: function() { return /* binding */ DEFAULT_REDIRECT_TIMEOUT_MS; },\n/* harmony export */   buildConfiguration: function() { return /* binding */ buildConfiguration; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _navigation_NavigationClient_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../navigation/NavigationClient.mjs */ \"./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// Default timeout for popup windows and iframes in milliseconds\nconst DEFAULT_POPUP_TIMEOUT_MS = 60000;\nconst DEFAULT_IFRAME_TIMEOUT_MS = 6000;\nconst DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\nconst DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS = 2000;\n/**\n * MSAL function that sets the default options when not explicitly configured from app developer\n *\n * @param auth\n * @param cache\n * @param system\n *\n * @returns Configuration object\n */\nfunction buildConfiguration({ auth: userInputAuth, cache: userInputCache, system: userInputSystem, telemetry: userInputTelemetry, }, isBrowserEnvironment) {\n    // Default auth options for browser\n    const DEFAULT_AUTH_OPTIONS = {\n        clientId: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        authority: `${_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_AUTHORITY}`,\n        knownAuthorities: [],\n        cloudDiscoveryMetadata: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        authorityMetadata: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        redirectUri: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        postLogoutRedirectUri: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        navigateToLoginRequestUrl: true,\n        clientCapabilities: [],\n        protocolMode: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ProtocolMode.AAD,\n        OIDCOptions: {\n            serverResponseType: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ServerResponseType.FRAGMENT,\n            defaultScopes: [\n                _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.OPENID_SCOPE,\n                _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.PROFILE_SCOPE,\n                _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.OFFLINE_ACCESS_SCOPE,\n            ],\n        },\n        azureCloudOptions: {\n            azureCloudInstance: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AzureCloudInstance.None,\n            tenant: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        },\n        skipAuthorityMetadataCache: false,\n    };\n    // Default cache options for browser\n    const DEFAULT_CACHE_OPTIONS = {\n        cacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserCacheLocation.SessionStorage,\n        temporaryCacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserCacheLocation.SessionStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false,\n        // Default cache migration to true if cache location is localStorage since entries are preserved across tabs/windows. Migration has little to no benefit in sessionStorage and memoryStorage\n        cacheMigrationEnabled: userInputCache &&\n            userInputCache.cacheLocation === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserCacheLocation.LocalStorage\n            ? true\n            : false,\n        claimsBasedCachingEnabled: false,\n    };\n    // Default logger options for browser\n    const DEFAULT_LOGGER_OPTIONS = {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        loggerCallback: () => {\n            // allow users to not set logger call back\n        },\n        logLevel: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Info,\n        piiLoggingEnabled: false,\n    };\n    // Default system options for browser\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS = {\n        ..._azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_SYSTEM_OPTIONS,\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\n        networkClient: isBrowserEnvironment\n            ? _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserUtils.getBrowserNetworkClient()\n            : _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.StubbedNetworkModule,\n        navigationClient: new _navigation_NavigationClient_mjs__WEBPACK_IMPORTED_MODULE_3__.NavigationClient(),\n        loadFrameTimeout: 0,\n        // If loadFrameTimeout is provided, use that as default.\n        windowHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_POPUP_TIMEOUT_MS,\n        iframeHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_IFRAME_TIMEOUT_MS,\n        navigateFrameWait: isBrowserEnvironment && _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserUtils.detectIEOrEdge() ? 500 : 0,\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\n        asyncPopups: false,\n        allowRedirectInIframe: false,\n        allowNativeBroker: false,\n        nativeBrokerHandshakeTimeout: userInputSystem?.nativeBrokerHandshakeTimeout ||\n            DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS,\n        pollIntervalMilliseconds: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserConstants.DEFAULT_POLL_INTERVAL_MS,\n    };\n    const providedSystemOptions = {\n        ...userInputSystem,\n        loggerOptions: userInputSystem?.loggerOptions || DEFAULT_LOGGER_OPTIONS,\n    };\n    const DEFAULT_TELEMETRY_OPTIONS = {\n        application: {\n            appName: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n            appVersion: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        },\n        client: new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.StubPerformanceClient(DEFAULT_AUTH_OPTIONS.clientId, DEFAULT_AUTH_OPTIONS.authority, new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Logger(DEFAULT_LOGGER_OPTIONS, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__.version), _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__.version, {\n            appName: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n            appVersion: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        }),\n    };\n    // Throw an error if user has set OIDCOptions without being in OIDC protocol mode\n    if (userInputAuth?.protocolMode !== _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ProtocolMode.OIDC &&\n        userInputAuth?.OIDCOptions) {\n        // Logger has not been created yet\n        // eslint-disable-next-line no-console\n        console.warn(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ClientConfigurationError.createCannotSetOIDCOptionsError());\n    }\n    // Throw an error if user has set allowNativeBroker to true without being in AAD protocol mode\n    if (userInputAuth?.protocolMode &&\n        userInputAuth.protocolMode !== _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ProtocolMode.AAD &&\n        providedSystemOptions?.allowNativeBroker) {\n        throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ClientConfigurationError.createCannotAllowNativeBrokerError();\n    }\n    const overlayedConfig = {\n        auth: {\n            ...DEFAULT_AUTH_OPTIONS,\n            ...userInputAuth,\n            OIDCOptions: {\n                ...DEFAULT_AUTH_OPTIONS.OIDCOptions,\n                ...userInputAuth?.OIDCOptions,\n            },\n        },\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\n        system: { ...DEFAULT_BROWSER_SYSTEM_OPTIONS, ...providedSystemOptions },\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...userInputTelemetry },\n    };\n    return overlayedConfig;\n}\n\n\n//# sourceMappingURL=Configuration.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/config/Configuration.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ControllerFactory: function() { return /* binding */ ControllerFactory; }\n/* harmony export */ });\n/* harmony import */ var _operatingcontext_TeamsAppOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operatingcontext/TeamsAppOperatingContext.mjs */ \"./node_modules/@azure/msal-browser/dist/operatingcontext/TeamsAppOperatingContext.mjs\");\n/* harmony import */ var _operatingcontext_StandardOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operatingcontext/StandardOperatingContext.mjs */ \"./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass ControllerFactory {\n    constructor(config) {\n        this.config = config;\n        const loggerOptions = {\n            loggerCallback: undefined,\n            piiLoggingEnabled: false,\n            logLevel: undefined,\n            correlationId: undefined,\n        };\n        this.logger = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Logger(loggerOptions, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__.version);\n    }\n    async createController() {\n        const standard = new _operatingcontext_StandardOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_2__.StandardOperatingContext(this.config);\n        const metaOS = new _operatingcontext_TeamsAppOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_3__.TeamsAppOperatingContext(this.config);\n        const operatingContexts = [standard.initialize(), metaOS.initialize()];\n        return Promise.all(operatingContexts).then(async () => {\n            if (metaOS.isAvailable()) {\n                /*\n                 * pull down metaos module\n                 * create associated controller\n                 */\n                // return await StandardController.createController(standard);\n                const controller = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./StandardController.mjs */ \"./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs\"));\n                return await controller.StandardController.createController(standard);\n            }\n            else if (standard.isAvailable()) {\n                const controller = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./StandardController.mjs */ \"./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs\"));\n                return await controller.StandardController.createController(standard);\n            }\n            throw new Error(\"No controller found.\");\n        });\n    }\n}\n\n\n//# sourceMappingURL=ControllerFactory.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NvbnRyb2xsZXJzL0NvbnRyb2xsZXJGYWN0b3J5Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2E7QUFDK0U7QUFDQTtBQUNoRDtBQUNXOztBQUV2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixzREFBTSxnQkFBZ0Isc0RBQUksRUFBRSx5REFBTztBQUM3RDtBQUNBO0FBQ0EsNkJBQTZCLG9HQUF3QjtBQUNyRCwyQkFBMkIsb0dBQXdCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsa01BQWtDO0FBQzNFO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxrTUFBa0M7QUFDM0U7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvY29udHJvbGxlcnMvQ29udHJvbGxlckZhY3RvcnkubWpzPzQ0M2MiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IFRlYW1zQXBwT3BlcmF0aW5nQ29udGV4dCB9IGZyb20gJy4uL29wZXJhdGluZ2NvbnRleHQvVGVhbXNBcHBPcGVyYXRpbmdDb250ZXh0Lm1qcyc7XG5pbXBvcnQgeyBTdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQgfSBmcm9tICcuLi9vcGVyYXRpbmdjb250ZXh0L1N0YW5kYXJkT3BlcmF0aW5nQ29udGV4dC5tanMnO1xuaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uJztcbmltcG9ydCB7IG5hbWUsIHZlcnNpb24gfSBmcm9tICcuLi9wYWNrYWdlTWV0YWRhdGEubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jbGFzcyBDb250cm9sbGVyRmFjdG9yeSB7XG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xuICAgICAgICBjb25zdCBsb2dnZXJPcHRpb25zID0ge1xuICAgICAgICAgICAgbG9nZ2VyQ2FsbGJhY2s6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHBpaUxvZ2dpbmdFbmFibGVkOiBmYWxzZSxcbiAgICAgICAgICAgIGxvZ0xldmVsOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBjb3JyZWxhdGlvbklkOiB1bmRlZmluZWQsXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMubG9nZ2VyID0gbmV3IExvZ2dlcihsb2dnZXJPcHRpb25zLCBuYW1lLCB2ZXJzaW9uKTtcbiAgICB9XG4gICAgYXN5bmMgY3JlYXRlQ29udHJvbGxlcigpIHtcbiAgICAgICAgY29uc3Qgc3RhbmRhcmQgPSBuZXcgU3RhbmRhcmRPcGVyYXRpbmdDb250ZXh0KHRoaXMuY29uZmlnKTtcbiAgICAgICAgY29uc3QgbWV0YU9TID0gbmV3IFRlYW1zQXBwT3BlcmF0aW5nQ29udGV4dCh0aGlzLmNvbmZpZyk7XG4gICAgICAgIGNvbnN0IG9wZXJhdGluZ0NvbnRleHRzID0gW3N0YW5kYXJkLmluaXRpYWxpemUoKSwgbWV0YU9TLmluaXRpYWxpemUoKV07XG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChvcGVyYXRpbmdDb250ZXh0cykudGhlbihhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBpZiAobWV0YU9TLmlzQXZhaWxhYmxlKCkpIHtcbiAgICAgICAgICAgICAgICAvKlxuICAgICAgICAgICAgICAgICAqIHB1bGwgZG93biBtZXRhb3MgbW9kdWxlXG4gICAgICAgICAgICAgICAgICogY3JlYXRlIGFzc29jaWF0ZWQgY29udHJvbGxlclxuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIC8vIHJldHVybiBhd2FpdCBTdGFuZGFyZENvbnRyb2xsZXIuY3JlYXRlQ29udHJvbGxlcihzdGFuZGFyZCk7XG4gICAgICAgICAgICAgICAgY29uc3QgY29udHJvbGxlciA9IGF3YWl0IGltcG9ydCgnLi9TdGFuZGFyZENvbnRyb2xsZXIubWpzJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IGNvbnRyb2xsZXIuU3RhbmRhcmRDb250cm9sbGVyLmNyZWF0ZUNvbnRyb2xsZXIoc3RhbmRhcmQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoc3RhbmRhcmQuaXNBdmFpbGFibGUoKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRyb2xsZXIgPSBhd2FpdCBpbXBvcnQoJy4vU3RhbmRhcmRDb250cm9sbGVyLm1qcycpO1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBjb250cm9sbGVyLlN0YW5kYXJkQ29udHJvbGxlci5jcmVhdGVDb250cm9sbGVyKHN0YW5kYXJkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIGNvbnRyb2xsZXIgZm91bmQuXCIpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IENvbnRyb2xsZXJGYWN0b3J5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db250cm9sbGVyRmFjdG9yeS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StandardController: function() { return /* binding */ StandardController; }\n/* harmony export */ });\n/* harmony import */ var _crypto_CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto/CryptoOps.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../cache/BrowserCacheManager.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../event/EventType.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\");\n/* harmony import */ var _event_EventHandler_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../event/EventHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs\");\n/* harmony import */ var _interaction_client_PopupClient_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../interaction_client/PopupClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs\");\n/* harmony import */ var _interaction_client_RedirectClient_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../interaction_client/RedirectClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs\");\n/* harmony import */ var _interaction_client_SilentIframeClient_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../interaction_client/SilentIframeClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs\");\n/* harmony import */ var _interaction_client_SilentRefreshClient_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../interaction_client/SilentRefreshClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs\");\n/* harmony import */ var _cache_TokenCache_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cache/TokenCache.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/TokenCache.mjs\");\n/* harmony import */ var _interaction_client_NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../interaction_client/NativeInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../broker/nativeBroker/NativeMessageHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\");\n/* harmony import */ var _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../error/NativeAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs\");\n/* harmony import */ var _interaction_client_SilentCacheClient_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../interaction_client/SilentCacheClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs\");\n/* harmony import */ var _interaction_client_SilentAuthCodeClient_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../interaction_client/SilentAuthCodeClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass StandardController {\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     */\n    constructor(operatingContext) {\n        this.atsAsyncMeasurement = undefined;\n        this.operatingContext = operatingContext;\n        this.isBrowserEnvironment =\n            this.operatingContext.isBrowserEnvironment();\n        // Set the configuration.\n        this.config = operatingContext.getConfig();\n        this.initialized = false;\n        // Initialize logger\n        this.logger = this.operatingContext.getLogger();\n        // Initialize the network module class.\n        this.networkClient = this.config.system.networkClient;\n        // Initialize the navigation client class.\n        this.navigationClient = this.config.system.navigationClient;\n        // Initialize redirectResponse Map\n        this.redirectResponse = new Map();\n        // Initial hybrid spa map\n        this.hybridAuthCodeResponses = new Map();\n        // Initialize performance client\n        this.performanceClient = this.config.telemetry.client;\n        // Initialize the crypto class.\n        this.browserCrypto = this.isBrowserEnvironment\n            ? new _crypto_CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_0__.CryptoOps(this.logger, this.performanceClient)\n            : _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_CRYPTO_IMPLEMENTATION;\n        this.eventHandler = new _event_EventHandler_mjs__WEBPACK_IMPORTED_MODULE_2__.EventHandler(this.logger, this.browserCrypto);\n        // Initialize the browser storage class.\n        this.browserStorage = this.isBrowserEnvironment\n            ? new _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger)\n            : (0,_cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_BROWSER_CACHE_MANAGER)(this.config.auth.clientId, this.logger);\n        // initialize in memory storage for native flows\n        const nativeCacheOptions = {\n            cacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserCacheLocation.MemoryStorage,\n            temporaryCacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserCacheLocation.MemoryStorage,\n            storeAuthStateInCookie: false,\n            secureCookies: false,\n            cacheMigrationEnabled: false,\n            claimsBasedCachingEnabled: false,\n        };\n        this.nativeInternalStorage = new _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserCacheManager(this.config.auth.clientId, nativeCacheOptions, this.browserCrypto, this.logger);\n        // Initialize the token cache\n        this.tokenCache = new _cache_TokenCache_mjs__WEBPACK_IMPORTED_MODULE_5__.TokenCache(this.config, this.browserStorage, this.logger, this.browserCrypto);\n        this.activeSilentTokenRequests = new Map();\n        // Register listener functions\n        this.trackPageVisibility = this.trackPageVisibility.bind(this);\n        // Register listener functions\n        this.trackPageVisibilityWithMeasurement =\n            this.trackPageVisibilityWithMeasurement.bind(this);\n    }\n    static async createController(operatingContext) {\n        const controller = new StandardController(operatingContext);\n        controller.initialize();\n        return controller;\n    }\n    trackPageVisibility() {\n        if (!this.atsAsyncMeasurement) {\n            return;\n        }\n        this.logger.info(\"Perf: Visibility change detected\");\n        this.atsAsyncMeasurement.increment({\n            visibilityChangeCount: 1,\n        });\n    }\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     */\n    async initialize() {\n        this.logger.trace(\"initialize called\");\n        if (this.initialized) {\n            this.logger.info(\"initialize has already been called, exiting early.\");\n            return;\n        }\n        const allowNativeBroker = this.config.system.allowNativeBroker;\n        const initMeasurement = this.performanceClient.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.InitializeClientApplication);\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.INITIALIZE_START);\n        if (allowNativeBroker) {\n            try {\n                this.nativeExtensionProvider =\n                    await _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_7__.NativeMessageHandler.createProvider(this.logger, this.config.system.nativeBrokerHandshakeTimeout, this.performanceClient, this.browserCrypto);\n            }\n            catch (e) {\n                this.logger.verbose(e);\n            }\n        }\n        this.initialized = true;\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.INITIALIZE_END);\n        initMeasurement.end({ allowNativeBroker, success: true });\n    }\n    // #region Redirect Flow\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    async handleRedirectPromise(hash) {\n        this.logger.verbose(\"handleRedirectPromise called\");\n        // Block token acquisition before initialize has been called\n        _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.BrowserUtils.blockAPICallsBeforeInitialize(this.initialized);\n        let foundServerResponse = hash;\n        if (this.config.auth.OIDCOptions?.serverResponseType ===\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ServerResponseType.QUERY) {\n            const url = window.location.href;\n            foundServerResponse = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.parseQueryServerResponse(url);\n        }\n        const loggedInAccounts = this.getAllAccounts();\n        if (this.isBrowserEnvironment) {\n            /**\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\n             * several times concurrently.\n             */\n            const redirectResponseKey = foundServerResponse || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n            let response = this.redirectResponse.get(redirectResponseKey);\n            if (typeof response === \"undefined\") {\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.HANDLE_REDIRECT_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect);\n                this.logger.verbose(\"handleRedirectPromise has been called for the first time, storing the promise\");\n                const request = this.browserStorage.getCachedNativeRequest();\n                let redirectResponse;\n                if (request &&\n                    _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_7__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider) &&\n                    this.nativeExtensionProvider &&\n                    !foundServerResponse) {\n                    this.logger.trace(\"handleRedirectPromise - acquiring token from native platform\");\n                    const nativeClient = new _interaction_client_NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_9__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.ApiId.handleRedirectPromise, this.performanceClient, this.nativeExtensionProvider, request.accountId, this.nativeInternalStorage, request.correlationId);\n                    redirectResponse = nativeClient.handleRedirectPromise();\n                }\n                else {\n                    this.logger.trace(\"handleRedirectPromise - acquiring token from web flow\");\n                    const correlationId = this.browserStorage.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.TemporaryCacheKeys.CORRELATION_ID, true) || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n                    const redirectClient = this.createRedirectClient(correlationId);\n                    redirectResponse =\n                        redirectClient.handleRedirectPromise(foundServerResponse);\n                }\n                response = redirectResponse\n                    .then((result) => {\n                    if (result) {\n                        // Emit login event if number of accounts change\n                        const isLoggingIn = loggedInAccounts.length <\n                            this.getAllAccounts().length;\n                        if (isLoggingIn) {\n                            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.LOGIN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect, result);\n                            this.logger.verbose(\"handleRedirectResponse returned result, login success\");\n                        }\n                        else {\n                            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect, result);\n                            this.logger.verbose(\"handleRedirectResponse returned result, acquire token success\");\n                        }\n                    }\n                    this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.HANDLE_REDIRECT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect);\n                    return result;\n                })\n                    .catch((e) => {\n                    // Emit login event if there is an account\n                    if (loggedInAccounts.length > 0) {\n                        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect, null, e);\n                    }\n                    else {\n                        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.LOGIN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect, null, e);\n                    }\n                    this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.HANDLE_REDIRECT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect);\n                    throw e;\n                });\n                this.redirectResponse.set(redirectResponseKey, response);\n            }\n            else {\n                this.logger.verbose(\"handleRedirectPromise has been called previously, returning the result from the first call\");\n            }\n            return response;\n        }\n        this.logger.verbose(\"handleRedirectPromise returns null, not browser environment\");\n        return null;\n    }\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async acquireTokenRedirect(request) {\n        // Preflight request\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"acquireTokenRedirect called\", correlationId);\n        this.preflightBrowserEnvironmentCheck(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect);\n        // If logged in, emit acquire token events\n        const isLoggedIn = this.getAllAccounts().length > 0;\n        if (isLoggedIn) {\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect, request);\n        }\n        else {\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.LOGIN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect, request);\n        }\n        let result;\n        if (this.nativeExtensionProvider && this.canUseNative(request)) {\n            const nativeClient = new _interaction_client_NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_9__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.ApiId.acquireTokenRedirect, this.performanceClient, this.nativeExtensionProvider, this.getNativeAccountId(request), this.nativeInternalStorage, request.correlationId);\n            result = nativeClient\n                .acquireTokenRedirect(request)\n                .catch((e) => {\n                if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeAuthError && e.isFatal()) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const redirectClient = this.createRedirectClient(request.correlationId);\n                    return redirectClient.acquireToken(request);\n                }\n                else if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.InteractionRequiredAuthError) {\n                    this.logger.verbose(\"acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow\");\n                    const redirectClient = this.createRedirectClient(request.correlationId);\n                    return redirectClient.acquireToken(request);\n                }\n                this.browserStorage.setInteractionInProgress(false);\n                throw e;\n            });\n        }\n        else {\n            const redirectClient = this.createRedirectClient(request.correlationId);\n            result = redirectClient.acquireToken(request);\n        }\n        return result.catch((e) => {\n            // If logged in, emit acquire token events\n            if (isLoggedIn) {\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect, null, e);\n            }\n            else {\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.LOGIN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect, null, e);\n            }\n            throw e;\n        });\n    }\n    // #endregion\n    // #region Popup Flow\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenPopup(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atPopupMeasurement = this.performanceClient.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenPopup, correlationId);\n        try {\n            this.logger.verbose(\"acquireTokenPopup called\", correlationId);\n            this.preflightBrowserEnvironmentCheck(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Popup);\n        }\n        catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n        // If logged in, emit acquire token events\n        const loggedInAccounts = this.getAllAccounts();\n        if (loggedInAccounts.length > 0) {\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Popup, request);\n        }\n        else {\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.LOGIN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Popup, request);\n        }\n        let result;\n        if (this.canUseNative(request)) {\n            result = this.acquireTokenNative(request, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.ApiId.acquireTokenPopup)\n                .then((response) => {\n                this.browserStorage.setInteractionInProgress(false);\n                atPopupMeasurement.end({\n                    success: true,\n                    isNativeBroker: true,\n                    requestId: response.requestId,\n                });\n                return response;\n            })\n                .catch((e) => {\n                if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeAuthError && e.isFatal()) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const popupClient = this.createPopupClient(request.correlationId);\n                    return popupClient.acquireToken(request);\n                }\n                else if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.InteractionRequiredAuthError) {\n                    this.logger.verbose(\"acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow\");\n                    const popupClient = this.createPopupClient(request.correlationId);\n                    return popupClient.acquireToken(request);\n                }\n                this.browserStorage.setInteractionInProgress(false);\n                throw e;\n            });\n        }\n        else {\n            const popupClient = this.createPopupClient(request.correlationId);\n            result = popupClient.acquireToken(request);\n        }\n        return result\n            .then((result) => {\n            /*\n             *  If logged in, emit acquire token events\n             */\n            const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\n            if (isLoggingIn) {\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.LOGIN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Popup, result);\n            }\n            else {\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Popup, result);\n            }\n            atPopupMeasurement.add({\n                accessTokenSize: result.accessToken.length,\n                idTokenSize: result.idToken.length,\n            });\n            atPopupMeasurement.end({\n                success: true,\n                requestId: result.requestId,\n            });\n            return result;\n        })\n            .catch((e) => {\n            if (loggedInAccounts.length > 0) {\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Popup, null, e);\n            }\n            else {\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.LOGIN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Popup, null, e);\n            }\n            atPopupMeasurement.end({\n                errorCode: e.errorCode,\n                subErrorCode: e.subError,\n                success: false,\n            });\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        });\n    }\n    trackPageVisibilityWithMeasurement() {\n        const measurement = this.ssoSilentMeasurement ||\n            this.acquireTokenByCodeAsyncMeasurement;\n        if (!measurement) {\n            return;\n        }\n        this.logger.info(\"Perf: Visibility change detected in \", measurement.event.name);\n        measurement.increment({\n            visibilityChangeCount: 1,\n        });\n    }\n    // #endregion\n    // #region Silent Flow\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async ssoSilent(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        const validRequest = {\n            ...request,\n            // will be PromptValue.NONE or PromptValue.NO_SESSION\n            prompt: request.prompt,\n            correlationId: correlationId,\n        };\n        this.preflightBrowserEnvironmentCheck(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent);\n        this.ssoSilentMeasurement = this.performanceClient.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SsoSilent, correlationId);\n        this.ssoSilentMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\n        this.logger.verbose(\"ssoSilent called\", correlationId);\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.SSO_SILENT_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent, validRequest);\n        let result;\n        if (this.canUseNative(validRequest)) {\n            result = this.acquireTokenNative(validRequest, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.ApiId.ssoSilent).catch((e) => {\n                // If native token acquisition fails for availability reasons fallback to standard flow\n                if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeAuthError && e.isFatal()) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\n                    return silentIframeClient.acquireToken(validRequest);\n                }\n                throw e;\n            });\n        }\n        else {\n            const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\n            result = silentIframeClient.acquireToken(validRequest);\n        }\n        return result\n            .then((response) => {\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.SSO_SILENT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent, response);\n            this.ssoSilentMeasurement?.add({\n                accessTokenSize: response.accessToken.length,\n                idTokenSize: response.idToken.length,\n            });\n            this.ssoSilentMeasurement?.end({\n                success: true,\n                isNativeBroker: response.fromNativeBroker,\n                requestId: response.requestId,\n            });\n            return response;\n        })\n            .catch((e) => {\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.SSO_SILENT_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent, null, e);\n            this.ssoSilentMeasurement?.end({\n                errorCode: e.errorCode,\n                subErrorCode: e.subError,\n                success: false,\n            });\n            throw e;\n        })\n            .finally(() => {\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\n        });\n    }\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenByCode(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.preflightBrowserEnvironmentCheck(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent);\n        this.logger.trace(\"acquireTokenByCode called\", correlationId);\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_BY_CODE_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent, request);\n        const atbcMeasurement = this.performanceClient.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenByCode, request.correlationId);\n        try {\n            if (request.code && request.nativeAccountId) {\n                // Throw error in case server returns both spa_code and spa_accountid in exchange for auth code.\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.BrowserAuthError.createSpaCodeAndNativeAccountIdPresentError();\n            }\n            else if (request.code) {\n                const hybridAuthCode = request.code;\n                let response = this.hybridAuthCodeResponses.get(hybridAuthCode);\n                if (!response) {\n                    this.logger.verbose(\"Initiating new acquireTokenByCode request\", correlationId);\n                    response = this.acquireTokenByCodeAsync({\n                        ...request,\n                        correlationId,\n                    })\n                        .then((result) => {\n                        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_BY_CODE_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent, result);\n                        this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                        atbcMeasurement.add({\n                            accessTokenSize: result.accessToken.length,\n                            idTokenSize: result.idToken.length,\n                        });\n                        atbcMeasurement.end({\n                            success: true,\n                            isNativeBroker: result.fromNativeBroker,\n                            requestId: result.requestId,\n                        });\n                        return result;\n                    })\n                        .catch((error) => {\n                        this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent, null, error);\n                        atbcMeasurement.end({\n                            errorCode: error.errorCode,\n                            subErrorCode: error.subError,\n                            success: false,\n                        });\n                        throw error;\n                    });\n                    this.hybridAuthCodeResponses.set(hybridAuthCode, response);\n                }\n                else {\n                    this.logger.verbose(\"Existing acquireTokenByCode request found\", request.correlationId);\n                    atbcMeasurement.discard();\n                }\n                return response;\n            }\n            else if (request.nativeAccountId) {\n                if (this.canUseNative(request, request.nativeAccountId)) {\n                    return this.acquireTokenNative(request, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.ApiId.acquireTokenByCode, request.nativeAccountId).catch((e) => {\n                        // If native token acquisition fails for availability reasons fallback to standard flow\n                        if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeAuthError && e.isFatal()) {\n                            this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        }\n                        throw e;\n                    });\n                }\n                else {\n                    throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.BrowserAuthError.createUnableToAcquireTokenFromNativePlatformError();\n                }\n            }\n            else {\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.BrowserAuthError.createAuthCodeOrNativeAccountIdRequiredError();\n            }\n        }\n        catch (e) {\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent, null, e);\n            atbcMeasurement.end({\n                errorCode: (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthError && e.errorCode) || undefined,\n                subErrorCode: (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthError && e.subError) || undefined,\n                success: false,\n            });\n            throw e;\n        }\n    }\n    /**\n     * Creates a SilentAuthCodeClient to redeem an authorization code.\n     * @param request\n     * @returns Result of the operation to redeem the authorization code\n     */\n    async acquireTokenByCodeAsync(request) {\n        this.logger.trace(\"acquireTokenByCodeAsync called\", request.correlationId);\n        this.acquireTokenByCodeAsyncMeasurement =\n            this.performanceClient.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenByCodeAsync, request.correlationId);\n        this.acquireTokenByCodeAsyncMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\n        const silentAuthCodeClient = this.createSilentAuthCodeClient(request.correlationId);\n        const silentTokenResult = await silentAuthCodeClient\n            .acquireToken(request)\n            .then((response) => {\n            this.acquireTokenByCodeAsyncMeasurement?.end({\n                success: true,\n                fromCache: response.fromCache,\n                isNativeBroker: response.fromNativeBroker,\n                requestId: response.requestId,\n            });\n            return response;\n        })\n            .catch((tokenRenewalError) => {\n            this.acquireTokenByCodeAsyncMeasurement?.end({\n                errorCode: tokenRenewalError.errorCode,\n                subErrorCode: tokenRenewalError.subError,\n                success: false,\n            });\n            throw tokenRenewalError;\n        })\n            .finally(() => {\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\n        });\n        return silentTokenResult;\n    }\n    /**\n     * Attempt to acquire an access token from the cache\n     * @param silentCacheClient SilentCacheClient\n     * @param commonRequest CommonSilentFlowRequest\n     * @param silentRequest SilentRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    async acquireTokenFromCache(silentCacheClient, commonRequest, silentRequest) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenFromCache, commonRequest.correlationId);\n        switch (silentRequest.cacheLookupPolicy) {\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheLookupPolicy.Default:\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheLookupPolicy.AccessToken:\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheLookupPolicy.AccessTokenAndRefreshToken:\n                return silentCacheClient.acquireToken(commonRequest);\n            default:\n                throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createRefreshRequiredError();\n        }\n    }\n    /**\n     * Attempt to acquire an access token via a refresh token\n     * @param commonRequest CommonSilentFlowRequest\n     * @param silentRequest SilentRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    async acquireTokenByRefreshToken(commonRequest, silentRequest) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenByRefreshToken, commonRequest.correlationId);\n        switch (silentRequest.cacheLookupPolicy) {\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheLookupPolicy.Default:\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheLookupPolicy.AccessTokenAndRefreshToken:\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheLookupPolicy.RefreshToken:\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheLookupPolicy.RefreshTokenAndNetwork:\n                const silentRefreshClient = this.createSilentRefreshClient(commonRequest.correlationId);\n                this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentRefreshClientAcquireToken, commonRequest.correlationId);\n                return silentRefreshClient.acquireToken(commonRequest);\n            default:\n                throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createRefreshRequiredError();\n        }\n    }\n    /**\n     * Attempt to acquire an access token via an iframe\n     * @param request CommonSilentFlowRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    async acquireTokenBySilentIframe(request) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenBySilentIframe, request.correlationId);\n        const silentIframeClient = this.createSilentIframeClient(request.correlationId);\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\n        return silentIframeClient.acquireToken(request);\n    }\n    // #endregion\n    // #region Logout\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    async logout(logoutRequest) {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.logger.warning(\"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\", correlationId);\n        return this.logoutRedirect({\n            correlationId,\n            ...logoutRequest,\n        });\n    }\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logoutRedirect(logoutRequest) {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.preflightBrowserEnvironmentCheck(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect);\n        const redirectClient = this.createRedirectClient(correlationId);\n        return redirectClient.logout(logoutRequest);\n    }\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest) {\n        try {\n            const correlationId = this.getRequestCorrelationId(logoutRequest);\n            this.preflightBrowserEnvironmentCheck(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Popup);\n            const popupClient = this.createPopupClient(correlationId);\n            return popupClient.logout(logoutRequest);\n        }\n        catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n    // #endregion\n    // #region Account APIs\n    /**\n     * Returns all accounts that MSAL currently has data for.\n     * (the account object is created at the time of successful login)\n     * or empty array when no accounts are found\n     * @returns Array of account objects in cache\n     */\n    getAllAccounts() {\n        this.logger.verbose(\"getAllAccounts called\");\n        return this.isBrowserEnvironment\n            ? this.browserStorage.getAllAccounts()\n            : [];\n    }\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param username\n     * @returns The account object stored in MSAL\n     */\n    getAccountByUsername(username) {\n        this.logger.trace(\"getAccountByUsername called\");\n        if (!username) {\n            this.logger.warning(\"getAccountByUsername: No username provided\");\n            return null;\n        }\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            username,\n        });\n        if (account) {\n            this.logger.verbose(\"getAccountByUsername: Account matching username found, returning\");\n            this.logger.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${username}`);\n            return account;\n        }\n        else {\n            this.logger.verbose(\"getAccountByUsername: No matching account found, returning null\");\n            return null;\n        }\n    }\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByHomeId(homeAccountId) {\n        this.logger.trace(\"getAccountByHomeId called\");\n        if (!homeAccountId) {\n            this.logger.warning(\"getAccountByHomeId: No homeAccountId provided\");\n            return null;\n        }\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            homeAccountId,\n        });\n        if (account) {\n            this.logger.verbose(\"getAccountByHomeId: Account matching homeAccountId found, returning\");\n            this.logger.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${homeAccountId}`);\n            return account;\n        }\n        else {\n            this.logger.verbose(\"getAccountByHomeId: No matching account found, returning null\");\n            return null;\n        }\n    }\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByLocalId(localAccountId) {\n        this.logger.trace(\"getAccountByLocalId called\");\n        if (!localAccountId) {\n            this.logger.warning(\"getAccountByLocalId: No localAccountId provided\");\n            return null;\n        }\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            localAccountId,\n        });\n        if (account) {\n            this.logger.verbose(\"getAccountByLocalId: Account matching localAccountId found, returning\");\n            this.logger.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${localAccountId}`);\n            return account;\n        }\n        else {\n            this.logger.verbose(\"getAccountByLocalId: No matching account found, returning null\");\n            return null;\n        }\n    }\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account) {\n        this.browserStorage.setActiveAccount(account);\n    }\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount() {\n        return this.browserStorage.getActiveAccount();\n    }\n    // #endregion\n    /**\n     * Hydrates the cache with the tokens from an AuthenticationResult\n     * @param result\n     * @param request\n     * @returns\n     */\n    async hydrateCache(result, request) {\n        this.logger.verbose(\"hydrateCache called\");\n        // Account gets saved to browser storage regardless of native or not\n        const accountEntity = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AccountEntity.createFromAccountInfo(result.account, result.cloudGraphHostName, result.msGraphHost);\n        this.browserStorage.setAccount(accountEntity);\n        if (result.fromNativeBroker) {\n            this.logger.verbose(\"Response was from native broker, storing in-memory\");\n            // Tokens from native broker are stored in-memory\n            return this.nativeInternalStorage.hydrateCache(result, request);\n        }\n        else {\n            return this.browserStorage.hydrateCache(result, request);\n        }\n    }\n    // #region Helpers\n    /**\n     * Helper to validate app environment before making an auth request\n     *\n     * @protected\n     * @param {InteractionType} interactionType What kind of interaction is being used\n     * @param {boolean} [isAppEmbedded=false] Whether to set interaction in progress temp cache flag\n     */\n    preflightBrowserEnvironmentCheck(interactionType, isAppEmbedded = false) {\n        this.logger.verbose(\"preflightBrowserEnvironmentCheck started\");\n        // Block request if not in browser environment\n        _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.BrowserUtils.blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        // Block redirects if in an iframe\n        _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.BrowserUtils.blockRedirectInIframe(interactionType, this.config.system.allowRedirectInIframe);\n        // Block auth requests inside a hidden iframe\n        _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.BrowserUtils.blockReloadInHiddenIframes();\n        // Block redirectUri opened in a popup from calling MSAL APIs\n        _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.BrowserUtils.blockAcquireTokenInPopups();\n        // Block token acquisition before initialize has been called\n        _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.BrowserUtils.blockAPICallsBeforeInitialize(this.initialized);\n        // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\n        if (interactionType === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect &&\n            this.config.cache.cacheLocation ===\n                _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserCacheLocation.MemoryStorage &&\n            !this.config.cache.storeAuthStateInCookie) {\n            throw _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_12__.BrowserConfigurationAuthError.createInMemoryRedirectUnavailableError();\n        }\n        if (interactionType === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Redirect ||\n            interactionType === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Popup) {\n            this.preflightInteractiveRequest(!isAppEmbedded);\n        }\n    }\n    /**\n     * Preflight check for interactive requests\n     *\n     * @protected\n     * @param {boolean} setInteractionInProgress Whether to set interaction in progress temp cache flag\n     */\n    preflightInteractiveRequest(setInteractionInProgress) {\n        this.logger.verbose(\"preflightInteractiveRequest called, validating app environment\");\n        // block the reload if it occurred inside a hidden iframe\n        _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.BrowserUtils.blockReloadInHiddenIframes();\n        // Set interaction in progress temporary cache or throw if alread set.\n        if (setInteractionInProgress) {\n            this.browserStorage.setInteractionInProgress(true);\n        }\n    }\n    /**\n     * Acquire a token from native device (e.g. WAM)\n     * @param request\n     */\n    async acquireTokenNative(request, apiId, accountId) {\n        this.logger.trace(\"acquireTokenNative called\");\n        if (!this.nativeExtensionProvider) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.BrowserAuthError.createNativeConnectionNotEstablishedError();\n        }\n        const nativeClient = new _interaction_client_NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_9__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, apiId, this.performanceClient, this.nativeExtensionProvider, accountId || this.getNativeAccountId(request), this.nativeInternalStorage, request.correlationId);\n        return nativeClient.acquireToken(request);\n    }\n    /**\n     * Returns boolean indicating if this request can use the native broker\n     * @param request\n     */\n    canUseNative(request, accountId) {\n        this.logger.trace(\"canUseNative called\");\n        if (!_broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_7__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider, request.authenticationScheme)) {\n            this.logger.trace(\"canUseNative: isNativeAvailable returned false, returning false\");\n            return false;\n        }\n        if (request.prompt) {\n            switch (request.prompt) {\n                case _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PromptValue.NONE:\n                case _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PromptValue.CONSENT:\n                case _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PromptValue.LOGIN:\n                    this.logger.trace(\"canUseNative: prompt is compatible with native flow\");\n                    break;\n                default:\n                    this.logger.trace(`canUseNative: prompt = ${request.prompt} is not compatible with native flow, returning false`);\n                    return false;\n            }\n        }\n        if (!accountId && !this.getNativeAccountId(request)) {\n            this.logger.trace(\"canUseNative: nativeAccountId is not available, returning false\");\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Get the native accountId from the account\n     * @param request\n     * @returns\n     */\n    getNativeAccountId(request) {\n        const account = request.account ||\n            this.browserStorage.getAccountInfoByHints(request.loginHint, request.sid) ||\n            this.getActiveAccount();\n        return (account && account.nativeAccountId) || \"\";\n    }\n    /**\n     * Returns new instance of the Popup Interaction Client\n     * @param correlationId\n     */\n    createPopupClient(correlationId) {\n        return new _interaction_client_PopupClient_mjs__WEBPACK_IMPORTED_MODULE_13__.PopupClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Redirect Interaction Client\n     * @param correlationId\n     */\n    createRedirectClient(correlationId) {\n        return new _interaction_client_RedirectClient_mjs__WEBPACK_IMPORTED_MODULE_14__.RedirectClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Silent Iframe Interaction Client\n     * @param correlationId\n     */\n    createSilentIframeClient(correlationId) {\n        return new _interaction_client_SilentIframeClient_mjs__WEBPACK_IMPORTED_MODULE_15__.SilentIframeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.ApiId.ssoSilent, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Silent Cache Interaction Client\n     */\n    createSilentCacheClient(correlationId) {\n        return new _interaction_client_SilentCacheClient_mjs__WEBPACK_IMPORTED_MODULE_16__.SilentCacheClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Silent Refresh Interaction Client\n     */\n    createSilentRefreshClient(correlationId) {\n        return new _interaction_client_SilentRefreshClient_mjs__WEBPACK_IMPORTED_MODULE_17__.SilentRefreshClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Silent AuthCode Interaction Client\n     */\n    createSilentAuthCodeClient(correlationId) {\n        return new _interaction_client_SilentAuthCodeClient_mjs__WEBPACK_IMPORTED_MODULE_18__.SilentAuthCodeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.ApiId.acquireTokenByCode, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback) {\n        return this.eventHandler.addEventCallback(callback);\n    }\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId) {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback) {\n        return this.performanceClient.addPerformanceCallback(callback);\n    }\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId) {\n        return this.performanceClient.removePerformanceCallback(callbackId);\n    }\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents() {\n        this.eventHandler.enableAccountStorageEvents();\n    }\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents() {\n        this.eventHandler.disableAccountStorageEvents();\n    }\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache() {\n        return this.tokenCache;\n    }\n    /**\n     * Returns the logger instance\n     */\n    getLogger() {\n        return this.logger;\n    }\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger) {\n        this.logger = logger;\n    }\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku, version) {\n        // Validate the SKU passed in is one we expect\n        this.browserStorage.setWrapperMetadata(sku, version);\n    }\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient) {\n        this.navigationClient = navigationClient;\n    }\n    /**\n     * Returns the configuration object\n     */\n    getConfiguration() {\n        return this.config;\n    }\n    /**\n     * Returns the performance client\n     */\n    getPerformanceClient() {\n        return this.performanceClient;\n    }\n    /**\n     * Returns the browser storage\n     */\n    getBrowserStorage() {\n        return this.browserStorage;\n    }\n    /**\n     * Returns the native internal storage\n     */\n    getNativeInternalStorage() {\n        return this.nativeInternalStorage;\n    }\n    /**\n     * Returns the instance of interface for crypto functions\n     */\n    getBrowserCrypto() {\n        return this.browserCrypto;\n    }\n    /**\n     * Returns the browser env indicator\n     */\n    isBrowserEnv() {\n        return this.isBrowserEnvironment;\n    }\n    /**\n     * Returns the native message handler\n     */\n    getNativeExtensionProvider() {\n        return this.nativeExtensionProvider;\n    }\n    /**\n     * Sets the native message handler\n     * @param provider {?NativeMessageHandler}\n     */\n    setNativeExtensionProvider(provider) {\n        this.nativeExtensionProvider = provider;\n    }\n    /**\n     * Returns the event handler\n     */\n    getEventHandler() {\n        return this.eventHandler;\n    }\n    /**\n     * Returns the navigation client\n     */\n    getNavigationClient() {\n        return this.navigationClient;\n    }\n    /**\n     * Returns the redirect response map\n     */\n    getRedirectResponse() {\n        return this.redirectResponse;\n    }\n    /**\n     * Generates a correlation id for a request if none is provided.\n     *\n     * @protected\n     * @param {?Partial<BaseAuthRequest>} [request]\n     * @returns {string}\n     */\n    getRequestCorrelationId(request) {\n        if (request?.correlationId) {\n            return request.correlationId;\n        }\n        if (this.isBrowserEnvironment) {\n            return this.browserCrypto.createNewGuid();\n        }\n        /*\n         * Included for fallback for non-browser environments,\n         * and to ensure this method always returns a string.\n         */\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n    }\n    // #endregion\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async loginRedirect(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginRedirect called\", correlationId);\n        return this.acquireTokenRedirect({\n            correlationId,\n            ...(request || _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_REQUEST),\n        });\n    }\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginPopup called\", correlationId);\n        return this.acquireTokenPopup({\n            correlationId,\n            ...(request || _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_REQUEST),\n        });\n    }\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     */\n    async acquireTokenSilent(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atsMeasurement = this.performanceClient.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenSilent, correlationId);\n        atsMeasurement.add({\n            cacheLookupPolicy: request.cacheLookupPolicy,\n        });\n        this.preflightBrowserEnvironmentCheck(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent);\n        this.logger.verbose(\"acquireTokenSilent called\", correlationId);\n        const account = request.account || this.getActiveAccount();\n        if (!account) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.BrowserAuthError.createNoAccountError();\n        }\n        const thumbprint = {\n            clientId: this.config.auth.clientId,\n            authority: request.authority || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n            scopes: request.scopes,\n            homeAccountIdentifier: account.homeAccountId,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        const silentRequestKey = JSON.stringify(thumbprint);\n        const cachedResponse = this.activeSilentTokenRequests.get(silentRequestKey);\n        if (typeof cachedResponse === \"undefined\") {\n            this.logger.verbose(\"acquireTokenSilent called for the first time, storing active request\", correlationId);\n            this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenSilentAsync, correlationId);\n            const response = this.acquireTokenSilentAsync({\n                ...request,\n                correlationId,\n            }, account)\n                .then((result) => {\n                this.activeSilentTokenRequests.delete(silentRequestKey);\n                atsMeasurement.add({\n                    accessTokenSize: result.accessToken.length,\n                    idTokenSize: result.idToken.length,\n                });\n                atsMeasurement.end({\n                    success: true,\n                    fromCache: result.fromCache,\n                    isNativeBroker: result.fromNativeBroker,\n                    cacheLookupPolicy: request.cacheLookupPolicy,\n                    requestId: result.requestId,\n                });\n                return result;\n            })\n                .catch((error) => {\n                this.activeSilentTokenRequests.delete(silentRequestKey);\n                atsMeasurement.end({\n                    errorCode: error.errorCode,\n                    subErrorCode: error.subError,\n                    success: false,\n                });\n                throw error;\n            });\n            this.activeSilentTokenRequests.set(silentRequestKey, response);\n            return response;\n        }\n        else {\n            this.logger.verbose(\"acquireTokenSilent has been called previously, returning the result from the first call\", correlationId);\n            // Discard measurements for memoized calls, as they are usually only a couple of ms and will artificially deflate metrics\n            atsMeasurement.discard();\n            return cachedResponse;\n        }\n    }\n    /**\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\n     * @param {@link (SilentRequest:type)}\n     * @param {@link (AccountInfo:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse}\n     */\n    async acquireTokenSilentAsync(request, account) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenSilentAsync, request.correlationId);\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent, request);\n        this.atsAsyncMeasurement = this.performanceClient.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenSilentAsync, request.correlationId);\n        this.atsAsyncMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibility);\n        let result;\n        if (_broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_7__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider, request.authenticationScheme) &&\n            account.nativeAccountId) {\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from native platform\");\n            const silentRequest = {\n                ...request,\n                account,\n            };\n            result = this.acquireTokenNative(silentRequest, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.ApiId.acquireTokenSilent_silentFlow).catch(async (e) => {\n                // If native token acquisition fails for availability reasons fallback to web flow\n                if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeAuthError && e.isFatal()) {\n                    this.logger.verbose(\"acquireTokenSilent - native platform unavailable, falling back to web flow\");\n                    this.nativeExtensionProvider = undefined; // Prevent future requests from continuing to attempt\n                    // Cache will not contain tokens, given that previous WAM requests succeeded. Skip cache and RT renewal and go straight to iframe renewal\n                    const silentIframeClient = this.createSilentIframeClient(request.correlationId);\n                    return silentIframeClient.acquireToken(request);\n                }\n                throw e;\n            });\n        }\n        else {\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from web flow\");\n            const silentCacheClient = this.createSilentCacheClient(request.correlationId);\n            this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.InitializeSilentRequest, request.correlationId);\n            const silentRequest = await silentCacheClient.initializeSilentRequest(request, account);\n            const requestWithCLP = {\n                ...request,\n                // set the request's CacheLookupPolicy to Default if it was not optionally passed in\n                cacheLookupPolicy: request.cacheLookupPolicy || _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheLookupPolicy.Default,\n            };\n            this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenFromCache, silentRequest.correlationId);\n            result = this.acquireTokenFromCache(silentCacheClient, silentRequest, requestWithCLP).catch((cacheError) => {\n                if (requestWithCLP.cacheLookupPolicy ===\n                    _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheLookupPolicy.AccessToken) {\n                    throw cacheError;\n                }\n                // block the reload if it occurred inside a hidden iframe\n                _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.BrowserUtils.blockReloadInHiddenIframes();\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_NETWORK_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent, silentRequest);\n                this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenByRefreshToken, silentRequest.correlationId);\n                return this.acquireTokenByRefreshToken(silentRequest, requestWithCLP).catch((refreshTokenError) => {\n                    const isServerError = refreshTokenError instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ServerError;\n                    const isInteractionRequiredError = refreshTokenError instanceof\n                        _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.InteractionRequiredAuthError;\n                    const isInvalidGrantError = refreshTokenError.errorCode ===\n                        _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserConstants.INVALID_GRANT_ERROR;\n                    if ((!isServerError ||\n                        !isInvalidGrantError ||\n                        isInteractionRequiredError ||\n                        requestWithCLP.cacheLookupPolicy ===\n                            _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheLookupPolicy.AccessTokenAndRefreshToken ||\n                        requestWithCLP.cacheLookupPolicy ===\n                            _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheLookupPolicy.RefreshToken) &&\n                        requestWithCLP.cacheLookupPolicy !==\n                            _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheLookupPolicy.Skip) {\n                        throw refreshTokenError;\n                    }\n                    this.logger.verbose(\"Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.\", request.correlationId);\n                    this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenBySilentIframe, silentRequest.correlationId);\n                    return this.acquireTokenBySilentIframe(silentRequest);\n                });\n            });\n        }\n        return result\n            .then((response) => {\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent, response);\n            this.atsAsyncMeasurement?.end({\n                success: true,\n                fromCache: response.fromCache,\n                isNativeBroker: response.fromNativeBroker,\n                requestId: response.requestId,\n            });\n            return response;\n        })\n            .catch((tokenRenewalError) => {\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent, null, tokenRenewalError);\n            this.atsAsyncMeasurement?.end({\n                errorCode: tokenRenewalError.errorCode,\n                subErrorCode: tokenRenewalError.subError,\n                success: false,\n            });\n            throw tokenRenewalError;\n        })\n            .finally(() => {\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibility);\n        });\n    }\n}\n\n\n//# sourceMappingURL=StandardController.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserCrypto: function() { return /* binding */ BrowserCrypto; }\n/* harmony export */ });\n/* harmony import */ var _utils_BrowserStringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserStringUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserStringUtils.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _ModernBrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ModernBrowserCrypto.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/ModernBrowserCrypto.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\n */\n// RSA KeyGen Algorithm\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\n// SHA-256 hashing algorithm\nconst S256_HASH_ALG = \"SHA-256\";\n// MOD length for PoP tokens\nconst MODULUS_LENGTH = 2048;\n// Public Exponent\nconst PUBLIC_EXPONENT = new Uint8Array([0x01, 0x00, 0x01]);\n/**\n * This class implements functions used by the browser library to perform cryptography operations such as\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\n */\nclass BrowserCrypto {\n    constructor(logger) {\n        this.logger = logger;\n        if (this.hasBrowserCrypto()) {\n            // Use standard modern web crypto if available\n            this.logger.verbose(\"BrowserCrypto: modern crypto interface available\");\n            this.subtleCrypto = new _ModernBrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.ModernBrowserCrypto();\n        }\n        else {\n            this.logger.error(\"BrowserCrypto: crypto interface is unavailable\");\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createCryptoNotAvailableError(\"Browser crypto interface is not available.\");\n        }\n        this.keygenAlgorithmOptions = {\n            name: PKCS1_V15_KEYGEN_ALG,\n            hash: S256_HASH_ALG,\n            modulusLength: MODULUS_LENGTH,\n            publicExponent: PUBLIC_EXPONENT,\n        };\n    }\n    /**\n     * Check whether browser crypto is available.\n     */\n    hasBrowserCrypto() {\n        return \"crypto\" in window;\n    }\n    /**\n     * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\n     * @param dataString\n     */\n    async sha256Digest(dataString) {\n        const data = _utils_BrowserStringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserStringUtils.stringToUtf8Arr(dataString);\n        // MSR Crypto wants object with name property, instead of string\n        return this.subtleCrypto.digest({ name: S256_HASH_ALG }, data);\n    }\n    /**\n     * Populates buffer with cryptographically random values.\n     * @param dataBuffer\n     */\n    getRandomValues(dataBuffer) {\n        return this.subtleCrypto.getRandomValues(dataBuffer);\n    }\n    /**\n     * Generates a keypair based on current keygen algorithm config.\n     * @param extractable\n     * @param usages\n     */\n    async generateKeyPair(extractable, usages) {\n        return this.subtleCrypto.generateKey(this.keygenAlgorithmOptions, extractable, usages);\n    }\n    /**\n     * Export key as Json Web Key (JWK)\n     * @param key\n     */\n    async exportJwk(key) {\n        return this.subtleCrypto.exportKey(key);\n    }\n    /**\n     * Imports key as Json Web Key (JWK), can set extractable and usages.\n     * @param key\n     * @param extractable\n     * @param usages\n     */\n    async importJwk(key, extractable, usages) {\n        return this.subtleCrypto.importKey(key, this.keygenAlgorithmOptions, extractable, usages);\n    }\n    /**\n     * Signs given data with given key\n     * @param key\n     * @param data\n     */\n    async sign(key, data) {\n        return this.subtleCrypto.sign(this.keygenAlgorithmOptions, key, data);\n    }\n}\n\n\n//# sourceMappingURL=BrowserCrypto.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NyeXB0by9Ccm93c2VyQ3J5cHRvLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDYTtBQUN3RDtBQUNKO0FBQ0Q7O0FBRWhFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLHlFQUFtQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUVBQWdCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDZFQUFrQjtBQUN2QztBQUNBLDBDQUEwQyxxQkFBcUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9jcnlwdG8vQnJvd3NlckNyeXB0by5tanM/NjZiNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQnJvd3NlclN0cmluZ1V0aWxzIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlclN0cmluZ1V0aWxzLm1qcyc7XG5pbXBvcnQgeyBCcm93c2VyQXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgTW9kZXJuQnJvd3NlckNyeXB0byB9IGZyb20gJy4vTW9kZXJuQnJvd3NlckNyeXB0by5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogU2VlIGhlcmUgZm9yIG1vcmUgaW5mbyBvbiBSc2FIYXNoZWRLZXlHZW5QYXJhbXM6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9Sc2FIYXNoZWRLZXlHZW5QYXJhbXNcbiAqL1xuLy8gUlNBIEtleUdlbiBBbGdvcml0aG1cbmNvbnN0IFBLQ1MxX1YxNV9LRVlHRU5fQUxHID0gXCJSU0FTU0EtUEtDUzEtdjFfNVwiO1xuLy8gU0hBLTI1NiBoYXNoaW5nIGFsZ29yaXRobVxuY29uc3QgUzI1Nl9IQVNIX0FMRyA9IFwiU0hBLTI1NlwiO1xuLy8gTU9EIGxlbmd0aCBmb3IgUG9QIHRva2Vuc1xuY29uc3QgTU9EVUxVU19MRU5HVEggPSAyMDQ4O1xuLy8gUHVibGljIEV4cG9uZW50XG5jb25zdCBQVUJMSUNfRVhQT05FTlQgPSBuZXcgVWludDhBcnJheShbMHgwMSwgMHgwMCwgMHgwMV0pO1xuLyoqXG4gKiBUaGlzIGNsYXNzIGltcGxlbWVudHMgZnVuY3Rpb25zIHVzZWQgYnkgdGhlIGJyb3dzZXIgbGlicmFyeSB0byBwZXJmb3JtIGNyeXB0b2dyYXBoeSBvcGVyYXRpb25zIHN1Y2ggYXNcbiAqIGhhc2hpbmcgYW5kIGVuY29kaW5nLiBJdCBhbHNvIGhhcyBoZWxwZXIgZnVuY3Rpb25zIHRvIHZhbGlkYXRlIHRoZSBhdmFpbGFiaWxpdHkgb2Ygc3BlY2lmaWMgQVBJcy5cbiAqL1xuY2xhc3MgQnJvd3NlckNyeXB0byB7XG4gICAgY29uc3RydWN0b3IobG9nZ2VyKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyO1xuICAgICAgICBpZiAodGhpcy5oYXNCcm93c2VyQ3J5cHRvKCkpIHtcbiAgICAgICAgICAgIC8vIFVzZSBzdGFuZGFyZCBtb2Rlcm4gd2ViIGNyeXB0byBpZiBhdmFpbGFibGVcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJCcm93c2VyQ3J5cHRvOiBtb2Rlcm4gY3J5cHRvIGludGVyZmFjZSBhdmFpbGFibGVcIik7XG4gICAgICAgICAgICB0aGlzLnN1YnRsZUNyeXB0byA9IG5ldyBNb2Rlcm5Ccm93c2VyQ3J5cHRvKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmxvZ2dlci5lcnJvcihcIkJyb3dzZXJDcnlwdG86IGNyeXB0byBpbnRlcmZhY2UgaXMgdW5hdmFpbGFibGVcIik7XG4gICAgICAgICAgICB0aHJvdyBCcm93c2VyQXV0aEVycm9yLmNyZWF0ZUNyeXB0b05vdEF2YWlsYWJsZUVycm9yKFwiQnJvd3NlciBjcnlwdG8gaW50ZXJmYWNlIGlzIG5vdCBhdmFpbGFibGUuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMua2V5Z2VuQWxnb3JpdGhtT3B0aW9ucyA9IHtcbiAgICAgICAgICAgIG5hbWU6IFBLQ1MxX1YxNV9LRVlHRU5fQUxHLFxuICAgICAgICAgICAgaGFzaDogUzI1Nl9IQVNIX0FMRyxcbiAgICAgICAgICAgIG1vZHVsdXNMZW5ndGg6IE1PRFVMVVNfTEVOR1RILFxuICAgICAgICAgICAgcHVibGljRXhwb25lbnQ6IFBVQkxJQ19FWFBPTkVOVCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hlY2sgd2hldGhlciBicm93c2VyIGNyeXB0byBpcyBhdmFpbGFibGUuXG4gICAgICovXG4gICAgaGFzQnJvd3NlckNyeXB0bygpIHtcbiAgICAgICAgcmV0dXJuIFwiY3J5cHRvXCIgaW4gd2luZG93O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgc2hhLTI1NiBoYXNoIG9mIHRoZSBnaXZlbiBkYXRhU3RyaW5nIGFzIGFuIEFycmF5QnVmZmVyLlxuICAgICAqIEBwYXJhbSBkYXRhU3RyaW5nXG4gICAgICovXG4gICAgYXN5bmMgc2hhMjU2RGlnZXN0KGRhdGFTdHJpbmcpIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IEJyb3dzZXJTdHJpbmdVdGlscy5zdHJpbmdUb1V0ZjhBcnIoZGF0YVN0cmluZyk7XG4gICAgICAgIC8vIE1TUiBDcnlwdG8gd2FudHMgb2JqZWN0IHdpdGggbmFtZSBwcm9wZXJ0eSwgaW5zdGVhZCBvZiBzdHJpbmdcbiAgICAgICAgcmV0dXJuIHRoaXMuc3VidGxlQ3J5cHRvLmRpZ2VzdCh7IG5hbWU6IFMyNTZfSEFTSF9BTEcgfSwgZGF0YSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBvcHVsYXRlcyBidWZmZXIgd2l0aCBjcnlwdG9ncmFwaGljYWxseSByYW5kb20gdmFsdWVzLlxuICAgICAqIEBwYXJhbSBkYXRhQnVmZmVyXG4gICAgICovXG4gICAgZ2V0UmFuZG9tVmFsdWVzKGRhdGFCdWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3VidGxlQ3J5cHRvLmdldFJhbmRvbVZhbHVlcyhkYXRhQnVmZmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGEga2V5cGFpciBiYXNlZCBvbiBjdXJyZW50IGtleWdlbiBhbGdvcml0aG0gY29uZmlnLlxuICAgICAqIEBwYXJhbSBleHRyYWN0YWJsZVxuICAgICAqIEBwYXJhbSB1c2FnZXNcbiAgICAgKi9cbiAgICBhc3luYyBnZW5lcmF0ZUtleVBhaXIoZXh0cmFjdGFibGUsIHVzYWdlcykge1xuICAgICAgICByZXR1cm4gdGhpcy5zdWJ0bGVDcnlwdG8uZ2VuZXJhdGVLZXkodGhpcy5rZXlnZW5BbGdvcml0aG1PcHRpb25zLCBleHRyYWN0YWJsZSwgdXNhZ2VzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRXhwb3J0IGtleSBhcyBKc29uIFdlYiBLZXkgKEpXSylcbiAgICAgKiBAcGFyYW0ga2V5XG4gICAgICovXG4gICAgYXN5bmMgZXhwb3J0SndrKGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdWJ0bGVDcnlwdG8uZXhwb3J0S2V5KGtleSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEltcG9ydHMga2V5IGFzIEpzb24gV2ViIEtleSAoSldLKSwgY2FuIHNldCBleHRyYWN0YWJsZSBhbmQgdXNhZ2VzLlxuICAgICAqIEBwYXJhbSBrZXlcbiAgICAgKiBAcGFyYW0gZXh0cmFjdGFibGVcbiAgICAgKiBAcGFyYW0gdXNhZ2VzXG4gICAgICovXG4gICAgYXN5bmMgaW1wb3J0SndrKGtleSwgZXh0cmFjdGFibGUsIHVzYWdlcykge1xuICAgICAgICByZXR1cm4gdGhpcy5zdWJ0bGVDcnlwdG8uaW1wb3J0S2V5KGtleSwgdGhpcy5rZXlnZW5BbGdvcml0aG1PcHRpb25zLCBleHRyYWN0YWJsZSwgdXNhZ2VzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2lnbnMgZ2l2ZW4gZGF0YSB3aXRoIGdpdmVuIGtleVxuICAgICAqIEBwYXJhbSBrZXlcbiAgICAgKiBAcGFyYW0gZGF0YVxuICAgICAqL1xuICAgIGFzeW5jIHNpZ24oa2V5LCBkYXRhKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN1YnRsZUNyeXB0by5zaWduKHRoaXMua2V5Z2VuQWxnb3JpdGhtT3B0aW9ucywga2V5LCBkYXRhKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJDcnlwdG8gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJyb3dzZXJDcnlwdG8ubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CryptoOps: function() { return /* binding */ CryptoOps; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _GuidGenerator_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GuidGenerator.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/GuidGenerator.mjs\");\n/* harmony import */ var _encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encode/Base64Encode.mjs */ \"./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs\");\n/* harmony import */ var _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encode/Base64Decode.mjs */ \"./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs\");\n/* harmony import */ var _PkceGenerator_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PkceGenerator.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/PkceGenerator.mjs\");\n/* harmony import */ var _BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BrowserCrypto.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _utils_BrowserStringUtils_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/BrowserStringUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserStringUtils.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _cache_CryptoKeyStore_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cache/CryptoKeyStore.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/CryptoKeyStore.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\n */\nclass CryptoOps {\n    constructor(logger, performanceClient) {\n        this.logger = logger;\n        // Browser crypto needs to be validated first before any other classes can be set.\n        this.browserCrypto = new _BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserCrypto(this.logger);\n        this.b64Encode = new _encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_1__.Base64Encode();\n        this.b64Decode = new _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_2__.Base64Decode();\n        this.guidGenerator = new _GuidGenerator_mjs__WEBPACK_IMPORTED_MODULE_3__.GuidGenerator(this.browserCrypto);\n        this.pkceGenerator = new _PkceGenerator_mjs__WEBPACK_IMPORTED_MODULE_4__.PkceGenerator(this.browserCrypto);\n        this.cache = new _cache_CryptoKeyStore_mjs__WEBPACK_IMPORTED_MODULE_5__.CryptoKeyStore(this.logger);\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Creates a new random GUID - used to populate state and nonce.\n     * @returns string (GUID)\n     */\n    createNewGuid() {\n        return this.guidGenerator.generateGuid();\n    }\n    /**\n     * Encodes input string to base64.\n     * @param input\n     */\n    base64Encode(input) {\n        return this.b64Encode.encode(input);\n    }\n    /**\n     * Decodes input string from base64.\n     * @param input\n     */\n    base64Decode(input) {\n        return this.b64Decode.decode(input);\n    }\n    /**\n     * Generates PKCE codes used in Authorization Code Flow.\n     */\n    async generatePkceCodes() {\n        return this.pkceGenerator.generateCodes();\n    }\n    /**\n     * Generates a keypair, stores it and returns a thumbprint\n     * @param request\n     */\n    async getPublicKeyThumbprint(request) {\n        const publicKeyThumbMeasurement = this.performanceClient?.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.CryptoOptsGetPublicKeyThumbprint, request.correlationId);\n        // Generate Keypair\n        const keyPair = await this.browserCrypto.generateKeyPair(CryptoOps.EXTRACTABLE, CryptoOps.POP_KEY_USAGES);\n        // Generate Thumbprint for Public Key\n        const publicKeyJwk = await this.browserCrypto.exportJwk(keyPair.publicKey);\n        const pubKeyThumprintObj = {\n            e: publicKeyJwk.e,\n            kty: publicKeyJwk.kty,\n            n: publicKeyJwk.n,\n        };\n        const publicJwkString = _utils_BrowserStringUtils_mjs__WEBPACK_IMPORTED_MODULE_7__.BrowserStringUtils.getSortedObjectString(pubKeyThumprintObj);\n        const publicJwkHash = await this.hashString(publicJwkString);\n        // Generate Thumbprint for Private Key\n        const privateKeyJwk = await this.browserCrypto.exportJwk(keyPair.privateKey);\n        // Re-import private key to make it unextractable\n        const unextractablePrivateKey = await this.browserCrypto.importJwk(privateKeyJwk, false, [\"sign\"]);\n        // Store Keypair data in keystore\n        await this.cache.asymmetricKeys.setItem(publicJwkHash, {\n            privateKey: unextractablePrivateKey,\n            publicKey: keyPair.publicKey,\n            requestMethod: request.resourceRequestMethod,\n            requestUri: request.resourceRequestUri,\n        });\n        if (publicKeyThumbMeasurement) {\n            publicKeyThumbMeasurement.end({\n                success: true,\n            });\n        }\n        return publicJwkHash;\n    }\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid\n     */\n    async removeTokenBindingKey(kid) {\n        await this.cache.asymmetricKeys.removeItem(kid);\n        const keyFound = await this.cache.asymmetricKeys.containsKey(kid);\n        return !keyFound;\n    }\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    async clearKeystore() {\n        return await this.cache.clear();\n    }\n    /**\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\n     * @param payload\n     * @param kid\n     */\n    async signJwt(payload, kid, correlationId) {\n        const signJwtMeasurement = this.performanceClient?.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.CryptoOptsSignJwt, correlationId);\n        const cachedKeyPair = await this.cache.asymmetricKeys.getItem(kid);\n        if (!cachedKeyPair) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.BrowserAuthError.createSigningKeyNotFoundInStorageError(kid);\n        }\n        // Get public key as JWK\n        const publicKeyJwk = await this.browserCrypto.exportJwk(cachedKeyPair.publicKey);\n        const publicKeyJwkString = _utils_BrowserStringUtils_mjs__WEBPACK_IMPORTED_MODULE_7__.BrowserStringUtils.getSortedObjectString(publicKeyJwk);\n        // Base64URL encode public key thumbprint with keyId only: BASE64URL({ kid: \"FULL_PUBLIC_KEY_HASH\" })\n        const encodedKeyIdThumbprint = this.b64Encode.urlEncode(JSON.stringify({ kid: kid }));\n        // Generate header\n        const shrHeader = _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.JoseHeader.getShrHeaderString({\n            kid: encodedKeyIdThumbprint,\n            alg: publicKeyJwk.alg,\n        });\n        const encodedShrHeader = this.b64Encode.urlEncode(shrHeader);\n        // Generate payload\n        payload.cnf = {\n            jwk: JSON.parse(publicKeyJwkString),\n        };\n        const encodedPayload = this.b64Encode.urlEncode(JSON.stringify(payload));\n        // Form token string\n        const tokenString = `${encodedShrHeader}.${encodedPayload}`;\n        // Sign token\n        const tokenBuffer = _utils_BrowserStringUtils_mjs__WEBPACK_IMPORTED_MODULE_7__.BrowserStringUtils.stringToUtf8Arr(tokenString);\n        const signatureBuffer = await this.browserCrypto.sign(cachedKeyPair.privateKey, tokenBuffer);\n        const encodedSignature = this.b64Encode.urlEncodeArr(new Uint8Array(signatureBuffer));\n        const signedJwt = `${tokenString}.${encodedSignature}`;\n        if (signJwtMeasurement) {\n            signJwtMeasurement.end({\n                success: true,\n            });\n        }\n        return signedJwt;\n    }\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    async hashString(plainText) {\n        const hashBuffer = await this.browserCrypto.sha256Digest(plainText);\n        const hashBytes = new Uint8Array(hashBuffer);\n        return this.b64Encode.urlEncodeArr(hashBytes);\n    }\n}\nCryptoOps.POP_KEY_USAGES = [\"sign\", \"verify\"];\nCryptoOps.EXTRACTABLE = true;\n\n\n//# sourceMappingURL=CryptoOps.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/crypto/GuidGenerator.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/crypto/GuidGenerator.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GuidGenerator: function() { return /* binding */ GuidGenerator; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/MathUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/MathUtils.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass GuidGenerator {\n    constructor(cryptoObj) {\n        this.cryptoObj = cryptoObj;\n    }\n    /*\n     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\n     * pseudo-random numbers.\n     * The algorithm is as follows:\n     *     Set the two most significant bits (bits 6 and 7) of the\n     *        clock_seq_hi_and_reserved to zero and one, respectively.\n     *     Set the four most significant bits (bits 12 through 15) of the\n     *        time_hi_and_version field to the 4-bit version number from\n     *        Section 4.1.3. Version4\n     *     Set all the other bits to randomly (or pseudo-randomly) chosen\n     *     values.\n     * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\n     * time-low               = 4hexOctet\n     * time-mid               = 2hexOctet\n     * time-high-and-version  = 2hexOctet\n     * clock-seq-and-reserved = hexOctet:\n     * clock-seq-low          = hexOctet\n     * node                   = 6hexOctet\n     * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\n     * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\n     * y values are 8, 9, A, B\n     */\n    generateGuid() {\n        try {\n            const buffer = new Uint8Array(16);\n            this.cryptoObj.getRandomValues(buffer);\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\n            return (_utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[0]) +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[1]) +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[2]) +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[3]) +\n                \"-\" +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[4]) +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[5]) +\n                \"-\" +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[6]) +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[7]) +\n                \"-\" +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[8]) +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[9]) +\n                \"-\" +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[10]) +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[11]) +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[12]) +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[13]) +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[14]) +\n                _utils_MathUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.MathUtils.decimalToHex(buffer[15]));\n        }\n        catch (err) {\n            const guidHolder = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\n            const hex = \"0123456789abcdef\";\n            let r = 0;\n            let guidResponse = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n            for (let i = 0; i < 36; i++) {\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\n                    // each x and y needs to be random\n                    r = (Math.random() * 16) | 0;\n                }\n                if (guidHolder[i] === \"x\") {\n                    guidResponse += hex[r];\n                }\n                else if (guidHolder[i] === \"y\") {\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\n                    r |= 0x8; // set pos 3 to 1 as 1???\n                    guidResponse += hex[r];\n                }\n                else {\n                    guidResponse += guidHolder[i];\n                }\n            }\n            return guidResponse;\n        }\n    }\n    /**\n     * verifies if a string is  GUID\n     * @param guid\n     */\n    isGuid(guid) {\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n        return regexGuid.test(guid);\n    }\n}\n\n\n//# sourceMappingURL=GuidGenerator.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NyeXB0by9HdWlkR2VuZXJhdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQ2tDO0FBQ0k7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0IsK0JBQStCO0FBQy9CO0FBQ0EsK0JBQStCO0FBQy9CLCtCQUErQjtBQUMvQixvQkFBb0IsMkRBQVM7QUFDN0IsZ0JBQWdCLDJEQUFTO0FBQ3pCLGdCQUFnQiwyREFBUztBQUN6QixnQkFBZ0IsMkRBQVM7QUFDekI7QUFDQSxnQkFBZ0IsMkRBQVM7QUFDekIsZ0JBQWdCLDJEQUFTO0FBQ3pCO0FBQ0EsZ0JBQWdCLDJEQUFTO0FBQ3pCLGdCQUFnQiwyREFBUztBQUN6QjtBQUNBLGdCQUFnQiwyREFBUztBQUN6QixnQkFBZ0IsMkRBQVM7QUFDekI7QUFDQSxnQkFBZ0IsMkRBQVM7QUFDekIsZ0JBQWdCLDJEQUFTO0FBQ3pCLGdCQUFnQiwyREFBUztBQUN6QixnQkFBZ0IsMkRBQVM7QUFDekIsZ0JBQWdCLDJEQUFTO0FBQ3pCLGdCQUFnQiwyREFBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHlEQUFTO0FBQ3hDLDRCQUE0QixRQUFRO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5Qiw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxFQUFFLFVBQVUsRUFBRSxlQUFlLEVBQUUsZ0JBQWdCLEVBQUUsVUFBVSxHQUFHO0FBQ25HO0FBQ0E7QUFDQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9jcnlwdG8vR3VpZEdlbmVyYXRvci5tanM/ZDQ5NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQ29uc3RhbnRzIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uJztcbmltcG9ydCB7IE1hdGhVdGlscyB9IGZyb20gJy4uL3V0aWxzL01hdGhVdGlscy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIEd1aWRHZW5lcmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKGNyeXB0b09iaikge1xuICAgICAgICB0aGlzLmNyeXB0b09iaiA9IGNyeXB0b09iajtcbiAgICB9XG4gICAgLypcbiAgICAgKiBSRkM0MTIyOiBUaGUgdmVyc2lvbiA0IFVVSUQgaXMgbWVhbnQgZm9yIGdlbmVyYXRpbmcgVVVJRHMgZnJvbSB0cnVseS1yYW5kb20gb3JcbiAgICAgKiBwc2V1ZG8tcmFuZG9tIG51bWJlcnMuXG4gICAgICogVGhlIGFsZ29yaXRobSBpcyBhcyBmb2xsb3dzOlxuICAgICAqICAgICBTZXQgdGhlIHR3byBtb3N0IHNpZ25pZmljYW50IGJpdHMgKGJpdHMgNiBhbmQgNykgb2YgdGhlXG4gICAgICogICAgICAgIGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWQgdG8gemVybyBhbmQgb25lLCByZXNwZWN0aXZlbHkuXG4gICAgICogICAgIFNldCB0aGUgZm91ciBtb3N0IHNpZ25pZmljYW50IGJpdHMgKGJpdHMgMTIgdGhyb3VnaCAxNSkgb2YgdGhlXG4gICAgICogICAgICAgIHRpbWVfaGlfYW5kX3ZlcnNpb24gZmllbGQgdG8gdGhlIDQtYml0IHZlcnNpb24gbnVtYmVyIGZyb21cbiAgICAgKiAgICAgICAgU2VjdGlvbiA0LjEuMy4gVmVyc2lvbjRcbiAgICAgKiAgICAgU2V0IGFsbCB0aGUgb3RoZXIgYml0cyB0byByYW5kb21seSAob3IgcHNldWRvLXJhbmRvbWx5KSBjaG9zZW5cbiAgICAgKiAgICAgdmFsdWVzLlxuICAgICAqIFVVSUQgICAgICAgICAgICAgICAgICAgPSB0aW1lLWxvdyBcIi1cIiB0aW1lLW1pZCBcIi1cInRpbWUtaGlnaC1hbmQtdmVyc2lvbiBcIi1cImNsb2NrLXNlcS1yZXNlcnZlZCBhbmQgbG93KDJoZXhPY3RldClcIi1cIiBub2RlXG4gICAgICogdGltZS1sb3cgICAgICAgICAgICAgICA9IDRoZXhPY3RldFxuICAgICAqIHRpbWUtbWlkICAgICAgICAgICAgICAgPSAyaGV4T2N0ZXRcbiAgICAgKiB0aW1lLWhpZ2gtYW5kLXZlcnNpb24gID0gMmhleE9jdGV0XG4gICAgICogY2xvY2stc2VxLWFuZC1yZXNlcnZlZCA9IGhleE9jdGV0OlxuICAgICAqIGNsb2NrLXNlcS1sb3cgICAgICAgICAgPSBoZXhPY3RldFxuICAgICAqIG5vZGUgICAgICAgICAgICAgICAgICAgPSA2aGV4T2N0ZXRcbiAgICAgKiBGb3JtYXQ6IHh4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eFxuICAgICAqIHkgY291bGQgYmUgMTAwMCwgMTAwMSwgMTAxMCwgMTAxMSBzaW5jZSBtb3N0IHNpZ25pZmljYW50IHR3byBiaXRzIG5lZWRzIHRvIGJlIDEwXG4gICAgICogeSB2YWx1ZXMgYXJlIDgsIDksIEEsIEJcbiAgICAgKi9cbiAgICBnZW5lcmF0ZUd1aWQoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBidWZmZXIgPSBuZXcgVWludDhBcnJheSgxNik7XG4gICAgICAgICAgICB0aGlzLmNyeXB0b09iai5nZXRSYW5kb21WYWx1ZXMoYnVmZmVyKTtcbiAgICAgICAgICAgIC8vIGJ1ZmZlcls2XSBhbmQgYnVmZmVyWzddIHJlcHJlc2VudHMgdGhlIHRpbWVfaGlfYW5kX3ZlcnNpb24gZmllbGQuIFdlIHdpbGwgc2V0IHRoZSBmb3VyIG1vc3Qgc2lnbmlmaWNhbnQgYml0cyAoNCB0aHJvdWdoIDcpIG9mIGJ1ZmZlcls2XSB0byByZXByZXNlbnQgZGVjaW1hbCBudW1iZXIgNCAoVVVJRCB2ZXJzaW9uIG51bWJlcikuXG4gICAgICAgICAgICBidWZmZXJbNl0gfD0gMHg0MDsgLy8gYnVmZmVyWzZdIHwgMDEwMDAwMDAgd2lsbCBzZXQgdGhlIDYgYml0IHRvIDEuXG4gICAgICAgICAgICBidWZmZXJbNl0gJj0gMHg0ZjsgLy8gYnVmZmVyWzZdICYgMDEwMDExMTEgd2lsbCBzZXQgdGhlIDQsIDUsIGFuZCA3IGJpdCB0byAwIHN1Y2ggdGhhdCBiaXRzIDQtNyA9PSAwMTAwID0gXCI0XCIuXG4gICAgICAgICAgICAvLyBidWZmZXJbOF0gcmVwcmVzZW50cyB0aGUgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZCBmaWVsZC4gV2Ugd2lsbCBzZXQgdGhlIHR3byBtb3N0IHNpZ25pZmljYW50IGJpdHMgKDYgYW5kIDcpIG9mIHRoZSBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkIHRvIHplcm8gYW5kIG9uZSwgcmVzcGVjdGl2ZWx5LlxuICAgICAgICAgICAgYnVmZmVyWzhdIHw9IDB4ODA7IC8vIGJ1ZmZlcls4XSB8IDEwMDAwMDAwIHdpbGwgc2V0IHRoZSA3IGJpdCB0byAxLlxuICAgICAgICAgICAgYnVmZmVyWzhdICY9IDB4YmY7IC8vIGJ1ZmZlcls4XSAmIDEwMTExMTExIHdpbGwgc2V0IHRoZSA2IGJpdCB0byAwLlxuICAgICAgICAgICAgcmV0dXJuIChNYXRoVXRpbHMuZGVjaW1hbFRvSGV4KGJ1ZmZlclswXSkgK1xuICAgICAgICAgICAgICAgIE1hdGhVdGlscy5kZWNpbWFsVG9IZXgoYnVmZmVyWzFdKSArXG4gICAgICAgICAgICAgICAgTWF0aFV0aWxzLmRlY2ltYWxUb0hleChidWZmZXJbMl0pICtcbiAgICAgICAgICAgICAgICBNYXRoVXRpbHMuZGVjaW1hbFRvSGV4KGJ1ZmZlclszXSkgK1xuICAgICAgICAgICAgICAgIFwiLVwiICtcbiAgICAgICAgICAgICAgICBNYXRoVXRpbHMuZGVjaW1hbFRvSGV4KGJ1ZmZlcls0XSkgK1xuICAgICAgICAgICAgICAgIE1hdGhVdGlscy5kZWNpbWFsVG9IZXgoYnVmZmVyWzVdKSArXG4gICAgICAgICAgICAgICAgXCItXCIgK1xuICAgICAgICAgICAgICAgIE1hdGhVdGlscy5kZWNpbWFsVG9IZXgoYnVmZmVyWzZdKSArXG4gICAgICAgICAgICAgICAgTWF0aFV0aWxzLmRlY2ltYWxUb0hleChidWZmZXJbN10pICtcbiAgICAgICAgICAgICAgICBcIi1cIiArXG4gICAgICAgICAgICAgICAgTWF0aFV0aWxzLmRlY2ltYWxUb0hleChidWZmZXJbOF0pICtcbiAgICAgICAgICAgICAgICBNYXRoVXRpbHMuZGVjaW1hbFRvSGV4KGJ1ZmZlcls5XSkgK1xuICAgICAgICAgICAgICAgIFwiLVwiICtcbiAgICAgICAgICAgICAgICBNYXRoVXRpbHMuZGVjaW1hbFRvSGV4KGJ1ZmZlclsxMF0pICtcbiAgICAgICAgICAgICAgICBNYXRoVXRpbHMuZGVjaW1hbFRvSGV4KGJ1ZmZlclsxMV0pICtcbiAgICAgICAgICAgICAgICBNYXRoVXRpbHMuZGVjaW1hbFRvSGV4KGJ1ZmZlclsxMl0pICtcbiAgICAgICAgICAgICAgICBNYXRoVXRpbHMuZGVjaW1hbFRvSGV4KGJ1ZmZlclsxM10pICtcbiAgICAgICAgICAgICAgICBNYXRoVXRpbHMuZGVjaW1hbFRvSGV4KGJ1ZmZlclsxNF0pICtcbiAgICAgICAgICAgICAgICBNYXRoVXRpbHMuZGVjaW1hbFRvSGV4KGJ1ZmZlclsxNV0pKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBjb25zdCBndWlkSG9sZGVyID0gXCJ4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHhcIjtcbiAgICAgICAgICAgIGNvbnN0IGhleCA9IFwiMDEyMzQ1Njc4OWFiY2RlZlwiO1xuICAgICAgICAgICAgbGV0IHIgPSAwO1xuICAgICAgICAgICAgbGV0IGd1aWRSZXNwb25zZSA9IENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDM2OyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoZ3VpZEhvbGRlcltpXSAhPT0gXCItXCIgJiYgZ3VpZEhvbGRlcltpXSAhPT0gXCI0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gZWFjaCB4IGFuZCB5IG5lZWRzIHRvIGJlIHJhbmRvbVxuICAgICAgICAgICAgICAgICAgICByID0gKE1hdGgucmFuZG9tKCkgKiAxNikgfCAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZ3VpZEhvbGRlcltpXSA9PT0gXCJ4XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgZ3VpZFJlc3BvbnNlICs9IGhleFtyXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoZ3VpZEhvbGRlcltpXSA9PT0gXCJ5XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gY2xvY2stc2VxLWFuZC1yZXNlcnZlZCBmaXJzdCBoZXggaXMgZmlsdGVyZWQgYW5kIHJlbWFpbmluZyBoZXggdmFsdWVzIGFyZSByYW5kb21cbiAgICAgICAgICAgICAgICAgICAgciAmPSAweDM7IC8vIGJpdCBhbmQgd2l0aCAwMDExIHRvIHNldCBwb3MgMiB0byB6ZXJvID8wPz9cbiAgICAgICAgICAgICAgICAgICAgciB8PSAweDg7IC8vIHNldCBwb3MgMyB0byAxIGFzIDE/Pz9cbiAgICAgICAgICAgICAgICAgICAgZ3VpZFJlc3BvbnNlICs9IGhleFtyXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGd1aWRSZXNwb25zZSArPSBndWlkSG9sZGVyW2ldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBndWlkUmVzcG9uc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogdmVyaWZpZXMgaWYgYSBzdHJpbmcgaXMgIEdVSURcbiAgICAgKiBAcGFyYW0gZ3VpZFxuICAgICAqL1xuICAgIGlzR3VpZChndWlkKSB7XG4gICAgICAgIGNvbnN0IHJlZ2V4R3VpZCA9IC9eWzAtOWEtZl17OH0tWzAtOWEtZl17NH0tWzEtNV1bMC05YS1mXXszfS1bODlhYl1bMC05YS1mXXszfS1bMC05YS1mXXsxMn0kL2k7XG4gICAgICAgIHJldHVybiByZWdleEd1aWQudGVzdChndWlkKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IEd1aWRHZW5lcmF0b3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUd1aWRHZW5lcmF0b3IubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/crypto/GuidGenerator.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/crypto/ModernBrowserCrypto.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/crypto/ModernBrowserCrypto.mjs ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModernBrowserCrypto: function() { return /* binding */ ModernBrowserCrypto; }\n/* harmony export */ });\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass ModernBrowserCrypto {\n    getRandomValues(dataBuffer) {\n        return window.crypto.getRandomValues(dataBuffer);\n    }\n    async generateKey(algorithm, extractable, keyUsages) {\n        return window.crypto.subtle.generateKey(algorithm, extractable, keyUsages);\n    }\n    async exportKey(key) {\n        return window.crypto.subtle.exportKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.KEY_FORMAT_JWK, key);\n    }\n    async importKey(keyData, algorithm, extractable, keyUsages) {\n        return window.crypto.subtle.importKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.KEY_FORMAT_JWK, keyData, algorithm, extractable, keyUsages);\n    }\n    async sign(algorithm, key, data) {\n        return window.crypto.subtle.sign(algorithm, key, data);\n    }\n    async digest(algorithm, data) {\n        return window.crypto.subtle.digest(algorithm, data);\n    }\n}\n\n\n//# sourceMappingURL=ModernBrowserCrypto.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NyeXB0by9Nb2Rlcm5Ccm93c2VyQ3J5cHRvLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDa0Q7O0FBRS9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qyx1RUFBYztBQUM1RDtBQUNBO0FBQ0EsOENBQThDLHVFQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRStCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvY3J5cHRvL01vZGVybkJyb3dzZXJDcnlwdG8ubWpzP2ZhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEtFWV9GT1JNQVRfSldLIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlckNvbnN0YW50cy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIE1vZGVybkJyb3dzZXJDcnlwdG8ge1xuICAgIGdldFJhbmRvbVZhbHVlcyhkYXRhQnVmZmVyKSB7XG4gICAgICAgIHJldHVybiB3aW5kb3cuY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhkYXRhQnVmZmVyKTtcbiAgICB9XG4gICAgYXN5bmMgZ2VuZXJhdGVLZXkoYWxnb3JpdGhtLCBleHRyYWN0YWJsZSwga2V5VXNhZ2VzKSB7XG4gICAgICAgIHJldHVybiB3aW5kb3cuY3J5cHRvLnN1YnRsZS5nZW5lcmF0ZUtleShhbGdvcml0aG0sIGV4dHJhY3RhYmxlLCBrZXlVc2FnZXMpO1xuICAgIH1cbiAgICBhc3luYyBleHBvcnRLZXkoa2V5KSB7XG4gICAgICAgIHJldHVybiB3aW5kb3cuY3J5cHRvLnN1YnRsZS5leHBvcnRLZXkoS0VZX0ZPUk1BVF9KV0ssIGtleSk7XG4gICAgfVxuICAgIGFzeW5jIGltcG9ydEtleShrZXlEYXRhLCBhbGdvcml0aG0sIGV4dHJhY3RhYmxlLCBrZXlVc2FnZXMpIHtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5jcnlwdG8uc3VidGxlLmltcG9ydEtleShLRVlfRk9STUFUX0pXSywga2V5RGF0YSwgYWxnb3JpdGhtLCBleHRyYWN0YWJsZSwga2V5VXNhZ2VzKTtcbiAgICB9XG4gICAgYXN5bmMgc2lnbihhbGdvcml0aG0sIGtleSwgZGF0YSkge1xuICAgICAgICByZXR1cm4gd2luZG93LmNyeXB0by5zdWJ0bGUuc2lnbihhbGdvcml0aG0sIGtleSwgZGF0YSk7XG4gICAgfVxuICAgIGFzeW5jIGRpZ2VzdChhbGdvcml0aG0sIGRhdGEpIHtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5jcnlwdG8uc3VidGxlLmRpZ2VzdChhbGdvcml0aG0sIGRhdGEpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgTW9kZXJuQnJvd3NlckNyeXB0byB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TW9kZXJuQnJvd3NlckNyeXB0by5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/crypto/ModernBrowserCrypto.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/crypto/PkceGenerator.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/crypto/PkceGenerator.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PkceGenerator: function() { return /* binding */ PkceGenerator; }\n/* harmony export */ });\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encode/Base64Encode.mjs */ \"./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// Constant byte array length\nconst RANDOM_BYTE_ARR_LENGTH = 32;\n/**\n * Class which exposes APIs to generate PKCE codes and code verifiers.\n */\nclass PkceGenerator {\n    constructor(cryptoObj) {\n        this.base64Encode = new _encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_0__.Base64Encode();\n        this.cryptoObj = cryptoObj;\n    }\n    /**\n     * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\n     */\n    async generateCodes() {\n        const codeVerifier = this.generateCodeVerifier();\n        const codeChallenge = await this.generateCodeChallengeFromVerifier(codeVerifier);\n        return {\n            verifier: codeVerifier,\n            challenge: codeChallenge,\n        };\n    }\n    /**\n     * Generates a random 32 byte buffer and returns the base64\n     * encoded string to be used as a PKCE Code Verifier\n     */\n    generateCodeVerifier() {\n        try {\n            // Generate random values as utf-8\n            const buffer = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\n            this.cryptoObj.getRandomValues(buffer);\n            // encode verifier as base64\n            const pkceCodeVerifierB64 = this.base64Encode.urlEncodeArr(buffer);\n            return pkceCodeVerifierB64;\n        }\n        catch (e) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createPkceNotGeneratedError(e);\n        }\n    }\n    /**\n     * Creates a base64 encoded PKCE Code Challenge string from the\n     * hash created from the PKCE Code Verifier supplied\n     */\n    async generateCodeChallengeFromVerifier(pkceCodeVerifier) {\n        try {\n            // hashed verifier\n            const pkceHashedCodeVerifier = await this.cryptoObj.sha256Digest(pkceCodeVerifier);\n            // encode hash as base64\n            return this.base64Encode.urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\n        }\n        catch (e) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createPkceNotGeneratedError(e);\n        }\n    }\n}\n\n\n//# sourceMappingURL=PkceGenerator.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NyeXB0by9Qa2NlR2VuZXJhdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQ29EO0FBQ1A7O0FBRTFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msa0VBQVk7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlFQUFnQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlFQUFnQjtBQUNsQztBQUNBO0FBQ0E7O0FBRXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvY3J5cHRvL1BrY2VHZW5lcmF0b3IubWpzPzAzMDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEJyb3dzZXJBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBCYXNlNjRFbmNvZGUgfSBmcm9tICcuLi9lbmNvZGUvQmFzZTY0RW5jb2RlLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLy8gQ29uc3RhbnQgYnl0ZSBhcnJheSBsZW5ndGhcbmNvbnN0IFJBTkRPTV9CWVRFX0FSUl9MRU5HVEggPSAzMjtcbi8qKlxuICogQ2xhc3Mgd2hpY2ggZXhwb3NlcyBBUElzIHRvIGdlbmVyYXRlIFBLQ0UgY29kZXMgYW5kIGNvZGUgdmVyaWZpZXJzLlxuICovXG5jbGFzcyBQa2NlR2VuZXJhdG9yIHtcbiAgICBjb25zdHJ1Y3RvcihjcnlwdG9PYmopIHtcbiAgICAgICAgdGhpcy5iYXNlNjRFbmNvZGUgPSBuZXcgQmFzZTY0RW5jb2RlKCk7XG4gICAgICAgIHRoaXMuY3J5cHRvT2JqID0gY3J5cHRvT2JqO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgUEtDRSBDb2Rlcy4gU2VlIHRoZSBSRkMgZm9yIG1vcmUgaW5mb3JtYXRpb246IGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM3NjM2XG4gICAgICovXG4gICAgYXN5bmMgZ2VuZXJhdGVDb2RlcygpIHtcbiAgICAgICAgY29uc3QgY29kZVZlcmlmaWVyID0gdGhpcy5nZW5lcmF0ZUNvZGVWZXJpZmllcigpO1xuICAgICAgICBjb25zdCBjb2RlQ2hhbGxlbmdlID0gYXdhaXQgdGhpcy5nZW5lcmF0ZUNvZGVDaGFsbGVuZ2VGcm9tVmVyaWZpZXIoY29kZVZlcmlmaWVyKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZlcmlmaWVyOiBjb2RlVmVyaWZpZXIsXG4gICAgICAgICAgICBjaGFsbGVuZ2U6IGNvZGVDaGFsbGVuZ2UsXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlcyBhIHJhbmRvbSAzMiBieXRlIGJ1ZmZlciBhbmQgcmV0dXJucyB0aGUgYmFzZTY0XG4gICAgICogZW5jb2RlZCBzdHJpbmcgdG8gYmUgdXNlZCBhcyBhIFBLQ0UgQ29kZSBWZXJpZmllclxuICAgICAqL1xuICAgIGdlbmVyYXRlQ29kZVZlcmlmaWVyKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gR2VuZXJhdGUgcmFuZG9tIHZhbHVlcyBhcyB1dGYtOFxuICAgICAgICAgICAgY29uc3QgYnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkoUkFORE9NX0JZVEVfQVJSX0xFTkdUSCk7XG4gICAgICAgICAgICB0aGlzLmNyeXB0b09iai5nZXRSYW5kb21WYWx1ZXMoYnVmZmVyKTtcbiAgICAgICAgICAgIC8vIGVuY29kZSB2ZXJpZmllciBhcyBiYXNlNjRcbiAgICAgICAgICAgIGNvbnN0IHBrY2VDb2RlVmVyaWZpZXJCNjQgPSB0aGlzLmJhc2U2NEVuY29kZS51cmxFbmNvZGVBcnIoYnVmZmVyKTtcbiAgICAgICAgICAgIHJldHVybiBwa2NlQ29kZVZlcmlmaWVyQjY0O1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aHJvdyBCcm93c2VyQXV0aEVycm9yLmNyZWF0ZVBrY2VOb3RHZW5lcmF0ZWRFcnJvcihlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgYmFzZTY0IGVuY29kZWQgUEtDRSBDb2RlIENoYWxsZW5nZSBzdHJpbmcgZnJvbSB0aGVcbiAgICAgKiBoYXNoIGNyZWF0ZWQgZnJvbSB0aGUgUEtDRSBDb2RlIFZlcmlmaWVyIHN1cHBsaWVkXG4gICAgICovXG4gICAgYXN5bmMgZ2VuZXJhdGVDb2RlQ2hhbGxlbmdlRnJvbVZlcmlmaWVyKHBrY2VDb2RlVmVyaWZpZXIpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIGhhc2hlZCB2ZXJpZmllclxuICAgICAgICAgICAgY29uc3QgcGtjZUhhc2hlZENvZGVWZXJpZmllciA9IGF3YWl0IHRoaXMuY3J5cHRvT2JqLnNoYTI1NkRpZ2VzdChwa2NlQ29kZVZlcmlmaWVyKTtcbiAgICAgICAgICAgIC8vIGVuY29kZSBoYXNoIGFzIGJhc2U2NFxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYmFzZTY0RW5jb2RlLnVybEVuY29kZUFycihuZXcgVWludDhBcnJheShwa2NlSGFzaGVkQ29kZVZlcmlmaWVyKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRocm93IEJyb3dzZXJBdXRoRXJyb3IuY3JlYXRlUGtjZU5vdEdlbmVyYXRlZEVycm9yKGUpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgeyBQa2NlR2VuZXJhdG9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qa2NlR2VuZXJhdG9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/crypto/PkceGenerator.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/crypto/SignedHttpRequest.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/crypto/SignedHttpRequest.mjs ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignedHttpRequest: function() { return /* binding */ SignedHttpRequest; }\n/* harmony export */ });\n/* harmony import */ var _CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CryptoOps.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SignedHttpRequest {\n    constructor(shrParameters, shrOptions) {\n        const loggerOptions = (shrOptions && shrOptions.loggerOptions) || {};\n        this.logger = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Logger(loggerOptions, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__.version);\n        this.cryptoOps = new _CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_2__.CryptoOps(this.logger);\n        this.popTokenGenerator = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PopTokenGenerator(this.cryptoOps);\n        this.shrParameters = shrParameters;\n    }\n    /**\n     * Generates and caches a keypair for the given request options.\n     * @returns Public key digest, which should be sent to the token issuer.\n     */\n    async generatePublicKeyThumbprint() {\n        const { kid } = await this.popTokenGenerator.generateKid(this.shrParameters);\n        return kid;\n    }\n    /**\n     * Generates a signed http request for the given payload with the given key.\n     * @param payload Payload to sign (e.g. access token)\n     * @param publicKeyThumbprint Public key digest (from generatePublicKeyThumbprint API)\n     * @param claims Additional claims to include/override in the signed JWT\n     * @returns Pop token signed with the corresponding private key\n     */\n    async signRequest(payload, publicKeyThumbprint, claims) {\n        return this.popTokenGenerator.signPayload(payload, publicKeyThumbprint, this.shrParameters, claims);\n    }\n    /**\n     * Removes cached keys from browser for given public key thumbprint\n     * @param publicKeyThumbprint Public key digest (from generatePublicKeyThumbprint API)\n     * @returns If keys are properly deleted\n     */\n    async removeKeys(publicKeyThumbprint) {\n        return await this.cryptoOps.removeTokenBindingKey(publicKeyThumbprint);\n    }\n}\n\n\n//# sourceMappingURL=SignedHttpRequest.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NyeXB0by9TaWduZWRIdHRwUmVxdWVzdC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2E7QUFDK0I7QUFDbUI7QUFDUjs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsc0RBQU0sZ0JBQWdCLHNEQUFJLEVBQUUseURBQU87QUFDN0QsNkJBQTZCLHFEQUFTO0FBQ3RDLHFDQUFxQyxpRUFBaUI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsTUFBTTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvY3J5cHRvL1NpZ25lZEh0dHBSZXF1ZXN0Lm1qcz9iYTU5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBDcnlwdG9PcHMgfSBmcm9tICcuL0NyeXB0b09wcy5tanMnO1xuaW1wb3J0IHsgTG9nZ2VyLCBQb3BUb2tlbkdlbmVyYXRvciB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbic7XG5pbXBvcnQgeyBuYW1lLCB2ZXJzaW9uIH0gZnJvbSAnLi4vcGFja2FnZU1ldGFkYXRhLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY2xhc3MgU2lnbmVkSHR0cFJlcXVlc3Qge1xuICAgIGNvbnN0cnVjdG9yKHNoclBhcmFtZXRlcnMsIHNock9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgbG9nZ2VyT3B0aW9ucyA9IChzaHJPcHRpb25zICYmIHNock9wdGlvbnMubG9nZ2VyT3B0aW9ucykgfHwge307XG4gICAgICAgIHRoaXMubG9nZ2VyID0gbmV3IExvZ2dlcihsb2dnZXJPcHRpb25zLCBuYW1lLCB2ZXJzaW9uKTtcbiAgICAgICAgdGhpcy5jcnlwdG9PcHMgPSBuZXcgQ3J5cHRvT3BzKHRoaXMubG9nZ2VyKTtcbiAgICAgICAgdGhpcy5wb3BUb2tlbkdlbmVyYXRvciA9IG5ldyBQb3BUb2tlbkdlbmVyYXRvcih0aGlzLmNyeXB0b09wcyk7XG4gICAgICAgIHRoaXMuc2hyUGFyYW1ldGVycyA9IHNoclBhcmFtZXRlcnM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlcyBhbmQgY2FjaGVzIGEga2V5cGFpciBmb3IgdGhlIGdpdmVuIHJlcXVlc3Qgb3B0aW9ucy5cbiAgICAgKiBAcmV0dXJucyBQdWJsaWMga2V5IGRpZ2VzdCwgd2hpY2ggc2hvdWxkIGJlIHNlbnQgdG8gdGhlIHRva2VuIGlzc3Vlci5cbiAgICAgKi9cbiAgICBhc3luYyBnZW5lcmF0ZVB1YmxpY0tleVRodW1icHJpbnQoKSB7XG4gICAgICAgIGNvbnN0IHsga2lkIH0gPSBhd2FpdCB0aGlzLnBvcFRva2VuR2VuZXJhdG9yLmdlbmVyYXRlS2lkKHRoaXMuc2hyUGFyYW1ldGVycyk7XG4gICAgICAgIHJldHVybiBraWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlcyBhIHNpZ25lZCBodHRwIHJlcXVlc3QgZm9yIHRoZSBnaXZlbiBwYXlsb2FkIHdpdGggdGhlIGdpdmVuIGtleS5cbiAgICAgKiBAcGFyYW0gcGF5bG9hZCBQYXlsb2FkIHRvIHNpZ24gKGUuZy4gYWNjZXNzIHRva2VuKVxuICAgICAqIEBwYXJhbSBwdWJsaWNLZXlUaHVtYnByaW50IFB1YmxpYyBrZXkgZGlnZXN0IChmcm9tIGdlbmVyYXRlUHVibGljS2V5VGh1bWJwcmludCBBUEkpXG4gICAgICogQHBhcmFtIGNsYWltcyBBZGRpdGlvbmFsIGNsYWltcyB0byBpbmNsdWRlL292ZXJyaWRlIGluIHRoZSBzaWduZWQgSldUXG4gICAgICogQHJldHVybnMgUG9wIHRva2VuIHNpZ25lZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHByaXZhdGUga2V5XG4gICAgICovXG4gICAgYXN5bmMgc2lnblJlcXVlc3QocGF5bG9hZCwgcHVibGljS2V5VGh1bWJwcmludCwgY2xhaW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvcFRva2VuR2VuZXJhdG9yLnNpZ25QYXlsb2FkKHBheWxvYWQsIHB1YmxpY0tleVRodW1icHJpbnQsIHRoaXMuc2hyUGFyYW1ldGVycywgY2xhaW1zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBjYWNoZWQga2V5cyBmcm9tIGJyb3dzZXIgZm9yIGdpdmVuIHB1YmxpYyBrZXkgdGh1bWJwcmludFxuICAgICAqIEBwYXJhbSBwdWJsaWNLZXlUaHVtYnByaW50IFB1YmxpYyBrZXkgZGlnZXN0IChmcm9tIGdlbmVyYXRlUHVibGljS2V5VGh1bWJwcmludCBBUEkpXG4gICAgICogQHJldHVybnMgSWYga2V5cyBhcmUgcHJvcGVybHkgZGVsZXRlZFxuICAgICAqL1xuICAgIGFzeW5jIHJlbW92ZUtleXMocHVibGljS2V5VGh1bWJwcmludCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5jcnlwdG9PcHMucmVtb3ZlVG9rZW5CaW5kaW5nS2V5KHB1YmxpY0tleVRodW1icHJpbnQpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgU2lnbmVkSHR0cFJlcXVlc3QgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNpZ25lZEh0dHBSZXF1ZXN0Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/crypto/SignedHttpRequest.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Base64Decode: function() { return /* binding */ Base64Decode; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _utils_BrowserStringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserStringUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserStringUtils.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nclass Base64Decode {\n    /**\n     * Returns a URL-safe plaintext decoded string from b64 encoded input.\n     * @param input\n     */\n    decode(input) {\n        let encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\n        switch (encodedString.length % 4) {\n            case 0:\n                break;\n            case 2:\n                encodedString += \"==\";\n                break;\n            case 3:\n                encodedString += \"=\";\n                break;\n            default:\n                throw new Error(\"Invalid base64 string\");\n        }\n        const inputUtf8Arr = this.base64DecToArr(encodedString);\n        return _utils_BrowserStringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserStringUtils.utf8ArrToString(inputUtf8Arr);\n    }\n    /**\n     * Decodes base64 into Uint8Array\n     * @param base64String\n     * @param nBlockSize\n     */\n    base64DecToArr(base64String, nBlockSize) {\n        const sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING);\n        const nInLen = sB64Enc.length;\n        const nOutLen = nBlockSize\n            ? Math.ceil(((nInLen * 3 + 1) >>> 2) / nBlockSize) * nBlockSize\n            : (nInLen * 3 + 1) >>> 2;\n        const aBytes = new Uint8Array(nOutLen);\n        for (let nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n            nMod4 = nInIdx & 3;\n            nUint24 |=\n                this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << (18 - 6 * nMod4);\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n                    aBytes[nOutIdx] = (nUint24 >>> ((16 >>> nMod3) & 24)) & 255;\n                }\n                nUint24 = 0;\n            }\n        }\n        return aBytes;\n    }\n    /**\n     * Base64 string to array decoding helper\n     * @param charNum\n     */\n    b64ToUint6(charNum) {\n        return charNum > 64 && charNum < 91\n            ? charNum - 65\n            : charNum > 96 && charNum < 123\n                ? charNum - 71\n                : charNum > 47 && charNum < 58\n                    ? charNum + 4\n                    : charNum === 43\n                        ? 62\n                        : charNum === 47\n                            ? 63\n                            : 0;\n    }\n}\n\n\n//# sourceMappingURL=Base64Decode.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2VuY29kZS9CYXNlNjREZWNvZGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDa0M7QUFDc0I7O0FBRXJFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw2RUFBa0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UseURBQVM7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRSxpQkFBaUI7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsZ0NBQWdDO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2VuY29kZS9CYXNlNjREZWNvZGUubWpzPzU1ZDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbic7XG5pbXBvcnQgeyBCcm93c2VyU3RyaW5nVXRpbHMgfSBmcm9tICcuLi91dGlscy9Ccm93c2VyU3RyaW5nVXRpbHMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIENsYXNzIHdoaWNoIGV4cG9zZXMgQVBJcyB0byBkZWNvZGUgYmFzZTY0IHN0cmluZ3MgdG8gcGxhaW50ZXh0LiBTZWUgaGVyZSBmb3IgaW1wbGVtZW50YXRpb24gZGV0YWlsczpcbiAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9XaW5kb3dCYXNlNjQvQmFzZTY0X2VuY29kaW5nX2FuZF9kZWNvZGluZyNTb2x1dGlvbl8yXyVFMiU4MCU5M19KYXZhU2NyaXB0J3NfVVRGLTE2XyUzRV9VVEYtOF8lM0VfYmFzZTY0XG4gKi9cbmNsYXNzIEJhc2U2NERlY29kZSB7XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIFVSTC1zYWZlIHBsYWludGV4dCBkZWNvZGVkIHN0cmluZyBmcm9tIGI2NCBlbmNvZGVkIGlucHV0LlxuICAgICAqIEBwYXJhbSBpbnB1dFxuICAgICAqL1xuICAgIGRlY29kZShpbnB1dCkge1xuICAgICAgICBsZXQgZW5jb2RlZFN0cmluZyA9IGlucHV0LnJlcGxhY2UoLy0vZywgXCIrXCIpLnJlcGxhY2UoL18vZywgXCIvXCIpO1xuICAgICAgICBzd2l0Y2ggKGVuY29kZWRTdHJpbmcubGVuZ3RoICUgNCkge1xuICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgIGVuY29kZWRTdHJpbmcgKz0gXCI9PVwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgIGVuY29kZWRTdHJpbmcgKz0gXCI9XCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYmFzZTY0IHN0cmluZ1wiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpbnB1dFV0ZjhBcnIgPSB0aGlzLmJhc2U2NERlY1RvQXJyKGVuY29kZWRTdHJpbmcpO1xuICAgICAgICByZXR1cm4gQnJvd3NlclN0cmluZ1V0aWxzLnV0ZjhBcnJUb1N0cmluZyhpbnB1dFV0ZjhBcnIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWNvZGVzIGJhc2U2NCBpbnRvIFVpbnQ4QXJyYXlcbiAgICAgKiBAcGFyYW0gYmFzZTY0U3RyaW5nXG4gICAgICogQHBhcmFtIG5CbG9ja1NpemVcbiAgICAgKi9cbiAgICBiYXNlNjREZWNUb0FycihiYXNlNjRTdHJpbmcsIG5CbG9ja1NpemUpIHtcbiAgICAgICAgY29uc3Qgc0I2NEVuYyA9IGJhc2U2NFN0cmluZy5yZXBsYWNlKC9bXkEtWmEtejAtOVxcK1xcL10vZywgQ29uc3RhbnRzLkVNUFRZX1NUUklORyk7XG4gICAgICAgIGNvbnN0IG5JbkxlbiA9IHNCNjRFbmMubGVuZ3RoO1xuICAgICAgICBjb25zdCBuT3V0TGVuID0gbkJsb2NrU2l6ZVxuICAgICAgICAgICAgPyBNYXRoLmNlaWwoKChuSW5MZW4gKiAzICsgMSkgPj4+IDIpIC8gbkJsb2NrU2l6ZSkgKiBuQmxvY2tTaXplXG4gICAgICAgICAgICA6IChuSW5MZW4gKiAzICsgMSkgPj4+IDI7XG4gICAgICAgIGNvbnN0IGFCeXRlcyA9IG5ldyBVaW50OEFycmF5KG5PdXRMZW4pO1xuICAgICAgICBmb3IgKGxldCBuTW9kMywgbk1vZDQsIG5VaW50MjQgPSAwLCBuT3V0SWR4ID0gMCwgbkluSWR4ID0gMDsgbkluSWR4IDwgbkluTGVuOyBuSW5JZHgrKykge1xuICAgICAgICAgICAgbk1vZDQgPSBuSW5JZHggJiAzO1xuICAgICAgICAgICAgblVpbnQyNCB8PVxuICAgICAgICAgICAgICAgIHRoaXMuYjY0VG9VaW50NihzQjY0RW5jLmNoYXJDb2RlQXQobkluSWR4KSkgPDwgKDE4IC0gNiAqIG5Nb2Q0KTtcbiAgICAgICAgICAgIGlmIChuTW9kNCA9PT0gMyB8fCBuSW5MZW4gLSBuSW5JZHggPT09IDEpIHtcbiAgICAgICAgICAgICAgICBmb3IgKG5Nb2QzID0gMDsgbk1vZDMgPCAzICYmIG5PdXRJZHggPCBuT3V0TGVuOyBuTW9kMysrLCBuT3V0SWR4KyspIHtcbiAgICAgICAgICAgICAgICAgICAgYUJ5dGVzW25PdXRJZHhdID0gKG5VaW50MjQgPj4+ICgoMTYgPj4+IG5Nb2QzKSAmIDI0KSkgJiAyNTU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG5VaW50MjQgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhQnl0ZXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEJhc2U2NCBzdHJpbmcgdG8gYXJyYXkgZGVjb2RpbmcgaGVscGVyXG4gICAgICogQHBhcmFtIGNoYXJOdW1cbiAgICAgKi9cbiAgICBiNjRUb1VpbnQ2KGNoYXJOdW0pIHtcbiAgICAgICAgcmV0dXJuIGNoYXJOdW0gPiA2NCAmJiBjaGFyTnVtIDwgOTFcbiAgICAgICAgICAgID8gY2hhck51bSAtIDY1XG4gICAgICAgICAgICA6IGNoYXJOdW0gPiA5NiAmJiBjaGFyTnVtIDwgMTIzXG4gICAgICAgICAgICAgICAgPyBjaGFyTnVtIC0gNzFcbiAgICAgICAgICAgICAgICA6IGNoYXJOdW0gPiA0NyAmJiBjaGFyTnVtIDwgNThcbiAgICAgICAgICAgICAgICAgICAgPyBjaGFyTnVtICsgNFxuICAgICAgICAgICAgICAgICAgICA6IGNoYXJOdW0gPT09IDQzXG4gICAgICAgICAgICAgICAgICAgICAgICA/IDYyXG4gICAgICAgICAgICAgICAgICAgICAgICA6IGNoYXJOdW0gPT09IDQ3XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyA2M1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogMDtcbiAgICB9XG59XG5cbmV4cG9ydCB7IEJhc2U2NERlY29kZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmFzZTY0RGVjb2RlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Base64Encode: function() { return /* binding */ Base64Encode; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _utils_BrowserStringUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/BrowserStringUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserStringUtils.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nclass Base64Encode {\n    /**\n     * Returns URL Safe b64 encoded string from a plaintext string.\n     * @param input\n     */\n    urlEncode(input) {\n        return encodeURIComponent(this.encode(input)\n            .replace(/=/g, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING)\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\"));\n    }\n    /**\n     * Returns URL Safe b64 encoded string from an int8Array.\n     * @param inputArr\n     */\n    urlEncodeArr(inputArr) {\n        return this.base64EncArr(inputArr)\n            .replace(/=/g, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING)\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\");\n    }\n    /**\n     * Returns b64 encoded string from plaintext string.\n     * @param input\n     */\n    encode(input) {\n        const inputUtf8Arr = _utils_BrowserStringUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserStringUtils.stringToUtf8Arr(input);\n        return this.base64EncArr(inputUtf8Arr);\n    }\n    /**\n     * Base64 encode byte array\n     * @param aBytes\n     */\n    base64EncArr(aBytes) {\n        const eqLen = (3 - (aBytes.length % 3)) % 3;\n        let sB64Enc = _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        for (let nMod3, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\n            nMod3 = nIdx % 3;\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\n            /*\n             *if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\n             */\n            nUint24 |= aBytes[nIdx] << ((16 >>> nMod3) & 24);\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\n                sB64Enc += String.fromCharCode(this.uint6ToB64((nUint24 >>> 18) & 63), this.uint6ToB64((nUint24 >>> 12) & 63), this.uint6ToB64((nUint24 >>> 6) & 63), this.uint6ToB64(nUint24 & 63));\n                nUint24 = 0;\n            }\n        }\n        return eqLen === 0\n            ? sB64Enc\n            : sB64Enc.substring(0, sB64Enc.length - eqLen) +\n                (eqLen === 1 ? \"=\" : \"==\");\n    }\n    /**\n     * Base64 string to array encoding helper\n     * @param nUint6\n     */\n    uint6ToB64(nUint6) {\n        return nUint6 < 26\n            ? nUint6 + 65\n            : nUint6 < 52\n                ? nUint6 + 71\n                : nUint6 < 62\n                    ? nUint6 - 4\n                    : nUint6 === 62\n                        ? 43\n                        : nUint6 === 63\n                            ? 47\n                            : 65;\n    }\n}\n\n\n//# sourceMappingURL=Base64Encode.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2VuY29kZS9CYXNlNjRFbmNvZGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDa0M7QUFDc0I7O0FBRXJFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix5REFBUztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIseURBQVM7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw2RUFBa0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5REFBUztBQUMvQixxRUFBcUUsYUFBYTtBQUNsRjtBQUNBO0FBQ0E7QUFDQSwyREFBMkQ7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2VuY29kZS9CYXNlNjRFbmNvZGUubWpzPzYwMDIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbic7XG5pbXBvcnQgeyBCcm93c2VyU3RyaW5nVXRpbHMgfSBmcm9tICcuLi91dGlscy9Ccm93c2VyU3RyaW5nVXRpbHMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIENsYXNzIHdoaWNoIGV4cG9zZXMgQVBJcyB0byBlbmNvZGUgcGxhaW50ZXh0IHRvIGJhc2U2NCBlbmNvZGVkIHN0cmluZy4gU2VlIGhlcmUgZm9yIGltcGxlbWVudGF0aW9uIGRldGFpbHM6XG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvV2luZG93QmFzZTY0L0Jhc2U2NF9lbmNvZGluZ19hbmRfZGVjb2RpbmcjU29sdXRpb25fMl8lRTIlODAlOTNfSmF2YVNjcmlwdCdzX1VURi0xNl8lM0VfVVRGLThfJTNFX2Jhc2U2NFxuICovXG5jbGFzcyBCYXNlNjRFbmNvZGUge1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgVVJMIFNhZmUgYjY0IGVuY29kZWQgc3RyaW5nIGZyb20gYSBwbGFpbnRleHQgc3RyaW5nLlxuICAgICAqIEBwYXJhbSBpbnB1dFxuICAgICAqL1xuICAgIHVybEVuY29kZShpbnB1dCkge1xuICAgICAgICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHRoaXMuZW5jb2RlKGlucHV0KVxuICAgICAgICAgICAgLnJlcGxhY2UoLz0vZywgQ29uc3RhbnRzLkVNUFRZX1NUUklORylcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXCsvZywgXCItXCIpXG4gICAgICAgICAgICAucmVwbGFjZSgvXFwvL2csIFwiX1wiKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgVVJMIFNhZmUgYjY0IGVuY29kZWQgc3RyaW5nIGZyb20gYW4gaW50OEFycmF5LlxuICAgICAqIEBwYXJhbSBpbnB1dEFyclxuICAgICAqL1xuICAgIHVybEVuY29kZUFycihpbnB1dEFycikge1xuICAgICAgICByZXR1cm4gdGhpcy5iYXNlNjRFbmNBcnIoaW5wdXRBcnIpXG4gICAgICAgICAgICAucmVwbGFjZSgvPS9nLCBDb25zdGFudHMuRU1QVFlfU1RSSU5HKVxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcKy9nLCBcIi1cIilcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXC8vZywgXCJfXCIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGI2NCBlbmNvZGVkIHN0cmluZyBmcm9tIHBsYWludGV4dCBzdHJpbmcuXG4gICAgICogQHBhcmFtIGlucHV0XG4gICAgICovXG4gICAgZW5jb2RlKGlucHV0KSB7XG4gICAgICAgIGNvbnN0IGlucHV0VXRmOEFyciA9IEJyb3dzZXJTdHJpbmdVdGlscy5zdHJpbmdUb1V0ZjhBcnIoaW5wdXQpO1xuICAgICAgICByZXR1cm4gdGhpcy5iYXNlNjRFbmNBcnIoaW5wdXRVdGY4QXJyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQmFzZTY0IGVuY29kZSBieXRlIGFycmF5XG4gICAgICogQHBhcmFtIGFCeXRlc1xuICAgICAqL1xuICAgIGJhc2U2NEVuY0FycihhQnl0ZXMpIHtcbiAgICAgICAgY29uc3QgZXFMZW4gPSAoMyAtIChhQnl0ZXMubGVuZ3RoICUgMykpICUgMztcbiAgICAgICAgbGV0IHNCNjRFbmMgPSBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xuICAgICAgICBmb3IgKGxldCBuTW9kMywgbkxlbiA9IGFCeXRlcy5sZW5ndGgsIG5VaW50MjQgPSAwLCBuSWR4ID0gMDsgbklkeCA8IG5MZW47IG5JZHgrKykge1xuICAgICAgICAgICAgbk1vZDMgPSBuSWR4ICUgMztcbiAgICAgICAgICAgIC8qIFVuY29tbWVudCB0aGUgZm9sbG93aW5nIGxpbmUgaW4gb3JkZXIgdG8gc3BsaXQgdGhlIG91dHB1dCBpbiBsaW5lcyA3Ni1jaGFyYWN0ZXIgbG9uZzogKi9cbiAgICAgICAgICAgIC8qXG4gICAgICAgICAgICAgKmlmIChuSWR4ID4gMCAmJiAobklkeCAqIDQgLyAzKSAlIDc2ID09PSAwKSB7IHNCNjRFbmMgKz0gXCJcXHJcXG5cIjsgfVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBuVWludDI0IHw9IGFCeXRlc1tuSWR4XSA8PCAoKDE2ID4+PiBuTW9kMykgJiAyNCk7XG4gICAgICAgICAgICBpZiAobk1vZDMgPT09IDIgfHwgYUJ5dGVzLmxlbmd0aCAtIG5JZHggPT09IDEpIHtcbiAgICAgICAgICAgICAgICBzQjY0RW5jICs9IFN0cmluZy5mcm9tQ2hhckNvZGUodGhpcy51aW50NlRvQjY0KChuVWludDI0ID4+PiAxOCkgJiA2MyksIHRoaXMudWludDZUb0I2NCgoblVpbnQyNCA+Pj4gMTIpICYgNjMpLCB0aGlzLnVpbnQ2VG9CNjQoKG5VaW50MjQgPj4+IDYpICYgNjMpLCB0aGlzLnVpbnQ2VG9CNjQoblVpbnQyNCAmIDYzKSk7XG4gICAgICAgICAgICAgICAgblVpbnQyNCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVxTGVuID09PSAwXG4gICAgICAgICAgICA/IHNCNjRFbmNcbiAgICAgICAgICAgIDogc0I2NEVuYy5zdWJzdHJpbmcoMCwgc0I2NEVuYy5sZW5ndGggLSBlcUxlbikgK1xuICAgICAgICAgICAgICAgIChlcUxlbiA9PT0gMSA/IFwiPVwiIDogXCI9PVwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQmFzZTY0IHN0cmluZyB0byBhcnJheSBlbmNvZGluZyBoZWxwZXJcbiAgICAgKiBAcGFyYW0gblVpbnQ2XG4gICAgICovXG4gICAgdWludDZUb0I2NChuVWludDYpIHtcbiAgICAgICAgcmV0dXJuIG5VaW50NiA8IDI2XG4gICAgICAgICAgICA/IG5VaW50NiArIDY1XG4gICAgICAgICAgICA6IG5VaW50NiA8IDUyXG4gICAgICAgICAgICAgICAgPyBuVWludDYgKyA3MVxuICAgICAgICAgICAgICAgIDogblVpbnQ2IDwgNjJcbiAgICAgICAgICAgICAgICAgICAgPyBuVWludDYgLSA0XG4gICAgICAgICAgICAgICAgICAgIDogblVpbnQ2ID09PSA2MlxuICAgICAgICAgICAgICAgICAgICAgICAgPyA0M1xuICAgICAgICAgICAgICAgICAgICAgICAgOiBuVWludDYgPT09IDYzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyA0N1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogNjU7XG4gICAgfVxufVxuXG5leHBvcnQgeyBCYXNlNjRFbmNvZGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJhc2U2NEVuY29kZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserAuthError: function() { return /* binding */ BrowserAuthError; },\n/* harmony export */   BrowserAuthErrorMessage: function() { return /* binding */ BrowserAuthErrorMessage; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst BrowserAuthErrorMessage = {\n    pkceNotGenerated: {\n        code: \"pkce_not_created\",\n        desc: \"The PKCE code challenge and verifier could not be generated.\",\n    },\n    cryptoDoesNotExist: {\n        code: \"crypto_nonexistent\",\n        desc: \"The crypto object or function is not available.\",\n    },\n    httpMethodNotImplementedError: {\n        code: \"http_method_not_implemented\",\n        desc: \"The HTTP method given has not been implemented in this library.\",\n    },\n    emptyNavigateUriError: {\n        code: \"empty_navigate_uri\",\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\",\n    },\n    hashEmptyError: {\n        code: \"hash_empty_error\",\n        desc: \"Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. For more visit: aka.ms/msaljs/browser-errors.\",\n    },\n    hashDoesNotContainStateError: {\n        code: \"no_state_in_hash\",\n        desc: \"Hash does not contain state. Please verify that the request originated from msal.\",\n    },\n    hashDoesNotContainKnownPropertiesError: {\n        code: \"hash_does_not_contain_known_properties\",\n        desc: \"Hash does not contain known properites. Please verify that your redirectUri is not changing the hash. For more visit: aka.ms/msaljs/browser-errors.\",\n    },\n    unableToParseStateError: {\n        code: \"unable_to_parse_state\",\n        desc: \"Unable to parse state. Please verify that the request originated from msal.\",\n    },\n    stateInteractionTypeMismatchError: {\n        code: \"state_interaction_type_mismatch\",\n        desc: \"Hash contains state but the interaction type does not match the caller.\",\n    },\n    interactionInProgress: {\n        code: \"interaction_in_progress\",\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.  For more visit: aka.ms/msaljs/browser-errors.\",\n    },\n    popupWindowError: {\n        code: \"popup_window_error\",\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\",\n    },\n    emptyWindowError: {\n        code: \"empty_window_error\",\n        desc: \"window.open returned null or undefined window object.\",\n    },\n    userCancelledError: {\n        code: \"user_cancelled\",\n        desc: \"User cancelled the flow.\",\n    },\n    monitorPopupTimeoutError: {\n        code: \"monitor_window_timeout\",\n        desc: \"Token acquisition in popup failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\",\n    },\n    monitorIframeTimeoutError: {\n        code: \"monitor_window_timeout\",\n        desc: \"Token acquisition in iframe failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\",\n    },\n    redirectInIframeError: {\n        code: \"redirect_in_iframe\",\n        desc: \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\",\n    },\n    blockTokenRequestsInHiddenIframeError: {\n        code: \"block_iframe_reload\",\n        desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. For more visit: aka.ms/msaljs/browser-errors\",\n    },\n    blockAcquireTokenInPopupsError: {\n        code: \"block_nested_popups\",\n        desc: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\",\n    },\n    iframeClosedPrematurelyError: {\n        code: \"iframe_closed_prematurely\",\n        desc: \"The iframe being monitored was closed prematurely.\",\n    },\n    silentLogoutUnsupportedError: {\n        code: \"silent_logout_unsupported\",\n        desc: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\",\n    },\n    noAccountError: {\n        code: \"no_account_error\",\n        desc: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\",\n    },\n    silentPromptValueError: {\n        code: \"silent_prompt_value_error\",\n        desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\",\n    },\n    noTokenRequestCacheError: {\n        code: \"no_token_request_cache_error\",\n        desc: \"No token request found in cache.\",\n    },\n    unableToParseTokenRequestCacheError: {\n        code: \"unable_to_parse_token_request_cache_error\",\n        desc: \"The cached token request could not be parsed.\",\n    },\n    noCachedAuthorityError: {\n        code: \"no_cached_authority_error\",\n        desc: \"No cached authority found.\",\n    },\n    authRequestNotSet: {\n        code: \"auth_request_not_set_error\",\n        desc: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\",\n    },\n    invalidCacheType: {\n        code: \"invalid_cache_type\",\n        desc: \"Invalid cache type\",\n    },\n    notInBrowserEnvironment: {\n        code: \"non_browser_environment\",\n        desc: \"Login and token requests are not supported in non-browser environments.\",\n    },\n    databaseNotOpen: {\n        code: \"database_not_open\",\n        desc: \"Database is not open!\",\n    },\n    noNetworkConnectivity: {\n        code: \"no_network_connectivity\",\n        desc: \"No network connectivity. Check your internet connection.\",\n    },\n    postRequestFailed: {\n        code: \"post_request_failed\",\n        desc: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\",\n    },\n    getRequestFailed: {\n        code: \"get_request_failed\",\n        desc: \"Network request failed. Please check the network trace to determine root cause.\",\n    },\n    failedToParseNetworkResponse: {\n        code: \"failed_to_parse_response\",\n        desc: \"Failed to parse network response. Check network trace.\",\n    },\n    unableToLoadTokenError: {\n        code: \"unable_to_load_token\",\n        desc: \"Error loading token to cache.\",\n    },\n    signingKeyNotFoundInStorage: {\n        code: \"crypto_key_not_found\",\n        desc: \"Cryptographic Key or Keypair not found in browser storage.\",\n    },\n    authCodeRequired: {\n        code: \"auth_code_required\",\n        desc: \"An authorization code must be provided (as the `code` property on the request) to this flow.\",\n    },\n    authCodeOrNativeAccountRequired: {\n        code: \"auth_code_or_nativeAccountId_required\",\n        desc: \"An authorization code or nativeAccountId must be provided to this flow.\",\n    },\n    spaCodeAndNativeAccountPresent: {\n        code: \"spa_code_and_nativeAccountId_present\",\n        desc: \"Request cannot contain both spa code and native account id.\",\n    },\n    databaseUnavailable: {\n        code: \"database_unavailable\",\n        desc: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\",\n    },\n    unableToAcquireTokenFromNativePlatform: {\n        code: \"unable_to_acquire_token_from_native_platform\",\n        desc: \"Unable to acquire token from native platform. For a list of possible reasons visit aka.ms/msaljs/browser-errors.\",\n    },\n    nativeHandshakeTimeout: {\n        code: \"native_handshake_timeout\",\n        desc: \"Timed out while attempting to establish connection to browser extension\",\n    },\n    nativeExtensionNotInstalled: {\n        code: \"native_extension_not_installed\",\n        desc: \"Native extension is not installed. If you think this is a mistake call the initialize function.\",\n    },\n    nativeConnectionNotEstablished: {\n        code: \"native_connection_not_established\",\n        desc: \"Connection to native platform has not been established. Please install a compatible browser extension and run initialize(). For more please visit aka.ms/msaljs/browser-errors.\",\n    },\n    uninitializedPublicClientApplication: {\n        code: \"uninitialized_public_client_application\",\n        desc: \"You must call and await the initialize function before attempting to call any other MSAL API. For more please visit aka.ms/msaljs/browser-errors.\",\n    },\n    nativePromptNotSupported: {\n        code: \"native_prompt_not_supported\",\n        desc: \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\",\n    },\n};\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nclass BrowserAuthError extends _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\n        this.name = \"BrowserAuthError\";\n    }\n    /**\n     * Creates an error thrown when PKCE is not implemented.\n     * @param errDetail\n     */\n    static createPkceNotGeneratedError(errDetail) {\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code, `${BrowserAuthErrorMessage.pkceNotGenerated.desc} Detail:${errDetail}`);\n    }\n    /**\n     * Creates an error thrown when the crypto object is unavailable.\n     * @param errDetail\n     */\n    static createCryptoNotAvailableError(errDetail) {\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code, `${BrowserAuthErrorMessage.cryptoDoesNotExist.desc} Detail:${errDetail}`);\n    }\n    /**\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\n     * @param method\n     */\n    static createHttpMethodNotImplementedError(method) {\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code, `${BrowserAuthErrorMessage.httpMethodNotImplementedError.desc} Given Method: ${method}`);\n    }\n    /**\n     * Creates an error thrown when the navigation URI is empty.\n     */\n    static createEmptyNavigationUriError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\n    }\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     * @param hashValue\n     */\n    static createEmptyHashError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, `${BrowserAuthErrorMessage.hashEmptyError.desc}`);\n    }\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     */\n    static createHashDoesNotContainStateError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainStateError.code, BrowserAuthErrorMessage.hashDoesNotContainStateError.desc);\n    }\n    /**\n     * Creates an error thrown when the hash string value does not contain known properties\n     */\n    static createHashDoesNotContainKnownPropertiesError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.code, BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.desc);\n    }\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     */\n    static createUnableToParseStateError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseStateError.code, BrowserAuthErrorMessage.unableToParseStateError.desc);\n    }\n    /**\n     * Creates an error thrown when the state value in the hash does not match the interaction type of the API attempting to consume it.\n     */\n    static createStateInteractionTypeMismatchError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.stateInteractionTypeMismatchError.code, BrowserAuthErrorMessage.stateInteractionTypeMismatchError.desc);\n    }\n    /**\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\n     */\n    static createInteractionInProgressError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\n    }\n    /**\n     * Creates an error thrown when the popup window could not be opened.\n     * @param errDetail\n     */\n    static createPopupWindowError(errDetail) {\n        let errorMessage = BrowserAuthErrorMessage.popupWindowError.desc;\n        errorMessage = !_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(errDetail)\n            ? `${errorMessage} Details: ${errDetail}`\n            : errorMessage;\n        return new BrowserAuthError(BrowserAuthErrorMessage.popupWindowError.code, errorMessage);\n    }\n    /**\n     * Creates an error thrown when window.open returns an empty window object.\n     * @param errDetail\n     */\n    static createEmptyWindowCreatedError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\n    }\n    /**\n     * Creates an error thrown when the user closes a popup.\n     */\n    static createUserCancelledError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code, BrowserAuthErrorMessage.userCancelledError.desc);\n    }\n    /**\n     * Creates an error thrown when monitorPopupFromHash times out for a given popup.\n     */\n    static createMonitorPopupTimeoutError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorPopupTimeoutError.code, BrowserAuthErrorMessage.monitorPopupTimeoutError.desc);\n    }\n    /**\n     * Creates an error thrown when monitorIframeFromHash times out for a given iframe.\n     */\n    static createMonitorIframeTimeoutError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorIframeTimeoutError.code, BrowserAuthErrorMessage.monitorIframeTimeoutError.desc);\n    }\n    /**\n     * Creates an error thrown when navigateWindow is called inside an iframe or brokered applications.\n     * @param windowParentCheck\n     */\n    static createRedirectInIframeError(windowParentCheck) {\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, `${BrowserAuthErrorMessage.redirectInIframeError.desc} (window.parent !== window) => ${windowParentCheck}`);\n    }\n    /**\n     * Creates an error thrown when an auth reload is done inside an iframe.\n     */\n    static createBlockReloadInHiddenIframeError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code, BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\n    }\n    /**\n     * Creates an error thrown when a popup attempts to call an acquireToken API\n     * @returns\n     */\n    static createBlockAcquireTokenInPopupsError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.code, BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.desc);\n    }\n    /**\n     * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\n     */\n    static createIframeClosedPrematurelyError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\n    }\n    /**\n     * Creates an error thrown when the logout API is called on any of the silent interaction clients\n     */\n    static createSilentLogoutUnsupportedError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentLogoutUnsupportedError.code, BrowserAuthErrorMessage.silentLogoutUnsupportedError.desc);\n    }\n    /**\n     * Creates an error thrown when the account object is not provided in the acquireTokenSilent API.\n     */\n    static createNoAccountError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noAccountError.code, BrowserAuthErrorMessage.noAccountError.desc);\n    }\n    /**\n     * Creates an error thrown when a given prompt value is invalid for silent requests.\n     */\n    static createSilentPromptValueError(givenPrompt) {\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, `${BrowserAuthErrorMessage.silentPromptValueError.desc} Given value: ${givenPrompt}`);\n    }\n    /**\n     * Creates an error thrown when the cached token request could not be retrieved from the cache\n     */\n    static createUnableToParseTokenRequestCacheError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.code, BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.desc);\n    }\n    /**\n     * Creates an error thrown when the token request could not be retrieved from the cache\n     */\n    static createNoTokenRequestCacheError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noTokenRequestCacheError.code, BrowserAuthErrorMessage.noTokenRequestCacheError.desc);\n    }\n    /**\n     * Creates an error thrown when handleCodeResponse is called before initiateAuthRequest (InteractionHandler)\n     */\n    static createAuthRequestNotSetError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.authRequestNotSet.code, BrowserAuthErrorMessage.authRequestNotSet.desc);\n    }\n    /**\n     * Creates an error thrown when the authority could not be retrieved from the cache\n     */\n    static createNoCachedAuthorityError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noCachedAuthorityError.code, BrowserAuthErrorMessage.noCachedAuthorityError.desc);\n    }\n    /**\n     * Creates an error thrown if cache type is invalid.\n     */\n    static createInvalidCacheTypeError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, `${BrowserAuthErrorMessage.invalidCacheType.desc}`);\n    }\n    /**\n     * Create an error thrown when login and token requests are made from a non-browser environment\n     */\n    static createNonBrowserEnvironmentError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.notInBrowserEnvironment.code, BrowserAuthErrorMessage.notInBrowserEnvironment.desc);\n    }\n    /**\n     * Create an error thrown when indexDB database is not open\n     */\n    static createDatabaseNotOpenError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseNotOpen.code, BrowserAuthErrorMessage.databaseNotOpen.desc);\n    }\n    /**\n     * Create an error thrown when token fetch fails due to no internet\n     */\n    static createNoNetworkConnectivityError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noNetworkConnectivity.code, BrowserAuthErrorMessage.noNetworkConnectivity.desc);\n    }\n    /**\n     * Create an error thrown when token fetch fails due to reasons other than internet connectivity\n     */\n    static createPostRequestFailedError(errorDesc, endpoint) {\n        return new BrowserAuthError(BrowserAuthErrorMessage.postRequestFailed.code, `${BrowserAuthErrorMessage.postRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n    /**\n     * Create an error thrown when get request fails due to reasons other than internet connectivity\n     */\n    static createGetRequestFailedError(errorDesc, endpoint) {\n        return new BrowserAuthError(BrowserAuthErrorMessage.getRequestFailed.code, `${BrowserAuthErrorMessage.getRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n    /**\n     * Create an error thrown when network client fails to parse network response\n     */\n    static createFailedToParseNetworkResponseError(endpoint) {\n        return new BrowserAuthError(BrowserAuthErrorMessage.failedToParseNetworkResponse.code, `${BrowserAuthErrorMessage.failedToParseNetworkResponse.desc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n    /**\n     * Create an error thrown when the necessary information is not available to sideload tokens\n     */\n    static createUnableToLoadTokenError(errorDetail) {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToLoadTokenError.code, `${BrowserAuthErrorMessage.unableToLoadTokenError.desc} | ${errorDetail}`);\n    }\n    /**\n     * Create an error thrown when the queried cryptographic key is not found in IndexedDB\n     */\n    static createSigningKeyNotFoundInStorageError(keyId) {\n        return new BrowserAuthError(BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code, `${BrowserAuthErrorMessage.signingKeyNotFoundInStorage.desc} | No match found for KeyId: ${keyId}`);\n    }\n    /**\n     * Create an error when an authorization code is required but not provided\n     */\n    static createAuthCodeRequiredError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.authCodeRequired.code, BrowserAuthErrorMessage.authCodeRequired.desc);\n    }\n    /**\n     * Create an error when an authorization code or native account ID is required but not provided\n     */\n    static createAuthCodeOrNativeAccountIdRequiredError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.code, BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.desc);\n    }\n    /**\n     * Create an error when both authorization code and native account ID are provided\n     */\n    static createSpaCodeAndNativeAccountIdPresentError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.spaCodeAndNativeAccountPresent.code, BrowserAuthErrorMessage.spaCodeAndNativeAccountPresent.desc);\n    }\n    /**\n     * Create an error when IndexedDB is unavailable\n     */\n    static createDatabaseUnavailableError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseUnavailable.code, BrowserAuthErrorMessage.databaseUnavailable.desc);\n    }\n    /**\n     * Create an error when native token acquisition is not possible\n     */\n    static createUnableToAcquireTokenFromNativePlatformError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.code, BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.desc);\n    }\n    /**\n     * Create an error thrown when Handshake with browser extension times out\n     */\n    static createNativeHandshakeTimeoutError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeHandshakeTimeout.code, BrowserAuthErrorMessage.nativeHandshakeTimeout.desc);\n    }\n    /**\n     * Create an error thrown when browser extension is not installed\n     */\n    static createNativeExtensionNotInstalledError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeExtensionNotInstalled.code, BrowserAuthErrorMessage.nativeExtensionNotInstalled.desc);\n    }\n    /**\n     * Create an error when native connection has not been established\n     * @returns\n     */\n    static createNativeConnectionNotEstablishedError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeConnectionNotEstablished.code, BrowserAuthErrorMessage.nativeConnectionNotEstablished.desc);\n    }\n    /**\n     * Create an error thrown when the initialize function hasn't been called\n     */\n    static createUninitializedPublicClientApplication() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.uninitializedPublicClientApplication.code, BrowserAuthErrorMessage.uninitializedPublicClientApplication.desc);\n    }\n    /**\n     * Create an error thrown when requesting a token directly from the native platform with an unsupported prompt parameter e.g. select_account, login or create\n     * These requests must go through eSTS to ensure eSTS is aware of the new account\n     */\n    static createNativePromptParameterNotSupportedError() {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativePromptNotSupported.code, BrowserAuthErrorMessage.nativePromptNotSupported.desc);\n    }\n}\n\n\n//# sourceMappingURL=BrowserAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserConfigurationAuthError: function() { return /* binding */ BrowserConfigurationAuthError; },\n/* harmony export */   BrowserConfigurationAuthErrorMessage: function() { return /* binding */ BrowserConfigurationAuthErrorMessage; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst BrowserConfigurationAuthErrorMessage = {\n    redirectUriNotSet: {\n        code: \"redirect_uri_empty\",\n        desc: \"A redirect URI is required for all calls, and none has been set.\",\n    },\n    postLogoutUriNotSet: {\n        code: \"post_logout_uri_empty\",\n        desc: \"A post logout redirect has not been set.\",\n    },\n    storageNotSupportedError: {\n        code: \"storage_not_supported\",\n        desc: \"Given storage configuration option was not supported.\",\n    },\n    noRedirectCallbacksSet: {\n        code: \"no_redirect_callbacks\",\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\",\n    },\n    invalidCallbackObject: {\n        code: \"invalid_callback_object\",\n        desc: \"The object passed for the callback was invalid. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\",\n    },\n    stubPcaInstanceCalled: {\n        code: \"stubbed_public_client_application_called\",\n        desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\n    },\n    inMemRedirectUnavailable: {\n        code: \"in_mem_redirect_unavailable\",\n        desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\",\n    },\n    entropyNotProvided: {\n        code: \"entropy_not_provided\",\n        desc: \"The available browser crypto interface requires entropy set via system.cryptoOptions.entropy configuration option.\",\n    },\n};\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nclass BrowserConfigurationAuthError extends _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n    /**\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\n     */\n    static createRedirectUriEmptyError() {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code, BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\n    }\n    /**\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\n     */\n    static createPostLogoutRedirectUriEmptyError() {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code, BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\n    }\n    /**\n     * Creates error thrown when given storage location is not supported.\n     * @param givenStorageLocation\n     */\n    static createStorageNotSupportedError(givenStorageLocation) {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`);\n    }\n    /**\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\n     */\n    static createRedirectCallbacksNotSetError() {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\n    }\n    /**\n     * Creates error thrown when the stub instance of PublicClientApplication is called.\n     */\n    static createStubPcaInstanceCalledError() {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code, BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc);\n    }\n    /*\n     * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\n     */\n    static createInMemoryRedirectUnavailableError() {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code, BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc);\n    }\n    /**\n     * Creates an error thrown when a crypto interface that requires entropy is initialized without entropy\n     */\n    static createEntropyNotProvided() {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.entropyNotProvided.code, BrowserConfigurationAuthErrorMessage.entropyNotProvided.desc);\n    }\n}\n\n\n//# sourceMappingURL=BrowserConfigurationAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NativeAuthError: function() { return /* binding */ NativeAuthError; },\n/* harmony export */   NativeAuthErrorMessage: function() { return /* binding */ NativeAuthErrorMessage; },\n/* harmony export */   NativeStatusCode: function() { return /* binding */ NativeStatusCode; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst INVALID_METHOD_ERROR = -2147186943;\nconst NativeStatusCode = {\n    USER_INTERACTION_REQUIRED: \"USER_INTERACTION_REQUIRED\",\n    USER_CANCEL: \"USER_CANCEL\",\n    NO_NETWORK: \"NO_NETWORK\",\n    TRANSIENT_ERROR: \"TRANSIENT_ERROR\",\n    PERSISTENT_ERROR: \"PERSISTENT_ERROR\",\n    DISABLED: \"DISABLED\",\n    ACCOUNT_UNAVAILABLE: \"ACCOUNT_UNAVAILABLE\",\n};\nconst NativeAuthErrorMessage = {\n    extensionError: {\n        code: \"ContentError\",\n    },\n    userSwitch: {\n        code: \"user_switch\",\n        desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\",\n    },\n    tokensNotFoundInCache: {\n        code: \"tokens_not_found_in_internal_memory_cache\",\n        desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\",\n    },\n};\nclass NativeAuthError extends _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AuthError {\n    constructor(errorCode, description, ext) {\n        super(errorCode, description);\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\n        this.name = \"NativeAuthError\";\n        this.ext = ext;\n    }\n    /**\n     * These errors should result in a fallback to the 'standard' browser based auth flow.\n     */\n    isFatal() {\n        if (this.ext &&\n            this.ext.status &&\n            (this.ext.status === NativeStatusCode.PERSISTENT_ERROR ||\n                this.ext.status === NativeStatusCode.DISABLED)) {\n            return true;\n        }\n        if (this.ext &&\n            this.ext.error &&\n            this.ext.error === INVALID_METHOD_ERROR) {\n            return true;\n        }\n        switch (this.errorCode) {\n            case NativeAuthErrorMessage.extensionError.code:\n                return true;\n            default:\n                return false;\n        }\n    }\n    /**\n     * Create the appropriate error object based on the WAM status code.\n     * @param code\n     * @param description\n     * @param ext\n     * @returns\n     */\n    static createError(code, description, ext) {\n        if (ext && ext.status) {\n            switch (ext.status) {\n                case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n                    return _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.InteractionRequiredAuthError.createNativeAccountUnavailableError();\n                case NativeStatusCode.USER_INTERACTION_REQUIRED:\n                    return new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.InteractionRequiredAuthError(code, description);\n                case NativeStatusCode.USER_CANCEL:\n                    return _BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createUserCancelledError();\n                case NativeStatusCode.NO_NETWORK:\n                    return _BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createNoNetworkConnectivityError();\n            }\n        }\n        return new NativeAuthError(code, description, ext);\n    }\n    /**\n     * Creates user switch error when the user chooses a different account in the native broker prompt\n     * @returns\n     */\n    static createUserSwitchError() {\n        return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\n    }\n    /**\n     * Creates a tokens not found error when the internal cache look up fails\n     * @returns NativeAuthError: tokensNotFoundInCache\n     */\n    static createTokensNotFoundInCacheError() {\n        return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\n    }\n}\n\n\n//# sourceMappingURL=NativeAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL05hdGl2ZUF1dGhFcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2dFO0FBQ25COztBQUUxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4QkFBOEIseURBQVM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDRFQUE0QjtBQUN2RDtBQUNBLCtCQUErQiw0RUFBNEI7QUFDM0Q7QUFDQSwyQkFBMkIsbUVBQWdCO0FBQzNDO0FBQ0EsMkJBQTJCLG1FQUFnQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFcUU7QUFDckUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9lcnJvci9OYXRpdmVBdXRoRXJyb3IubWpzP2Q1ZmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEF1dGhFcnJvciwgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvciB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbic7XG5pbXBvcnQgeyBCcm93c2VyQXV0aEVycm9yIH0gZnJvbSAnLi9Ccm93c2VyQXV0aEVycm9yLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY29uc3QgSU5WQUxJRF9NRVRIT0RfRVJST1IgPSAtMjE0NzE4Njk0MztcbmNvbnN0IE5hdGl2ZVN0YXR1c0NvZGUgPSB7XG4gICAgVVNFUl9JTlRFUkFDVElPTl9SRVFVSVJFRDogXCJVU0VSX0lOVEVSQUNUSU9OX1JFUVVJUkVEXCIsXG4gICAgVVNFUl9DQU5DRUw6IFwiVVNFUl9DQU5DRUxcIixcbiAgICBOT19ORVRXT1JLOiBcIk5PX05FVFdPUktcIixcbiAgICBUUkFOU0lFTlRfRVJST1I6IFwiVFJBTlNJRU5UX0VSUk9SXCIsXG4gICAgUEVSU0lTVEVOVF9FUlJPUjogXCJQRVJTSVNURU5UX0VSUk9SXCIsXG4gICAgRElTQUJMRUQ6IFwiRElTQUJMRURcIixcbiAgICBBQ0NPVU5UX1VOQVZBSUxBQkxFOiBcIkFDQ09VTlRfVU5BVkFJTEFCTEVcIixcbn07XG5jb25zdCBOYXRpdmVBdXRoRXJyb3JNZXNzYWdlID0ge1xuICAgIGV4dGVuc2lvbkVycm9yOiB7XG4gICAgICAgIGNvZGU6IFwiQ29udGVudEVycm9yXCIsXG4gICAgfSxcbiAgICB1c2VyU3dpdGNoOiB7XG4gICAgICAgIGNvZGU6IFwidXNlcl9zd2l0Y2hcIixcbiAgICAgICAgZGVzYzogXCJVc2VyIGF0dGVtcHRlZCB0byBzd2l0Y2ggYWNjb3VudHMgaW4gdGhlIG5hdGl2ZSBicm9rZXIsIHdoaWNoIGlzIG5vdCBhbGxvd2VkLiBBbGwgbmV3IGFjY291bnRzIG11c3Qgc2lnbi1pbiB0aHJvdWdoIHRoZSBzdGFuZGFyZCB3ZWIgZmxvdyBmaXJzdCwgcGxlYXNlIHRyeSBhZ2Fpbi5cIixcbiAgICB9LFxuICAgIHRva2Vuc05vdEZvdW5kSW5DYWNoZToge1xuICAgICAgICBjb2RlOiBcInRva2Vuc19ub3RfZm91bmRfaW5faW50ZXJuYWxfbWVtb3J5X2NhY2hlXCIsXG4gICAgICAgIGRlc2M6IFwiVG9rZW5zIG5vdCBjYWNoZWQgaW4gTVNBTCBKUyBpbnRlcm5hbCBtZW1vcnksIHBsZWFzZSBtYWtlIHRoZSBXQU0gcmVxdWVzdFwiLFxuICAgIH0sXG59O1xuY2xhc3MgTmF0aXZlQXV0aEVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihlcnJvckNvZGUsIGRlc2NyaXB0aW9uLCBleHQpIHtcbiAgICAgICAgc3VwZXIoZXJyb3JDb2RlLCBkZXNjcmlwdGlvbik7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBOYXRpdmVBdXRoRXJyb3IucHJvdG90eXBlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJOYXRpdmVBdXRoRXJyb3JcIjtcbiAgICAgICAgdGhpcy5leHQgPSBleHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZXNlIGVycm9ycyBzaG91bGQgcmVzdWx0IGluIGEgZmFsbGJhY2sgdG8gdGhlICdzdGFuZGFyZCcgYnJvd3NlciBiYXNlZCBhdXRoIGZsb3cuXG4gICAgICovXG4gICAgaXNGYXRhbCgpIHtcbiAgICAgICAgaWYgKHRoaXMuZXh0ICYmXG4gICAgICAgICAgICB0aGlzLmV4dC5zdGF0dXMgJiZcbiAgICAgICAgICAgICh0aGlzLmV4dC5zdGF0dXMgPT09IE5hdGl2ZVN0YXR1c0NvZGUuUEVSU0lTVEVOVF9FUlJPUiB8fFxuICAgICAgICAgICAgICAgIHRoaXMuZXh0LnN0YXR1cyA9PT0gTmF0aXZlU3RhdHVzQ29kZS5ESVNBQkxFRCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmV4dCAmJlxuICAgICAgICAgICAgdGhpcy5leHQuZXJyb3IgJiZcbiAgICAgICAgICAgIHRoaXMuZXh0LmVycm9yID09PSBJTlZBTElEX01FVEhPRF9FUlJPUikge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgc3dpdGNoICh0aGlzLmVycm9yQ29kZSkge1xuICAgICAgICAgICAgY2FzZSBOYXRpdmVBdXRoRXJyb3JNZXNzYWdlLmV4dGVuc2lvbkVycm9yLmNvZGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgdGhlIGFwcHJvcHJpYXRlIGVycm9yIG9iamVjdCBiYXNlZCBvbiB0aGUgV0FNIHN0YXR1cyBjb2RlLlxuICAgICAqIEBwYXJhbSBjb2RlXG4gICAgICogQHBhcmFtIGRlc2NyaXB0aW9uXG4gICAgICogQHBhcmFtIGV4dFxuICAgICAqIEByZXR1cm5zXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZUVycm9yKGNvZGUsIGRlc2NyaXB0aW9uLCBleHQpIHtcbiAgICAgICAgaWYgKGV4dCAmJiBleHQuc3RhdHVzKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKGV4dC5zdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBjYXNlIE5hdGl2ZVN0YXR1c0NvZGUuQUNDT1VOVF9VTkFWQUlMQUJMRTpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IuY3JlYXRlTmF0aXZlQWNjb3VudFVuYXZhaWxhYmxlRXJyb3IoKTtcbiAgICAgICAgICAgICAgICBjYXNlIE5hdGl2ZVN0YXR1c0NvZGUuVVNFUl9JTlRFUkFDVElPTl9SRVFVSVJFRDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yKGNvZGUsIGRlc2NyaXB0aW9uKTtcbiAgICAgICAgICAgICAgICBjYXNlIE5hdGl2ZVN0YXR1c0NvZGUuVVNFUl9DQU5DRUw6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBCcm93c2VyQXV0aEVycm9yLmNyZWF0ZVVzZXJDYW5jZWxsZWRFcnJvcigpO1xuICAgICAgICAgICAgICAgIGNhc2UgTmF0aXZlU3RhdHVzQ29kZS5OT19ORVRXT1JLOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gQnJvd3NlckF1dGhFcnJvci5jcmVhdGVOb05ldHdvcmtDb25uZWN0aXZpdHlFcnJvcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgTmF0aXZlQXV0aEVycm9yKGNvZGUsIGRlc2NyaXB0aW9uLCBleHQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIHVzZXIgc3dpdGNoIGVycm9yIHdoZW4gdGhlIHVzZXIgY2hvb3NlcyBhIGRpZmZlcmVudCBhY2NvdW50IGluIHRoZSBuYXRpdmUgYnJva2VyIHByb21wdFxuICAgICAqIEByZXR1cm5zXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZVVzZXJTd2l0Y2hFcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBOYXRpdmVBdXRoRXJyb3IoTmF0aXZlQXV0aEVycm9yTWVzc2FnZS51c2VyU3dpdGNoLmNvZGUsIE5hdGl2ZUF1dGhFcnJvck1lc3NhZ2UudXNlclN3aXRjaC5kZXNjKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHRva2VucyBub3QgZm91bmQgZXJyb3Igd2hlbiB0aGUgaW50ZXJuYWwgY2FjaGUgbG9vayB1cCBmYWlsc1xuICAgICAqIEByZXR1cm5zIE5hdGl2ZUF1dGhFcnJvcjogdG9rZW5zTm90Rm91bmRJbkNhY2hlXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZVRva2Vuc05vdEZvdW5kSW5DYWNoZUVycm9yKCkge1xuICAgICAgICByZXR1cm4gbmV3IE5hdGl2ZUF1dGhFcnJvcihOYXRpdmVBdXRoRXJyb3JNZXNzYWdlLnRva2Vuc05vdEZvdW5kSW5DYWNoZS5jb2RlLCBOYXRpdmVBdXRoRXJyb3JNZXNzYWdlLnRva2Vuc05vdEZvdW5kSW5DYWNoZS5kZXNjKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IE5hdGl2ZUF1dGhFcnJvciwgTmF0aXZlQXV0aEVycm9yTWVzc2FnZSwgTmF0aXZlU3RhdHVzQ29kZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TmF0aXZlQXV0aEVycm9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventHandler: function() { return /* binding */ EventHandler; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _EventType_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EventType.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass EventHandler {\n    constructor(logger, browserCrypto) {\n        this.eventCallbacks = new Map();\n        this.logger = logger;\n        this.browserCrypto = browserCrypto;\n        this.listeningToStorageEvents = false;\n        this.handleAccountCacheChange =\n            this.handleAccountCacheChange.bind(this);\n    }\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback) {\n        if (typeof window !== \"undefined\") {\n            const callbackId = this.browserCrypto.createNewGuid();\n            this.eventCallbacks.set(callbackId, callback);\n            this.logger.verbose(`Event callback registered with id: ${callbackId}`);\n            return callbackId;\n        }\n        return null;\n    }\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId) {\n        this.eventCallbacks.delete(callbackId);\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\n    }\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents() {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n        if (!this.listeningToStorageEvents) {\n            this.logger.verbose(\"Adding account storage listener.\");\n            this.listeningToStorageEvents = true;\n            window.addEventListener(\"storage\", this.handleAccountCacheChange);\n        }\n        else {\n            this.logger.verbose(\"Account storage listener already registered.\");\n        }\n    }\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents() {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n        if (this.listeningToStorageEvents) {\n            this.logger.verbose(\"Removing account storage listener.\");\n            window.removeEventListener(\"storage\", this.handleAccountCacheChange);\n            this.listeningToStorageEvents = false;\n        }\n        else {\n            this.logger.verbose(\"No account storage listener registered.\");\n        }\n    }\n    /**\n     * Emits events by calling callback with event message\n     * @param eventType\n     * @param interactionType\n     * @param payload\n     * @param error\n     */\n    emitEvent(eventType, interactionType, payload, error) {\n        if (typeof window !== \"undefined\") {\n            const message = {\n                eventType: eventType,\n                interactionType: interactionType || null,\n                payload: payload || null,\n                error: error || null,\n                timestamp: Date.now(),\n            };\n            this.logger.info(`Emitting event: ${eventType}`);\n            this.eventCallbacks.forEach((callback, callbackId) => {\n                this.logger.verbose(`Emitting event to callback ${callbackId}: ${eventType}`);\n                callback.apply(null, [message]);\n            });\n        }\n    }\n    /**\n     * Emit account added/removed events when cached accounts are changed in a different tab or frame\n     */\n    handleAccountCacheChange(e) {\n        try {\n            const cacheValue = e.newValue || e.oldValue;\n            if (!cacheValue) {\n                return;\n            }\n            const parsedValue = JSON.parse(cacheValue);\n            if (typeof parsedValue !== \"object\" ||\n                !_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AccountEntity.isAccountEntity(parsedValue)) {\n                return;\n            }\n            const accountEntity = _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.CacheManager.toObject(new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AccountEntity(), parsedValue);\n            const accountInfo = accountEntity.getAccountInfo();\n            if (!e.oldValue && e.newValue) {\n                this.logger.info(\"Account was added to cache in a different window\");\n                this.emitEvent(_EventType_mjs__WEBPACK_IMPORTED_MODULE_1__.EventType.ACCOUNT_ADDED, undefined, accountInfo);\n            }\n            else if (!e.newValue && e.oldValue) {\n                this.logger.info(\"Account was removed from cache in a different window\");\n                this.emitEvent(_EventType_mjs__WEBPACK_IMPORTED_MODULE_1__.EventType.ACCOUNT_REMOVED, undefined, accountInfo);\n            }\n        }\n        catch (e) {\n            return;\n        }\n    }\n}\n\n\n//# sourceMappingURL=EventHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2V2ZW50L0V2ZW50SGFuZGxlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUNvRDtBQUNyQjs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0VBQXNFLFdBQVc7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsWUFBWTtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxVQUFVO0FBQzFEO0FBQ0Esa0VBQWtFLFdBQVcsSUFBSSxVQUFVO0FBQzNGO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDZEQUFhO0FBQzlCO0FBQ0E7QUFDQSxrQ0FBa0MsNERBQVksY0FBYyw2REFBYTtBQUN6RTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IscURBQVM7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHFEQUFTO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2V2ZW50L0V2ZW50SGFuZGxlci5tanM/NmM4MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQWNjb3VudEVudGl0eSwgQ2FjaGVNYW5hZ2VyIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uJztcbmltcG9ydCB7IEV2ZW50VHlwZSB9IGZyb20gJy4vRXZlbnRUeXBlLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY2xhc3MgRXZlbnRIYW5kbGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihsb2dnZXIsIGJyb3dzZXJDcnlwdG8pIHtcbiAgICAgICAgdGhpcy5ldmVudENhbGxiYWNrcyA9IG5ldyBNYXAoKTtcbiAgICAgICAgdGhpcy5sb2dnZXIgPSBsb2dnZXI7XG4gICAgICAgIHRoaXMuYnJvd3NlckNyeXB0byA9IGJyb3dzZXJDcnlwdG87XG4gICAgICAgIHRoaXMubGlzdGVuaW5nVG9TdG9yYWdlRXZlbnRzID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaGFuZGxlQWNjb3VudENhY2hlQ2hhbmdlID1cbiAgICAgICAgICAgIHRoaXMuaGFuZGxlQWNjb3VudENhY2hlQ2hhbmdlLmJpbmQodGhpcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFkZHMgZXZlbnQgY2FsbGJhY2tzIHRvIGFycmF5XG4gICAgICogQHBhcmFtIGNhbGxiYWNrXG4gICAgICovXG4gICAgYWRkRXZlbnRDYWxsYmFjayhjYWxsYmFjaykge1xuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgY29uc3QgY2FsbGJhY2tJZCA9IHRoaXMuYnJvd3NlckNyeXB0by5jcmVhdGVOZXdHdWlkKCk7XG4gICAgICAgICAgICB0aGlzLmV2ZW50Q2FsbGJhY2tzLnNldChjYWxsYmFja0lkLCBjYWxsYmFjayk7XG4gICAgICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKGBFdmVudCBjYWxsYmFjayByZWdpc3RlcmVkIHdpdGggaWQ6ICR7Y2FsbGJhY2tJZH1gKTtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFja0lkO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGNhbGxiYWNrIHdpdGggcHJvdmlkZWQgaWQgZnJvbSBjYWxsYmFjayBhcnJheVxuICAgICAqIEBwYXJhbSBjYWxsYmFja0lkXG4gICAgICovXG4gICAgcmVtb3ZlRXZlbnRDYWxsYmFjayhjYWxsYmFja0lkKSB7XG4gICAgICAgIHRoaXMuZXZlbnRDYWxsYmFja3MuZGVsZXRlKGNhbGxiYWNrSWQpO1xuICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKGBFdmVudCBjYWxsYmFjayAke2NhbGxiYWNrSWR9IHJlbW92ZWQuYCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFkZHMgZXZlbnQgbGlzdGVuZXIgdGhhdCBlbWl0cyBhbiBldmVudCB3aGVuIGEgdXNlciBhY2NvdW50IGlzIGFkZGVkIG9yIHJlbW92ZWQgZnJvbSBsb2NhbHN0b3JhZ2UgaW4gYSBkaWZmZXJlbnQgYnJvd3NlciB0YWIgb3Igd2luZG93XG4gICAgICovXG4gICAgZW5hYmxlQWNjb3VudFN0b3JhZ2VFdmVudHMoKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLmxpc3RlbmluZ1RvU3RvcmFnZUV2ZW50cykge1xuICAgICAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShcIkFkZGluZyBhY2NvdW50IHN0b3JhZ2UgbGlzdGVuZXIuXCIpO1xuICAgICAgICAgICAgdGhpcy5saXN0ZW5pbmdUb1N0b3JhZ2VFdmVudHMgPSB0cnVlO1xuICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzdG9yYWdlXCIsIHRoaXMuaGFuZGxlQWNjb3VudENhY2hlQ2hhbmdlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJBY2NvdW50IHN0b3JhZ2UgbGlzdGVuZXIgYWxyZWFkeSByZWdpc3RlcmVkLlwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGV2ZW50IGxpc3RlbmVyIHRoYXQgZW1pdHMgYW4gZXZlbnQgd2hlbiBhIHVzZXIgYWNjb3VudCBpcyBhZGRlZCBvciByZW1vdmVkIGZyb20gbG9jYWxzdG9yYWdlIGluIGEgZGlmZmVyZW50IGJyb3dzZXIgdGFiIG9yIHdpbmRvd1xuICAgICAqL1xuICAgIGRpc2FibGVBY2NvdW50U3RvcmFnZUV2ZW50cygpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5saXN0ZW5pbmdUb1N0b3JhZ2VFdmVudHMpIHtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJSZW1vdmluZyBhY2NvdW50IHN0b3JhZ2UgbGlzdGVuZXIuXCIpO1xuICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzdG9yYWdlXCIsIHRoaXMuaGFuZGxlQWNjb3VudENhY2hlQ2hhbmdlKTtcbiAgICAgICAgICAgIHRoaXMubGlzdGVuaW5nVG9TdG9yYWdlRXZlbnRzID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKFwiTm8gYWNjb3VudCBzdG9yYWdlIGxpc3RlbmVyIHJlZ2lzdGVyZWQuXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVtaXRzIGV2ZW50cyBieSBjYWxsaW5nIGNhbGxiYWNrIHdpdGggZXZlbnQgbWVzc2FnZVxuICAgICAqIEBwYXJhbSBldmVudFR5cGVcbiAgICAgKiBAcGFyYW0gaW50ZXJhY3Rpb25UeXBlXG4gICAgICogQHBhcmFtIHBheWxvYWRcbiAgICAgKiBAcGFyYW0gZXJyb3JcbiAgICAgKi9cbiAgICBlbWl0RXZlbnQoZXZlbnRUeXBlLCBpbnRlcmFjdGlvblR5cGUsIHBheWxvYWQsIGVycm9yKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICBjb25zdCBtZXNzYWdlID0ge1xuICAgICAgICAgICAgICAgIGV2ZW50VHlwZTogZXZlbnRUeXBlLFxuICAgICAgICAgICAgICAgIGludGVyYWN0aW9uVHlwZTogaW50ZXJhY3Rpb25UeXBlIHx8IG51bGwsXG4gICAgICAgICAgICAgICAgcGF5bG9hZDogcGF5bG9hZCB8fCBudWxsLFxuICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvciB8fCBudWxsLFxuICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKGBFbWl0dGluZyBldmVudDogJHtldmVudFR5cGV9YCk7XG4gICAgICAgICAgICB0aGlzLmV2ZW50Q2FsbGJhY2tzLmZvckVhY2goKGNhbGxiYWNrLCBjYWxsYmFja0lkKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShgRW1pdHRpbmcgZXZlbnQgdG8gY2FsbGJhY2sgJHtjYWxsYmFja0lkfTogJHtldmVudFR5cGV9YCk7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2suYXBwbHkobnVsbCwgW21lc3NhZ2VdKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVtaXQgYWNjb3VudCBhZGRlZC9yZW1vdmVkIGV2ZW50cyB3aGVuIGNhY2hlZCBhY2NvdW50cyBhcmUgY2hhbmdlZCBpbiBhIGRpZmZlcmVudCB0YWIgb3IgZnJhbWVcbiAgICAgKi9cbiAgICBoYW5kbGVBY2NvdW50Q2FjaGVDaGFuZ2UoZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgY2FjaGVWYWx1ZSA9IGUubmV3VmFsdWUgfHwgZS5vbGRWYWx1ZTtcbiAgICAgICAgICAgIGlmICghY2FjaGVWYWx1ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHBhcnNlZFZhbHVlID0gSlNPTi5wYXJzZShjYWNoZVZhbHVlKTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFyc2VkVmFsdWUgIT09IFwib2JqZWN0XCIgfHxcbiAgICAgICAgICAgICAgICAhQWNjb3VudEVudGl0eS5pc0FjY291bnRFbnRpdHkocGFyc2VkVmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgYWNjb3VudEVudGl0eSA9IENhY2hlTWFuYWdlci50b09iamVjdChuZXcgQWNjb3VudEVudGl0eSgpLCBwYXJzZWRWYWx1ZSk7XG4gICAgICAgICAgICBjb25zdCBhY2NvdW50SW5mbyA9IGFjY291bnRFbnRpdHkuZ2V0QWNjb3VudEluZm8oKTtcbiAgICAgICAgICAgIGlmICghZS5vbGRWYWx1ZSAmJiBlLm5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcIkFjY291bnQgd2FzIGFkZGVkIHRvIGNhY2hlIGluIGEgZGlmZmVyZW50IHdpbmRvd1wiKTtcbiAgICAgICAgICAgICAgICB0aGlzLmVtaXRFdmVudChFdmVudFR5cGUuQUNDT1VOVF9BRERFRCwgdW5kZWZpbmVkLCBhY2NvdW50SW5mbyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICghZS5uZXdWYWx1ZSAmJiBlLm9sZFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcIkFjY291bnQgd2FzIHJlbW92ZWQgZnJvbSBjYWNoZSBpbiBhIGRpZmZlcmVudCB3aW5kb3dcIik7XG4gICAgICAgICAgICAgICAgdGhpcy5lbWl0RXZlbnQoRXZlbnRUeXBlLkFDQ09VTlRfUkVNT1ZFRCwgdW5kZWZpbmVkLCBhY2NvdW50SW5mbyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IHsgRXZlbnRIYW5kbGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FdmVudEhhbmRsZXIubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/event/EventMessage.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/event/EventMessage.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventMessageUtils: function() { return /* binding */ EventMessageUtils; }\n/* harmony export */ });\n/* harmony import */ var _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventType.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass EventMessageUtils {\n    /**\n     * Gets interaction status from event message\n     * @param message\n     * @param currentStatus\n     */\n    static getInteractionStatusFromEvent(message, currentStatus) {\n        switch (message.eventType) {\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.LOGIN_START:\n                return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.Login;\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.SSO_SILENT_START:\n                return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.SsoSilent;\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.ACQUIRE_TOKEN_START:\n                if (message.interactionType === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionType.Redirect ||\n                    message.interactionType === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionType.Popup) {\n                    return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.AcquireToken;\n                }\n                break;\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.HANDLE_REDIRECT_START:\n                return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.HandleRedirect;\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.LOGOUT_START:\n                return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.Logout;\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.SSO_SILENT_SUCCESS:\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.SSO_SILENT_FAILURE:\n                if (currentStatus &&\n                    currentStatus !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.SsoSilent) {\n                    // Prevent this event from clearing any status other than ssoSilent\n                    break;\n                }\n                return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.None;\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.LOGOUT_END:\n                if (currentStatus &&\n                    currentStatus !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.Logout) {\n                    // Prevent this event from clearing any status other than logout\n                    break;\n                }\n                return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.None;\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.HANDLE_REDIRECT_END:\n                if (currentStatus &&\n                    currentStatus !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.HandleRedirect) {\n                    // Prevent this event from clearing any status other than handleRedirect\n                    break;\n                }\n                return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.None;\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.LOGIN_SUCCESS:\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.LOGIN_FAILURE:\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.ACQUIRE_TOKEN_SUCCESS:\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.ACQUIRE_TOKEN_FAILURE:\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.RESTORE_FROM_BFCACHE:\n                if (message.interactionType === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionType.Redirect ||\n                    message.interactionType === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionType.Popup) {\n                    if (currentStatus &&\n                        currentStatus !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.Login &&\n                        currentStatus !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.AcquireToken) {\n                        // Prevent this event from clearing any status other than login or acquireToken\n                        break;\n                    }\n                    return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.None;\n                }\n                break;\n        }\n        return null;\n    }\n}\n\n\n//# sourceMappingURL=EventMessage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2V2ZW50L0V2ZW50TWVzc2FnZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUMrQjtBQUN1Qzs7QUFFbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFEQUFTO0FBQzFCLHVCQUF1QiwwRUFBaUI7QUFDeEMsaUJBQWlCLHFEQUFTO0FBQzFCLHVCQUF1QiwwRUFBaUI7QUFDeEMsaUJBQWlCLHFEQUFTO0FBQzFCLGdEQUFnRCx3RUFBZTtBQUMvRCxnREFBZ0Qsd0VBQWU7QUFDL0QsMkJBQTJCLDBFQUFpQjtBQUM1QztBQUNBO0FBQ0EsaUJBQWlCLHFEQUFTO0FBQzFCLHVCQUF1QiwwRUFBaUI7QUFDeEMsaUJBQWlCLHFEQUFTO0FBQzFCLHVCQUF1QiwwRUFBaUI7QUFDeEMsaUJBQWlCLHFEQUFTO0FBQzFCLGlCQUFpQixxREFBUztBQUMxQjtBQUNBLHNDQUFzQywwRUFBaUI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDBFQUFpQjtBQUN4QyxpQkFBaUIscURBQVM7QUFDMUI7QUFDQSxzQ0FBc0MsMEVBQWlCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwwRUFBaUI7QUFDeEMsaUJBQWlCLHFEQUFTO0FBQzFCO0FBQ0Esc0NBQXNDLDBFQUFpQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsMEVBQWlCO0FBQ3hDLGlCQUFpQixxREFBUztBQUMxQixpQkFBaUIscURBQVM7QUFDMUIsaUJBQWlCLHFEQUFTO0FBQzFCLGlCQUFpQixxREFBUztBQUMxQixpQkFBaUIscURBQVM7QUFDMUIsZ0RBQWdELHdFQUFlO0FBQy9ELGdEQUFnRCx3RUFBZTtBQUMvRDtBQUNBLDBDQUEwQywwRUFBaUI7QUFDM0QsMENBQTBDLDBFQUFpQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMEVBQWlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNkI7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9ldmVudC9FdmVudE1lc3NhZ2UubWpzPzVhZmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEV2ZW50VHlwZSB9IGZyb20gJy4vRXZlbnRUeXBlLm1qcyc7XG5pbXBvcnQgeyBJbnRlcmFjdGlvblR5cGUsIEludGVyYWN0aW9uU3RhdHVzIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlckNvbnN0YW50cy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIEV2ZW50TWVzc2FnZVV0aWxzIHtcbiAgICAvKipcbiAgICAgKiBHZXRzIGludGVyYWN0aW9uIHN0YXR1cyBmcm9tIGV2ZW50IG1lc3NhZ2VcbiAgICAgKiBAcGFyYW0gbWVzc2FnZVxuICAgICAqIEBwYXJhbSBjdXJyZW50U3RhdHVzXG4gICAgICovXG4gICAgc3RhdGljIGdldEludGVyYWN0aW9uU3RhdHVzRnJvbUV2ZW50KG1lc3NhZ2UsIGN1cnJlbnRTdGF0dXMpIHtcbiAgICAgICAgc3dpdGNoIChtZXNzYWdlLmV2ZW50VHlwZSkge1xuICAgICAgICAgICAgY2FzZSBFdmVudFR5cGUuTE9HSU5fU1RBUlQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIEludGVyYWN0aW9uU3RhdHVzLkxvZ2luO1xuICAgICAgICAgICAgY2FzZSBFdmVudFR5cGUuU1NPX1NJTEVOVF9TVEFSVDpcbiAgICAgICAgICAgICAgICByZXR1cm4gSW50ZXJhY3Rpb25TdGF0dXMuU3NvU2lsZW50O1xuICAgICAgICAgICAgY2FzZSBFdmVudFR5cGUuQUNRVUlSRV9UT0tFTl9TVEFSVDpcbiAgICAgICAgICAgICAgICBpZiAobWVzc2FnZS5pbnRlcmFjdGlvblR5cGUgPT09IEludGVyYWN0aW9uVHlwZS5SZWRpcmVjdCB8fFxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmludGVyYWN0aW9uVHlwZSA9PT0gSW50ZXJhY3Rpb25UeXBlLlBvcHVwKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBJbnRlcmFjdGlvblN0YXR1cy5BY3F1aXJlVG9rZW47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBFdmVudFR5cGUuSEFORExFX1JFRElSRUNUX1NUQVJUOlxuICAgICAgICAgICAgICAgIHJldHVybiBJbnRlcmFjdGlvblN0YXR1cy5IYW5kbGVSZWRpcmVjdDtcbiAgICAgICAgICAgIGNhc2UgRXZlbnRUeXBlLkxPR09VVF9TVEFSVDpcbiAgICAgICAgICAgICAgICByZXR1cm4gSW50ZXJhY3Rpb25TdGF0dXMuTG9nb3V0O1xuICAgICAgICAgICAgY2FzZSBFdmVudFR5cGUuU1NPX1NJTEVOVF9TVUNDRVNTOlxuICAgICAgICAgICAgY2FzZSBFdmVudFR5cGUuU1NPX1NJTEVOVF9GQUlMVVJFOlxuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50U3RhdHVzICYmXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTdGF0dXMgIT09IEludGVyYWN0aW9uU3RhdHVzLlNzb1NpbGVudCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBQcmV2ZW50IHRoaXMgZXZlbnQgZnJvbSBjbGVhcmluZyBhbnkgc3RhdHVzIG90aGVyIHRoYW4gc3NvU2lsZW50XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gSW50ZXJhY3Rpb25TdGF0dXMuTm9uZTtcbiAgICAgICAgICAgIGNhc2UgRXZlbnRUeXBlLkxPR09VVF9FTkQ6XG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRTdGF0dXMgJiZcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFN0YXR1cyAhPT0gSW50ZXJhY3Rpb25TdGF0dXMuTG9nb3V0KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFByZXZlbnQgdGhpcyBldmVudCBmcm9tIGNsZWFyaW5nIGFueSBzdGF0dXMgb3RoZXIgdGhhbiBsb2dvdXRcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBJbnRlcmFjdGlvblN0YXR1cy5Ob25lO1xuICAgICAgICAgICAgY2FzZSBFdmVudFR5cGUuSEFORExFX1JFRElSRUNUX0VORDpcbiAgICAgICAgICAgICAgICBpZiAoY3VycmVudFN0YXR1cyAmJlxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50U3RhdHVzICE9PSBJbnRlcmFjdGlvblN0YXR1cy5IYW5kbGVSZWRpcmVjdCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBQcmV2ZW50IHRoaXMgZXZlbnQgZnJvbSBjbGVhcmluZyBhbnkgc3RhdHVzIG90aGVyIHRoYW4gaGFuZGxlUmVkaXJlY3RcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBJbnRlcmFjdGlvblN0YXR1cy5Ob25lO1xuICAgICAgICAgICAgY2FzZSBFdmVudFR5cGUuTE9HSU5fU1VDQ0VTUzpcbiAgICAgICAgICAgIGNhc2UgRXZlbnRUeXBlLkxPR0lOX0ZBSUxVUkU6XG4gICAgICAgICAgICBjYXNlIEV2ZW50VHlwZS5BQ1FVSVJFX1RPS0VOX1NVQ0NFU1M6XG4gICAgICAgICAgICBjYXNlIEV2ZW50VHlwZS5BQ1FVSVJFX1RPS0VOX0ZBSUxVUkU6XG4gICAgICAgICAgICBjYXNlIEV2ZW50VHlwZS5SRVNUT1JFX0ZST01fQkZDQUNIRTpcbiAgICAgICAgICAgICAgICBpZiAobWVzc2FnZS5pbnRlcmFjdGlvblR5cGUgPT09IEludGVyYWN0aW9uVHlwZS5SZWRpcmVjdCB8fFxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmludGVyYWN0aW9uVHlwZSA9PT0gSW50ZXJhY3Rpb25UeXBlLlBvcHVwKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50U3RhdHVzICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50U3RhdHVzICE9PSBJbnRlcmFjdGlvblN0YXR1cy5Mb2dpbiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFN0YXR1cyAhPT0gSW50ZXJhY3Rpb25TdGF0dXMuQWNxdWlyZVRva2VuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBQcmV2ZW50IHRoaXMgZXZlbnQgZnJvbSBjbGVhcmluZyBhbnkgc3RhdHVzIG90aGVyIHRoYW4gbG9naW4gb3IgYWNxdWlyZVRva2VuXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gSW50ZXJhY3Rpb25TdGF0dXMuTm9uZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuXG5leHBvcnQgeyBFdmVudE1lc3NhZ2VVdGlscyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXZlbnRNZXNzYWdlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/event/EventMessage.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/event/EventType.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/event/EventType.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventType: function() { return /* binding */ EventType; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst EventType = {\n    INITIALIZE_START: \"msal:initializeStart\",\n    INITIALIZE_END: \"msal:initializeEnd\",\n    ACCOUNT_ADDED: \"msal:accountAdded\",\n    ACCOUNT_REMOVED: \"msal:accountRemoved\",\n    LOGIN_START: \"msal:loginStart\",\n    LOGIN_SUCCESS: \"msal:loginSuccess\",\n    LOGIN_FAILURE: \"msal:loginFailure\",\n    ACQUIRE_TOKEN_START: \"msal:acquireTokenStart\",\n    ACQUIRE_TOKEN_SUCCESS: \"msal:acquireTokenSuccess\",\n    ACQUIRE_TOKEN_FAILURE: \"msal:acquireTokenFailure\",\n    ACQUIRE_TOKEN_NETWORK_START: \"msal:acquireTokenFromNetworkStart\",\n    SSO_SILENT_START: \"msal:ssoSilentStart\",\n    SSO_SILENT_SUCCESS: \"msal:ssoSilentSuccess\",\n    SSO_SILENT_FAILURE: \"msal:ssoSilentFailure\",\n    ACQUIRE_TOKEN_BY_CODE_START: \"msal:acquireTokenByCodeStart\",\n    ACQUIRE_TOKEN_BY_CODE_SUCCESS: \"msal:acquireTokenByCodeSuccess\",\n    ACQUIRE_TOKEN_BY_CODE_FAILURE: \"msal:acquireTokenByCodeFailure\",\n    HANDLE_REDIRECT_START: \"msal:handleRedirectStart\",\n    HANDLE_REDIRECT_END: \"msal:handleRedirectEnd\",\n    POPUP_OPENED: \"msal:popupOpened\",\n    LOGOUT_START: \"msal:logoutStart\",\n    LOGOUT_SUCCESS: \"msal:logoutSuccess\",\n    LOGOUT_FAILURE: \"msal:logoutFailure\",\n    LOGOUT_END: \"msal:logoutEnd\",\n    RESTORE_FROM_BFCACHE: \"msal:restoreFromBFCache\",\n};\n\n\n//# sourceMappingURL=EventType.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2V2ZW50L0V2ZW50VHlwZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9ldmVudC9FdmVudFR5cGUubWpzPzIxMDYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0Jztcbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY29uc3QgRXZlbnRUeXBlID0ge1xuICAgIElOSVRJQUxJWkVfU1RBUlQ6IFwibXNhbDppbml0aWFsaXplU3RhcnRcIixcbiAgICBJTklUSUFMSVpFX0VORDogXCJtc2FsOmluaXRpYWxpemVFbmRcIixcbiAgICBBQ0NPVU5UX0FEREVEOiBcIm1zYWw6YWNjb3VudEFkZGVkXCIsXG4gICAgQUNDT1VOVF9SRU1PVkVEOiBcIm1zYWw6YWNjb3VudFJlbW92ZWRcIixcbiAgICBMT0dJTl9TVEFSVDogXCJtc2FsOmxvZ2luU3RhcnRcIixcbiAgICBMT0dJTl9TVUNDRVNTOiBcIm1zYWw6bG9naW5TdWNjZXNzXCIsXG4gICAgTE9HSU5fRkFJTFVSRTogXCJtc2FsOmxvZ2luRmFpbHVyZVwiLFxuICAgIEFDUVVJUkVfVE9LRU5fU1RBUlQ6IFwibXNhbDphY3F1aXJlVG9rZW5TdGFydFwiLFxuICAgIEFDUVVJUkVfVE9LRU5fU1VDQ0VTUzogXCJtc2FsOmFjcXVpcmVUb2tlblN1Y2Nlc3NcIixcbiAgICBBQ1FVSVJFX1RPS0VOX0ZBSUxVUkU6IFwibXNhbDphY3F1aXJlVG9rZW5GYWlsdXJlXCIsXG4gICAgQUNRVUlSRV9UT0tFTl9ORVRXT1JLX1NUQVJUOiBcIm1zYWw6YWNxdWlyZVRva2VuRnJvbU5ldHdvcmtTdGFydFwiLFxuICAgIFNTT19TSUxFTlRfU1RBUlQ6IFwibXNhbDpzc29TaWxlbnRTdGFydFwiLFxuICAgIFNTT19TSUxFTlRfU1VDQ0VTUzogXCJtc2FsOnNzb1NpbGVudFN1Y2Nlc3NcIixcbiAgICBTU09fU0lMRU5UX0ZBSUxVUkU6IFwibXNhbDpzc29TaWxlbnRGYWlsdXJlXCIsXG4gICAgQUNRVUlSRV9UT0tFTl9CWV9DT0RFX1NUQVJUOiBcIm1zYWw6YWNxdWlyZVRva2VuQnlDb2RlU3RhcnRcIixcbiAgICBBQ1FVSVJFX1RPS0VOX0JZX0NPREVfU1VDQ0VTUzogXCJtc2FsOmFjcXVpcmVUb2tlbkJ5Q29kZVN1Y2Nlc3NcIixcbiAgICBBQ1FVSVJFX1RPS0VOX0JZX0NPREVfRkFJTFVSRTogXCJtc2FsOmFjcXVpcmVUb2tlbkJ5Q29kZUZhaWx1cmVcIixcbiAgICBIQU5ETEVfUkVESVJFQ1RfU1RBUlQ6IFwibXNhbDpoYW5kbGVSZWRpcmVjdFN0YXJ0XCIsXG4gICAgSEFORExFX1JFRElSRUNUX0VORDogXCJtc2FsOmhhbmRsZVJlZGlyZWN0RW5kXCIsXG4gICAgUE9QVVBfT1BFTkVEOiBcIm1zYWw6cG9wdXBPcGVuZWRcIixcbiAgICBMT0dPVVRfU1RBUlQ6IFwibXNhbDpsb2dvdXRTdGFydFwiLFxuICAgIExPR09VVF9TVUNDRVNTOiBcIm1zYWw6bG9nb3V0U3VjY2Vzc1wiLFxuICAgIExPR09VVF9GQUlMVVJFOiBcIm1zYWw6bG9nb3V0RmFpbHVyZVwiLFxuICAgIExPR09VVF9FTkQ6IFwibXNhbDpsb2dvdXRFbmRcIixcbiAgICBSRVNUT1JFX0ZST01fQkZDQUNIRTogXCJtc2FsOnJlc3RvcmVGcm9tQkZDYWNoZVwiLFxufTtcblxuZXhwb3J0IHsgRXZlbnRUeXBlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FdmVudFR5cGUubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/event/EventType.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/index.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountEntity: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.AccountEntity; },\n/* harmony export */   ApiId: function() { return /* reexport safe */ _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId; },\n/* harmony export */   AuthError: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.AuthError; },\n/* harmony export */   AuthErrorMessage: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.AuthErrorMessage; },\n/* harmony export */   AuthenticationHeaderParser: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.AuthenticationHeaderParser; },\n/* harmony export */   AuthenticationScheme: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.AuthenticationScheme; },\n/* harmony export */   AzureCloudInstance: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.AzureCloudInstance; },\n/* harmony export */   BrowserAuthError: function() { return /* reexport safe */ _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserAuthError; },\n/* harmony export */   BrowserAuthErrorMessage: function() { return /* reexport safe */ _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserAuthErrorMessage; },\n/* harmony export */   BrowserCacheLocation: function() { return /* reexport safe */ _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserCacheLocation; },\n/* harmony export */   BrowserConfigurationAuthError: function() { return /* reexport safe */ _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserConfigurationAuthError; },\n/* harmony export */   BrowserConfigurationAuthErrorMessage: function() { return /* reexport safe */ _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserConfigurationAuthErrorMessage; },\n/* harmony export */   BrowserPerformanceClient: function() { return /* reexport safe */ _telemetry_BrowserPerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_12__.BrowserPerformanceClient; },\n/* harmony export */   BrowserPerformanceMeasurement: function() { return /* reexport safe */ _telemetry_BrowserPerformanceMeasurement_mjs__WEBPACK_IMPORTED_MODULE_13__.BrowserPerformanceMeasurement; },\n/* harmony export */   BrowserUtils: function() { return /* reexport safe */ _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserUtils; },\n/* harmony export */   CacheLookupPolicy: function() { return /* reexport safe */ _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.CacheLookupPolicy; },\n/* harmony export */   ClientAuthError: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.ClientAuthError; },\n/* harmony export */   ClientAuthErrorMessage: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.ClientAuthErrorMessage; },\n/* harmony export */   ClientConfigurationError: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.ClientConfigurationError; },\n/* harmony export */   ClientConfigurationErrorMessage: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.ClientConfigurationErrorMessage; },\n/* harmony export */   DEFAULT_IFRAME_TIMEOUT_MS: function() { return /* reexport safe */ _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_IFRAME_TIMEOUT_MS; },\n/* harmony export */   EventMessageUtils: function() { return /* reexport safe */ _event_EventMessage_mjs__WEBPACK_IMPORTED_MODULE_9__.EventMessageUtils; },\n/* harmony export */   EventType: function() { return /* reexport safe */ _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_10__.EventType; },\n/* harmony export */   InteractionRequiredAuthError: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.InteractionRequiredAuthError; },\n/* harmony export */   InteractionRequiredAuthErrorMessage: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.InteractionRequiredAuthErrorMessage; },\n/* harmony export */   InteractionStatus: function() { return /* reexport safe */ _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionStatus; },\n/* harmony export */   InteractionType: function() { return /* reexport safe */ _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType; },\n/* harmony export */   LogLevel: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.LogLevel; },\n/* harmony export */   Logger: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.Logger; },\n/* harmony export */   NavigationClient: function() { return /* reexport safe */ _navigation_NavigationClient_mjs__WEBPACK_IMPORTED_MODULE_8__.NavigationClient; },\n/* harmony export */   OIDC_DEFAULT_SCOPES: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.OIDC_DEFAULT_SCOPES; },\n/* harmony export */   PerformanceEvents: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.PerformanceEvents; },\n/* harmony export */   PromptValue: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.PromptValue; },\n/* harmony export */   ProtocolMode: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.ProtocolMode; },\n/* harmony export */   PublicClientApplication: function() { return /* reexport safe */ _app_PublicClientApplication_mjs__WEBPACK_IMPORTED_MODULE_1__.PublicClientApplication; },\n/* harmony export */   ServerError: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.ServerError; },\n/* harmony export */   ServerResponseType: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.ServerResponseType; },\n/* harmony export */   SignedHttpRequest: function() { return /* reexport safe */ _crypto_SignedHttpRequest_mjs__WEBPACK_IMPORTED_MODULE_11__.SignedHttpRequest; },\n/* harmony export */   StringUtils: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.StringUtils; },\n/* harmony export */   UrlString: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.UrlString; },\n/* harmony export */   WrapperSKU: function() { return /* reexport safe */ _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.WrapperSKU; },\n/* harmony export */   internals: function() { return /* reexport module object */ _internals_mjs__WEBPACK_IMPORTED_MODULE_0__; },\n/* harmony export */   stubbedPublicClientApplication: function() { return /* reexport safe */ _app_IPublicClientApplication_mjs__WEBPACK_IMPORTED_MODULE_7__.stubbedPublicClientApplication; },\n/* harmony export */   version: function() { return /* reexport safe */ _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_15__.version; }\n/* harmony export */ });\n/* harmony import */ var _internals_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internals.mjs */ \"./node_modules/@azure/msal-browser/dist/internals.mjs\");\n/* harmony import */ var _app_PublicClientApplication_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app/PublicClientApplication.mjs */ \"./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs\");\n/* harmony import */ var _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config/Configuration.mjs */ \"./node_modules/@azure/msal-browser/dist/config/Configuration.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./error/BrowserConfigurationAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\");\n/* harmony import */ var _app_IPublicClientApplication_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./app/IPublicClientApplication.mjs */ \"./node_modules/@azure/msal-browser/dist/app/IPublicClientApplication.mjs\");\n/* harmony import */ var _navigation_NavigationClient_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./navigation/NavigationClient.mjs */ \"./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs\");\n/* harmony import */ var _event_EventMessage_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./event/EventMessage.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventMessage.mjs\");\n/* harmony import */ var _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./event/EventType.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _crypto_SignedHttpRequest_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./crypto/SignedHttpRequest.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/SignedHttpRequest.mjs\");\n/* harmony import */ var _telemetry_BrowserPerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./telemetry/BrowserPerformanceClient.mjs */ \"./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceClient.mjs\");\n/* harmony import */ var _telemetry_BrowserPerformanceMeasurement_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./telemetry/BrowserPerformanceMeasurement.mjs */ \"./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2dDO0FBQ3hCO0FBQ3VEO0FBQ0w7QUFDdUU7QUFDdEY7QUFDaUM7QUFDdUM7QUFDNUM7QUFDZjtBQUNSO0FBQ1g7QUFDaUI7QUFDaUI7QUFDVTtBQUM2VztBQUMzWjtBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2luZGV4Lm1qcz8wYzc2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgKiBhcyBpbnRlcm5hbHMgZnJvbSAnLi9pbnRlcm5hbHMubWpzJztcbmV4cG9ydCB7IGludGVybmFscyB9O1xuZXhwb3J0IHsgUHVibGljQ2xpZW50QXBwbGljYXRpb24gfSBmcm9tICcuL2FwcC9QdWJsaWNDbGllbnRBcHBsaWNhdGlvbi5tanMnO1xuZXhwb3J0IHsgREVGQVVMVF9JRlJBTUVfVElNRU9VVF9NUyB9IGZyb20gJy4vY29uZmlnL0NvbmZpZ3VyYXRpb24ubWpzJztcbmV4cG9ydCB7IEFwaUlkLCBCcm93c2VyQ2FjaGVMb2NhdGlvbiwgQ2FjaGVMb29rdXBQb2xpY3ksIEludGVyYWN0aW9uU3RhdHVzLCBJbnRlcmFjdGlvblR5cGUsIFdyYXBwZXJTS1UgfSBmcm9tICcuL3V0aWxzL0Jyb3dzZXJDb25zdGFudHMubWpzJztcbmV4cG9ydCB7IEJyb3dzZXJVdGlscyB9IGZyb20gJy4vdXRpbHMvQnJvd3NlclV0aWxzLm1qcyc7XG5leHBvcnQgeyBCcm93c2VyQXV0aEVycm9yLCBCcm93c2VyQXV0aEVycm9yTWVzc2FnZSB9IGZyb20gJy4vZXJyb3IvQnJvd3NlckF1dGhFcnJvci5tanMnO1xuZXhwb3J0IHsgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3IsIEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yTWVzc2FnZSB9IGZyb20gJy4vZXJyb3IvQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3IubWpzJztcbmV4cG9ydCB7IHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbiB9IGZyb20gJy4vYXBwL0lQdWJsaWNDbGllbnRBcHBsaWNhdGlvbi5tanMnO1xuZXhwb3J0IHsgTmF2aWdhdGlvbkNsaWVudCB9IGZyb20gJy4vbmF2aWdhdGlvbi9OYXZpZ2F0aW9uQ2xpZW50Lm1qcyc7XG5leHBvcnQgeyBFdmVudE1lc3NhZ2VVdGlscyB9IGZyb20gJy4vZXZlbnQvRXZlbnRNZXNzYWdlLm1qcyc7XG5leHBvcnQgeyBFdmVudFR5cGUgfSBmcm9tICcuL2V2ZW50L0V2ZW50VHlwZS5tanMnO1xuZXhwb3J0IHsgU2lnbmVkSHR0cFJlcXVlc3QgfSBmcm9tICcuL2NyeXB0by9TaWduZWRIdHRwUmVxdWVzdC5tanMnO1xuZXhwb3J0IHsgQnJvd3NlclBlcmZvcm1hbmNlQ2xpZW50IH0gZnJvbSAnLi90ZWxlbWV0cnkvQnJvd3NlclBlcmZvcm1hbmNlQ2xpZW50Lm1qcyc7XG5leHBvcnQgeyBCcm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudCB9IGZyb20gJy4vdGVsZW1ldHJ5L0Jyb3dzZXJQZXJmb3JtYW5jZU1lYXN1cmVtZW50Lm1qcyc7XG5leHBvcnQgeyBBY2NvdW50RW50aXR5LCBBdXRoRXJyb3IsIEF1dGhFcnJvck1lc3NhZ2UsIEF1dGhlbnRpY2F0aW9uSGVhZGVyUGFyc2VyLCBBdXRoZW50aWNhdGlvblNjaGVtZSwgQXp1cmVDbG91ZEluc3RhbmNlLCBDbGllbnRBdXRoRXJyb3IsIENsaWVudEF1dGhFcnJvck1lc3NhZ2UsIENsaWVudENvbmZpZ3VyYXRpb25FcnJvciwgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yTWVzc2FnZSwgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvciwgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvck1lc3NhZ2UsIExvZ0xldmVsLCBMb2dnZXIsIE9JRENfREVGQVVMVF9TQ09QRVMsIFBlcmZvcm1hbmNlRXZlbnRzLCBQcm9tcHRWYWx1ZSwgUHJvdG9jb2xNb2RlLCBTZXJ2ZXJFcnJvciwgU2VydmVyUmVzcG9uc2VUeXBlLCBTdHJpbmdVdGlscywgVXJsU3RyaW5nIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uJztcbmV4cG9ydCB7IHZlcnNpb24gfSBmcm9tICcuL3BhY2thZ2VNZXRhZGF0YS5tanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/index.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseInteractionClient: function() { return /* binding */ BaseInteractionClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass BaseInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) {\n        this.config = config;\n        this.browserStorage = storageImpl;\n        this.browserCrypto = browserCrypto;\n        this.networkClient = this.config.system.networkClient;\n        this.eventHandler = eventHandler;\n        this.navigationClient = navigationClient;\n        this.nativeMessageHandler = nativeMessageHandler;\n        this.correlationId =\n            correlationId || this.browserCrypto.createNewGuid();\n        this.logger = logger.clone(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserConstants.MSAL_SKU, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__.version, this.correlationId);\n        this.performanceClient = performanceClient;\n    }\n    async clearCacheOnLogout(account) {\n        if (account) {\n            if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AccountEntity.accountInfoIsEqual(account, this.browserStorage.getActiveAccount(), false)) {\n                this.logger.verbose(\"Setting active account to null\");\n                this.browserStorage.setActiveAccount(null);\n            }\n            // Clear given account.\n            try {\n                await this.browserStorage.removeAccount(_azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AccountEntity.generateAccountCacheKey(account));\n                this.logger.verbose(\"Cleared cache items belonging to the account provided in the logout request.\");\n            }\n            catch (error) {\n                this.logger.error(\"Account provided in logout request was not found. Local cache unchanged.\");\n            }\n        }\n        else {\n            try {\n                this.logger.verbose(\"No account provided in logout request, clearing all cache items.\", this.correlationId);\n                // Clear all accounts and tokens\n                await this.browserStorage.clear();\n                // Clear any stray keys from IndexedDB\n                await this.browserCrypto.clearKeystore();\n            }\n            catch (e) {\n                this.logger.error(\"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\");\n            }\n        }\n    }\n    /**\n     * Initializer function for all request APIs\n     * @param request\n     */\n    async initializeBaseRequest(request, account) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.InitializeBaseRequest, request.correlationId);\n        this.logger.verbose(\"Initializing BaseAuthRequest\");\n        const authority = request.authority || this.config.auth.authority;\n        if (account) {\n            await this.validateRequestAuthority(authority, account);\n        }\n        const scopes = [...((request && request.scopes) || [])];\n        const validatedRequest = {\n            ...request,\n            correlationId: this.correlationId,\n            authority,\n            scopes,\n        };\n        // Set authenticationScheme to BEARER if not explicitly set in the request\n        if (!validatedRequest.authenticationScheme) {\n            validatedRequest.authenticationScheme = _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AuthenticationScheme.BEARER;\n            this.logger.verbose('Authentication Scheme wasn\\'t explicitly set in request, defaulting to \"Bearer\" request');\n        }\n        else {\n            if (validatedRequest.authenticationScheme ===\n                _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AuthenticationScheme.SSH) {\n                if (!request.sshJwk) {\n                    throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ClientConfigurationError.createMissingSshJwkError();\n                }\n                if (!request.sshKid) {\n                    throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ClientConfigurationError.createMissingSshKidError();\n                }\n            }\n            this.logger.verbose(`Authentication Scheme set to \"${validatedRequest.authenticationScheme}\" as configured in Auth request`);\n        }\n        // Set requested claims hash if claims-based caching is enabled and claims were requested\n        if (this.config.cache.claimsBasedCachingEnabled &&\n            request.claims &&\n            // Checks for empty stringified object \"{}\" which doesn't qualify as requested claims\n            !_azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.StringUtils.isEmptyObj(request.claims)) {\n            validatedRequest.requestedClaimsHash =\n                await this.browserCrypto.hashString(request.claims);\n        }\n        return validatedRequest;\n    }\n    /**\n     *\n     * Use to get the redirect uri configured in MSAL or null.\n     * @param requestRedirectUri\n     * @returns Redirect URL\n     *\n     */\n    getRedirectUri(requestRedirectUri) {\n        this.logger.verbose(\"getRedirectUri called\");\n        const redirectUri = requestRedirectUri ||\n            this.config.auth.redirectUri ||\n            _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserUtils.getCurrentUri();\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.UrlString.getAbsoluteUrl(redirectUri, _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserUtils.getCurrentUri());\n    }\n    /*\n     * If authority provided in the request does not match environment/authority specified\n     * in the account or MSAL config, we throw an error.\n     */\n    async validateRequestAuthority(authority, account) {\n        const discoveredAuthority = await this.getDiscoveredAuthority(authority);\n        if (!discoveredAuthority.isAlias(account.environment)) {\n            throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ClientConfigurationError.createAuthorityMismatchError();\n        }\n    }\n    /**\n     *\n     * @param apiId\n     * @param correlationId\n     * @param forceRefresh\n     */\n    initializeServerTelemetryManager(apiId, forceRefresh) {\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\n        const telemetryPayload = {\n            clientId: this.config.auth.clientId,\n            correlationId: this.correlationId,\n            apiId: apiId,\n            forceRefresh: forceRefresh || false,\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1],\n        };\n        return new _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ServerTelemetryManager(telemetryPayload, this.browserStorage);\n    }\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    async getDiscoveredAuthority(requestAuthority) {\n        this.logger.verbose(\"getDiscoveredAuthority called\");\n        const authorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            OIDCOptions: this.config.auth.OIDCOptions,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n        };\n        if (requestAuthority) {\n            this.logger.verbose(\"Creating discovered authority with request authority\");\n            return await _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger);\n        }\n        this.logger.verbose(\"Creating discovered authority with configured authority\");\n        return await _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger);\n    }\n}\n\n\n//# sourceMappingURL=BaseInteractionClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/HybridSpaAuthorizationCodeClient.mjs":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/HybridSpaAuthorizationCodeClient.mjs ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HybridSpaAuthorizationCodeClient: function() { return /* binding */ HybridSpaAuthorizationCodeClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass HybridSpaAuthorizationCodeClient extends _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AuthorizationCodeClient {\n    constructor(config) {\n        super(config);\n        this.includeRedirectUri = false;\n    }\n}\n\n\n//# sourceMappingURL=HybridSpaAuthorizationCodeClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9IeWJyaWRTcGFBdXRob3JpemF0aW9uQ29kZUNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNhO0FBQ2dEOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyx1RUFBdUI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEM7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9pbnRlcmFjdGlvbl9jbGllbnQvSHlicmlkU3BhQXV0aG9yaXphdGlvbkNvZGVDbGllbnQubWpzPzdjODQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEF1dGhvcml6YXRpb25Db2RlQ2xpZW50IH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jbGFzcyBIeWJyaWRTcGFBdXRob3JpemF0aW9uQ29kZUNsaWVudCBleHRlbmRzIEF1dGhvcml6YXRpb25Db2RlQ2xpZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgc3VwZXIoY29uZmlnKTtcbiAgICAgICAgdGhpcy5pbmNsdWRlUmVkaXJlY3RVcmkgPSBmYWxzZTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IEh5YnJpZFNwYUF1dGhvcml6YXRpb25Db2RlQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1IeWJyaWRTcGFBdXRob3JpemF0aW9uQ29kZUNsaWVudC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/HybridSpaAuthorizationCodeClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NativeInteractionClient: function() { return /* binding */ NativeInteractionClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _BaseInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/NativeAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _SilentCacheClient_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SilentCacheClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst BrokerServerParamKeys = {\n    BROKER_CLIENT_ID: \"brk_client_id\",\n    BROKER_REDIRECT_URI: \"brk_redirect_uri\",\n};\nclass NativeInteractionClient extends _BaseInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseInteractionClient {\n    constructor(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, provider, accountId, nativeStorageImpl, correlationId) {\n        super(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\n        this.apiId = apiId;\n        this.accountId = accountId;\n        this.nativeMessageHandler = provider;\n        this.nativeStorageManager = nativeStorageImpl;\n        this.silentCacheClient = new _SilentCacheClient_mjs__WEBPACK_IMPORTED_MODULE_1__.SilentCacheClient(config, this.nativeStorageManager, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\n    }\n    /**\n     * Acquire token from native platform via browser extension\n     * @param request\n     */\n    async acquireToken(request) {\n        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\n        // start the perf measurement\n        const nativeATMeasurement = this.performanceClient.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\n        const reqTimestamp = _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.TimeUtils.nowSeconds();\n        // initialize native request\n        const nativeRequest = await this.initializeNativeRequest(request);\n        // check if the tokens can be retrieved from internal cache\n        try {\n            const result = await this.acquireTokensFromCache(this.accountId, nativeRequest);\n            nativeATMeasurement.end({\n                success: true,\n                isNativeBroker: false,\n                fromCache: true,\n            });\n            return result;\n        }\n        catch (e) {\n            // continue with a native call for any and all errors\n            this.logger.info(\"MSAL internal Cache does not contain tokens, proceed to make a native call\");\n        }\n        // fall back to native calls\n        const messageBody = {\n            method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.NativeExtensionMethod.GetToken,\n            request: nativeRequest,\n        };\n        const response = await this.nativeMessageHandler.sendMessage(messageBody);\n        const validatedResponse = this.validateNativeResponse(response);\n        return this.handleNativeResponse(validatedResponse, nativeRequest, reqTimestamp)\n            .then((result) => {\n            nativeATMeasurement.end({\n                success: true,\n                isNativeBroker: true,\n                requestId: result.requestId,\n            });\n            return result;\n        })\n            .catch((error) => {\n            nativeATMeasurement.end({\n                success: false,\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                isNativeBroker: true,\n            });\n            throw error;\n        });\n    }\n    /**\n     * Creates silent flow request\n     * @param request\n     * @param cachedAccount\n     * @returns CommonSilentFlowRequest\n     */\n    createSilentCacheRequest(request, cachedAccount) {\n        return {\n            authority: request.authority,\n            correlationId: this.correlationId,\n            scopes: _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ScopeSet.fromString(request.scope).asArray(),\n            account: cachedAccount,\n            forceRefresh: false,\n        };\n    }\n    /**\n     * Fetches the tokens from the cache if un-expired\n     * @param nativeAccountId\n     * @param request\n     * @returns authenticationResult\n     */\n    async acquireTokensFromCache(nativeAccountId, request) {\n        if (!nativeAccountId) {\n            this.logger.warning(\"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\");\n            throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ClientAuthError.createNoAccountFoundError();\n        }\n        // fetch the account from browser cache\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            nativeAccountId,\n        });\n        if (!account) {\n            throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ClientAuthError.createNoAccountFoundError();\n        }\n        // leverage silent flow for cached tokens retrieval\n        try {\n            const silentRequest = this.createSilentCacheRequest(request, account);\n            const result = await this.silentCacheClient.acquireToken(silentRequest);\n            return {\n                ...result,\n                account,\n            };\n        }\n        catch (e) {\n            throw e;\n        }\n    }\n    /**\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\n     * @param request\n     */\n    async acquireTokenRedirect(request) {\n        this.logger.trace(\"NativeInteractionClient - acquireTokenRedirect called.\");\n        const nativeRequest = await this.initializeNativeRequest(request);\n        const messageBody = {\n            method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.NativeExtensionMethod.GetToken,\n            request: nativeRequest,\n        };\n        try {\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n        }\n        catch (e) {\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\n            if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.NativeAuthError && e.isFatal()) {\n                throw e;\n            }\n        }\n        this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.NATIVE_REQUEST, JSON.stringify(nativeRequest), true);\n        const navigationOptions = {\n            apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId.acquireTokenRedirect,\n            timeout: this.config.system.redirectNavigationTimeout,\n            noHistory: false,\n        };\n        const redirectUri = this.config.auth.navigateToLoginRequestUrl\n            ? window.location.href\n            : this.getRedirectUri(request.redirectUri);\n        await this.navigationClient.navigateExternal(redirectUri, navigationOptions); // Need to treat this as external to ensure handleRedirectPromise is run again\n    }\n    /**\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\n     */\n    async handleRedirectPromise() {\n        this.logger.trace(\"NativeInteractionClient - handleRedirectPromise called.\");\n        if (!this.browserStorage.isInteractionInProgress(true)) {\n            this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\n            return null;\n        }\n        // remove prompt from the request to prevent WAM from prompting twice\n        const cachedRequest = this.browserStorage.getCachedNativeRequest();\n        if (!cachedRequest) {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\");\n            return null;\n        }\n        const { prompt, ...request } = cachedRequest;\n        if (prompt) {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\");\n        }\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.NATIVE_REQUEST));\n        const messageBody = {\n            method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.NativeExtensionMethod.GetToken,\n            request: request,\n        };\n        const reqTimestamp = _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.TimeUtils.nowSeconds();\n        try {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise sending message to native broker.\");\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n            const result = this.handleNativeResponse(response, request, reqTimestamp);\n            this.browserStorage.setInteractionInProgress(false);\n            return result;\n        }\n        catch (e) {\n            this.browserStorage.setInteractionInProgress(false);\n            throw e;\n        }\n    }\n    /**\n     * Logout from native platform via browser extension\n     * @param request\n     */\n    logout() {\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\n        return Promise.reject(\"Logout not implemented yet\");\n    }\n    /**\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\n     * @param response\n     * @param request\n     * @param reqTimestamp\n     */\n    async handleNativeResponse(response, request, reqTimestamp) {\n        this.logger.trace(\"NativeInteractionClient - handleNativeResponse called.\");\n        if (response.account.id !== request.accountId) {\n            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\n            throw _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.NativeAuthError.createUserSwitchError();\n        }\n        // Get the preferred_cache domain for the given authority\n        const authority = await this.getDiscoveredAuthority(request.authority);\n        // generate identifiers\n        const idTokenObj = this.createIdTokenObj(response);\n        const homeAccountIdentifier = this.createHomeAccountIdentifier(response, idTokenObj);\n        const accountEntity = _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AccountEntity.createAccount({\n            homeAccountId: homeAccountIdentifier,\n            idTokenClaims: idTokenObj.claims,\n            clientInfo: response.client_info,\n            nativeAccountId: response.account.id,\n        }, authority);\n        // generate authenticationResult\n        const result = await this.generateAuthenticationResult(response, request, idTokenObj, accountEntity, authority.canonicalAuthority, reqTimestamp);\n        // cache accounts and tokens in the appropriate storage\n        this.cacheAccount(accountEntity);\n        this.cacheNativeTokens(response, request, homeAccountIdentifier, idTokenObj, result.accessToken, result.tenantId, reqTimestamp);\n        return result;\n    }\n    /**\n     * Create an idToken Object (not entity)\n     * @param response\n     * @returns\n     */\n    createIdTokenObj(response) {\n        return new _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AuthToken(response.id_token || _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, this.browserCrypto);\n    }\n    /**\n     * creates an homeAccountIdentifier for the account\n     * @param response\n     * @param idTokenObj\n     * @returns\n     */\n    createHomeAccountIdentifier(response, idTokenObj) {\n        // Save account in browser storage\n        const homeAccountIdentifier = _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AccountEntity.generateHomeAccountId(response.client_info || _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Default, this.logger, this.browserCrypto, idTokenObj.claims);\n        return homeAccountIdentifier;\n    }\n    /**\n     * Helper to generate scopes\n     * @param response\n     * @param request\n     * @returns\n     */\n    generateScopes(response, request) {\n        return response.scope\n            ? _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ScopeSet.fromString(response.scope)\n            : _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ScopeSet.fromString(request.scope);\n    }\n    /**\n     * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\n     * @param request\n     * @param response\n     */\n    async generatePopAccessToken(response, request) {\n        if (request.tokenType === _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AuthenticationScheme.POP) {\n            /**\n             * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\n             * is still received, SHR is calculated locally\n             */\n            // Check if native layer returned an SHR token\n            if (response.shr) {\n                this.logger.trace(\"handleNativeServerResponse: SHR is enabled in native layer\");\n                return response.shr;\n            }\n            // Generate SHR in msal js if WAM does not compute it when POP is enabled\n            const popTokenGenerator = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.PopTokenGenerator(this.browserCrypto);\n            const shrParameters = {\n                resourceRequestMethod: request.resourceRequestMethod,\n                resourceRequestUri: request.resourceRequestUri,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce,\n            };\n            /**\n             * KeyID must be present in the native request from when the PoP key was generated in order for\n             * PopTokenGenerator to query the full key for signing\n             */\n            if (!request.keyId) {\n                throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ClientAuthError.createKeyIdMissingError();\n            }\n            return await popTokenGenerator.signPopToken(response.access_token, request.keyId, shrParameters);\n        }\n        else {\n            return response.access_token;\n        }\n    }\n    /**\n     * Generates authentication result\n     * @param response\n     * @param request\n     * @param idTokenObj\n     * @param accountEntity\n     * @param authority\n     * @param reqTimestamp\n     * @returns\n     */\n    async generateAuthenticationResult(response, request, idTokenObj, accountEntity, authority, reqTimestamp) {\n        // Add Native Broker fields to Telemetry\n        const mats = this.addTelemetryFromNativeResponse(response);\n        // If scopes not returned in server response, use request scopes\n        const responseScopes = response.scope\n            ? _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ScopeSet.fromString(response.scope)\n            : _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ScopeSet.fromString(request.scope);\n        const accountProperties = response.account.properties || {};\n        const uid = accountProperties[\"UID\"] ||\n            idTokenObj.claims.oid ||\n            idTokenObj.claims.sub ||\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n        const tid = accountProperties[\"TenantId\"] ||\n            idTokenObj.claims.tid ||\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n        // generate PoP token as needed\n        const responseAccessToken = await this.generatePopAccessToken(response, request);\n        const tokenType = request.tokenType === _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AuthenticationScheme.POP\n            ? _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AuthenticationScheme.POP\n            : _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AuthenticationScheme.BEARER;\n        const result = {\n            authority: authority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes.asArray(),\n            account: accountEntity.getAccountInfo(),\n            idToken: response.id_token,\n            idTokenClaims: idTokenObj.claims,\n            accessToken: responseAccessToken,\n            fromCache: mats ? this.isResponseFromCache(mats) : false,\n            expiresOn: new Date(Number(reqTimestamp + response.expires_in) * 1000),\n            tokenType: tokenType,\n            correlationId: this.correlationId,\n            state: response.state,\n            fromNativeBroker: true,\n        };\n        return result;\n    }\n    /**\n     * cache the account entity in browser storage\n     * @param accountEntity\n     */\n    cacheAccount(accountEntity) {\n        // Store the account info and hence `nativeAccountId` in browser cache\n        this.browserStorage.setAccount(accountEntity);\n        // Remove any existing cached tokens for this account in browser storage\n        this.browserStorage.removeAccountContext(accountEntity).catch((e) => {\n            this.logger.error(`Error occurred while removing account context from browser storage. ${e}`);\n        });\n    }\n    /**\n     * Stores the access_token and id_token in inmemory storage\n     * @param response\n     * @param request\n     * @param homeAccountIdentifier\n     * @param idTokenObj\n     * @param responseAccessToken\n     * @param tenantId\n     * @param reqTimestamp\n     */\n    cacheNativeTokens(response, request, homeAccountIdentifier, idTokenObj, responseAccessToken, tenantId, reqTimestamp) {\n        const cachedIdToken = _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.IdTokenEntity.createIdTokenEntity(homeAccountIdentifier, request.authority, response.id_token || _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, request.clientId, idTokenObj.claims.tid || _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING);\n        // cache accessToken in inmemory storage\n        const expiresIn = request.tokenType === _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AuthenticationScheme.POP\n            ? _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.Constants.SHR_NONCE_VALIDITY\n            : (typeof response.expires_in === \"string\"\n                ? parseInt(response.expires_in, 10)\n                : response.expires_in) || 0;\n        const tokenExpirationSeconds = reqTimestamp + expiresIn;\n        const responseScopes = this.generateScopes(response, request);\n        const cachedAccessToken = _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AccessTokenEntity.createAccessTokenEntity(homeAccountIdentifier, request.authority, responseAccessToken, request.clientId, idTokenObj\n            ? idTokenObj.claims.tid || _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING\n            : tenantId, responseScopes.printScopes(), tokenExpirationSeconds, 0, this.browserCrypto);\n        const nativeCacheRecord = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.CacheRecord(undefined, cachedIdToken, cachedAccessToken);\n        this.nativeStorageManager.saveCacheRecord(nativeCacheRecord, request.storeInCache);\n    }\n    addTelemetryFromNativeResponse(response) {\n        const mats = this.getMATSFromResponse(response);\n        if (!mats) {\n            return null;\n        }\n        this.performanceClient.addFields({\n            extensionId: this.nativeMessageHandler.getExtensionId(),\n            extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\n            matsBrokerVersion: mats.broker_version,\n            matsAccountJoinOnStart: mats.account_join_on_start,\n            matsAccountJoinOnEnd: mats.account_join_on_end,\n            matsDeviceJoin: mats.device_join,\n            matsPromptBehavior: mats.prompt_behavior,\n            matsApiErrorCode: mats.api_error_code,\n            matsUiVisible: mats.ui_visible,\n            matsSilentCode: mats.silent_code,\n            matsSilentBiSubCode: mats.silent_bi_sub_code,\n            matsSilentMessage: mats.silent_message,\n            matsSilentStatus: mats.silent_status,\n            matsHttpStatus: mats.http_status,\n            matsHttpEventCount: mats.http_event_count,\n        }, this.correlationId);\n        return mats;\n    }\n    /**\n     * Validates native platform response before processing\n     * @param response\n     */\n    validateNativeResponse(response) {\n        if (response.hasOwnProperty(\"access_token\") &&\n            response.hasOwnProperty(\"id_token\") &&\n            response.hasOwnProperty(\"client_info\") &&\n            response.hasOwnProperty(\"account\") &&\n            response.hasOwnProperty(\"scope\") &&\n            response.hasOwnProperty(\"expires_in\")) {\n            return response;\n        }\n        else {\n            throw _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.NativeAuthError.createUnexpectedError(\"Response missing expected properties.\");\n        }\n    }\n    /**\n     * Gets MATS telemetry from native response\n     * @param response\n     * @returns\n     */\n    getMATSFromResponse(response) {\n        if (response.properties.MATS) {\n            try {\n                return JSON.parse(response.properties.MATS);\n            }\n            catch (e) {\n                this.logger.error(\"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\");\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns whether or not response came from native cache\n     * @param response\n     * @returns\n     */\n    isResponseFromCache(mats) {\n        if (typeof mats.is_cached === \"undefined\") {\n            this.logger.verbose(\"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\");\n            return false;\n        }\n        return !!mats.is_cached;\n    }\n    /**\n     * Translates developer provided request object into NativeRequest object\n     * @param request\n     */\n    async initializeNativeRequest(request) {\n        this.logger.trace(\"NativeInteractionClient - initializeNativeRequest called\");\n        const authority = request.authority || this.config.auth.authority;\n        if (request.account) {\n            await this.validateRequestAuthority(authority, request.account);\n        }\n        const canonicalAuthority = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.UrlString(authority);\n        canonicalAuthority.validateAsUri();\n        // scopes are expected to be received by the native broker as \"scope\" and will be added to the request below. Other properties that should be dropped from the request to the native broker can be included in the object destructuring here.\n        const { scopes, ...remainingProperties } = request;\n        const scopeSet = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ScopeSet(scopes || []);\n        scopeSet.appendScopes(_azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.OIDC_DEFAULT_SCOPES);\n        const getPrompt = () => {\n            // If request is silent, prompt is always none\n            switch (this.apiId) {\n                case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId.ssoSilent:\n                case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId.acquireTokenSilent_silentFlow:\n                    this.logger.trace(\"initializeNativeRequest: silent request sets prompt to none\");\n                    return _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.PromptValue.NONE;\n            }\n            // Prompt not provided, request may proceed and native broker decides if it needs to prompt\n            if (!request.prompt) {\n                this.logger.trace(\"initializeNativeRequest: prompt was not provided\");\n                return undefined;\n            }\n            // If request is interactive, check if prompt provided is allowed to go directly to native broker\n            switch (request.prompt) {\n                case _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.PromptValue.NONE:\n                case _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.PromptValue.CONSENT:\n                case _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.PromptValue.LOGIN:\n                    this.logger.trace(\"initializeNativeRequest: prompt is compatible with native flow\");\n                    return request.prompt;\n                default:\n                    this.logger.trace(`initializeNativeRequest: prompt = ${request.prompt} is not compatible with native flow`);\n                    throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserAuthError.createNativePromptParameterNotSupportedError();\n            }\n        };\n        const validatedRequest = {\n            ...remainingProperties,\n            accountId: this.accountId,\n            clientId: this.config.auth.clientId,\n            authority: canonicalAuthority.urlString,\n            scope: scopeSet.printScopes(),\n            redirectUri: this.getRedirectUri(request.redirectUri),\n            prompt: getPrompt(),\n            correlationId: this.correlationId,\n            tokenType: request.authenticationScheme,\n            windowTitleSubstring: document.title,\n            extraParameters: {\n                ...request.extraQueryParameters,\n                ...request.tokenQueryParameters,\n            },\n            extendedExpiryToken: false, // Make this configurable?\n        };\n        this.handleExtraBrokerParams(validatedRequest);\n        validatedRequest.extraParameters =\n            validatedRequest.extraParameters || {};\n        validatedRequest.extraParameters.telemetry =\n            _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.NativeConstants.MATS_TELEMETRY;\n        if (request.authenticationScheme === _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AuthenticationScheme.POP) {\n            // add POP request type\n            const shrParameters = {\n                resourceRequestUri: request.resourceRequestUri,\n                resourceRequestMethod: request.resourceRequestMethod,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce,\n            };\n            const popTokenGenerator = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.PopTokenGenerator(this.browserCrypto);\n            const reqCnfData = await popTokenGenerator.generateCnf(shrParameters);\n            // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n            validatedRequest.reqCnf = reqCnfData.reqCnfHash;\n            validatedRequest.keyId = reqCnfData.kid;\n        }\n        return validatedRequest;\n    }\n    /**\n     * Handles extra broker request parameters\n     * @param request {NativeTokenRequest}\n     * @private\n     */\n    handleExtraBrokerParams(request) {\n        if (!request.extraParameters) {\n            return;\n        }\n        if (request.extraParameters.hasOwnProperty(BrokerServerParamKeys.BROKER_CLIENT_ID) &&\n            request.extraParameters.hasOwnProperty(BrokerServerParamKeys.BROKER_REDIRECT_URI) &&\n            request.extraParameters.hasOwnProperty(_azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AADServerParamKeys.CLIENT_ID)) {\n            const child_client_id = request.extraParameters[_azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AADServerParamKeys.CLIENT_ID];\n            const child_redirect_uri = request.redirectUri;\n            const brk_redirect_uri = request.extraParameters[BrokerServerParamKeys.BROKER_REDIRECT_URI];\n            request.extraParameters = {\n                child_client_id,\n                child_redirect_uri,\n            };\n            request.redirectUri = brk_redirect_uri;\n        }\n    }\n}\n\n\n//# sourceMappingURL=NativeInteractionClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PopupClient: function() { return /* binding */ PopupClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../event/EventType.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./NativeInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../broker/nativeBroker/NativeMessageHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _interaction_handler_InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../interaction_handler/InteractionHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass PopupClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        // Properly sets this reference for the unload event.\n        this.unloadWindow = this.unloadWindow.bind(this);\n        this.nativeStorage = nativeStorageImpl;\n    }\n    /**\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\n     * @param request\n     */\n    acquireToken(request) {\n        try {\n            const popupName = this.generatePopupName(request.scopes || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.OIDC_DEFAULT_SCOPES, request.authority || this.config.auth.authority);\n            const popupWindowAttributes = request.popupWindowAttributes || {};\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\n                // Passes on popup position and dimensions if in request\n                return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes);\n            }\n            else {\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\n                this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\n                const popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\n                return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes, popup);\n            }\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logout(logoutRequest) {\n        try {\n            this.logger.verbose(\"logoutPopup called\");\n            const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n            const popupName = this.generateLogoutPopupName(validLogoutRequest);\n            const authority = logoutRequest && logoutRequest.authority;\n            const mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\n            const popupWindowAttributes = logoutRequest?.popupWindowAttributes || {};\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true\");\n                // Passes on popup position and dimensions if in request\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, undefined, mainWindowRedirectUri);\n            }\n            else {\n                // asyncPopups flag is set to false. Opens popup before logging out.\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\n                const popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, popup, mainWindowRedirectUri);\n            }\n        }\n        catch (e) {\n            // Since this function is synchronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\n     * @param validRequest\n     * @param popupName\n     * @param popup\n     * @param popupWindowAttributes\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenPopupAsync(request, popupName, popupWindowAttributes, popup) {\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenPopup);\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\n        const validRequest = await this.initializeAuthorizationRequest(request, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup);\n        this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING, validRequest.account || null);\n        try {\n            // Create auth code request and generate PKCE params\n            this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, request.correlationId);\n            const authCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, request.correlationId);\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions);\n            this.logger.verbose(\"Auth code client created\");\n            const isNativeBroker = _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_3__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme);\n            // Start measurement for server calls with native brokering enabled\n            let fetchNativeAccountIdMeasurement;\n            if (isNativeBroker) {\n                fetchNativeAccountIdMeasurement =\n                    this.performanceClient.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.FetchAccountIdWithNativeBroker, request.correlationId);\n            }\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: isNativeBroker,\n            });\n            // Create popup interaction handler.\n            const interactionHandler = new _interaction_handler_InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\n            // Show the UI once the url has been created. Get the window handle for the popup.\n            const popupParameters = {\n                popup,\n                popupName,\n                popupWindowAttributes,\n            };\n            const popupWindow = this.initiateAuthRequest(navigateUrl, popupParameters);\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_5__.EventType.POPUP_OPENED, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, { popupWindow }, null);\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n            const hash = await this.monitorPopupForHash(popupWindow);\n            // Deserialize hash fragment response parameters.\n            const serverParams = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.getDeserializedHash(hash);\n            const state = this.validateAndExtractStateFromHash(serverParams, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, validRequest.correlationId);\n            // Remove throttle if it exists\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\n            if (serverParams.accountId) {\n                this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n                // end measurement for server call with native brokering enabled\n                if (fetchNativeAccountIdMeasurement) {\n                    fetchNativeAccountIdMeasurement.end({\n                        success: true,\n                        isNativeBroker: true,\n                    });\n                }\n                if (!this.nativeMessageHandler) {\n                    throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserAuthError.createNativeConnectionNotEstablishedError();\n                }\n                const nativeInteractionClient = new _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_7__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, validRequest.correlationId);\n                const { userRequestState } = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ProtocolUtils.parseRequestState(this.browserCrypto, state);\n                return nativeInteractionClient\n                    .acquireToken({\n                    ...validRequest,\n                    state: userRequestState,\n                    prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\n                })\n                    .finally(() => {\n                    this.browserStorage.cleanRequestByState(state);\n                });\n            }\n            // Handle response from hash string.\n            const result = await interactionHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient);\n            return result;\n        }\n        catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n    /**\n     *\n     * @param validRequest\n     * @param popupName\n     * @param requestAuthority\n     * @param popup\n     * @param mainWindowRedirectUri\n     * @param popupWindowAttributes\n     */\n    async logoutPopupAsync(validRequest, popupName, popupWindowAttributes, requestAuthority, popup, mainWindowRedirectUri) {\n        this.logger.verbose(\"logoutPopupAsync called\");\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_5__.EventType.LOGOUT_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, validRequest);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.logoutPopup);\n        try {\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validRequest.account);\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, validRequest.correlationId);\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, requestAuthority);\n            this.logger.verbose(\"Auth code client created\");\n            try {\n                authClient.authority.endSessionEndpoint;\n            }\n            catch {\n                if (validRequest.account?.homeAccountId &&\n                    validRequest.postLogoutRedirectUri &&\n                    authClient.authority.protocolMode === _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ProtocolMode.OIDC) {\n                    this.browserStorage.removeAccount(validRequest.account?.homeAccountId);\n                    this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_5__.EventType.LOGOUT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, validRequest);\n                    if (mainWindowRedirectUri) {\n                        const navigationOptions = {\n                            apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.logoutPopup,\n                            timeout: this.config.system.redirectNavigationTimeout,\n                            noHistory: false,\n                        };\n                        const absoluteUrl = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.getAbsoluteUrl(mainWindowRedirectUri, _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.BrowserUtils.getCurrentUri());\n                        await this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\n                    }\n                    if (popup) {\n                        popup.close();\n                    }\n                    return;\n                }\n            }\n            // Create logout string and navigate user window to logout.\n            const logoutUri = authClient.getLogoutUri(validRequest);\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_5__.EventType.LOGOUT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, validRequest);\n            // Open the popup window to requestUrl.\n            const popupWindow = this.openPopup(logoutUri, {\n                popupName,\n                popupWindowAttributes,\n                popup,\n            });\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_5__.EventType.POPUP_OPENED, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, { popupWindow }, null);\n            await this.waitForLogoutPopup(popupWindow);\n            if (mainWindowRedirectUri) {\n                const navigationOptions = {\n                    apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.logoutPopup,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: false,\n                };\n                const absoluteUrl = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.getAbsoluteUrl(mainWindowRedirectUri, _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.BrowserUtils.getCurrentUri());\n                this.logger.verbose(\"Redirecting main window to url specified in the request\");\n                this.logger.verbosePii(`Redirecting main window to: ${absoluteUrl}`);\n                this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\n            }\n            else {\n                this.logger.verbose(\"No main window navigation requested\");\n            }\n        }\n        catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.setInteractionInProgress(false);\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_5__.EventType.LOGOUT_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, null, e);\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_5__.EventType.LOGOUT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup);\n            throw e;\n        }\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_5__.EventType.LOGOUT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup);\n    }\n    /**\n     * Opens a popup window with given request Url.\n     * @param requestUrl\n     */\n    initiateAuthRequest(requestUrl, params) {\n        // Check that request url is not empty.\n        if (!_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.StringUtils.isEmpty(requestUrl)) {\n            this.logger.infoPii(`Navigate to: ${requestUrl}`);\n            // Open the popup window to requestUrl.\n            return this.openPopup(requestUrl, params);\n        }\n        else {\n            // Throw error if request URL is empty.\n            this.logger.error(\"Navigate url is empty\");\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserAuthError.createEmptyNavigationUriError();\n        }\n    }\n    /**\n     * Monitors a window until it loads a url with the same origin.\n     * @param popupWindow - window that is being monitored\n     * @param timeout - timeout for processing hash once popup is redirected back to application\n     */\n    monitorPopupForHash(popupWindow) {\n        return new Promise((resolve, reject) => {\n            /*\n             * Polling for popups needs to be tick-based,\n             * since a non-trivial amount of time can be spent on interaction (which should not count against the timeout).\n             */\n            const maxTicks = this.config.system.windowHashTimeout /\n                this.config.system.pollIntervalMilliseconds;\n            let ticks = 0;\n            this.logger.verbose(\"PopupHandler.monitorPopupForHash - polling started\");\n            const intervalId = setInterval(() => {\n                // Window is closed\n                if (popupWindow.closed) {\n                    this.logger.error(\"PopupHandler.monitorPopupForHash - window closed\");\n                    this.cleanPopup();\n                    clearInterval(intervalId);\n                    reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserAuthError.createUserCancelledError());\n                    return;\n                }\n                let href = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n                let serverResponseString = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                    serverResponseString =\n                        this.extractServerResponseStringFromPopup(popupWindow, href);\n                }\n                catch (e) { }\n                // Don't process blank pages or cross domain\n                if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.StringUtils.isEmpty(href) || href === \"about:blank\") {\n                    return;\n                }\n                this.logger.verbose(\"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\");\n                /*\n                 * Only run clock when we are on same domain for popups\n                 * as popup operations can take a long time.\n                 */\n                ticks++;\n                if (serverResponseString) {\n                    this.logger.verbose(\"PopupHandler.monitorPopupForHash - found hash in url\");\n                    clearInterval(intervalId);\n                    this.cleanPopup(popupWindow);\n                    if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.hashContainsKnownProperties(serverResponseString)) {\n                        this.logger.verbose(\"PopupHandler.monitorPopupForHash - hash contains known properties, returning.\");\n                        resolve(serverResponseString);\n                    }\n                    else {\n                        this.logger.error(\"PopupHandler.monitorPopupForHash - found hash in url but it does not contain known properties. Check that your router is not changing the hash prematurely.\");\n                        this.logger.errorPii(`PopupHandler.monitorPopupForHash - hash found: ${serverResponseString}`);\n                        reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserAuthError.createHashDoesNotContainKnownPropertiesError());\n                    }\n                }\n                else if (ticks > maxTicks) {\n                    this.logger.error(\"PopupHandler.monitorPopupForHash - unable to find hash in url, timing out\");\n                    clearInterval(intervalId);\n                    reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserAuthError.createMonitorPopupTimeoutError());\n                }\n            }, this.config.system.pollIntervalMilliseconds);\n        });\n    }\n    /**\n     * Waits for user interaction in logout popup window\n     * @param popupWindow\n     * @returns\n     */\n    waitForLogoutPopup(popupWindow) {\n        return new Promise((resolve) => {\n            this.logger.verbose(\"PopupHandler.waitForLogoutPopup - polling started\");\n            const intervalId = setInterval(() => {\n                // Window is closed\n                if (popupWindow.closed) {\n                    this.logger.error(\"PopupHandler.waitForLogoutPopup - window closed\");\n                    this.cleanPopup();\n                    clearInterval(intervalId);\n                    resolve();\n                }\n                let href = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                }\n                catch (e) { }\n                // Don't process blank pages or cross domain\n                if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.StringUtils.isEmpty(href) || href === \"about:blank\") {\n                    return;\n                }\n                this.logger.verbose(\"PopupHandler.waitForLogoutPopup - popup window is on same origin as caller, closing.\");\n                clearInterval(intervalId);\n                this.cleanPopup(popupWindow);\n                resolve();\n            }, this.config.system.pollIntervalMilliseconds);\n        });\n    }\n    /**\n     * @hidden\n     *\n     * Configures popup window for login.\n     *\n     * @param urlNavigate\n     * @param title\n     * @param popUpWidth\n     * @param popUpHeight\n     * @param popupWindowAttributes\n     * @ignore\n     * @hidden\n     */\n    openPopup(urlNavigate, popupParams) {\n        try {\n            let popupWindow;\n            // Popup window passed in, setting url to navigate to\n            if (popupParams.popup) {\n                popupWindow = popupParams.popup;\n                this.logger.verbosePii(`Navigating popup window to: ${urlNavigate}`);\n                popupWindow.location.assign(urlNavigate);\n            }\n            else if (typeof popupParams.popup === \"undefined\") {\n                // Popup will be undefined if it was not passed in\n                this.logger.verbosePii(`Opening popup window to: ${urlNavigate}`);\n                popupWindow = this.openSizedPopup(urlNavigate, popupParams.popupName, popupParams.popupWindowAttributes);\n            }\n            // Popup will be null if popups are blocked\n            if (!popupWindow) {\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserAuthError.createEmptyWindowCreatedError();\n            }\n            if (popupWindow.focus) {\n                popupWindow.focus();\n            }\n            this.currentWindow = popupWindow;\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\n            return popupWindow;\n        }\n        catch (e) {\n            this.logger.error(\"error opening popup \" + e.message);\n            this.browserStorage.setInteractionInProgress(false);\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserAuthError.createPopupWindowError(e.toString());\n        }\n    }\n    /**\n     * Helper function to set popup window dimensions and position\n     * @param urlNavigate\n     * @param popupName\n     * @param popupWindowAttributes\n     * @returns\n     */\n    openSizedPopup(urlNavigate, popupName, popupWindowAttributes) {\n        /**\n         * adding winLeft and winTop to account for dual monitor\n         * using screenLeft and screenTop for IE8 and earlier\n         */\n        const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n        const winTop = window.screenTop ? window.screenTop : window.screenY;\n        /**\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\n         * using document.documentElement.clientWidth for IE8 and earlier\n         */\n        const winWidth = window.innerWidth ||\n            document.documentElement.clientWidth ||\n            document.body.clientWidth;\n        const winHeight = window.innerHeight ||\n            document.documentElement.clientHeight ||\n            document.body.clientHeight;\n        let width = popupWindowAttributes.popupSize?.width;\n        let height = popupWindowAttributes.popupSize?.height;\n        let top = popupWindowAttributes.popupPosition?.top;\n        let left = popupWindowAttributes.popupPosition?.left;\n        if (!width || width < 0 || width > winWidth) {\n            this.logger.verbose(\"Default popup window width used. Window width not configured or invalid.\");\n            width = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_WIDTH;\n        }\n        if (!height || height < 0 || height > winHeight) {\n            this.logger.verbose(\"Default popup window height used. Window height not configured or invalid.\");\n            height = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_HEIGHT;\n        }\n        if (!top || top < 0 || top > winHeight) {\n            this.logger.verbose(\"Default popup window top position used. Window top not configured or invalid.\");\n            top = Math.max(0, winHeight / 2 - _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_HEIGHT / 2 + winTop);\n        }\n        if (!left || left < 0 || left > winWidth) {\n            this.logger.verbose(\"Default popup window left position used. Window left not configured or invalid.\");\n            left = Math.max(0, winWidth / 2 - _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_WIDTH / 2 + winLeft);\n        }\n        return window.open(urlNavigate, popupName, `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`);\n    }\n    /**\n     * Event callback to unload main window.\n     */\n    unloadWindow(e) {\n        this.browserStorage.cleanRequestByInteractionType(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup);\n        if (this.currentWindow) {\n            this.currentWindow.close();\n        }\n        // Guarantees browser unload will happen, so no other errors will be thrown.\n        e.preventDefault();\n    }\n    /**\n     * Closes popup, removes any state vars created during popup calls.\n     * @param popupWindow\n     */\n    cleanPopup(popupWindow) {\n        if (popupWindow) {\n            // Close window.\n            popupWindow.close();\n        }\n        // Remove window unload function\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n    }\n    /**\n     * Generates the name for the popup based on the client id and request\n     * @param clientId\n     * @param request\n     */\n    generatePopupName(scopes, authority) {\n        return `${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${scopes.join(\"-\")}.${authority}.${this.correlationId}`;\n    }\n    /**\n     * Generates the name for the popup based on the client id and request for logouts\n     * @param clientId\n     * @param request\n     */\n    generateLogoutPopupName(request) {\n        const homeAccountId = request.account && request.account.homeAccountId;\n        return `${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${homeAccountId}.${this.correlationId}`;\n    }\n    /**\n     * Extracts the server response from the popup window\n     */\n    extractServerResponseStringFromPopup(popupWindow, href) {\n        let serverResponseString;\n        if (this.config.auth.OIDCOptions?.serverResponseType ===\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ServerResponseType.QUERY) {\n            serverResponseString = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.parseQueryServerResponse(href);\n        }\n        else {\n            serverResponseString = popupWindow.location.hash;\n        }\n        return serverResponseString;\n    }\n}\n\n\n//# sourceMappingURL=PopupClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedirectClient: function() { return /* binding */ RedirectClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _interaction_handler_RedirectHandler_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../interaction_handler/RedirectHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../event/EventType.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./NativeInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../broker/nativeBroker/NativeMessageHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass RedirectClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.nativeStorage = nativeStorageImpl;\n    }\n    /**\n     * Redirects the page to the /authorize endpoint of the IDP\n     * @param request\n     */\n    async acquireToken(request) {\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\n        const validRequest = await this.initializeAuthorizationRequest(request, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\n        this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING, validRequest.account || null);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenRedirect);\n        const handleBackButton = (event) => {\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            if (event.persisted) {\n                this.logger.verbose(\"Page was restored from back/forward cache. Clearing temporary cache.\");\n                this.browserStorage.cleanRequestByState(validRequest.state);\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__.EventType.RESTORE_FROM_BFCACHE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\n            }\n        };\n        try {\n            // Create auth code request and generate PKCE params\n            this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, request.correlationId);\n            const authCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, request.correlationId);\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions);\n            this.logger.verbose(\"Auth code client created\");\n            // Create redirect interaction handler.\n            const interactionHandler = new _interaction_handler_RedirectHandler_mjs__WEBPACK_IMPORTED_MODULE_4__.RedirectHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.browserCrypto, this.performanceClient);\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_5__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme),\n            });\n            const redirectStartPage = this.getRedirectStartPage(request.redirectStartPage);\n            this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            window.addEventListener(\"pageshow\", handleBackButton);\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\n            return await interactionHandler.initiateAuthRequest(navigateUrl, {\n                navigationClient: this.navigationClient,\n                redirectTimeout: this.config.system.redirectNavigationTimeout,\n                redirectStartPage: redirectStartPage,\n                onRedirectNavigate: request.onRedirectNavigate,\n            });\n        }\n        catch (e) {\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            window.removeEventListener(\"pageshow\", handleBackButton);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n    /**\n     * Checks if navigateToLoginRequestUrl is set, and:\n     * - if true, performs logic to cache and navigate\n     * - if false, handles hash string and parses response\n     * @param hash\n     */\n    async handleRedirectPromise(hash) {\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.handleRedirectPromise);\n        try {\n            if (!this.browserStorage.isInteractionInProgress(true)) {\n                this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\n                return null;\n            }\n            const responseHash = this.getRedirectResponseHash(hash || window.location.hash);\n            if (!responseHash) {\n                // Not a recognized server response hash or hash not associated with a redirect request\n                this.logger.info(\"handleRedirectPromise did not detect a response hash as a result of a redirect. Cleaning temporary cache.\");\n                this.browserStorage.cleanRequestByInteractionType(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\n                return null;\n            }\n            let state;\n            try {\n                // Deserialize hash fragment response parameters.\n                const serverParams = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.getDeserializedHash(responseHash);\n                state = this.validateAndExtractStateFromHash(serverParams, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\n                this.logger.verbose(\"State extracted from hash\");\n            }\n            catch (e) {\n                this.logger.info(`handleRedirectPromise was unable to extract state due to: ${e}`);\n                this.browserStorage.cleanRequestByInteractionType(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\n                return null;\n            }\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\n            const loginRequestUrl = this.browserStorage.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.ORIGIN_URI, true) || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n            const loginRequestUrlNormalized = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.removeHashFromUrl(loginRequestUrl);\n            const currentUrlNormalized = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.removeHashFromUrl(window.location.href);\n            if (loginRequestUrlNormalized === currentUrlNormalized &&\n                this.config.auth.navigateToLoginRequestUrl) {\n                // We are on the page we need to navigate to - handle hash\n                this.logger.verbose(\"Current page is loginRequestUrl, handling hash\");\n                const handleHashResult = await this.handleHash(responseHash, state, serverTelemetryManager);\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\n                    // Replace current hash with non-msal hash, if present\n                    _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserUtils.replaceHash(loginRequestUrl);\n                }\n                return handleHashResult;\n            }\n            else if (!this.config.auth.navigateToLoginRequestUrl) {\n                this.logger.verbose(\"NavigateToLoginRequestUrl set to false, handling hash\");\n                return this.handleHash(responseHash, state, serverTelemetryManager);\n            }\n            else if (!_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserUtils.isInIframe() ||\n                this.config.system.allowRedirectInIframe) {\n                /*\n                 * Returned from authority using redirect - need to perform navigation before processing response\n                 * Cache the hash to be retrieved after the next redirect\n                 */\n                this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.URL_HASH, responseHash, true);\n                const navigationOptions = {\n                    apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.handleRedirectPromise,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: true,\n                };\n                /**\n                 * Default behavior is to redirect to the start page and not process the hash now.\n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\n                 */\n                let processHashOnRedirect = true;\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\n                    // Redirect to home page if login request url is null (real null or the string null)\n                    const homepage = _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserUtils.getHomepage();\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\n                    this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.ORIGIN_URI, homepage, true);\n                    this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\n                    processHashOnRedirect =\n                        await this.navigationClient.navigateInternal(homepage, navigationOptions);\n                }\n                else {\n                    // Navigate to page that initiated the redirect request\n                    this.logger.verbose(`Navigating to loginRequestUrl: ${loginRequestUrl}`);\n                    processHashOnRedirect =\n                        await this.navigationClient.navigateInternal(loginRequestUrl, navigationOptions);\n                }\n                // If navigateInternal implementation returns false, handle the hash now\n                if (!processHashOnRedirect) {\n                    return this.handleHash(responseHash, state, serverTelemetryManager);\n                }\n            }\n            return null;\n        }\n        catch (e) {\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByInteractionType(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\n            throw e;\n        }\n    }\n    /**\n     * Gets the response hash for a redirect request\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\n     * @param hash\n     */\n    getRedirectResponseHash(hash) {\n        this.logger.verbose(\"getRedirectResponseHash called\");\n        // Get current location hash from window or cache.\n        const isResponseHash = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.hashContainsKnownProperties(hash);\n        if (isResponseHash) {\n            _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserUtils.clearHash(window);\n            this.logger.verbose(\"Hash contains known properties, returning response hash\");\n            return hash;\n        }\n        const cachedHash = this.browserStorage.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.URL_HASH, true);\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.URL_HASH));\n        this.logger.verbose(\"Hash does not contain known properties, returning cached hash\");\n        return cachedHash;\n    }\n    /**\n     * Checks if hash exists and handles in window.\n     * @param hash\n     * @param state\n     */\n    async handleHash(hash, state, serverTelemetryManager) {\n        const cachedRequest = this.browserStorage.getCachedRequest(state, this.browserCrypto);\n        this.logger.verbose(\"handleHash called, retrieved cached request\");\n        const serverParams = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.getDeserializedHash(hash);\n        if (serverParams.accountId) {\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n            if (!this.nativeMessageHandler) {\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_7__.BrowserAuthError.createNativeConnectionNotEstablishedError();\n            }\n            const nativeInteractionClient = new _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_8__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, cachedRequest.correlationId);\n            const { userRequestState } = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ProtocolUtils.parseRequestState(this.browserCrypto, state);\n            return nativeInteractionClient\n                .acquireToken({\n                ...cachedRequest,\n                state: userRequestState,\n                prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\n            })\n                .finally(() => {\n                this.browserStorage.cleanRequestByState(state);\n            });\n        }\n        // Hash contains known properties - handle and return in callback\n        const currentAuthority = this.browserStorage.getCachedAuthority(state);\n        if (!currentAuthority) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_7__.BrowserAuthError.createNoCachedAuthorityError();\n        }\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, cachedRequest.correlationId);\n        const authClient = await this.createAuthCodeClient(serverTelemetryManager, currentAuthority);\n        this.logger.verbose(\"Auth code client created\");\n        _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, cachedRequest);\n        const interactionHandler = new _interaction_handler_RedirectHandler_mjs__WEBPACK_IMPORTED_MODULE_4__.RedirectHandler(authClient, this.browserStorage, cachedRequest, this.logger, this.browserCrypto, this.performanceClient);\n        return await interactionHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient);\n    }\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logout(logoutRequest) {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.logout);\n        try {\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__.EventType.LOGOUT_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect, logoutRequest);\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validLogoutRequest.account);\n            const navigationOptions = {\n                apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.logout,\n                timeout: this.config.system.redirectNavigationTimeout,\n                noHistory: false,\n            };\n            this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, validLogoutRequest.correlationId);\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, logoutRequest && logoutRequest.authority);\n            this.logger.verbose(\"Auth code client created\");\n            if (authClient.authority.protocolMode === _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ProtocolMode.OIDC) {\n                try {\n                    authClient.authority.endSessionEndpoint;\n                }\n                catch {\n                    if (validLogoutRequest.account?.homeAccountId) {\n                        this.browserStorage.removeAccount(validLogoutRequest.account?.homeAccountId);\n                        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__.EventType.LOGOUT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect, validLogoutRequest);\n                        return;\n                    }\n                }\n            }\n            // Create logout string and navigate user window to logout.\n            const logoutUri = authClient.getLogoutUri(validLogoutRequest);\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__.EventType.LOGOUT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect, validLogoutRequest);\n            // Check if onRedirectNavigate is implemented, and invoke it if so\n            if (logoutRequest &&\n                typeof logoutRequest.onRedirectNavigate === \"function\") {\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\n                if (navigate !== false) {\n                    this.logger.verbose(\"Logout onRedirectNavigate did not return false, navigating\");\n                    // Ensure interaction is in progress\n                    if (!this.browserStorage.getInteractionInProgress()) {\n                        this.browserStorage.setInteractionInProgress(true);\n                    }\n                    await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\n                    return;\n                }\n                else {\n                    // Ensure interaction is not in progress\n                    this.browserStorage.setInteractionInProgress(false);\n                    this.logger.verbose(\"Logout onRedirectNavigate returned false, stopping navigation\");\n                }\n            }\n            else {\n                // Ensure interaction is in progress\n                if (!this.browserStorage.getInteractionInProgress()) {\n                    this.browserStorage.setInteractionInProgress(true);\n                }\n                await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\n                return;\n            }\n        }\n        catch (e) {\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__.EventType.LOGOUT_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect, null, e);\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__.EventType.LOGOUT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\n            throw e;\n        }\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__.EventType.LOGOUT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\n    }\n    /**\n     * Use to get the redirectStartPage either from request or use current window\n     * @param requestStartPage\n     */\n    getRedirectStartPage(requestStartPage) {\n        const redirectStartPage = requestStartPage || window.location.href;\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.getAbsoluteUrl(redirectStartPage, _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserUtils.getCurrentUri());\n    }\n}\n\n\n//# sourceMappingURL=RedirectClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentAuthCodeClient: function() { return /* binding */ SilentAuthCodeClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _interaction_handler_SilentHandler_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../interaction_handler/SilentHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs\");\n/* harmony import */ var _HybridSpaAuthorizationCodeClient_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./HybridSpaAuthorizationCodeClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/HybridSpaAuthorizationCodeClient.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentAuthCodeClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeMessageHandler, correlationId) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.apiId = apiId;\n    }\n    /**\n     * Acquires a token silently by redeeming an authorization code against the /token endpoint\n     * @param request\n     */\n    async acquireToken(request) {\n        this.logger.trace(\"SilentAuthCodeClient.acquireToken called\");\n        // Auth code payload is required\n        if (!request.code) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createAuthCodeRequiredError();\n        }\n        // Create silent request\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\n        const silentRequest = await this.initializeAuthorizationRequest(request, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType.Silent);\n        this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, silentRequest.account || null);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n        try {\n            // Create auth code request (PKCE not needed)\n            const authCodeRequest = {\n                ...silentRequest,\n                code: request.code,\n            };\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, request.correlationId);\n            const clientConfig = await this.getClientConfiguration(serverTelemetryManager, silentRequest.authority);\n            const authClient = new _HybridSpaAuthorizationCodeClient_mjs__WEBPACK_IMPORTED_MODULE_4__.HybridSpaAuthorizationCodeClient(clientConfig);\n            this.logger.verbose(\"Auth code client created\");\n            // Create silent handler\n            const silentHandler = new _interaction_handler_SilentHandler_mjs__WEBPACK_IMPORTED_MODULE_5__.SilentHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.config.system, this.performanceClient);\n            // Handle auth code parameters from request\n            return silentHandler.handleCodeResponseFromServer({\n                code: request.code,\n                msgraph_host: request.msGraphHost,\n                cloud_graph_host_name: request.cloudGraphHostName,\n                cloud_instance_host_name: request.cloudInstanceHostName,\n            }, silentRequest.state, authClient.authority, this.networkClient, false);\n        }\n        catch (e) {\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByState(silentRequest.state);\n            throw e;\n        }\n    }\n    /**\n     * Currently Unsupported\n     */\n    logout() {\n        // Synchronous so we must reject\n        return Promise.reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n}\n\n\n//# sourceMappingURL=SilentAuthCodeClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9TaWxlbnRBdXRoQ29kZUNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDZ0U7QUFDRDtBQUNYO0FBQ0Q7QUFDUztBQUNpQjs7QUFFMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMscUZBQXlCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix5RUFBZ0I7QUFDbEM7QUFDQTtBQUNBLCtDQUErQyxpRUFBaUI7QUFDaEUsaUZBQWlGLHdFQUFlO0FBQ2hHLDZJQUE2SSx5REFBUztBQUN0SjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELGlFQUFpQjtBQUNwRTtBQUNBLG1DQUFtQyxtR0FBZ0M7QUFDbkU7QUFDQTtBQUNBLHNDQUFzQyxpRkFBYTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLDZCQUE2Qix5REFBUztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIseUVBQWdCO0FBQzlDO0FBQ0E7O0FBRWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvaW50ZXJhY3Rpb25fY2xpZW50L1NpbGVudEF1dGhDb2RlQ2xpZW50Lm1qcz9iMjc2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBQZXJmb3JtYW5jZUV2ZW50cywgQ29uc3RhbnRzLCBBdXRoRXJyb3IgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24nO1xuaW1wb3J0IHsgU3RhbmRhcmRJbnRlcmFjdGlvbkNsaWVudCB9IGZyb20gJy4vU3RhbmRhcmRJbnRlcmFjdGlvbkNsaWVudC5tanMnO1xuaW1wb3J0IHsgQnJvd3NlckF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IEludGVyYWN0aW9uVHlwZSB9IGZyb20gJy4uL3V0aWxzL0Jyb3dzZXJDb25zdGFudHMubWpzJztcbmltcG9ydCB7IFNpbGVudEhhbmRsZXIgfSBmcm9tICcuLi9pbnRlcmFjdGlvbl9oYW5kbGVyL1NpbGVudEhhbmRsZXIubWpzJztcbmltcG9ydCB7IEh5YnJpZFNwYUF1dGhvcml6YXRpb25Db2RlQ2xpZW50IH0gZnJvbSAnLi9IeWJyaWRTcGFBdXRob3JpemF0aW9uQ29kZUNsaWVudC5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIFNpbGVudEF1dGhDb2RlQ2xpZW50IGV4dGVuZHMgU3RhbmRhcmRJbnRlcmFjdGlvbkNsaWVudCB7XG4gICAgY29uc3RydWN0b3IoY29uZmlnLCBzdG9yYWdlSW1wbCwgYnJvd3NlckNyeXB0bywgbG9nZ2VyLCBldmVudEhhbmRsZXIsIG5hdmlnYXRpb25DbGllbnQsIGFwaUlkLCBwZXJmb3JtYW5jZUNsaWVudCwgbmF0aXZlTWVzc2FnZUhhbmRsZXIsIGNvcnJlbGF0aW9uSWQpIHtcbiAgICAgICAgc3VwZXIoY29uZmlnLCBzdG9yYWdlSW1wbCwgYnJvd3NlckNyeXB0bywgbG9nZ2VyLCBldmVudEhhbmRsZXIsIG5hdmlnYXRpb25DbGllbnQsIHBlcmZvcm1hbmNlQ2xpZW50LCBuYXRpdmVNZXNzYWdlSGFuZGxlciwgY29ycmVsYXRpb25JZCk7XG4gICAgICAgIHRoaXMuYXBpSWQgPSBhcGlJZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWNxdWlyZXMgYSB0b2tlbiBzaWxlbnRseSBieSByZWRlZW1pbmcgYW4gYXV0aG9yaXphdGlvbiBjb2RlIGFnYWluc3QgdGhlIC90b2tlbiBlbmRwb2ludFxuICAgICAqIEBwYXJhbSByZXF1ZXN0XG4gICAgICovXG4gICAgYXN5bmMgYWNxdWlyZVRva2VuKHJlcXVlc3QpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIudHJhY2UoXCJTaWxlbnRBdXRoQ29kZUNsaWVudC5hY3F1aXJlVG9rZW4gY2FsbGVkXCIpO1xuICAgICAgICAvLyBBdXRoIGNvZGUgcGF5bG9hZCBpcyByZXF1aXJlZFxuICAgICAgICBpZiAoIXJlcXVlc3QuY29kZSkge1xuICAgICAgICAgICAgdGhyb3cgQnJvd3NlckF1dGhFcnJvci5jcmVhdGVBdXRoQ29kZVJlcXVpcmVkRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBDcmVhdGUgc2lsZW50IHJlcXVlc3RcbiAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudC5zZXRQcmVRdWV1ZVRpbWUoUGVyZm9ybWFuY2VFdmVudHMuU3RhbmRhcmRJbnRlcmFjdGlvbkNsaWVudEluaXRpYWxpemVBdXRob3JpemF0aW9uUmVxdWVzdCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgY29uc3Qgc2lsZW50UmVxdWVzdCA9IGF3YWl0IHRoaXMuaW5pdGlhbGl6ZUF1dGhvcml6YXRpb25SZXF1ZXN0KHJlcXVlc3QsIEludGVyYWN0aW9uVHlwZS5TaWxlbnQpO1xuICAgICAgICB0aGlzLmJyb3dzZXJTdG9yYWdlLnVwZGF0ZUNhY2hlRW50cmllcyhzaWxlbnRSZXF1ZXN0LnN0YXRlLCBzaWxlbnRSZXF1ZXN0Lm5vbmNlLCBzaWxlbnRSZXF1ZXN0LmF1dGhvcml0eSwgc2lsZW50UmVxdWVzdC5sb2dpbkhpbnQgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORywgc2lsZW50UmVxdWVzdC5hY2NvdW50IHx8IG51bGwpO1xuICAgICAgICBjb25zdCBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyID0gdGhpcy5pbml0aWFsaXplU2VydmVyVGVsZW1ldHJ5TWFuYWdlcih0aGlzLmFwaUlkKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIENyZWF0ZSBhdXRoIGNvZGUgcmVxdWVzdCAoUEtDRSBub3QgbmVlZGVkKVxuICAgICAgICAgICAgY29uc3QgYXV0aENvZGVSZXF1ZXN0ID0ge1xuICAgICAgICAgICAgICAgIC4uLnNpbGVudFJlcXVlc3QsXG4gICAgICAgICAgICAgICAgY29kZTogcmVxdWVzdC5jb2RlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIC8vIEluaXRpYWxpemUgdGhlIGNsaWVudFxuICAgICAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudC5zZXRQcmVRdWV1ZVRpbWUoUGVyZm9ybWFuY2VFdmVudHMuU3RhbmRhcmRJbnRlcmFjdGlvbkNsaWVudEdldENsaWVudENvbmZpZ3VyYXRpb24sIHJlcXVlc3QuY29ycmVsYXRpb25JZCk7XG4gICAgICAgICAgICBjb25zdCBjbGllbnRDb25maWcgPSBhd2FpdCB0aGlzLmdldENsaWVudENvbmZpZ3VyYXRpb24oc2VydmVyVGVsZW1ldHJ5TWFuYWdlciwgc2lsZW50UmVxdWVzdC5hdXRob3JpdHkpO1xuICAgICAgICAgICAgY29uc3QgYXV0aENsaWVudCA9IG5ldyBIeWJyaWRTcGFBdXRob3JpemF0aW9uQ29kZUNsaWVudChjbGllbnRDb25maWcpO1xuICAgICAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShcIkF1dGggY29kZSBjbGllbnQgY3JlYXRlZFwiKTtcbiAgICAgICAgICAgIC8vIENyZWF0ZSBzaWxlbnQgaGFuZGxlclxuICAgICAgICAgICAgY29uc3Qgc2lsZW50SGFuZGxlciA9IG5ldyBTaWxlbnRIYW5kbGVyKGF1dGhDbGllbnQsIHRoaXMuYnJvd3NlclN0b3JhZ2UsIGF1dGhDb2RlUmVxdWVzdCwgdGhpcy5sb2dnZXIsIHRoaXMuY29uZmlnLnN5c3RlbSwgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCk7XG4gICAgICAgICAgICAvLyBIYW5kbGUgYXV0aCBjb2RlIHBhcmFtZXRlcnMgZnJvbSByZXF1ZXN0XG4gICAgICAgICAgICByZXR1cm4gc2lsZW50SGFuZGxlci5oYW5kbGVDb2RlUmVzcG9uc2VGcm9tU2VydmVyKHtcbiAgICAgICAgICAgICAgICBjb2RlOiByZXF1ZXN0LmNvZGUsXG4gICAgICAgICAgICAgICAgbXNncmFwaF9ob3N0OiByZXF1ZXN0Lm1zR3JhcGhIb3N0LFxuICAgICAgICAgICAgICAgIGNsb3VkX2dyYXBoX2hvc3RfbmFtZTogcmVxdWVzdC5jbG91ZEdyYXBoSG9zdE5hbWUsXG4gICAgICAgICAgICAgICAgY2xvdWRfaW5zdGFuY2VfaG9zdF9uYW1lOiByZXF1ZXN0LmNsb3VkSW5zdGFuY2VIb3N0TmFtZSxcbiAgICAgICAgICAgIH0sIHNpbGVudFJlcXVlc3Quc3RhdGUsIGF1dGhDbGllbnQuYXV0aG9yaXR5LCB0aGlzLm5ldHdvcmtDbGllbnQsIGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBBdXRoRXJyb3IpIHtcbiAgICAgICAgICAgICAgICBlLnNldENvcnJlbGF0aW9uSWQodGhpcy5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgICAgICAgICBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLmNhY2hlRmFpbGVkUmVxdWVzdChlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuYnJvd3NlclN0b3JhZ2UuY2xlYW5SZXF1ZXN0QnlTdGF0ZShzaWxlbnRSZXF1ZXN0LnN0YXRlKTtcbiAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3VycmVudGx5IFVuc3VwcG9ydGVkXG4gICAgICovXG4gICAgbG9nb3V0KCkge1xuICAgICAgICAvLyBTeW5jaHJvbm91cyBzbyB3ZSBtdXN0IHJlamVjdFxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoQnJvd3NlckF1dGhFcnJvci5jcmVhdGVTaWxlbnRMb2dvdXRVbnN1cHBvcnRlZEVycm9yKCkpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgU2lsZW50QXV0aENvZGVDbGllbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNpbGVudEF1dGhDb2RlQ2xpZW50Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentCacheClient: function() { return /* binding */ SilentCacheClient; }\n/* harmony export */ });\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentCacheClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\n    /**\n     * Returns unexpired tokens from the cache, if available\n     * @param silentRequest\n     */\n    async acquireToken(silentRequest) {\n        const acquireTokenMeasurement = this.performanceClient.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentCacheClientAcquireToken, silentRequest.correlationId);\n        // Telemetry manager only used to increment cacheHits here\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenSilent_silentFlow);\n        const silentAuthClient = await this.createSilentFlowClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n        this.logger.verbose(\"Silent auth client created\");\n        try {\n            const cachedToken = (await silentAuthClient.acquireCachedToken(silentRequest));\n            acquireTokenMeasurement.end({\n                success: true,\n                fromCache: true,\n            });\n            return cachedToken;\n        }\n        catch (error) {\n            if (error instanceof _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserAuthError &&\n                error.errorCode ===\n                    _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code) {\n                this.logger.verbose(\"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\");\n            }\n            acquireTokenMeasurement.end({\n                errorCode: (error instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthError && error.errorCode) ||\n                    undefined,\n                subErrorCode: (error instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthError && error.subError) || undefined,\n                success: false,\n            });\n            throw error;\n        }\n    }\n    /**\n     * Currently Unsupported\n     */\n    logout() {\n        // Synchronous so we must reject\n        return Promise.reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n    /**\n     * Creates an Silent Flow Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    async createSilentFlowClient(serverTelemetryManager, authorityUrl, azureCloudOptions) {\n        // Create auth module.\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.correlationId);\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.SilentFlowClient(clientConfig, this.performanceClient);\n    }\n    async initializeSilentRequest(request, account) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.InitializeSilentRequest, this.correlationId);\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.InitializeBaseRequest, this.correlationId);\n        return {\n            ...request,\n            ...(await this.initializeBaseRequest(request, account)),\n            account: account,\n            forceRefresh: request.forceRefresh || false,\n        };\n    }\n}\n\n\n//# sourceMappingURL=SilentCacheClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9TaWxlbnRDYWNoZUNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNhO0FBQytEO0FBQ1E7QUFDOUI7QUFDb0M7O0FBRTFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHFGQUF5QjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0ZBQWdGLGlFQUFpQjtBQUNqRztBQUNBLDZFQUE2RSw4REFBSztBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMseUVBQWdCO0FBQ2pEO0FBQ0Esb0JBQW9CLGdGQUF1QjtBQUMzQztBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMseURBQVM7QUFDdEQ7QUFDQSxnREFBZ0QseURBQVM7QUFDekQ7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix5RUFBZ0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxpRUFBaUI7QUFDaEU7QUFDQSxtQkFBbUIsZ0VBQWdCO0FBQ25DO0FBQ0E7QUFDQSxtREFBbUQsaUVBQWlCO0FBQ3BFLCtDQUErQyxpRUFBaUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNkI7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9pbnRlcmFjdGlvbl9jbGllbnQvU2lsZW50Q2FjaGVDbGllbnQubWpzPzJlMDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IFN0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnQgfSBmcm9tICcuL1N0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnQubWpzJztcbmltcG9ydCB7IFBlcmZvcm1hbmNlRXZlbnRzLCBBdXRoRXJyb3IsIFNpbGVudEZsb3dDbGllbnQgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24nO1xuaW1wb3J0IHsgQXBpSWQgfSBmcm9tICcuLi91dGlscy9Ccm93c2VyQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBCcm93c2VyQXV0aEVycm9yLCBCcm93c2VyQXV0aEVycm9yTWVzc2FnZSB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3IubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jbGFzcyBTaWxlbnRDYWNoZUNsaWVudCBleHRlbmRzIFN0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnQge1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgdW5leHBpcmVkIHRva2VucyBmcm9tIHRoZSBjYWNoZSwgaWYgYXZhaWxhYmxlXG4gICAgICogQHBhcmFtIHNpbGVudFJlcXVlc3RcbiAgICAgKi9cbiAgICBhc3luYyBhY3F1aXJlVG9rZW4oc2lsZW50UmVxdWVzdCkge1xuICAgICAgICBjb25zdCBhY3F1aXJlVG9rZW5NZWFzdXJlbWVudCA9IHRoaXMucGVyZm9ybWFuY2VDbGllbnQuc3RhcnRNZWFzdXJlbWVudChQZXJmb3JtYW5jZUV2ZW50cy5TaWxlbnRDYWNoZUNsaWVudEFjcXVpcmVUb2tlbiwgc2lsZW50UmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgLy8gVGVsZW1ldHJ5IG1hbmFnZXIgb25seSB1c2VkIHRvIGluY3JlbWVudCBjYWNoZUhpdHMgaGVyZVxuICAgICAgICBjb25zdCBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyID0gdGhpcy5pbml0aWFsaXplU2VydmVyVGVsZW1ldHJ5TWFuYWdlcihBcGlJZC5hY3F1aXJlVG9rZW5TaWxlbnRfc2lsZW50Rmxvdyk7XG4gICAgICAgIGNvbnN0IHNpbGVudEF1dGhDbGllbnQgPSBhd2FpdCB0aGlzLmNyZWF0ZVNpbGVudEZsb3dDbGllbnQoc2VydmVyVGVsZW1ldHJ5TWFuYWdlciwgc2lsZW50UmVxdWVzdC5hdXRob3JpdHksIHNpbGVudFJlcXVlc3QuYXp1cmVDbG91ZE9wdGlvbnMpO1xuICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKFwiU2lsZW50IGF1dGggY2xpZW50IGNyZWF0ZWRcIik7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBjYWNoZWRUb2tlbiA9IChhd2FpdCBzaWxlbnRBdXRoQ2xpZW50LmFjcXVpcmVDYWNoZWRUb2tlbihzaWxlbnRSZXF1ZXN0KSk7XG4gICAgICAgICAgICBhY3F1aXJlVG9rZW5NZWFzdXJlbWVudC5lbmQoe1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgICAgICAgZnJvbUNhY2hlOiB0cnVlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkVG9rZW47XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBCcm93c2VyQXV0aEVycm9yICYmXG4gICAgICAgICAgICAgICAgZXJyb3IuZXJyb3JDb2RlID09PVxuICAgICAgICAgICAgICAgICAgICBCcm93c2VyQXV0aEVycm9yTWVzc2FnZS5zaWduaW5nS2V5Tm90Rm91bmRJblN0b3JhZ2UuY29kZSkge1xuICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJTaWduaW5nIGtleXBhaXIgZm9yIGJvdW5kIGFjY2VzcyB0b2tlbiBub3QgZm91bmQuIFJlZnJlc2hpbmcgYm91bmQgYWNjZXNzIHRva2VuIGFuZCBnZW5lcmF0aW5nIGEgbmV3IGNyeXB0byBrZXlwYWlyLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFjcXVpcmVUb2tlbk1lYXN1cmVtZW50LmVuZCh7XG4gICAgICAgICAgICAgICAgZXJyb3JDb2RlOiAoZXJyb3IgaW5zdGFuY2VvZiBBdXRoRXJyb3IgJiYgZXJyb3IuZXJyb3JDb2RlKSB8fFxuICAgICAgICAgICAgICAgICAgICB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgc3ViRXJyb3JDb2RlOiAoZXJyb3IgaW5zdGFuY2VvZiBBdXRoRXJyb3IgJiYgZXJyb3Iuc3ViRXJyb3IpIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3VycmVudGx5IFVuc3VwcG9ydGVkXG4gICAgICovXG4gICAgbG9nb3V0KCkge1xuICAgICAgICAvLyBTeW5jaHJvbm91cyBzbyB3ZSBtdXN0IHJlamVjdFxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoQnJvd3NlckF1dGhFcnJvci5jcmVhdGVTaWxlbnRMb2dvdXRVbnN1cHBvcnRlZEVycm9yKCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIFNpbGVudCBGbG93IENsaWVudCB3aXRoIHRoZSBnaXZlbiBhdXRob3JpdHksIG9yIHRoZSBkZWZhdWx0IGF1dGhvcml0eS5cbiAgICAgKiBAcGFyYW0gc2VydmVyVGVsZW1ldHJ5TWFuYWdlclxuICAgICAqIEBwYXJhbSBhdXRob3JpdHlVcmxcbiAgICAgKi9cbiAgICBhc3luYyBjcmVhdGVTaWxlbnRGbG93Q2xpZW50KHNlcnZlclRlbGVtZXRyeU1hbmFnZXIsIGF1dGhvcml0eVVybCwgYXp1cmVDbG91ZE9wdGlvbnMpIHtcbiAgICAgICAgLy8gQ3JlYXRlIGF1dGggbW9kdWxlLlxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LnNldFByZVF1ZXVlVGltZShQZXJmb3JtYW5jZUV2ZW50cy5TdGFuZGFyZEludGVyYWN0aW9uQ2xpZW50R2V0Q2xpZW50Q29uZmlndXJhdGlvbiwgdGhpcy5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgY29uc3QgY2xpZW50Q29uZmlnID0gYXdhaXQgdGhpcy5nZXRDbGllbnRDb25maWd1cmF0aW9uKHNlcnZlclRlbGVtZXRyeU1hbmFnZXIsIGF1dGhvcml0eVVybCwgYXp1cmVDbG91ZE9wdGlvbnMpO1xuICAgICAgICByZXR1cm4gbmV3IFNpbGVudEZsb3dDbGllbnQoY2xpZW50Q29uZmlnLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50KTtcbiAgICB9XG4gICAgYXN5bmMgaW5pdGlhbGl6ZVNpbGVudFJlcXVlc3QocmVxdWVzdCwgYWNjb3VudCkge1xuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuSW5pdGlhbGl6ZVNpbGVudFJlcXVlc3QsIHRoaXMuY29ycmVsYXRpb25JZCk7XG4gICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQuc2V0UHJlUXVldWVUaW1lKFBlcmZvcm1hbmNlRXZlbnRzLkluaXRpYWxpemVCYXNlUmVxdWVzdCwgdGhpcy5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnJlcXVlc3QsXG4gICAgICAgICAgICAuLi4oYXdhaXQgdGhpcy5pbml0aWFsaXplQmFzZVJlcXVlc3QocmVxdWVzdCwgYWNjb3VudCkpLFxuICAgICAgICAgICAgYWNjb3VudDogYWNjb3VudCxcbiAgICAgICAgICAgIGZvcmNlUmVmcmVzaDogcmVxdWVzdC5mb3JjZVJlZnJlc2ggfHwgZmFsc2UsXG4gICAgICAgIH07XG4gICAgfVxufVxuXG5leHBvcnQgeyBTaWxlbnRDYWNoZUNsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2lsZW50Q2FjaGVDbGllbnQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentIframeClient: function() { return /* binding */ SilentIframeClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _interaction_handler_SilentHandler_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../interaction_handler/SilentHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../broker/nativeBroker/NativeMessageHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\");\n/* harmony import */ var _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./NativeInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentIframeClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.apiId = apiId;\n        this.nativeStorage = nativeStorageImpl;\n    }\n    /**\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\n     * @param request\n     */\n    async acquireToken(request) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\n        this.logger.verbose(\"acquireTokenByIframe called\");\n        const acquireTokenMeasurement = this.performanceClient.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\n        // Check that we have some SSO data\n        if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.StringUtils.isEmpty(request.loginHint) &&\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.StringUtils.isEmpty(request.sid) &&\n            (!request.account || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.StringUtils.isEmpty(request.account.username))) {\n            this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\n        }\n        // Check that prompt is set to none or no_session, throw error if it is set to anything else.\n        if (request.prompt &&\n            request.prompt !== _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PromptValue.NONE &&\n            request.prompt !== _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PromptValue.NO_SESSION) {\n            acquireTokenMeasurement.end({\n                success: false,\n            });\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserAuthError.createSilentPromptValueError(request.prompt);\n        }\n        // Create silent request\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\n        const silentRequest = await this.initializeAuthorizationRequest({\n            ...request,\n            prompt: request.prompt || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PromptValue.NONE,\n        }, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType.Silent);\n        this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING, silentRequest.account || null);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n        try {\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, request.correlationId);\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n            this.logger.verbose(\"Auth code client created\");\n            this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentIframeClientTokenHelper, request.correlationId);\n            return await this.silentTokenHelper(authClient, silentRequest).then((result) => {\n                acquireTokenMeasurement.end({\n                    success: true,\n                    fromCache: false,\n                    requestId: result.requestId,\n                });\n                return result;\n            });\n        }\n        catch (e) {\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByState(silentRequest.state);\n            acquireTokenMeasurement.end({\n                errorCode: (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthError && e.errorCode) || undefined,\n                subErrorCode: (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthError && e.subError) || undefined,\n                success: false,\n            });\n            throw e;\n        }\n    }\n    /**\n     * Currently Unsupported\n     */\n    logout() {\n        // Synchronous so we must reject\n        return Promise.reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n    /**\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\n     * @param navigateUrl\n     * @param userRequestScopes\n     */\n    async silentTokenHelper(authClient, silentRequest) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentIframeClientTokenHelper, silentRequest.correlationId);\n        // Create auth code request and generate PKCE params\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, silentRequest.correlationId);\n        const authCodeRequest = await this.initializeAuthorizationCodeRequest(silentRequest);\n        // Create authorize request url\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.GetAuthCodeUrl, silentRequest.correlationId);\n        const navigateUrl = await authClient.getAuthCodeUrl({\n            ...silentRequest,\n            nativeBroker: _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_4__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, silentRequest.authenticationScheme),\n        });\n        // Create silent handler\n        const silentHandler = new _interaction_handler_SilentHandler_mjs__WEBPACK_IMPORTED_MODULE_5__.SilentHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.config.system, this.performanceClient);\n        // Get the frame handle for the silent request\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentHandlerInitiateAuthRequest, silentRequest.correlationId);\n        const msalFrame = await silentHandler.initiateAuthRequest(navigateUrl);\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentHandlerMonitorIframeForHash, silentRequest.correlationId);\n        const hash = await silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout);\n        // Deserialize hash fragment response parameters.\n        const serverParams = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.getDeserializedHash(hash);\n        const state = this.validateAndExtractStateFromHash(serverParams, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType.Silent, authCodeRequest.correlationId);\n        if (serverParams.accountId) {\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n            if (!this.nativeMessageHandler) {\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserAuthError.createNativeConnectionNotEstablishedError();\n            }\n            const nativeInteractionClient = new _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_6__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.apiId, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.browserStorage, this.correlationId);\n            const { userRequestState } = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ProtocolUtils.parseRequestState(this.browserCrypto, state);\n            return nativeInteractionClient\n                .acquireToken({\n                ...silentRequest,\n                state: userRequestState,\n                prompt: silentRequest.prompt || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PromptValue.NONE,\n            })\n                .finally(() => {\n                this.browserStorage.cleanRequestByState(state);\n            });\n        }\n        // Handle response from hash string\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.HandleCodeResponseFromHash, silentRequest.correlationId);\n        return silentHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient);\n    }\n}\n\n\n//# sourceMappingURL=SilentIframeClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentRefreshClient: function() { return /* binding */ SilentRefreshClient; }\n/* harmony export */ });\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentRefreshClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\n    /**\n     * Exchanges the refresh token for new tokens\n     * @param request\n     */\n    async acquireToken(request) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentRefreshClientAcquireToken, request.correlationId);\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.InitializeBaseRequest, request.correlationId);\n        const silentRequest = {\n            ...request,\n            ...(await this.initializeBaseRequest(request, request.account)),\n        };\n        const acquireTokenMeasurement = this.performanceClient.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentRefreshClientAcquireToken, silentRequest.correlationId);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenSilent_silentFlow);\n        const refreshTokenClient = await this.createRefreshTokenClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n        this.logger.verbose(\"Refresh token client created\");\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request.correlationId);\n        return refreshTokenClient\n            .acquireTokenByRefreshToken(silentRequest)\n            .then((result) => result)\n            .then((result) => {\n            acquireTokenMeasurement.end({\n                success: true,\n                fromCache: result.fromCache,\n                requestId: result.requestId,\n            });\n            return result;\n        })\n            .catch((e) => {\n            e.setCorrelationId(this.correlationId);\n            serverTelemetryManager.cacheFailedRequest(e);\n            acquireTokenMeasurement.end({\n                errorCode: e.errorCode,\n                subErrorCode: e.subError,\n                success: false,\n            });\n            throw e;\n        });\n    }\n    /**\n     * Currently Unsupported\n     */\n    logout() {\n        // Synchronous so we must reject\n        return Promise.reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n    /**\n     * Creates a Refresh Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    async createRefreshTokenClient(serverTelemetryManager, authorityUrl, azureCloudOptions) {\n        // Create auth module.\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.correlationId);\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.RefreshTokenClient(clientConfig, this.performanceClient);\n    }\n}\n\n\n//# sourceMappingURL=SilentRefreshClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9TaWxlbnRSZWZyZXNoQ2xpZW50Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2E7QUFDK0Q7QUFDRDtBQUNyQjtBQUNXOztBQUVqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxxRkFBeUI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxpRUFBaUI7QUFDcEUsK0NBQStDLGlFQUFpQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdGQUFnRixpRUFBaUI7QUFDakcsNkVBQTZFLDhEQUFLO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxpRUFBaUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIseUVBQWdCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsaUVBQWlCO0FBQ2hFO0FBQ0EsbUJBQW1CLGtFQUFrQjtBQUNyQztBQUNBOztBQUUrQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9TaWxlbnRSZWZyZXNoQ2xpZW50Lm1qcz81ODI4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBTdGFuZGFyZEludGVyYWN0aW9uQ2xpZW50IH0gZnJvbSAnLi9TdGFuZGFyZEludGVyYWN0aW9uQ2xpZW50Lm1qcyc7XG5pbXBvcnQgeyBQZXJmb3JtYW5jZUV2ZW50cywgUmVmcmVzaFRva2VuQ2xpZW50IH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uJztcbmltcG9ydCB7IEFwaUlkIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlckNvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgQnJvd3NlckF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3IubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jbGFzcyBTaWxlbnRSZWZyZXNoQ2xpZW50IGV4dGVuZHMgU3RhbmRhcmRJbnRlcmFjdGlvbkNsaWVudCB7XG4gICAgLyoqXG4gICAgICogRXhjaGFuZ2VzIHRoZSByZWZyZXNoIHRva2VuIGZvciBuZXcgdG9rZW5zXG4gICAgICogQHBhcmFtIHJlcXVlc3RcbiAgICAgKi9cbiAgICBhc3luYyBhY3F1aXJlVG9rZW4ocmVxdWVzdCkge1xuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuU2lsZW50UmVmcmVzaENsaWVudEFjcXVpcmVUb2tlbiwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudC5zZXRQcmVRdWV1ZVRpbWUoUGVyZm9ybWFuY2VFdmVudHMuSW5pdGlhbGl6ZUJhc2VSZXF1ZXN0LCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xuICAgICAgICBjb25zdCBzaWxlbnRSZXF1ZXN0ID0ge1xuICAgICAgICAgICAgLi4ucmVxdWVzdCxcbiAgICAgICAgICAgIC4uLihhd2FpdCB0aGlzLmluaXRpYWxpemVCYXNlUmVxdWVzdChyZXF1ZXN0LCByZXF1ZXN0LmFjY291bnQpKSxcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgYWNxdWlyZVRva2VuTWVhc3VyZW1lbnQgPSB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LnN0YXJ0TWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuU2lsZW50UmVmcmVzaENsaWVudEFjcXVpcmVUb2tlbiwgc2lsZW50UmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgY29uc3Qgc2VydmVyVGVsZW1ldHJ5TWFuYWdlciA9IHRoaXMuaW5pdGlhbGl6ZVNlcnZlclRlbGVtZXRyeU1hbmFnZXIoQXBpSWQuYWNxdWlyZVRva2VuU2lsZW50X3NpbGVudEZsb3cpO1xuICAgICAgICBjb25zdCByZWZyZXNoVG9rZW5DbGllbnQgPSBhd2FpdCB0aGlzLmNyZWF0ZVJlZnJlc2hUb2tlbkNsaWVudChzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLCBzaWxlbnRSZXF1ZXN0LmF1dGhvcml0eSwgc2lsZW50UmVxdWVzdC5henVyZUNsb3VkT3B0aW9ucyk7XG4gICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJSZWZyZXNoIHRva2VuIGNsaWVudCBjcmVhdGVkXCIpO1xuICAgICAgICAvLyBTZW5kIHJlcXVlc3QgdG8gcmVuZXcgdG9rZW4uIEF1dGggbW9kdWxlIHdpbGwgdGhyb3cgZXJyb3JzIGlmIHRva2VuIGNhbm5vdCBiZSByZW5ld2VkLlxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LnNldFByZVF1ZXVlVGltZShQZXJmb3JtYW5jZUV2ZW50cy5SZWZyZXNoVG9rZW5DbGllbnRBY3F1aXJlVG9rZW5CeVJlZnJlc2hUb2tlbiwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgcmV0dXJuIHJlZnJlc2hUb2tlbkNsaWVudFxuICAgICAgICAgICAgLmFjcXVpcmVUb2tlbkJ5UmVmcmVzaFRva2VuKHNpbGVudFJlcXVlc3QpXG4gICAgICAgICAgICAudGhlbigocmVzdWx0KSA9PiByZXN1bHQpXG4gICAgICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICBhY3F1aXJlVG9rZW5NZWFzdXJlbWVudC5lbmQoe1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgICAgICAgZnJvbUNhY2hlOiByZXN1bHQuZnJvbUNhY2hlLFxuICAgICAgICAgICAgICAgIHJlcXVlc3RJZDogcmVzdWx0LnJlcXVlc3RJZCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgZS5zZXRDb3JyZWxhdGlvbklkKHRoaXMuY29ycmVsYXRpb25JZCk7XG4gICAgICAgICAgICBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLmNhY2hlRmFpbGVkUmVxdWVzdChlKTtcbiAgICAgICAgICAgIGFjcXVpcmVUb2tlbk1lYXN1cmVtZW50LmVuZCh7XG4gICAgICAgICAgICAgICAgZXJyb3JDb2RlOiBlLmVycm9yQ29kZSxcbiAgICAgICAgICAgICAgICBzdWJFcnJvckNvZGU6IGUuc3ViRXJyb3IsXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDdXJyZW50bHkgVW5zdXBwb3J0ZWRcbiAgICAgKi9cbiAgICBsb2dvdXQoKSB7XG4gICAgICAgIC8vIFN5bmNocm9ub3VzIHNvIHdlIG11c3QgcmVqZWN0XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChCcm93c2VyQXV0aEVycm9yLmNyZWF0ZVNpbGVudExvZ291dFVuc3VwcG9ydGVkRXJyb3IoKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBSZWZyZXNoIENsaWVudCB3aXRoIHRoZSBnaXZlbiBhdXRob3JpdHksIG9yIHRoZSBkZWZhdWx0IGF1dGhvcml0eS5cbiAgICAgKiBAcGFyYW0gc2VydmVyVGVsZW1ldHJ5TWFuYWdlclxuICAgICAqIEBwYXJhbSBhdXRob3JpdHlVcmxcbiAgICAgKi9cbiAgICBhc3luYyBjcmVhdGVSZWZyZXNoVG9rZW5DbGllbnQoc2VydmVyVGVsZW1ldHJ5TWFuYWdlciwgYXV0aG9yaXR5VXJsLCBhenVyZUNsb3VkT3B0aW9ucykge1xuICAgICAgICAvLyBDcmVhdGUgYXV0aCBtb2R1bGUuXG4gICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQuc2V0UHJlUXVldWVUaW1lKFBlcmZvcm1hbmNlRXZlbnRzLlN0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnRHZXRDbGllbnRDb25maWd1cmF0aW9uLCB0aGlzLmNvcnJlbGF0aW9uSWQpO1xuICAgICAgICBjb25zdCBjbGllbnRDb25maWcgPSBhd2FpdCB0aGlzLmdldENsaWVudENvbmZpZ3VyYXRpb24oc2VydmVyVGVsZW1ldHJ5TWFuYWdlciwgYXV0aG9yaXR5VXJsLCBhenVyZUNsb3VkT3B0aW9ucyk7XG4gICAgICAgIHJldHVybiBuZXcgUmVmcmVzaFRva2VuQ2xpZW50KGNsaWVudENvbmZpZywgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBTaWxlbnRSZWZyZXNoQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TaWxlbnRSZWZyZXNoQ2xpZW50Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StandardInteractionClient: function() { return /* binding */ StandardInteractionClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _BaseInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/BrowserProtocolUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\n */\nclass StandardInteractionClient extends _BaseInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseInteractionClient {\n    /**\n     * Generates an auth code request tied to the url request.\n     * @param request\n     */\n    async initializeAuthorizationCodeRequest(request) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, request.correlationId);\n        this.logger.verbose(\"initializeAuthorizationRequest called\", request.correlationId);\n        const generatedPkceParams = await this.browserCrypto.generatePkceCodes();\n        const authCodeRequest = {\n            ...request,\n            redirectUri: request.redirectUri,\n            code: _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n            codeVerifier: generatedPkceParams.verifier,\n        };\n        request.codeChallenge = generatedPkceParams.challenge;\n        request.codeChallengeMethod = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.S256_CODE_CHALLENGE_METHOD;\n        return authCodeRequest;\n    }\n    /**\n     * Initializer for the logout request.\n     * @param logoutRequest\n     */\n    initializeLogoutRequest(logoutRequest) {\n        this.logger.verbose(\"initializeLogoutRequest called\", logoutRequest?.correlationId);\n        const validLogoutRequest = {\n            correlationId: this.correlationId || this.browserCrypto.createNewGuid(),\n            ...logoutRequest,\n        };\n        /**\n         * Set logout_hint to be login_hint from ID Token Claims if present\n         * and logoutHint attribute wasn't manually set in logout request\n         */\n        if (logoutRequest) {\n            // If logoutHint isn't set and an account was passed in, try to extract logoutHint from ID Token Claims\n            if (!logoutRequest.logoutHint) {\n                if (logoutRequest.account) {\n                    const logoutHint = this.getLogoutHintFromIdTokenClaims(logoutRequest.account);\n                    if (logoutHint) {\n                        this.logger.verbose(\"Setting logoutHint to login_hint ID Token Claim value for the account provided\");\n                        validLogoutRequest.logoutHint = logoutHint;\n                    }\n                }\n                else {\n                    this.logger.verbose(\"logoutHint was not set and account was not passed into logout request, logoutHint will not be set\");\n                }\n            }\n            else {\n                this.logger.verbose(\"logoutHint has already been set in logoutRequest\");\n            }\n        }\n        else {\n            this.logger.verbose(\"logoutHint will not be set since no logout request was configured\");\n        }\n        /*\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\n         * Otherwise, use passed uri, config, or current page.\n         */\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to uri set on logout request\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri =\n                    _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.getAbsoluteUrl(logoutRequest.postLogoutRedirectUri, _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserUtils.getCurrentUri());\n            }\n            else if (this.config.auth.postLogoutRedirectUri === null) {\n                this.logger.verbose(\"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\", validLogoutRequest.correlationId);\n            }\n            else if (this.config.auth.postLogoutRedirectUri) {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to configured uri\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri =\n                    _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri, _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserUtils.getCurrentUri());\n            }\n            else {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to current page\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri =\n                    _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.getAbsoluteUrl(_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserUtils.getCurrentUri(), _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserUtils.getCurrentUri());\n            }\n        }\n        else {\n            this.logger.verbose(\"postLogoutRedirectUri passed as null, not setting post logout redirect uri\", validLogoutRequest.correlationId);\n        }\n        return validLogoutRequest;\n    }\n    /**\n     * Parses login_hint ID Token Claim out of AccountInfo object to be used as\n     * logout_hint in end session request.\n     * @param account\n     */\n    getLogoutHintFromIdTokenClaims(account) {\n        const idTokenClaims = account.idTokenClaims;\n        if (idTokenClaims) {\n            if (idTokenClaims.login_hint) {\n                return idTokenClaims.login_hint;\n            }\n            else {\n                this.logger.verbose(\"The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request\");\n            }\n        }\n        else {\n            this.logger.verbose(\"The provided account does not contain ID Token Claims, logoutHint will not be added to logout request\");\n        }\n        return null;\n    }\n    /**\n     * Creates an Authorization Code Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    async createAuthCodeClient(serverTelemetryManager, authorityUrl, requestAzureCloudOptions) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.correlationId);\n        // Create auth module.\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.correlationId);\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl, requestAzureCloudOptions);\n        return new _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthorizationCodeClient(clientConfig, this.performanceClient);\n    }\n    /**\n     * Creates a Client Configuration object with the given request authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    async getClientConfiguration(serverTelemetryManager, requestAuthority, requestAzureCloudOptions) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.correlationId);\n        this.logger.verbose(\"getClientConfiguration called\", this.correlationId);\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.correlationId);\n        const discoveredAuthority = await this.getDiscoveredAuthority(requestAuthority, requestAzureCloudOptions);\n        const logger = this.config.system.loggerOptions;\n        return {\n            authOptions: {\n                clientId: this.config.auth.clientId,\n                authority: discoveredAuthority,\n                clientCapabilities: this.config.auth.clientCapabilities,\n            },\n            systemOptions: {\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,\n                preventCorsPreflight: true,\n            },\n            loggerOptions: {\n                loggerCallback: logger.loggerCallback,\n                piiLoggingEnabled: logger.piiLoggingEnabled,\n                logLevel: logger.logLevel,\n                correlationId: this.correlationId,\n            },\n            cacheOptions: {\n                claimsBasedCachingEnabled: this.config.cache.claimsBasedCachingEnabled,\n            },\n            cryptoInterface: this.browserCrypto,\n            networkInterface: this.networkClient,\n            storageInterface: this.browserStorage,\n            serverTelemetryManager: serverTelemetryManager,\n            libraryInfo: {\n                sku: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserConstants.MSAL_SKU,\n                version: _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__.version,\n                cpu: _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n                os: _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n            },\n            telemetry: this.config.telemetry,\n        };\n    }\n    /**\n     * @param hash\n     * @param interactionType\n     */\n    validateAndExtractStateFromHash(serverParams, interactionType, requestCorrelationId) {\n        this.logger.verbose(\"validateAndExtractStateFromHash called\", requestCorrelationId);\n        if (!serverParams.state) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserAuthError.createHashDoesNotContainStateError();\n        }\n        const platformStateObj = _utils_BrowserProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserProtocolUtils.extractBrowserRequestState(this.browserCrypto, serverParams.state);\n        if (!platformStateObj) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserAuthError.createUnableToParseStateError();\n        }\n        if (platformStateObj.interactionType !== interactionType) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserAuthError.createStateInteractionTypeMismatchError();\n        }\n        this.logger.verbose(\"Returning state from hash\", requestCorrelationId);\n        return serverParams.state;\n    }\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    async getDiscoveredAuthority(requestAuthority, requestAzureCloudOptions) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.correlationId);\n        this.logger.verbose(\"getDiscoveredAuthority called\", this.correlationId);\n        const getAuthorityMeasurement = this.performanceClient?.startMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.correlationId);\n        const authorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            OIDCOptions: this.config.auth.OIDCOptions,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n            skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\n        };\n        // build authority string based on auth params, precedence - azureCloudInstance + tenant >> authority\n        const userAuthority = requestAuthority\n            ? requestAuthority\n            : this.config.auth.authority;\n        // fall back to the authority from config\n        const builtAuthority = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Authority.generateAuthority(userAuthority, requestAzureCloudOptions || this.config.auth.azureCloudOptions);\n        this.logger.verbose(\"Creating discovered authority with configured authority\", this.correlationId);\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, this.correlationId);\n        return await _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthorityFactory.createDiscoveredInstance(builtAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger, this.performanceClient, this.correlationId)\n            .then((result) => {\n            getAuthorityMeasurement.end({\n                success: true,\n            });\n            return result;\n        })\n            .catch((error) => {\n            getAuthorityMeasurement.end({\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                success: false,\n            });\n            throw error;\n        });\n    }\n    /**\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\n     * @param request\n     * @param interactionType\n     */\n    async initializeAuthorizationRequest(request, interactionType) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.correlationId);\n        this.logger.verbose(\"initializeAuthorizationRequest called\", this.correlationId);\n        const redirectUri = this.getRedirectUri(request.redirectUri);\n        const browserState = {\n            interactionType: interactionType,\n        };\n        const state = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ProtocolUtils.setRequestState(this.browserCrypto, (request && request.state) || _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING, browserState);\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.InitializeBaseRequest, this.correlationId);\n        const validatedRequest = {\n            ...(await this.initializeBaseRequest(request)),\n            redirectUri: redirectUri,\n            state: state,\n            nonce: request.nonce || this.browserCrypto.createNewGuid(),\n            responseMode: this.config.auth.OIDCOptions\n                .serverResponseType,\n        };\n        const account = request.account || this.browserStorage.getActiveAccount();\n        if (account) {\n            this.logger.verbose(\"Setting validated request account\", this.correlationId);\n            this.logger.verbosePii(`Setting validated request account: ${account.homeAccountId}`, this.correlationId);\n            validatedRequest.account = account;\n        }\n        // Check for ADAL/MSAL v1 SSO\n        if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.StringUtils.isEmpty(validatedRequest.loginHint) && !account) {\n            const legacyLoginHint = this.browserStorage.getLegacyLoginHint();\n            if (legacyLoginHint) {\n                validatedRequest.loginHint = legacyLoginHint;\n            }\n        }\n        return validatedRequest;\n    }\n}\n\n\n//# sourceMappingURL=StandardInteractionClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InteractionHandler: function() { return /* binding */ InteractionHandler; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Abstract class which defines operations for a browser interaction handling class.\n */\nclass InteractionHandler {\n    constructor(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) {\n        this.authModule = authCodeModule;\n        this.browserStorage = storageImpl;\n        this.authCodeRequest = authCodeRequest;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Function to handle response parameters from hash.\n     * @param locationHash\n     */\n    async handleCodeResponseFromHash(locationHash, state, authority, networkModule) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.HandleCodeResponseFromHash, this.authCodeRequest.correlationId);\n        this.logger.verbose(\"InteractionHandler.handleCodeResponse called\");\n        // Check that location hash isn't empty.\n        if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(locationHash)) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createEmptyHashError();\n        }\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createStateNotFoundError(\"Cached State\");\n        }\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\n        }\n        catch (e) {\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ServerError &&\n                e.subError === _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthErrorMessage.userCancelledError.code) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createUserCancelledError();\n            }\n            else {\n                throw e;\n            }\n        }\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.HandleCodeResponseFromServer, this.authCodeRequest.correlationId);\n        return this.handleCodeResponseFromServer(authCodeResponse, state, authority, networkModule);\n    }\n    /**\n     * Process auth code response from AAD\n     * @param authCodeResponse\n     * @param state\n     * @param authority\n     * @param networkModule\n     * @returns\n     */\n    async handleCodeResponseFromServer(authCodeResponse, state, authority, networkModule, validateNonce = true) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.HandleCodeResponseFromServer, this.authCodeRequest.correlationId);\n        this.logger.trace(\"InteractionHandler.handleCodeResponseFromServer called\");\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createStateNotFoundError(\"Cached State\");\n        }\n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.UpdateTokenEndpointAuthority, this.authCodeRequest.correlationId);\n            await this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule);\n        }\n        // Nonce validation not needed when redirect not involved (e.g. hybrid spa, renewing token via rt)\n        if (validateNonce) {\n            authCodeResponse.nonce = cachedNonce || undefined;\n        }\n        authCodeResponse.state = requestState;\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        }\n        else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n        // Acquire token with retrieved code.\n        this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.AuthClientAcquireToken, this.authCodeRequest.correlationId);\n        const tokenResponse = (await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse));\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n    /**\n     * Updates authority based on cloudInstanceHostname\n     * @param cloudInstanceHostname\n     * @param authority\n     * @param networkModule\n     */\n    async updateTokenEndpointAuthority(cloudInstanceHostname, authority, networkModule) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.UpdateTokenEndpointAuthority, this.authCodeRequest.correlationId);\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${authority.tenant}/`;\n        const cloudInstanceAuthority = await _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AuthorityFactory.createDiscoveredInstance(cloudInstanceAuthorityUri, networkModule, this.browserStorage, authority.options, this.logger, this.performanceClient, this.authCodeRequest.correlationId);\n        this.authModule.updateAuthority(cloudInstanceAuthority);\n    }\n    /**\n     * Looks up ccs creds in the cache\n     */\n    checkCcsCredentials() {\n        // Look up ccs credential in temp cache\n        const cachedCcsCred = this.browserStorage.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.CCS_CREDENTIAL, true);\n        if (cachedCcsCred) {\n            try {\n                return JSON.parse(cachedCcsCred);\n            }\n            catch (e) {\n                this.authModule.logger.error(\"Cache credential could not be parsed\");\n                this.authModule.logger.errorPii(`Cache credential could not be parsed: ${cachedCcsCred}`);\n            }\n        }\n        return null;\n    }\n}\n\n\n//# sourceMappingURL=InteractionHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedirectHandler: function() { return /* binding */ RedirectHandler; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InteractionHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass RedirectHandler extends _InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.InteractionHandler {\n    constructor(authCodeModule, storageImpl, authCodeRequest, logger, browserCrypto, performanceClient) {\n        super(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient);\n        this.browserCrypto = browserCrypto;\n    }\n    /**\n     * Redirects window to given URL.\n     * @param urlNavigate\n     */\n    async initiateAuthRequest(requestUrl, params) {\n        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\n        // Navigate if valid URL\n        if (!_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.StringUtils.isEmpty(requestUrl)) {\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\n            if (params.redirectStartPage) {\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\");\n                this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.ORIGIN_URI, params.redirectStartPage, true);\n            }\n            // Set interaction status in the library.\n            this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.CORRELATION_ID, this.authCodeRequest.correlationId, true);\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest, this.browserCrypto);\n            this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`);\n            const navigationOptions = {\n                apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenRedirect,\n                timeout: params.redirectTimeout,\n                noHistory: false,\n            };\n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\n            if (typeof params.onRedirectNavigate === \"function\") {\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\");\n                const navigate = params.onRedirectNavigate(requestUrl);\n                // Returning false from onRedirectNavigate will stop navigation\n                if (navigate !== false) {\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\");\n                    await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\n                    return;\n                }\n                else {\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\");\n                    return;\n                }\n            }\n            else {\n                // Navigate window to request URL\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\");\n                await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\n                return;\n            }\n        }\n        else {\n            // Throw error if request URL is empty.\n            this.logger.info(\"RedirectHandler.initiateAuthRequest: Navigate url is empty\");\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserAuthError.createEmptyNavigationUriError();\n        }\n    }\n    /**\n     * Handle authorization code response in the window.\n     * @param hash\n     */\n    async handleCodeResponseFromHash(locationHash, state, authority, networkModule) {\n        this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\n        // Check that location hash isn't empty.\n        if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.StringUtils.isEmpty(locationHash)) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserAuthError.createEmptyHashError();\n        }\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createStateNotFoundError(\"Cached State\");\n        }\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\n        }\n        catch (e) {\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.ServerError &&\n                e.subError === _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserAuthErrorMessage.userCancelledError.code) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserAuthError.createUserCancelledError();\n            }\n            else {\n                throw e;\n            }\n        }\n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule);\n        }\n        authCodeResponse.nonce = cachedNonce || undefined;\n        authCodeResponse.state = requestState;\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        }\n        else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n        // Acquire token with retrieved code.\n        const tokenResponse = (await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse));\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n}\n\n\n//# sourceMappingURL=RedirectHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentHandler: function() { return /* binding */ SilentHandler; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InteractionHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../config/Configuration.mjs */ \"./node_modules/@azure/msal-browser/dist/config/Configuration.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentHandler extends _InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.InteractionHandler {\n    constructor(authCodeModule, storageImpl, authCodeRequest, logger, systemOptions, performanceClient) {\n        super(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient);\n        this.navigateFrameWait = systemOptions.navigateFrameWait;\n        this.pollIntervalMilliseconds = systemOptions.pollIntervalMilliseconds;\n    }\n    /**\n     * Creates a hidden iframe to given URL using user-requested scopes as an id.\n     * @param urlNavigate\n     * @param userRequestScopes\n     */\n    async initiateAuthRequest(requestUrl) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentHandlerInitiateAuthRequest, this.authCodeRequest.correlationId);\n        if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.StringUtils.isEmpty(requestUrl)) {\n            // Throw error if request URL is empty.\n            this.logger.info(\"Navigate url is empty\");\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserAuthError.createEmptyNavigationUriError();\n        }\n        if (this.navigateFrameWait) {\n            this.performanceClient.setPreQueueTime(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentHandlerLoadFrame, this.authCodeRequest.correlationId);\n            return await this.loadFrame(requestUrl);\n        }\n        return this.loadFrameSync(requestUrl);\n    }\n    /**\n     * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\n     * @param iframe\n     * @param timeout\n     */\n    monitorIframeForHash(iframe, timeout) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentHandlerMonitorIframeForHash, this.authCodeRequest.correlationId);\n        return new Promise((resolve, reject) => {\n            if (timeout < _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_IFRAME_TIMEOUT_MS) {\n                this.logger.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${_config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`);\n            }\n            /*\n             * Polling for iframes can be purely timing based,\n             * since we don't need to account for interaction.\n             */\n            const nowMark = window.performance.now();\n            const timeoutMark = nowMark + timeout;\n            const intervalId = setInterval(() => {\n                if (window.performance.now() > timeoutMark) {\n                    this.removeHiddenIframe(iframe);\n                    clearInterval(intervalId);\n                    reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserAuthError.createMonitorIframeTimeoutError());\n                    return;\n                }\n                let href = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n                const contentWindow = iframe.contentWindow;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = contentWindow\n                        ? contentWindow.location.href\n                        : _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n                }\n                catch (e) { }\n                if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.StringUtils.isEmpty(href) || href === \"about:blank\") {\n                    return;\n                }\n                const contentHash = contentWindow\n                    ? contentWindow.location.hash\n                    : _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n                if (contentHash) {\n                    if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.hashContainsKnownProperties(contentHash)) {\n                        // Success case\n                        this.removeHiddenIframe(iframe);\n                        clearInterval(intervalId);\n                        resolve(contentHash);\n                        return;\n                    }\n                    else {\n                        // Hash is present but incorrect\n                        this.logger.error(\"SilentHandler:monitorIFrameForHash - a hash is present in the iframe but it does not contain known properties. It's likely that the hash has been replaced by code running on the redirectUri page.\");\n                        this.logger.errorPii(`SilentHandler:monitorIFrameForHash - the url detected in the iframe is: ${href}`);\n                        this.removeHiddenIframe(iframe);\n                        clearInterval(intervalId);\n                        reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserAuthError.createHashDoesNotContainKnownPropertiesError());\n                        return;\n                    }\n                }\n                else {\n                    // No hash is present\n                    this.logger.error(\"SilentHandler:monitorIFrameForHash - the request has returned to the redirectUri but a hash is not present in the iframe. It's likely that the hash has been removed or the page has been redirected by code running on the redirectUri page.\");\n                    this.logger.errorPii(`SilentHandler:monitorIFrameForHash - the url detected in the iframe is: ${href}`);\n                    this.removeHiddenIframe(iframe);\n                    clearInterval(intervalId);\n                    reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserAuthError.createEmptyHashError());\n                    return;\n                }\n            }, this.pollIntervalMilliseconds);\n        });\n    }\n    /**\n     * @hidden\n     * Loads iframe with authorization endpoint URL\n     * @ignore\n     */\n    loadFrame(urlNavigate) {\n        this.performanceClient.addQueueMeasurement(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentHandlerLoadFrame, this.authCodeRequest.correlationId);\n        /*\n         * This trick overcomes iframe navigation in IE\n         * IE does not load the page consistently in iframe\n         */\n        return new Promise((resolve, reject) => {\n            const frameHandle = this.createHiddenIframe();\n            setTimeout(() => {\n                if (!frameHandle) {\n                    reject(\"Unable to load iframe\");\n                    return;\n                }\n                frameHandle.src = urlNavigate;\n                resolve(frameHandle);\n            }, this.navigateFrameWait);\n        });\n    }\n    /**\n     * @hidden\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\n     * @param urlNavigate\n     * @param frameName\n     * @param logger\n     */\n    loadFrameSync(urlNavigate) {\n        const frameHandle = this.createHiddenIframe();\n        frameHandle.src = urlNavigate;\n        return frameHandle;\n    }\n    /**\n     * @hidden\n     * Creates a new hidden iframe or gets an existing one for silent token renewal.\n     * @ignore\n     */\n    createHiddenIframe() {\n        const authFrame = document.createElement(\"iframe\");\n        authFrame.style.visibility = \"hidden\";\n        authFrame.style.position = \"absolute\";\n        authFrame.style.width = authFrame.style.height = \"0\";\n        authFrame.style.border = \"0\";\n        authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\n        document.getElementsByTagName(\"body\")[0].appendChild(authFrame);\n        return authFrame;\n    }\n    /**\n     * @hidden\n     * Removes a hidden iframe from the page.\n     * @ignore\n     */\n    removeHiddenIframe(iframe) {\n        if (document.body === iframe.parentNode) {\n            document.body.removeChild(iframe);\n        }\n    }\n}\n\n\n//# sourceMappingURL=SilentHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2hhbmRsZXIvU2lsZW50SGFuZGxlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNhO0FBQzZFO0FBQzVCO0FBQ0c7QUFDTzs7QUFFeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsdUVBQWtCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsaUVBQWlCO0FBQ3BFLFlBQVksMkRBQVc7QUFDdkI7QUFDQTtBQUNBLGtCQUFrQix5RUFBZ0I7QUFDbEM7QUFDQTtBQUNBLG1EQUFtRCxpRUFBaUI7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsaUVBQWlCO0FBQ3BFO0FBQ0EsMEJBQTBCLGdGQUF5QjtBQUNuRCx5R0FBeUcsUUFBUSx3QkFBd0IsZ0ZBQXlCLENBQUM7QUFDbks7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix5RUFBZ0I7QUFDM0M7QUFDQTtBQUNBLDJCQUEyQix5REFBUztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIseURBQVM7QUFDbkM7QUFDQTtBQUNBLG9CQUFvQiwyREFBVztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5REFBUztBQUMvQjtBQUNBLHdCQUF3Qix5REFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3SEFBd0gsS0FBSztBQUM3SDtBQUNBO0FBQ0EsK0JBQStCLHlFQUFnQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvSEFBb0gsS0FBSztBQUN6SDtBQUNBO0FBQ0EsMkJBQTJCLHlFQUFnQjtBQUMzQztBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxpRUFBaUI7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9pbnRlcmFjdGlvbl9oYW5kbGVyL1NpbGVudEhhbmRsZXIubWpzPzM2YjgiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IFBlcmZvcm1hbmNlRXZlbnRzLCBTdHJpbmdVdGlscywgQ29uc3RhbnRzLCBVcmxTdHJpbmcgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24nO1xuaW1wb3J0IHsgSW50ZXJhY3Rpb25IYW5kbGVyIH0gZnJvbSAnLi9JbnRlcmFjdGlvbkhhbmRsZXIubWpzJztcbmltcG9ydCB7IEJyb3dzZXJBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBERUZBVUxUX0lGUkFNRV9USU1FT1VUX01TIH0gZnJvbSAnLi4vY29uZmlnL0NvbmZpZ3VyYXRpb24ubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jbGFzcyBTaWxlbnRIYW5kbGVyIGV4dGVuZHMgSW50ZXJhY3Rpb25IYW5kbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihhdXRoQ29kZU1vZHVsZSwgc3RvcmFnZUltcGwsIGF1dGhDb2RlUmVxdWVzdCwgbG9nZ2VyLCBzeXN0ZW1PcHRpb25zLCBwZXJmb3JtYW5jZUNsaWVudCkge1xuICAgICAgICBzdXBlcihhdXRoQ29kZU1vZHVsZSwgc3RvcmFnZUltcGwsIGF1dGhDb2RlUmVxdWVzdCwgbG9nZ2VyLCBwZXJmb3JtYW5jZUNsaWVudCk7XG4gICAgICAgIHRoaXMubmF2aWdhdGVGcmFtZVdhaXQgPSBzeXN0ZW1PcHRpb25zLm5hdmlnYXRlRnJhbWVXYWl0O1xuICAgICAgICB0aGlzLnBvbGxJbnRlcnZhbE1pbGxpc2Vjb25kcyA9IHN5c3RlbU9wdGlvbnMucG9sbEludGVydmFsTWlsbGlzZWNvbmRzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgaGlkZGVuIGlmcmFtZSB0byBnaXZlbiBVUkwgdXNpbmcgdXNlci1yZXF1ZXN0ZWQgc2NvcGVzIGFzIGFuIGlkLlxuICAgICAqIEBwYXJhbSB1cmxOYXZpZ2F0ZVxuICAgICAqIEBwYXJhbSB1c2VyUmVxdWVzdFNjb3Blc1xuICAgICAqL1xuICAgIGFzeW5jIGluaXRpYXRlQXV0aFJlcXVlc3QocmVxdWVzdFVybCkge1xuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuU2lsZW50SGFuZGxlckluaXRpYXRlQXV0aFJlcXVlc3QsIHRoaXMuYXV0aENvZGVSZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xuICAgICAgICBpZiAoU3RyaW5nVXRpbHMuaXNFbXB0eShyZXF1ZXN0VXJsKSkge1xuICAgICAgICAgICAgLy8gVGhyb3cgZXJyb3IgaWYgcmVxdWVzdCBVUkwgaXMgZW1wdHkuXG4gICAgICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKFwiTmF2aWdhdGUgdXJsIGlzIGVtcHR5XCIpO1xuICAgICAgICAgICAgdGhyb3cgQnJvd3NlckF1dGhFcnJvci5jcmVhdGVFbXB0eU5hdmlnYXRpb25VcmlFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm5hdmlnYXRlRnJhbWVXYWl0KSB7XG4gICAgICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LnNldFByZVF1ZXVlVGltZShQZXJmb3JtYW5jZUV2ZW50cy5TaWxlbnRIYW5kbGVyTG9hZEZyYW1lLCB0aGlzLmF1dGhDb2RlUmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmxvYWRGcmFtZShyZXF1ZXN0VXJsKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5sb2FkRnJhbWVTeW5jKHJlcXVlc3RVcmwpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNb25pdG9ycyBhbiBpZnJhbWUgY29udGVudCB3aW5kb3cgdW50aWwgaXQgbG9hZHMgYSB1cmwgd2l0aCBhIGtub3duIGhhc2gsIG9yIGhpdHMgYSBzcGVjaWZpZWQgdGltZW91dC5cbiAgICAgKiBAcGFyYW0gaWZyYW1lXG4gICAgICogQHBhcmFtIHRpbWVvdXRcbiAgICAgKi9cbiAgICBtb25pdG9ySWZyYW1lRm9ySGFzaChpZnJhbWUsIHRpbWVvdXQpIHtcbiAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudC5hZGRRdWV1ZU1lYXN1cmVtZW50KFBlcmZvcm1hbmNlRXZlbnRzLlNpbGVudEhhbmRsZXJNb25pdG9ySWZyYW1lRm9ySGFzaCwgdGhpcy5hdXRoQ29kZVJlcXVlc3QuY29ycmVsYXRpb25JZCk7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBpZiAodGltZW91dCA8IERFRkFVTFRfSUZSQU1FX1RJTUVPVVRfTVMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci53YXJuaW5nKGBzeXN0ZW0ubG9hZEZyYW1lVGltZW91dCBvciBzeXN0ZW0uaWZyYW1lSGFzaFRpbWVvdXQgc2V0IHRvIGxvd2VyICgke3RpbWVvdXR9bXMpIHRoYW4gdGhlIGRlZmF1bHQgKCR7REVGQVVMVF9JRlJBTUVfVElNRU9VVF9NU31tcykuIFRoaXMgbWF5IHJlc3VsdCBpbiB0aW1lb3V0cy5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8qXG4gICAgICAgICAgICAgKiBQb2xsaW5nIGZvciBpZnJhbWVzIGNhbiBiZSBwdXJlbHkgdGltaW5nIGJhc2VkLFxuICAgICAgICAgICAgICogc2luY2Ugd2UgZG9uJ3QgbmVlZCB0byBhY2NvdW50IGZvciBpbnRlcmFjdGlvbi5cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgY29uc3Qgbm93TWFyayA9IHdpbmRvdy5wZXJmb3JtYW5jZS5ub3coKTtcbiAgICAgICAgICAgIGNvbnN0IHRpbWVvdXRNYXJrID0gbm93TWFyayArIHRpbWVvdXQ7XG4gICAgICAgICAgICBjb25zdCBpbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh3aW5kb3cucGVyZm9ybWFuY2Uubm93KCkgPiB0aW1lb3V0TWFyaykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUhpZGRlbklmcmFtZShpZnJhbWUpO1xuICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSWQpO1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoQnJvd3NlckF1dGhFcnJvci5jcmVhdGVNb25pdG9ySWZyYW1lVGltZW91dEVycm9yKCkpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGxldCBocmVmID0gQ29uc3RhbnRzLkVNUFRZX1NUUklORztcbiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50V2luZG93ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3c7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgLypcbiAgICAgICAgICAgICAgICAgICAgICogV2lsbCB0aHJvdyBpZiBjcm9zcyBvcmlnaW4sXG4gICAgICAgICAgICAgICAgICAgICAqIHdoaWNoIHNob3VsZCBiZSBjYXVnaHQgYW5kIGlnbm9yZWRcbiAgICAgICAgICAgICAgICAgICAgICogc2luY2Ugd2UgbmVlZCB0aGUgaW50ZXJ2YWwgdG8ga2VlcCBydW5uaW5nIHdoaWxlIG9uIFNUUyBVSS5cbiAgICAgICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgICAgIGhyZWYgPSBjb250ZW50V2luZG93XG4gICAgICAgICAgICAgICAgICAgICAgICA/IGNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZlxuICAgICAgICAgICAgICAgICAgICAgICAgOiBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkgeyB9XG4gICAgICAgICAgICAgICAgaWYgKFN0cmluZ1V0aWxzLmlzRW1wdHkoaHJlZikgfHwgaHJlZiA9PT0gXCJhYm91dDpibGFua1wiKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgY29udGVudEhhc2ggPSBjb250ZW50V2luZG93XG4gICAgICAgICAgICAgICAgICAgID8gY29udGVudFdpbmRvdy5sb2NhdGlvbi5oYXNoXG4gICAgICAgICAgICAgICAgICAgIDogQ29uc3RhbnRzLkVNUFRZX1NUUklORztcbiAgICAgICAgICAgICAgICBpZiAoY29udGVudEhhc2gpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKFVybFN0cmluZy5oYXNoQ29udGFpbnNLbm93blByb3BlcnRpZXMoY29udGVudEhhc2gpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBTdWNjZXNzIGNhc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlSGlkZGVuSWZyYW1lKGlmcmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShjb250ZW50SGFzaCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBIYXNoIGlzIHByZXNlbnQgYnV0IGluY29ycmVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoXCJTaWxlbnRIYW5kbGVyOm1vbml0b3JJRnJhbWVGb3JIYXNoIC0gYSBoYXNoIGlzIHByZXNlbnQgaW4gdGhlIGlmcmFtZSBidXQgaXQgZG9lcyBub3QgY29udGFpbiBrbm93biBwcm9wZXJ0aWVzLiBJdCdzIGxpa2VseSB0aGF0IHRoZSBoYXNoIGhhcyBiZWVuIHJlcGxhY2VkIGJ5IGNvZGUgcnVubmluZyBvbiB0aGUgcmVkaXJlY3RVcmkgcGFnZS5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci5lcnJvclBpaShgU2lsZW50SGFuZGxlcjptb25pdG9ySUZyYW1lRm9ySGFzaCAtIHRoZSB1cmwgZGV0ZWN0ZWQgaW4gdGhlIGlmcmFtZSBpczogJHtocmVmfWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVIaWRkZW5JZnJhbWUoaWZyYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxJZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoQnJvd3NlckF1dGhFcnJvci5jcmVhdGVIYXNoRG9lc05vdENvbnRhaW5Lbm93blByb3BlcnRpZXNFcnJvcigpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gTm8gaGFzaCBpcyBwcmVzZW50XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKFwiU2lsZW50SGFuZGxlcjptb25pdG9ySUZyYW1lRm9ySGFzaCAtIHRoZSByZXF1ZXN0IGhhcyByZXR1cm5lZCB0byB0aGUgcmVkaXJlY3RVcmkgYnV0IGEgaGFzaCBpcyBub3QgcHJlc2VudCBpbiB0aGUgaWZyYW1lLiBJdCdzIGxpa2VseSB0aGF0IHRoZSBoYXNoIGhhcyBiZWVuIHJlbW92ZWQgb3IgdGhlIHBhZ2UgaGFzIGJlZW4gcmVkaXJlY3RlZCBieSBjb2RlIHJ1bm5pbmcgb24gdGhlIHJlZGlyZWN0VXJpIHBhZ2UuXCIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci5lcnJvclBpaShgU2lsZW50SGFuZGxlcjptb25pdG9ySUZyYW1lRm9ySGFzaCAtIHRoZSB1cmwgZGV0ZWN0ZWQgaW4gdGhlIGlmcmFtZSBpczogJHtocmVmfWApO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUhpZGRlbklmcmFtZShpZnJhbWUpO1xuICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSWQpO1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoQnJvd3NlckF1dGhFcnJvci5jcmVhdGVFbXB0eUhhc2hFcnJvcigpKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIHRoaXMucG9sbEludGVydmFsTWlsbGlzZWNvbmRzKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBMb2FkcyBpZnJhbWUgd2l0aCBhdXRob3JpemF0aW9uIGVuZHBvaW50IFVSTFxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBsb2FkRnJhbWUodXJsTmF2aWdhdGUpIHtcbiAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudC5hZGRRdWV1ZU1lYXN1cmVtZW50KFBlcmZvcm1hbmNlRXZlbnRzLlNpbGVudEhhbmRsZXJMb2FkRnJhbWUsIHRoaXMuYXV0aENvZGVSZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xuICAgICAgICAvKlxuICAgICAgICAgKiBUaGlzIHRyaWNrIG92ZXJjb21lcyBpZnJhbWUgbmF2aWdhdGlvbiBpbiBJRVxuICAgICAgICAgKiBJRSBkb2VzIG5vdCBsb2FkIHRoZSBwYWdlIGNvbnNpc3RlbnRseSBpbiBpZnJhbWVcbiAgICAgICAgICovXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBmcmFtZUhhbmRsZSA9IHRoaXMuY3JlYXRlSGlkZGVuSWZyYW1lKCk7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIWZyYW1lSGFuZGxlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChcIlVuYWJsZSB0byBsb2FkIGlmcmFtZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmcmFtZUhhbmRsZS5zcmMgPSB1cmxOYXZpZ2F0ZTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKGZyYW1lSGFuZGxlKTtcbiAgICAgICAgICAgIH0sIHRoaXMubmF2aWdhdGVGcmFtZVdhaXQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIExvYWRzIHRoZSBpZnJhbWUgc3luY2hyb25vdXNseSB3aGVuIHRoZSBuYXZpZ2F0ZVRpbWVGcmFtZSBpcyBzZXQgdG8gYDBgXG4gICAgICogQHBhcmFtIHVybE5hdmlnYXRlXG4gICAgICogQHBhcmFtIGZyYW1lTmFtZVxuICAgICAqIEBwYXJhbSBsb2dnZXJcbiAgICAgKi9cbiAgICBsb2FkRnJhbWVTeW5jKHVybE5hdmlnYXRlKSB7XG4gICAgICAgIGNvbnN0IGZyYW1lSGFuZGxlID0gdGhpcy5jcmVhdGVIaWRkZW5JZnJhbWUoKTtcbiAgICAgICAgZnJhbWVIYW5kbGUuc3JjID0gdXJsTmF2aWdhdGU7XG4gICAgICAgIHJldHVybiBmcmFtZUhhbmRsZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIENyZWF0ZXMgYSBuZXcgaGlkZGVuIGlmcmFtZSBvciBnZXRzIGFuIGV4aXN0aW5nIG9uZSBmb3Igc2lsZW50IHRva2VuIHJlbmV3YWwuXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGNyZWF0ZUhpZGRlbklmcmFtZSgpIHtcbiAgICAgICAgY29uc3QgYXV0aEZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlmcmFtZVwiKTtcbiAgICAgICAgYXV0aEZyYW1lLnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xuICAgICAgICBhdXRoRnJhbWUuc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCI7XG4gICAgICAgIGF1dGhGcmFtZS5zdHlsZS53aWR0aCA9IGF1dGhGcmFtZS5zdHlsZS5oZWlnaHQgPSBcIjBcIjtcbiAgICAgICAgYXV0aEZyYW1lLnN0eWxlLmJvcmRlciA9IFwiMFwiO1xuICAgICAgICBhdXRoRnJhbWUuc2V0QXR0cmlidXRlKFwic2FuZGJveFwiLCBcImFsbG93LXNjcmlwdHMgYWxsb3ctc2FtZS1vcmlnaW4gYWxsb3ctZm9ybXNcIik7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiYm9keVwiKVswXS5hcHBlbmRDaGlsZChhdXRoRnJhbWUpO1xuICAgICAgICByZXR1cm4gYXV0aEZyYW1lO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogUmVtb3ZlcyBhIGhpZGRlbiBpZnJhbWUgZnJvbSB0aGUgcGFnZS5cbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgcmVtb3ZlSGlkZGVuSWZyYW1lKGlmcmFtZSkge1xuICAgICAgICBpZiAoZG9jdW1lbnQuYm9keSA9PT0gaWZyYW1lLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoaWZyYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IHsgU2lsZW50SGFuZGxlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2lsZW50SGFuZGxlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/internals.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/internals.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserCacheManager: function() { return /* reexport safe */ _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserCacheManager; },\n/* harmony export */   BrowserConstants: function() { return /* reexport safe */ _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_12__.BrowserConstants; },\n/* harmony export */   CacheRecord: function() { return /* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.CacheRecord; },\n/* harmony export */   CryptoOps: function() { return /* reexport safe */ _crypto_CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_13__.CryptoOps; },\n/* harmony export */   EventHandler: function() { return /* reexport safe */ _event_EventHandler_mjs__WEBPACK_IMPORTED_MODULE_10__.EventHandler; },\n/* harmony export */   NativeAuthError: function() { return /* reexport safe */ _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_14__.NativeAuthError; },\n/* harmony export */   NativeInteractionClient: function() { return /* reexport safe */ _interaction_client_NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_8__.NativeInteractionClient; },\n/* harmony export */   NativeMessageHandler: function() { return /* reexport safe */ _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_11__.NativeMessageHandler; },\n/* harmony export */   PopupClient: function() { return /* reexport safe */ _interaction_client_PopupClient_mjs__WEBPACK_IMPORTED_MODULE_4__.PopupClient; },\n/* harmony export */   RedirectClient: function() { return /* reexport safe */ _interaction_client_RedirectClient_mjs__WEBPACK_IMPORTED_MODULE_3__.RedirectClient; },\n/* harmony export */   RedirectHandler: function() { return /* reexport safe */ _interaction_handler_RedirectHandler_mjs__WEBPACK_IMPORTED_MODULE_9__.RedirectHandler; },\n/* harmony export */   SilentCacheClient: function() { return /* reexport safe */ _interaction_client_SilentCacheClient_mjs__WEBPACK_IMPORTED_MODULE_6__.SilentCacheClient; },\n/* harmony export */   SilentIframeClient: function() { return /* reexport safe */ _interaction_client_SilentIframeClient_mjs__WEBPACK_IMPORTED_MODULE_5__.SilentIframeClient; },\n/* harmony export */   SilentRefreshClient: function() { return /* reexport safe */ _interaction_client_SilentRefreshClient_mjs__WEBPACK_IMPORTED_MODULE_7__.SilentRefreshClient; },\n/* harmony export */   StandardInteractionClient: function() { return /* reexport safe */ _interaction_client_StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_2__.StandardInteractionClient; },\n/* harmony export */   TemporaryCacheKeys: function() { return /* reexport safe */ _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_12__.TemporaryCacheKeys; }\n/* harmony export */ });\n/* harmony import */ var _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cache/BrowserCacheManager.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _interaction_client_StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interaction_client/StandardInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _interaction_client_RedirectClient_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interaction_client/RedirectClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs\");\n/* harmony import */ var _interaction_client_PopupClient_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./interaction_client/PopupClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs\");\n/* harmony import */ var _interaction_client_SilentIframeClient_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interaction_client/SilentIframeClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs\");\n/* harmony import */ var _interaction_client_SilentCacheClient_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./interaction_client/SilentCacheClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs\");\n/* harmony import */ var _interaction_client_SilentRefreshClient_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./interaction_client/SilentRefreshClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs\");\n/* harmony import */ var _interaction_client_NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./interaction_client/NativeInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\");\n/* harmony import */ var _interaction_handler_RedirectHandler_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./interaction_handler/RedirectHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs\");\n/* harmony import */ var _event_EventHandler_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./event/EventHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./broker/nativeBroker/NativeMessageHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _crypto_CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./crypto/CryptoOps.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs\");\n/* harmony import */ var _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./error/NativeAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Warning: This set of exports is purely intended to be used by other MSAL libraries, and should be considered potentially unstable. We strongly discourage using them directly, you do so at your own risk.\n * Breaking changes to these APIs will be shipped under a minor version, instead of a major version.\n */\n// Cache Manager\n//# sourceMappingURL=internals.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVybmFscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDeUQ7QUFDckI7QUFDOEM7QUFDdEI7QUFDTjtBQUNjO0FBQ0Y7QUFDSTtBQUNRO0FBQ2Y7QUFDcEI7QUFDOEI7QUFDRjtBQUNqQztBQUNXOztBQUU5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVybmFscy5tanM/MGYxZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuZXhwb3J0IHsgQnJvd3NlckNhY2hlTWFuYWdlciB9IGZyb20gJy4vY2FjaGUvQnJvd3NlckNhY2hlTWFuYWdlci5tanMnO1xuZXhwb3J0IHsgQ2FjaGVSZWNvcmQgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24nO1xuZXhwb3J0IHsgU3RhbmRhcmRJbnRlcmFjdGlvbkNsaWVudCB9IGZyb20gJy4vaW50ZXJhY3Rpb25fY2xpZW50L1N0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnQubWpzJztcbmV4cG9ydCB7IFJlZGlyZWN0Q2xpZW50IH0gZnJvbSAnLi9pbnRlcmFjdGlvbl9jbGllbnQvUmVkaXJlY3RDbGllbnQubWpzJztcbmV4cG9ydCB7IFBvcHVwQ2xpZW50IH0gZnJvbSAnLi9pbnRlcmFjdGlvbl9jbGllbnQvUG9wdXBDbGllbnQubWpzJztcbmV4cG9ydCB7IFNpbGVudElmcmFtZUNsaWVudCB9IGZyb20gJy4vaW50ZXJhY3Rpb25fY2xpZW50L1NpbGVudElmcmFtZUNsaWVudC5tanMnO1xuZXhwb3J0IHsgU2lsZW50Q2FjaGVDbGllbnQgfSBmcm9tICcuL2ludGVyYWN0aW9uX2NsaWVudC9TaWxlbnRDYWNoZUNsaWVudC5tanMnO1xuZXhwb3J0IHsgU2lsZW50UmVmcmVzaENsaWVudCB9IGZyb20gJy4vaW50ZXJhY3Rpb25fY2xpZW50L1NpbGVudFJlZnJlc2hDbGllbnQubWpzJztcbmV4cG9ydCB7IE5hdGl2ZUludGVyYWN0aW9uQ2xpZW50IH0gZnJvbSAnLi9pbnRlcmFjdGlvbl9jbGllbnQvTmF0aXZlSW50ZXJhY3Rpb25DbGllbnQubWpzJztcbmV4cG9ydCB7IFJlZGlyZWN0SGFuZGxlciB9IGZyb20gJy4vaW50ZXJhY3Rpb25faGFuZGxlci9SZWRpcmVjdEhhbmRsZXIubWpzJztcbmV4cG9ydCB7IEV2ZW50SGFuZGxlciB9IGZyb20gJy4vZXZlbnQvRXZlbnRIYW5kbGVyLm1qcyc7XG5leHBvcnQgeyBOYXRpdmVNZXNzYWdlSGFuZGxlciB9IGZyb20gJy4vYnJva2VyL25hdGl2ZUJyb2tlci9OYXRpdmVNZXNzYWdlSGFuZGxlci5tanMnO1xuZXhwb3J0IHsgQnJvd3NlckNvbnN0YW50cywgVGVtcG9yYXJ5Q2FjaGVLZXlzIH0gZnJvbSAnLi91dGlscy9Ccm93c2VyQ29uc3RhbnRzLm1qcyc7XG5leHBvcnQgeyBDcnlwdG9PcHMgfSBmcm9tICcuL2NyeXB0by9DcnlwdG9PcHMubWpzJztcbmV4cG9ydCB7IE5hdGl2ZUF1dGhFcnJvciB9IGZyb20gJy4vZXJyb3IvTmF0aXZlQXV0aEVycm9yLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBXYXJuaW5nOiBUaGlzIHNldCBvZiBleHBvcnRzIGlzIHB1cmVseSBpbnRlbmRlZCB0byBiZSB1c2VkIGJ5IG90aGVyIE1TQUwgbGlicmFyaWVzLCBhbmQgc2hvdWxkIGJlIGNvbnNpZGVyZWQgcG90ZW50aWFsbHkgdW5zdGFibGUuIFdlIHN0cm9uZ2x5IGRpc2NvdXJhZ2UgdXNpbmcgdGhlbSBkaXJlY3RseSwgeW91IGRvIHNvIGF0IHlvdXIgb3duIHJpc2suXG4gKiBCcmVha2luZyBjaGFuZ2VzIHRvIHRoZXNlIEFQSXMgd2lsbCBiZSBzaGlwcGVkIHVuZGVyIGEgbWlub3IgdmVyc2lvbiwgaW5zdGVhZCBvZiBhIG1ham9yIHZlcnNpb24uXG4gKi9cbi8vIENhY2hlIE1hbmFnZXJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVybmFscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/internals.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NavigationClient: function() { return /* binding */ NavigationClient; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NavigationClient {\n    /**\n     * Navigates to other pages within the same web application\n     * @param url\n     * @param options\n     */\n    navigateInternal(url, options) {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n    /**\n     * Navigates to other pages outside the web application i.e. the Identity Provider\n     * @param url\n     * @param options\n     */\n    navigateExternal(url, options) {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n    /**\n     * Default navigation implementation invoked by the internal and external functions\n     * @param url\n     * @param options\n     */\n    static defaultNavigateWindow(url, options) {\n        if (options.noHistory) {\n            window.location.replace(url);\n        }\n        else {\n            window.location.assign(url);\n        }\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, options.timeout);\n        });\n    }\n}\n\n\n//# sourceMappingURL=NavigationClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L25hdmlnYXRpb24vTmF2aWdhdGlvbkNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7O0FBRTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvbmF2aWdhdGlvbi9OYXZpZ2F0aW9uQ2xpZW50Lm1qcz8xOTcyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIE5hdmlnYXRpb25DbGllbnQge1xuICAgIC8qKlxuICAgICAqIE5hdmlnYXRlcyB0byBvdGhlciBwYWdlcyB3aXRoaW4gdGhlIHNhbWUgd2ViIGFwcGxpY2F0aW9uXG4gICAgICogQHBhcmFtIHVybFxuICAgICAqIEBwYXJhbSBvcHRpb25zXG4gICAgICovXG4gICAgbmF2aWdhdGVJbnRlcm5hbCh1cmwsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIE5hdmlnYXRpb25DbGllbnQuZGVmYXVsdE5hdmlnYXRlV2luZG93KHVybCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE5hdmlnYXRlcyB0byBvdGhlciBwYWdlcyBvdXRzaWRlIHRoZSB3ZWIgYXBwbGljYXRpb24gaS5lLiB0aGUgSWRlbnRpdHkgUHJvdmlkZXJcbiAgICAgKiBAcGFyYW0gdXJsXG4gICAgICogQHBhcmFtIG9wdGlvbnNcbiAgICAgKi9cbiAgICBuYXZpZ2F0ZUV4dGVybmFsKHVybCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gTmF2aWdhdGlvbkNsaWVudC5kZWZhdWx0TmF2aWdhdGVXaW5kb3codXJsLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVmYXVsdCBuYXZpZ2F0aW9uIGltcGxlbWVudGF0aW9uIGludm9rZWQgYnkgdGhlIGludGVybmFsIGFuZCBleHRlcm5hbCBmdW5jdGlvbnNcbiAgICAgKiBAcGFyYW0gdXJsXG4gICAgICogQHBhcmFtIG9wdGlvbnNcbiAgICAgKi9cbiAgICBzdGF0aWMgZGVmYXVsdE5hdmlnYXRlV2luZG93KHVybCwgb3B0aW9ucykge1xuICAgICAgICBpZiAob3B0aW9ucy5ub0hpc3RvcnkpIHtcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHVybCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uYXNzaWduKHVybCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHRydWUpO1xuICAgICAgICAgICAgfSwgb3B0aW9ucy50aW1lb3V0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBOYXZpZ2F0aW9uQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1OYXZpZ2F0aW9uQ2xpZW50Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/network/FetchClient.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/network/FetchClient.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchClient: function() { return /* binding */ FetchClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nclass FetchClient {\n    /**\n     * Fetch Client for REST endpoints - Get request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendGetRequestAsync(url, options) {\n        let response;\n        try {\n            response = await fetch(url, {\n                method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.HTTP_REQUEST_TYPE.GET,\n                headers: this.getFetchHeaders(options),\n            });\n        }\n        catch (e) {\n            if (window.navigator.onLine) {\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createGetRequestFailedError(e, url);\n            }\n            else {\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createNoNetworkConnectivityError();\n            }\n        }\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: (await response.json()),\n                status: response.status,\n            };\n        }\n        catch (e) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createFailedToParseNetworkResponseError(url);\n        }\n    }\n    /**\n     * Fetch Client for REST endpoints - Post request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendPostRequestAsync(url, options) {\n        const reqBody = (options && options.body) || _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n        let response;\n        try {\n            response = await fetch(url, {\n                method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.HTTP_REQUEST_TYPE.POST,\n                headers: this.getFetchHeaders(options),\n                body: reqBody,\n            });\n        }\n        catch (e) {\n            if (window.navigator.onLine) {\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createPostRequestFailedError(e, url);\n            }\n            else {\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createNoNetworkConnectivityError();\n            }\n        }\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: (await response.json()),\n                status: response.status,\n            };\n        }\n        catch (e) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createFailedToParseNetworkResponseError(url);\n        }\n    }\n    /**\n     * Get Fetch API Headers object from string map\n     * @param inputHeaders\n     */\n    getFetchHeaders(options) {\n        const headers = new Headers();\n        if (!(options && options.headers)) {\n            return headers;\n        }\n        const optionsHeaders = options.headers;\n        Object.keys(optionsHeaders).forEach((key) => {\n            headers.append(key, optionsHeaders[key]);\n        });\n        return headers;\n    }\n    getHeaderDict(headers) {\n        const headerDict = {};\n        headers.forEach((value, key) => {\n            headerDict[key] = value;\n        });\n        return headerDict;\n    }\n}\n\n\n//# sourceMappingURL=FetchClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L25ldHdvcmsvRmV0Y2hDbGllbnQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2tDO0FBQ2tCO0FBQ0M7O0FBRWxFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwwRUFBaUI7QUFDekM7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlFQUFnQjtBQUN0QztBQUNBO0FBQ0Esc0JBQXNCLHlFQUFnQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix5RUFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELHlEQUFTO0FBQzlEO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwwRUFBaUI7QUFDekM7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseUVBQWdCO0FBQ3RDO0FBQ0E7QUFDQSxzQkFBc0IseUVBQWdCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlFQUFnQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvbmV0d29yay9GZXRjaENsaWVudC5tanM/NTI2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQ29uc3RhbnRzIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uJztcbmltcG9ydCB7IEJyb3dzZXJBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBIVFRQX1JFUVVFU1RfVFlQRSB9IGZyb20gJy4uL3V0aWxzL0Jyb3dzZXJDb25zdGFudHMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIFRoaXMgY2xhc3MgaW1wbGVtZW50cyB0aGUgRmV0Y2ggQVBJIGZvciBHRVQgYW5kIFBPU1QgcmVxdWVzdHMuIFNlZSBtb3JlIGhlcmU6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9GZXRjaF9BUElcbiAqL1xuY2xhc3MgRmV0Y2hDbGllbnQge1xuICAgIC8qKlxuICAgICAqIEZldGNoIENsaWVudCBmb3IgUkVTVCBlbmRwb2ludHMgLSBHZXQgcmVxdWVzdFxuICAgICAqIEBwYXJhbSB1cmxcbiAgICAgKiBAcGFyYW0gaGVhZGVyc1xuICAgICAqIEBwYXJhbSBib2R5XG4gICAgICovXG4gICAgYXN5bmMgc2VuZEdldFJlcXVlc3RBc3luYyh1cmwsIG9wdGlvbnMpIHtcbiAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcbiAgICAgICAgICAgICAgICBtZXRob2Q6IEhUVFBfUkVRVUVTVF9UWVBFLkdFVCxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmdldEZldGNoSGVhZGVycyhvcHRpb25zKSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBpZiAod2luZG93Lm5hdmlnYXRvci5vbkxpbmUpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBCcm93c2VyQXV0aEVycm9yLmNyZWF0ZUdldFJlcXVlc3RGYWlsZWRFcnJvcihlLCB1cmwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgQnJvd3NlckF1dGhFcnJvci5jcmVhdGVOb05ldHdvcmtDb25uZWN0aXZpdHlFcnJvcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuZ2V0SGVhZGVyRGljdChyZXNwb25zZS5oZWFkZXJzKSxcbiAgICAgICAgICAgICAgICBib2R5OiAoYXdhaXQgcmVzcG9uc2UuanNvbigpKSxcbiAgICAgICAgICAgICAgICBzdGF0dXM6IHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRocm93IEJyb3dzZXJBdXRoRXJyb3IuY3JlYXRlRmFpbGVkVG9QYXJzZU5ldHdvcmtSZXNwb25zZUVycm9yKHVybCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogRmV0Y2ggQ2xpZW50IGZvciBSRVNUIGVuZHBvaW50cyAtIFBvc3QgcmVxdWVzdFxuICAgICAqIEBwYXJhbSB1cmxcbiAgICAgKiBAcGFyYW0gaGVhZGVyc1xuICAgICAqIEBwYXJhbSBib2R5XG4gICAgICovXG4gICAgYXN5bmMgc2VuZFBvc3RSZXF1ZXN0QXN5bmModXJsLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJlcUJvZHkgPSAob3B0aW9ucyAmJiBvcHRpb25zLmJvZHkpIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XG4gICAgICAgIGxldCByZXNwb25zZTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XG4gICAgICAgICAgICAgICAgbWV0aG9kOiBIVFRQX1JFUVVFU1RfVFlQRS5QT1NULFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuZ2V0RmV0Y2hIZWFkZXJzKG9wdGlvbnMpLFxuICAgICAgICAgICAgICAgIGJvZHk6IHJlcUJvZHksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgaWYgKHdpbmRvdy5uYXZpZ2F0b3Iub25MaW5lKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgQnJvd3NlckF1dGhFcnJvci5jcmVhdGVQb3N0UmVxdWVzdEZhaWxlZEVycm9yKGUsIHVybCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBCcm93c2VyQXV0aEVycm9yLmNyZWF0ZU5vTmV0d29ya0Nvbm5lY3Rpdml0eUVycm9yKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgaGVhZGVyczogdGhpcy5nZXRIZWFkZXJEaWN0KHJlc3BvbnNlLmhlYWRlcnMpLFxuICAgICAgICAgICAgICAgIGJvZHk6IChhd2FpdCByZXNwb25zZS5qc29uKCkpLFxuICAgICAgICAgICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgdGhyb3cgQnJvd3NlckF1dGhFcnJvci5jcmVhdGVGYWlsZWRUb1BhcnNlTmV0d29ya1Jlc3BvbnNlRXJyb3IodXJsKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgRmV0Y2ggQVBJIEhlYWRlcnMgb2JqZWN0IGZyb20gc3RyaW5nIG1hcFxuICAgICAqIEBwYXJhbSBpbnB1dEhlYWRlcnNcbiAgICAgKi9cbiAgICBnZXRGZXRjaEhlYWRlcnMob3B0aW9ucykge1xuICAgICAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcbiAgICAgICAgaWYgKCEob3B0aW9ucyAmJiBvcHRpb25zLmhlYWRlcnMpKSB7XG4gICAgICAgICAgICByZXR1cm4gaGVhZGVycztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvcHRpb25zSGVhZGVycyA9IG9wdGlvbnMuaGVhZGVycztcbiAgICAgICAgT2JqZWN0LmtleXMob3B0aW9uc0hlYWRlcnMpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICAgICAgaGVhZGVycy5hcHBlbmQoa2V5LCBvcHRpb25zSGVhZGVyc1trZXldKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBoZWFkZXJzO1xuICAgIH1cbiAgICBnZXRIZWFkZXJEaWN0KGhlYWRlcnMpIHtcbiAgICAgICAgY29uc3QgaGVhZGVyRGljdCA9IHt9O1xuICAgICAgICBoZWFkZXJzLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgICAgIGhlYWRlckRpY3Rba2V5XSA9IHZhbHVlO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGhlYWRlckRpY3Q7XG4gICAgfVxufVxuXG5leHBvcnQgeyBGZXRjaENsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RmV0Y2hDbGllbnQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/network/FetchClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/network/XhrClient.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/network/XhrClient.mjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XhrClient: function() { return /* binding */ XhrClient; }\n/* harmony export */ });\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This client implements the XMLHttpRequest class to send GET and POST requests.\n */\nclass XhrClient {\n    /**\n     * XhrClient for REST endpoints - Get request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendGetRequestAsync(url, options) {\n        return this.sendRequestAsync(url, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.HTTP_REQUEST_TYPE.GET, options);\n    }\n    /**\n     * XhrClient for REST endpoints - Post request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendPostRequestAsync(url, options) {\n        return this.sendRequestAsync(url, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.HTTP_REQUEST_TYPE.POST, options);\n    }\n    /**\n     * Helper for XhrClient requests.\n     * @param url\n     * @param method\n     * @param options\n     */\n    sendRequestAsync(url, method, options) {\n        return new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.open(method, url, /* async: */ true);\n            this.setXhrHeaders(xhr, options);\n            xhr.onload = () => {\n                if (xhr.status < 200 || xhr.status >= 300) {\n                    if (method === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.HTTP_REQUEST_TYPE.POST) {\n                        reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createPostRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    }\n                    else {\n                        reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createGetRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    }\n                }\n                try {\n                    const jsonResponse = JSON.parse(xhr.responseText);\n                    const networkResponse = {\n                        headers: this.getHeaderDict(xhr),\n                        body: jsonResponse,\n                        status: xhr.status,\n                    };\n                    resolve(networkResponse);\n                }\n                catch (e) {\n                    reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createFailedToParseNetworkResponseError(url));\n                }\n            };\n            xhr.onerror = () => {\n                if (window.navigator.onLine) {\n                    if (method === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.HTTP_REQUEST_TYPE.POST) {\n                        reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createPostRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    }\n                    else {\n                        reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createGetRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    }\n                }\n                else {\n                    reject(_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createNoNetworkConnectivityError());\n                }\n            };\n            if (method === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.HTTP_REQUEST_TYPE.POST && options && options.body) {\n                xhr.send(options.body);\n            }\n            else if (method === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.HTTP_REQUEST_TYPE.GET) {\n                xhr.send();\n            }\n            else {\n                throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserAuthError.createHttpMethodNotImplementedError(method);\n            }\n        });\n    }\n    /**\n     * Helper to set XHR headers for request.\n     * @param xhr\n     * @param options\n     */\n    setXhrHeaders(xhr, options) {\n        if (options && options.headers) {\n            const headers = options.headers;\n            Object.keys(headers).forEach((key) => {\n                xhr.setRequestHeader(key, headers[key]);\n            });\n        }\n    }\n    /**\n     * Gets a string map of the headers received in the response.\n     *\n     * Algorithm comes from https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\n     * @param xhr\n     */\n    getHeaderDict(xhr) {\n        const headerString = xhr.getAllResponseHeaders();\n        const headerArr = headerString.trim().split(/[\\r\\n]+/);\n        const headerDict = {};\n        headerArr.forEach((value) => {\n            const parts = value.split(\": \");\n            const headerName = parts.shift();\n            const headerVal = parts.join(\": \");\n            if (headerName && headerVal) {\n                headerDict[headerName] = headerVal;\n            }\n        });\n        return headerDict;\n    }\n}\n\n\n//# sourceMappingURL=XhrClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L25ldHdvcmsvWGhyQ2xpZW50Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQ29EO0FBQ0M7O0FBRWxFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQywwRUFBaUI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQywwRUFBaUI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQywwRUFBaUI7QUFDcEQsK0JBQStCLHlFQUFnQixvREFBb0QsV0FBVztBQUM5RztBQUNBO0FBQ0EsK0JBQStCLHlFQUFnQixtREFBbUQsV0FBVztBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIseUVBQWdCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDBFQUFpQjtBQUNwRCwrQkFBK0IseUVBQWdCLG9EQUFvRCxXQUFXO0FBQzlHO0FBQ0E7QUFDQSwrQkFBK0IseUVBQWdCLG1EQUFtRCxXQUFXO0FBQzdHO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix5RUFBZ0I7QUFDM0M7QUFDQTtBQUNBLDJCQUEyQiwwRUFBaUI7QUFDNUM7QUFDQTtBQUNBLGdDQUFnQywwRUFBaUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlFQUFnQjtBQUN0QztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9uZXR3b3JrL1hockNsaWVudC5tanM/MDYyYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQnJvd3NlckF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IEhUVFBfUkVRVUVTVF9UWVBFIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlckNvbnN0YW50cy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogVGhpcyBjbGllbnQgaW1wbGVtZW50cyB0aGUgWE1MSHR0cFJlcXVlc3QgY2xhc3MgdG8gc2VuZCBHRVQgYW5kIFBPU1QgcmVxdWVzdHMuXG4gKi9cbmNsYXNzIFhockNsaWVudCB7XG4gICAgLyoqXG4gICAgICogWGhyQ2xpZW50IGZvciBSRVNUIGVuZHBvaW50cyAtIEdldCByZXF1ZXN0XG4gICAgICogQHBhcmFtIHVybFxuICAgICAqIEBwYXJhbSBoZWFkZXJzXG4gICAgICogQHBhcmFtIGJvZHlcbiAgICAgKi9cbiAgICBhc3luYyBzZW5kR2V0UmVxdWVzdEFzeW5jKHVybCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5zZW5kUmVxdWVzdEFzeW5jKHVybCwgSFRUUF9SRVFVRVNUX1RZUEUuR0VULCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogWGhyQ2xpZW50IGZvciBSRVNUIGVuZHBvaW50cyAtIFBvc3QgcmVxdWVzdFxuICAgICAqIEBwYXJhbSB1cmxcbiAgICAgKiBAcGFyYW0gaGVhZGVyc1xuICAgICAqIEBwYXJhbSBib2R5XG4gICAgICovXG4gICAgYXN5bmMgc2VuZFBvc3RSZXF1ZXN0QXN5bmModXJsLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlbmRSZXF1ZXN0QXN5bmModXJsLCBIVFRQX1JFUVVFU1RfVFlQRS5QT1NULCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSGVscGVyIGZvciBYaHJDbGllbnQgcmVxdWVzdHMuXG4gICAgICogQHBhcmFtIHVybFxuICAgICAqIEBwYXJhbSBtZXRob2RcbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqL1xuICAgIHNlbmRSZXF1ZXN0QXN5bmModXJsLCBtZXRob2QsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgICAgICAgeGhyLm9wZW4obWV0aG9kLCB1cmwsIC8qIGFzeW5jOiAqLyB0cnVlKTtcbiAgICAgICAgICAgIHRoaXMuc2V0WGhySGVhZGVycyh4aHIsIG9wdGlvbnMpO1xuICAgICAgICAgICAgeGhyLm9ubG9hZCA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoeGhyLnN0YXR1cyA8IDIwMCB8fCB4aHIuc3RhdHVzID49IDMwMCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobWV0aG9kID09PSBIVFRQX1JFUVVFU1RfVFlQRS5QT1NUKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoQnJvd3NlckF1dGhFcnJvci5jcmVhdGVQb3N0UmVxdWVzdEZhaWxlZEVycm9yKGBGYWlsZWQgd2l0aCBzdGF0dXMgJHt4aHIuc3RhdHVzfWAsIHVybCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KEJyb3dzZXJBdXRoRXJyb3IuY3JlYXRlR2V0UmVxdWVzdEZhaWxlZEVycm9yKGBGYWlsZWQgd2l0aCBzdGF0dXMgJHt4aHIuc3RhdHVzfWAsIHVybCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGpzb25SZXNwb25zZSA9IEpTT04ucGFyc2UoeGhyLnJlc3BvbnNlVGV4dCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ldHdvcmtSZXNwb25zZSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuZ2V0SGVhZGVyRGljdCh4aHIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgYm9keToganNvblJlc3BvbnNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiB4aHIuc3RhdHVzLFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKG5ldHdvcmtSZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChCcm93c2VyQXV0aEVycm9yLmNyZWF0ZUZhaWxlZFRvUGFyc2VOZXR3b3JrUmVzcG9uc2VFcnJvcih1cmwpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgeGhyLm9uZXJyb3IgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5uYXZpZ2F0b3Iub25MaW5lKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChtZXRob2QgPT09IEhUVFBfUkVRVUVTVF9UWVBFLlBPU1QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChCcm93c2VyQXV0aEVycm9yLmNyZWF0ZVBvc3RSZXF1ZXN0RmFpbGVkRXJyb3IoYEZhaWxlZCB3aXRoIHN0YXR1cyAke3hoci5zdGF0dXN9YCwgdXJsKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoQnJvd3NlckF1dGhFcnJvci5jcmVhdGVHZXRSZXF1ZXN0RmFpbGVkRXJyb3IoYEZhaWxlZCB3aXRoIHN0YXR1cyAke3hoci5zdGF0dXN9YCwgdXJsKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChCcm93c2VyQXV0aEVycm9yLmNyZWF0ZU5vTmV0d29ya0Nvbm5lY3Rpdml0eUVycm9yKCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBpZiAobWV0aG9kID09PSBIVFRQX1JFUVVFU1RfVFlQRS5QT1NUICYmIG9wdGlvbnMgJiYgb3B0aW9ucy5ib2R5KSB7XG4gICAgICAgICAgICAgICAgeGhyLnNlbmQob3B0aW9ucy5ib2R5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKG1ldGhvZCA9PT0gSFRUUF9SRVFVRVNUX1RZUEUuR0VUKSB7XG4gICAgICAgICAgICAgICAgeGhyLnNlbmQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IEJyb3dzZXJBdXRoRXJyb3IuY3JlYXRlSHR0cE1ldGhvZE5vdEltcGxlbWVudGVkRXJyb3IobWV0aG9kKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEhlbHBlciB0byBzZXQgWEhSIGhlYWRlcnMgZm9yIHJlcXVlc3QuXG4gICAgICogQHBhcmFtIHhoclxuICAgICAqIEBwYXJhbSBvcHRpb25zXG4gICAgICovXG4gICAgc2V0WGhySGVhZGVycyh4aHIsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5oZWFkZXJzKSB7XG4gICAgICAgICAgICBjb25zdCBoZWFkZXJzID0gb3B0aW9ucy5oZWFkZXJzO1xuICAgICAgICAgICAgT2JqZWN0LmtleXMoaGVhZGVycykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoa2V5LCBoZWFkZXJzW2tleV0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyBhIHN0cmluZyBtYXAgb2YgdGhlIGhlYWRlcnMgcmVjZWl2ZWQgaW4gdGhlIHJlc3BvbnNlLlxuICAgICAqXG4gICAgICogQWxnb3JpdGhtIGNvbWVzIGZyb20gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1hNTEh0dHBSZXF1ZXN0L2dldEFsbFJlc3BvbnNlSGVhZGVyc1xuICAgICAqIEBwYXJhbSB4aHJcbiAgICAgKi9cbiAgICBnZXRIZWFkZXJEaWN0KHhocikge1xuICAgICAgICBjb25zdCBoZWFkZXJTdHJpbmcgPSB4aHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCk7XG4gICAgICAgIGNvbnN0IGhlYWRlckFyciA9IGhlYWRlclN0cmluZy50cmltKCkuc3BsaXQoL1tcXHJcXG5dKy8pO1xuICAgICAgICBjb25zdCBoZWFkZXJEaWN0ID0ge307XG4gICAgICAgIGhlYWRlckFyci5mb3JFYWNoKCh2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcGFydHMgPSB2YWx1ZS5zcGxpdChcIjogXCIpO1xuICAgICAgICAgICAgY29uc3QgaGVhZGVyTmFtZSA9IHBhcnRzLnNoaWZ0KCk7XG4gICAgICAgICAgICBjb25zdCBoZWFkZXJWYWwgPSBwYXJ0cy5qb2luKFwiOiBcIik7XG4gICAgICAgICAgICBpZiAoaGVhZGVyTmFtZSAmJiBoZWFkZXJWYWwpIHtcbiAgICAgICAgICAgICAgICBoZWFkZXJEaWN0W2hlYWRlck5hbWVdID0gaGVhZGVyVmFsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGhlYWRlckRpY3Q7XG4gICAgfVxufVxuXG5leHBvcnQgeyBYaHJDbGllbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVhockNsaWVudC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/network/XhrClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseOperatingContext: function() { return /* binding */ BaseOperatingContext; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/Configuration.mjs */ \"./node_modules/@azure/msal-browser/dist/config/Configuration.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Base class for operating context\n * Operating contexts are contexts in which MSAL.js is being run\n * More than one operating context may be available at a time\n * It's important from a logging and telemetry point of view for us to be able to identify the operating context.\n * For example: Some operating contexts will pre-cache tokens impacting performance telemetry\n */\nclass BaseOperatingContext {\n    constructor(config) {\n        /*\n         * If loaded in an environment where window is not available,\n         * set internal flag to false so that further requests fail.\n         * This is to support server-side rendering environments.\n         */\n        this.browserEnvironment = typeof window !== \"undefined\";\n        this.config = (0,_config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_0__.buildConfiguration)(config, this.browserEnvironment);\n        this.logger = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Logger(this.config.system.loggerOptions, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.version);\n        this.available = false;\n    }\n    /**\n     * Return the MSAL config\n     * @returns BrowserConfiguration\n     */\n    getConfig() {\n        return this.config;\n    }\n    /**\n     * Returns the MSAL Logger\n     * @returns Logger\n     */\n    getLogger() {\n        return this.logger;\n    }\n    isAvailable() {\n        return this.available;\n    }\n    isBrowserEnvironment() {\n        return this.browserEnvironment;\n    }\n}\n\n\n//# sourceMappingURL=BaseOperatingContext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L29wZXJhdGluZ2NvbnRleHQvQmFzZU9wZXJhdGluZ0NvbnRleHQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNhO0FBQytCO0FBQ3FCO0FBQ1Y7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDZFQUFrQjtBQUN4QywwQkFBMEIsc0RBQU0sbUNBQW1DLHNEQUFJLEVBQUUseURBQU87QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFZ0M7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9vcGVyYXRpbmdjb250ZXh0L0Jhc2VPcGVyYXRpbmdDb250ZXh0Lm1qcz8xMGRlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBMb2dnZXIgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24nO1xuaW1wb3J0IHsgYnVpbGRDb25maWd1cmF0aW9uIH0gZnJvbSAnLi4vY29uZmlnL0NvbmZpZ3VyYXRpb24ubWpzJztcbmltcG9ydCB7IG5hbWUsIHZlcnNpb24gfSBmcm9tICcuLi9wYWNrYWdlTWV0YWRhdGEubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIEJhc2UgY2xhc3MgZm9yIG9wZXJhdGluZyBjb250ZXh0XG4gKiBPcGVyYXRpbmcgY29udGV4dHMgYXJlIGNvbnRleHRzIGluIHdoaWNoIE1TQUwuanMgaXMgYmVpbmcgcnVuXG4gKiBNb3JlIHRoYW4gb25lIG9wZXJhdGluZyBjb250ZXh0IG1heSBiZSBhdmFpbGFibGUgYXQgYSB0aW1lXG4gKiBJdCdzIGltcG9ydGFudCBmcm9tIGEgbG9nZ2luZyBhbmQgdGVsZW1ldHJ5IHBvaW50IG9mIHZpZXcgZm9yIHVzIHRvIGJlIGFibGUgdG8gaWRlbnRpZnkgdGhlIG9wZXJhdGluZyBjb250ZXh0LlxuICogRm9yIGV4YW1wbGU6IFNvbWUgb3BlcmF0aW5nIGNvbnRleHRzIHdpbGwgcHJlLWNhY2hlIHRva2VucyBpbXBhY3RpbmcgcGVyZm9ybWFuY2UgdGVsZW1ldHJ5XG4gKi9cbmNsYXNzIEJhc2VPcGVyYXRpbmdDb250ZXh0IHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgLypcbiAgICAgICAgICogSWYgbG9hZGVkIGluIGFuIGVudmlyb25tZW50IHdoZXJlIHdpbmRvdyBpcyBub3QgYXZhaWxhYmxlLFxuICAgICAgICAgKiBzZXQgaW50ZXJuYWwgZmxhZyB0byBmYWxzZSBzbyB0aGF0IGZ1cnRoZXIgcmVxdWVzdHMgZmFpbC5cbiAgICAgICAgICogVGhpcyBpcyB0byBzdXBwb3J0IHNlcnZlci1zaWRlIHJlbmRlcmluZyBlbnZpcm9ubWVudHMuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmJyb3dzZXJFbnZpcm9ubWVudCA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICAgIHRoaXMuY29uZmlnID0gYnVpbGRDb25maWd1cmF0aW9uKGNvbmZpZywgdGhpcy5icm93c2VyRW52aXJvbm1lbnQpO1xuICAgICAgICB0aGlzLmxvZ2dlciA9IG5ldyBMb2dnZXIodGhpcy5jb25maWcuc3lzdGVtLmxvZ2dlck9wdGlvbnMsIG5hbWUsIHZlcnNpb24pO1xuICAgICAgICB0aGlzLmF2YWlsYWJsZSA9IGZhbHNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gdGhlIE1TQUwgY29uZmlnXG4gICAgICogQHJldHVybnMgQnJvd3NlckNvbmZpZ3VyYXRpb25cbiAgICAgKi9cbiAgICBnZXRDb25maWcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbmZpZztcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgTVNBTCBMb2dnZXJcbiAgICAgKiBAcmV0dXJucyBMb2dnZXJcbiAgICAgKi9cbiAgICBnZXRMb2dnZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvZ2dlcjtcbiAgICB9XG4gICAgaXNBdmFpbGFibGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmF2YWlsYWJsZTtcbiAgICB9XG4gICAgaXNCcm93c2VyRW52aXJvbm1lbnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJyb3dzZXJFbnZpcm9ubWVudDtcbiAgICB9XG59XG5cbmV4cG9ydCB7IEJhc2VPcGVyYXRpbmdDb250ZXh0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CYXNlT3BlcmF0aW5nQ29udGV4dC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StandardOperatingContext: function() { return /* binding */ StandardOperatingContext; }\n/* harmony export */ });\n/* harmony import */ var _BaseOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseOperatingContext.mjs */ \"./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass StandardOperatingContext extends _BaseOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseOperatingContext {\n    /**\n     * Return the module name.  Intended for use with import() to enable dynamic import\n     * of the implementation associated with this operating context\n     * @returns\n     */\n    getModuleName() {\n        return StandardOperatingContext.MODULE_NAME;\n    }\n    /**\n     * Returns the unique identifier for this operating context\n     * @returns string\n     */\n    getId() {\n        return StandardOperatingContext.ID;\n    }\n    /**\n     * Checks whether the operating context is available.\n     * Confirms that the code is running a browser rather.  This is required.\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\n     */\n    async initialize() {\n        this.available = typeof window !== \"undefined\";\n        return this.available;\n        /*\n         * NOTE: The standard context is available as long as there is a window.  If/when we split out WAM from Browser\n         * We can move the current contents of the initialize method to here and verify that the WAM extension is available\n         */\n    }\n}\n/*\n * TODO: Once we have determine the bundling code return here to specify the name of the bundle\n * containing the implementation for this operating context\n */\nStandardOperatingContext.MODULE_NAME = \"\";\n/**\n * Unique identifier for the operating context\n */\nStandardOperatingContext.ID = \"StandardOperatingContext\";\n\n\n//# sourceMappingURL=StandardOperatingContext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L29wZXJhdGluZ2NvbnRleHQvU3RhbmRhcmRPcGVyYXRpbmdDb250ZXh0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDcUQ7O0FBRWxFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLDJFQUFvQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVvQztBQUNwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L29wZXJhdGluZ2NvbnRleHQvU3RhbmRhcmRPcGVyYXRpbmdDb250ZXh0Lm1qcz8xZGJmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBCYXNlT3BlcmF0aW5nQ29udGV4dCB9IGZyb20gJy4vQmFzZU9wZXJhdGluZ0NvbnRleHQubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jbGFzcyBTdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQgZXh0ZW5kcyBCYXNlT3BlcmF0aW5nQ29udGV4dCB7XG4gICAgLyoqXG4gICAgICogUmV0dXJuIHRoZSBtb2R1bGUgbmFtZS4gIEludGVuZGVkIGZvciB1c2Ugd2l0aCBpbXBvcnQoKSB0byBlbmFibGUgZHluYW1pYyBpbXBvcnRcbiAgICAgKiBvZiB0aGUgaW1wbGVtZW50YXRpb24gYXNzb2NpYXRlZCB3aXRoIHRoaXMgb3BlcmF0aW5nIGNvbnRleHRcbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIGdldE1vZHVsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiBTdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQuTU9EVUxFX05BTUU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGlzIG9wZXJhdGluZyBjb250ZXh0XG4gICAgICogQHJldHVybnMgc3RyaW5nXG4gICAgICovXG4gICAgZ2V0SWQoKSB7XG4gICAgICAgIHJldHVybiBTdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQuSUQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBvcGVyYXRpbmcgY29udGV4dCBpcyBhdmFpbGFibGUuXG4gICAgICogQ29uZmlybXMgdGhhdCB0aGUgY29kZSBpcyBydW5uaW5nIGEgYnJvd3NlciByYXRoZXIuICBUaGlzIGlzIHJlcXVpcmVkLlxuICAgICAqIEByZXR1cm5zIFByb21pc2U8Ym9vbGVhbj4gaW5kaWNhdGluZyB3aGV0aGVyIHRoaXMgb3BlcmF0aW5nIGNvbnRleHQgaXMgY3VycmVudGx5IGF2YWlsYWJsZS5cbiAgICAgKi9cbiAgICBhc3luYyBpbml0aWFsaXplKCkge1xuICAgICAgICB0aGlzLmF2YWlsYWJsZSA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICAgIHJldHVybiB0aGlzLmF2YWlsYWJsZTtcbiAgICAgICAgLypcbiAgICAgICAgICogTk9URTogVGhlIHN0YW5kYXJkIGNvbnRleHQgaXMgYXZhaWxhYmxlIGFzIGxvbmcgYXMgdGhlcmUgaXMgYSB3aW5kb3cuICBJZi93aGVuIHdlIHNwbGl0IG91dCBXQU0gZnJvbSBCcm93c2VyXG4gICAgICAgICAqIFdlIGNhbiBtb3ZlIHRoZSBjdXJyZW50IGNvbnRlbnRzIG9mIHRoZSBpbml0aWFsaXplIG1ldGhvZCB0byBoZXJlIGFuZCB2ZXJpZnkgdGhhdCB0aGUgV0FNIGV4dGVuc2lvbiBpcyBhdmFpbGFibGVcbiAgICAgICAgICovXG4gICAgfVxufVxuLypcbiAqIFRPRE86IE9uY2Ugd2UgaGF2ZSBkZXRlcm1pbmUgdGhlIGJ1bmRsaW5nIGNvZGUgcmV0dXJuIGhlcmUgdG8gc3BlY2lmeSB0aGUgbmFtZSBvZiB0aGUgYnVuZGxlXG4gKiBjb250YWluaW5nIHRoZSBpbXBsZW1lbnRhdGlvbiBmb3IgdGhpcyBvcGVyYXRpbmcgY29udGV4dFxuICovXG5TdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQuTU9EVUxFX05BTUUgPSBcIlwiO1xuLyoqXG4gKiBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIG9wZXJhdGluZyBjb250ZXh0XG4gKi9cblN0YW5kYXJkT3BlcmF0aW5nQ29udGV4dC5JRCA9IFwiU3RhbmRhcmRPcGVyYXRpbmdDb250ZXh0XCI7XG5cbmV4cG9ydCB7IFN0YW5kYXJkT3BlcmF0aW5nQ29udGV4dCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RhbmRhcmRPcGVyYXRpbmdDb250ZXh0Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/operatingcontext/TeamsAppOperatingContext.mjs":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/operatingcontext/TeamsAppOperatingContext.mjs ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TeamsAppOperatingContext: function() { return /* binding */ TeamsAppOperatingContext; }\n/* harmony export */ });\n/* harmony import */ var _BaseOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseOperatingContext.mjs */ \"./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass TeamsAppOperatingContext extends _BaseOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseOperatingContext {\n    /**\n     * Return the module name.  Intended for use with import() to enable dynamic import\n     * of the implementation associated with this operating context\n     * @returns\n     */\n    getModuleName() {\n        return TeamsAppOperatingContext.MODULE_NAME;\n    }\n    /**\n     * Returns the unique identifier for this operating context\n     * @returns string\n     */\n    getId() {\n        return TeamsAppOperatingContext.ID;\n    }\n    /**\n     * Checks whether the operating context is available.\n     * Confirms that the code is running a browser rather.  This is required.\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\n     */\n    async initialize() {\n        /*\n         * TODO: Add implementation to check for presence of inject MetaOSHub JavaScript interface\n         * TODO: Make pre-flight token request to ensure that App is eligible to use Nested App Auth\n         */\n        return false;\n    }\n}\n/*\n * TODO: Once we have determine the bundling code return here to specify the name of the bundle\n * containing the implementation for this operating context\n */\nTeamsAppOperatingContext.MODULE_NAME = \"\";\n/**\n * Unique identifier for the operating context\n */\nTeamsAppOperatingContext.ID = \"TeamsAppOperatingContext\";\n\n\n//# sourceMappingURL=TeamsAppOperatingContext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L29wZXJhdGluZ2NvbnRleHQvVGVhbXNBcHBPcGVyYXRpbmdDb250ZXh0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDcUQ7O0FBRWxFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLDJFQUFvQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFb0M7QUFDcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9vcGVyYXRpbmdjb250ZXh0L1RlYW1zQXBwT3BlcmF0aW5nQ29udGV4dC5tanM/MTU1YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQmFzZU9wZXJhdGluZ0NvbnRleHQgfSBmcm9tICcuL0Jhc2VPcGVyYXRpbmdDb250ZXh0Lm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY2xhc3MgVGVhbXNBcHBPcGVyYXRpbmdDb250ZXh0IGV4dGVuZHMgQmFzZU9wZXJhdGluZ0NvbnRleHQge1xuICAgIC8qKlxuICAgICAqIFJldHVybiB0aGUgbW9kdWxlIG5hbWUuICBJbnRlbmRlZCBmb3IgdXNlIHdpdGggaW1wb3J0KCkgdG8gZW5hYmxlIGR5bmFtaWMgaW1wb3J0XG4gICAgICogb2YgdGhlIGltcGxlbWVudGF0aW9uIGFzc29jaWF0ZWQgd2l0aCB0aGlzIG9wZXJhdGluZyBjb250ZXh0XG4gICAgICogQHJldHVybnNcbiAgICAgKi9cbiAgICBnZXRNb2R1bGVOYW1lKCkge1xuICAgICAgICByZXR1cm4gVGVhbXNBcHBPcGVyYXRpbmdDb250ZXh0Lk1PRFVMRV9OQU1FO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhpcyBvcGVyYXRpbmcgY29udGV4dFxuICAgICAqIEByZXR1cm5zIHN0cmluZ1xuICAgICAqL1xuICAgIGdldElkKCkge1xuICAgICAgICByZXR1cm4gVGVhbXNBcHBPcGVyYXRpbmdDb250ZXh0LklEO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGVja3Mgd2hldGhlciB0aGUgb3BlcmF0aW5nIGNvbnRleHQgaXMgYXZhaWxhYmxlLlxuICAgICAqIENvbmZpcm1zIHRoYXQgdGhlIGNvZGUgaXMgcnVubmluZyBhIGJyb3dzZXIgcmF0aGVyLiAgVGhpcyBpcyByZXF1aXJlZC5cbiAgICAgKiBAcmV0dXJucyBQcm9taXNlPGJvb2xlYW4+IGluZGljYXRpbmcgd2hldGhlciB0aGlzIG9wZXJhdGluZyBjb250ZXh0IGlzIGN1cnJlbnRseSBhdmFpbGFibGUuXG4gICAgICovXG4gICAgYXN5bmMgaW5pdGlhbGl6ZSgpIHtcbiAgICAgICAgLypcbiAgICAgICAgICogVE9ETzogQWRkIGltcGxlbWVudGF0aW9uIHRvIGNoZWNrIGZvciBwcmVzZW5jZSBvZiBpbmplY3QgTWV0YU9TSHViIEphdmFTY3JpcHQgaW50ZXJmYWNlXG4gICAgICAgICAqIFRPRE86IE1ha2UgcHJlLWZsaWdodCB0b2tlbiByZXF1ZXN0IHRvIGVuc3VyZSB0aGF0IEFwcCBpcyBlbGlnaWJsZSB0byB1c2UgTmVzdGVkIEFwcCBBdXRoXG4gICAgICAgICAqL1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuLypcbiAqIFRPRE86IE9uY2Ugd2UgaGF2ZSBkZXRlcm1pbmUgdGhlIGJ1bmRsaW5nIGNvZGUgcmV0dXJuIGhlcmUgdG8gc3BlY2lmeSB0aGUgbmFtZSBvZiB0aGUgYnVuZGxlXG4gKiBjb250YWluaW5nIHRoZSBpbXBsZW1lbnRhdGlvbiBmb3IgdGhpcyBvcGVyYXRpbmcgY29udGV4dFxuICovXG5UZWFtc0FwcE9wZXJhdGluZ0NvbnRleHQuTU9EVUxFX05BTUUgPSBcIlwiO1xuLyoqXG4gKiBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIG9wZXJhdGluZyBjb250ZXh0XG4gKi9cblRlYW1zQXBwT3BlcmF0aW5nQ29udGV4dC5JRCA9IFwiVGVhbXNBcHBPcGVyYXRpbmdDb250ZXh0XCI7XG5cbmV4cG9ydCB7IFRlYW1zQXBwT3BlcmF0aW5nQ29udGV4dCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VGVhbXNBcHBPcGVyYXRpbmdDb250ZXh0Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/operatingcontext/TeamsAppOperatingContext.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/packageMetadata.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/packageMetadata.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   name: function() { return /* binding */ name; },\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n/* eslint-disable header/header */\nconst name = \"@azure/msal-browser\";\nconst version = \"3.0.2\";\n\n\n//# sourceMappingURL=packageMetadata.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3BhY2thZ2VNZXRhZGF0YS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3BhY2thZ2VNZXRhZGF0YS5tanM/ZmEwMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgaGVhZGVyL2hlYWRlciAqL1xuY29uc3QgbmFtZSA9IFwiQGF6dXJlL21zYWwtYnJvd3NlclwiO1xuY29uc3QgdmVyc2lvbiA9IFwiMy4wLjJcIjtcblxuZXhwb3J0IHsgbmFtZSwgdmVyc2lvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFja2FnZU1ldGFkYXRhLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceClient.mjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceClient.mjs ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserPerformanceClient: function() { return /* binding */ BrowserPerformanceClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _crypto_GuidGenerator_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../crypto/GuidGenerator.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/GuidGenerator.mjs\");\n/* harmony import */ var _BrowserPerformanceMeasurement_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./BrowserPerformanceMeasurement.mjs */ \"./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass BrowserPerformanceClient extends _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.PerformanceClient {\n    constructor(configuration, intFields) {\n        super(configuration.auth.clientId, configuration.auth.authority || `${_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_AUTHORITY}`, new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Logger(configuration.system?.loggerOptions || {}, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__.version), _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__.version, configuration.telemetry?.application || {\n            appName: \"\",\n            appVersion: \"\",\n        }, intFields);\n        this.browserCrypto = new _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCrypto(this.logger);\n        this.guidGenerator = new _crypto_GuidGenerator_mjs__WEBPACK_IMPORTED_MODULE_3__.GuidGenerator(this.browserCrypto);\n    }\n    startPerformanceMeasurement(measureName, correlationId) {\n        return new _BrowserPerformanceMeasurement_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserPerformanceMeasurement(measureName, correlationId);\n    }\n    generateId() {\n        return this.guidGenerator.generateGuid();\n    }\n    getPageVisibility() {\n        return document.visibilityState?.toString() || null;\n    }\n    deleteIncompleteSubMeasurements(inProgressEvent) {\n        const rootEvent = this.eventsByCorrelationId.get(inProgressEvent.event.correlationId);\n        const isRootEvent = rootEvent && rootEvent.eventId === inProgressEvent.event.eventId;\n        const incompleteMeasurements = [];\n        if (isRootEvent && rootEvent?.incompleteSubMeasurements) {\n            rootEvent.incompleteSubMeasurements.forEach((subMeasurement) => {\n                incompleteMeasurements.push({ ...subMeasurement });\n            });\n        }\n        // Clean up remaining marks for incomplete sub-measurements\n        if (incompleteMeasurements.length > 0) {\n            _BrowserPerformanceMeasurement_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserPerformanceMeasurement.flushMeasurements(inProgressEvent.event.correlationId, incompleteMeasurements);\n        }\n    }\n    supportsBrowserPerformanceNow() {\n        return (typeof window !== \"undefined\" &&\n            typeof window.performance !== \"undefined\" &&\n            typeof window.performance.now === \"function\");\n    }\n    /**\n     * Starts measuring performance for a given operation. Returns a function that should be used to end the measurement.\n     * Also captures browser page visibilityState.\n     *\n     * @param {PerformanceEvents} measureName\n     * @param {?string} [correlationId]\n     * @returns {((event?: Partial<PerformanceEvent>) => PerformanceEvent| null)}\n     */\n    startMeasurement(measureName, correlationId) {\n        // Capture page visibilityState and then invoke start/end measurement\n        const startPageVisibility = this.getPageVisibility();\n        const inProgressEvent = super.startMeasurement(measureName, correlationId);\n        return {\n            ...inProgressEvent,\n            end: (event) => {\n                const res = inProgressEvent.end({\n                    startPageVisibility,\n                    endPageVisibility: this.getPageVisibility(),\n                    ...event,\n                });\n                this.deleteIncompleteSubMeasurements(inProgressEvent);\n                return res;\n            },\n            discard: () => {\n                inProgressEvent.discard();\n                this.deleteIncompleteSubMeasurements(inProgressEvent);\n                inProgressEvent.measurement.flushMeasurement();\n            },\n        };\n    }\n    /**\n     * Adds pre-queue time to preQueueTimeByCorrelationId map.\n     * @param {PerformanceEvents} eventName\n     * @param {?string} correlationId\n     * @returns\n     */\n    setPreQueueTime(eventName, correlationId) {\n        if (!this.supportsBrowserPerformanceNow()) {\n            this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to set telemetry queue time for ${eventName}`);\n            return;\n        }\n        if (!correlationId) {\n            this.logger.trace(`BrowserPerformanceClient: correlationId for ${eventName} not provided, unable to set telemetry queue time`);\n            return;\n        }\n        const preQueueEvent = this.preQueueTimeByCorrelationId.get(correlationId);\n        /**\n         * Manually complete queue measurement if there is an incomplete pre-queue event.\n         * Incomplete pre-queue events are instrumentation bugs that should be fixed.\n         */\n        if (preQueueEvent) {\n            this.logger.trace(`BrowserPerformanceClient: Incomplete pre-queue ${preQueueEvent.name} found`, correlationId);\n            this.addQueueMeasurement(preQueueEvent.name, correlationId, undefined, true);\n        }\n        this.preQueueTimeByCorrelationId.set(correlationId, {\n            name: eventName,\n            time: window.performance.now(),\n        });\n    }\n    /**\n     * Calculates and adds queue time measurement for given performance event.\n     *\n     * @param {PerformanceEvents} eventName\n     * @param {?string} correlationId\n     * @param {?number} queueTime\n     * @param {?boolean} manuallyCompleted - indicator for manually completed queue measurements\n     * @returns\n     */\n    addQueueMeasurement(eventName, correlationId, queueTime, manuallyCompleted) {\n        if (!this.supportsBrowserPerformanceNow()) {\n            this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to add queue measurement for ${eventName}`);\n            return;\n        }\n        if (!correlationId) {\n            this.logger.trace(`BrowserPerformanceClient: correlationId for ${eventName} not provided, unable to add queue measurement`);\n            return;\n        }\n        const preQueueTime = super.getPreQueueTime(eventName, correlationId);\n        if (!preQueueTime) {\n            return;\n        }\n        const currentTime = window.performance.now();\n        const resQueueTime = queueTime || super.calculateQueuedTime(preQueueTime, currentTime);\n        return super.addQueueMeasurement(eventName, correlationId, resQueueTime, manuallyCompleted);\n    }\n}\n\n\n//# sourceMappingURL=BrowserPerformanceClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.mjs ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserPerformanceMeasurement: function() { return /* binding */ BrowserPerformanceMeasurement; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass BrowserPerformanceMeasurement {\n    constructor(name, correlationId) {\n        this.correlationId = correlationId;\n        this.measureName = BrowserPerformanceMeasurement.makeMeasureName(name, correlationId);\n        this.startMark = BrowserPerformanceMeasurement.makeStartMark(name, correlationId);\n        this.endMark = BrowserPerformanceMeasurement.makeEndMark(name, correlationId);\n    }\n    static makeMeasureName(name, correlationId) {\n        return `msal.measure.${name}.${correlationId}`;\n    }\n    static makeStartMark(name, correlationId) {\n        return `msal.start.${name}.${correlationId}`;\n    }\n    static makeEndMark(name, correlationId) {\n        return `msal.end.${name}.${correlationId}`;\n    }\n    static supportsBrowserPerformance() {\n        return (typeof window !== \"undefined\" &&\n            typeof window.performance !== \"undefined\" &&\n            typeof window.performance.mark === \"function\" &&\n            typeof window.performance.measure === \"function\" &&\n            typeof window.performance.clearMarks === \"function\" &&\n            typeof window.performance.clearMeasures === \"function\" &&\n            typeof window.performance.getEntriesByName === \"function\");\n    }\n    /**\n     * Flush browser marks and measurements.\n     * @param {string} correlationId\n     * @param {SubMeasurement} measurements\n     */\n    static flushMeasurements(correlationId, measurements) {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                measurements.forEach((measurement) => {\n                    const measureName = BrowserPerformanceMeasurement.makeMeasureName(measurement.name, correlationId);\n                    const entriesForMeasurement = window.performance.getEntriesByName(measureName, \"measure\");\n                    if (entriesForMeasurement.length > 0) {\n                        window.performance.clearMeasures(measureName);\n                        window.performance.clearMarks(BrowserPerformanceMeasurement.makeStartMark(measureName, correlationId));\n                        window.performance.clearMarks(BrowserPerformanceMeasurement.makeEndMark(measureName, correlationId));\n                    }\n                });\n            }\n            catch (e) {\n                // Silently catch and return null\n            }\n        }\n    }\n    startMeasurement() {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                window.performance.mark(this.startMark);\n            }\n            catch (e) {\n                // Silently catch\n            }\n        }\n    }\n    endMeasurement() {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                window.performance.mark(this.endMark);\n                window.performance.measure(this.measureName, this.startMark, this.endMark);\n            }\n            catch (e) {\n                // Silently catch\n            }\n        }\n    }\n    flushMeasurement() {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                const entriesForMeasurement = window.performance.getEntriesByName(this.measureName, \"measure\");\n                if (entriesForMeasurement.length > 0) {\n                    const durationMs = entriesForMeasurement[0].duration;\n                    window.performance.clearMeasures(this.measureName);\n                    window.performance.clearMarks(this.startMark);\n                    window.performance.clearMarks(this.endMark);\n                    return durationMs;\n                }\n            }\n            catch (e) {\n                // Silently catch and return null\n            }\n        }\n        return null;\n    }\n}\n\n\n//# sourceMappingURL=BrowserPerformanceMeasurement.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3RlbGVtZXRyeS9Ccm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsS0FBSyxHQUFHLGNBQWM7QUFDckQ7QUFDQTtBQUNBLDZCQUE2QixLQUFLLEdBQUcsY0FBYztBQUNuRDtBQUNBO0FBQ0EsMkJBQTJCLEtBQUssR0FBRyxjQUFjO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXlDO0FBQ3pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvdGVsZW1ldHJ5L0Jyb3dzZXJQZXJmb3JtYW5jZU1lYXN1cmVtZW50Lm1qcz82YjdiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIEJyb3dzZXJQZXJmb3JtYW5jZU1lYXN1cmVtZW50IHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBjb3JyZWxhdGlvbklkKSB7XG4gICAgICAgIHRoaXMuY29ycmVsYXRpb25JZCA9IGNvcnJlbGF0aW9uSWQ7XG4gICAgICAgIHRoaXMubWVhc3VyZU5hbWUgPSBCcm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudC5tYWtlTWVhc3VyZU5hbWUobmFtZSwgY29ycmVsYXRpb25JZCk7XG4gICAgICAgIHRoaXMuc3RhcnRNYXJrID0gQnJvd3NlclBlcmZvcm1hbmNlTWVhc3VyZW1lbnQubWFrZVN0YXJ0TWFyayhuYW1lLCBjb3JyZWxhdGlvbklkKTtcbiAgICAgICAgdGhpcy5lbmRNYXJrID0gQnJvd3NlclBlcmZvcm1hbmNlTWVhc3VyZW1lbnQubWFrZUVuZE1hcmsobmFtZSwgY29ycmVsYXRpb25JZCk7XG4gICAgfVxuICAgIHN0YXRpYyBtYWtlTWVhc3VyZU5hbWUobmFtZSwgY29ycmVsYXRpb25JZCkge1xuICAgICAgICByZXR1cm4gYG1zYWwubWVhc3VyZS4ke25hbWV9LiR7Y29ycmVsYXRpb25JZH1gO1xuICAgIH1cbiAgICBzdGF0aWMgbWFrZVN0YXJ0TWFyayhuYW1lLCBjb3JyZWxhdGlvbklkKSB7XG4gICAgICAgIHJldHVybiBgbXNhbC5zdGFydC4ke25hbWV9LiR7Y29ycmVsYXRpb25JZH1gO1xuICAgIH1cbiAgICBzdGF0aWMgbWFrZUVuZE1hcmsobmFtZSwgY29ycmVsYXRpb25JZCkge1xuICAgICAgICByZXR1cm4gYG1zYWwuZW5kLiR7bmFtZX0uJHtjb3JyZWxhdGlvbklkfWA7XG4gICAgfVxuICAgIHN0YXRpYyBzdXBwb3J0c0Jyb3dzZXJQZXJmb3JtYW5jZSgpIHtcbiAgICAgICAgcmV0dXJuICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgICAgICAgICB0eXBlb2Ygd2luZG93LnBlcmZvcm1hbmNlICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgICAgICAgICB0eXBlb2Ygd2luZG93LnBlcmZvcm1hbmNlLm1hcmsgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICAgICAgdHlwZW9mIHdpbmRvdy5wZXJmb3JtYW5jZS5tZWFzdXJlID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICAgICAgICAgIHR5cGVvZiB3aW5kb3cucGVyZm9ybWFuY2UuY2xlYXJNYXJrcyA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgICAgICAgICB0eXBlb2Ygd2luZG93LnBlcmZvcm1hbmNlLmNsZWFyTWVhc3VyZXMgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICAgICAgdHlwZW9mIHdpbmRvdy5wZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlOYW1lID09PSBcImZ1bmN0aW9uXCIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGbHVzaCBicm93c2VyIG1hcmtzIGFuZCBtZWFzdXJlbWVudHMuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvcnJlbGF0aW9uSWRcbiAgICAgKiBAcGFyYW0ge1N1Yk1lYXN1cmVtZW50fSBtZWFzdXJlbWVudHNcbiAgICAgKi9cbiAgICBzdGF0aWMgZmx1c2hNZWFzdXJlbWVudHMoY29ycmVsYXRpb25JZCwgbWVhc3VyZW1lbnRzKSB7XG4gICAgICAgIGlmIChCcm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudC5zdXBwb3J0c0Jyb3dzZXJQZXJmb3JtYW5jZSgpKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIG1lYXN1cmVtZW50cy5mb3JFYWNoKChtZWFzdXJlbWVudCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBtZWFzdXJlTmFtZSA9IEJyb3dzZXJQZXJmb3JtYW5jZU1lYXN1cmVtZW50Lm1ha2VNZWFzdXJlTmFtZShtZWFzdXJlbWVudC5uYW1lLCBjb3JyZWxhdGlvbklkKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZW50cmllc0Zvck1lYXN1cmVtZW50ID0gd2luZG93LnBlcmZvcm1hbmNlLmdldEVudHJpZXNCeU5hbWUobWVhc3VyZU5hbWUsIFwibWVhc3VyZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVudHJpZXNGb3JNZWFzdXJlbWVudC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cucGVyZm9ybWFuY2UuY2xlYXJNZWFzdXJlcyhtZWFzdXJlTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cucGVyZm9ybWFuY2UuY2xlYXJNYXJrcyhCcm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudC5tYWtlU3RhcnRNYXJrKG1lYXN1cmVOYW1lLCBjb3JyZWxhdGlvbklkKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cucGVyZm9ybWFuY2UuY2xlYXJNYXJrcyhCcm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudC5tYWtlRW5kTWFyayhtZWFzdXJlTmFtZSwgY29ycmVsYXRpb25JZCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIC8vIFNpbGVudGx5IGNhdGNoIGFuZCByZXR1cm4gbnVsbFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXJ0TWVhc3VyZW1lbnQoKSB7XG4gICAgICAgIGlmIChCcm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudC5zdXBwb3J0c0Jyb3dzZXJQZXJmb3JtYW5jZSgpKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5wZXJmb3JtYW5jZS5tYXJrKHRoaXMuc3RhcnRNYXJrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgLy8gU2lsZW50bHkgY2F0Y2hcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBlbmRNZWFzdXJlbWVudCgpIHtcbiAgICAgICAgaWYgKEJyb3dzZXJQZXJmb3JtYW5jZU1lYXN1cmVtZW50LnN1cHBvcnRzQnJvd3NlclBlcmZvcm1hbmNlKCkpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgd2luZG93LnBlcmZvcm1hbmNlLm1hcmsodGhpcy5lbmRNYXJrKTtcbiAgICAgICAgICAgICAgICB3aW5kb3cucGVyZm9ybWFuY2UubWVhc3VyZSh0aGlzLm1lYXN1cmVOYW1lLCB0aGlzLnN0YXJ0TWFyaywgdGhpcy5lbmRNYXJrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgLy8gU2lsZW50bHkgY2F0Y2hcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBmbHVzaE1lYXN1cmVtZW50KCkge1xuICAgICAgICBpZiAoQnJvd3NlclBlcmZvcm1hbmNlTWVhc3VyZW1lbnQuc3VwcG9ydHNCcm93c2VyUGVyZm9ybWFuY2UoKSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBlbnRyaWVzRm9yTWVhc3VyZW1lbnQgPSB3aW5kb3cucGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5TmFtZSh0aGlzLm1lYXN1cmVOYW1lLCBcIm1lYXN1cmVcIik7XG4gICAgICAgICAgICAgICAgaWYgKGVudHJpZXNGb3JNZWFzdXJlbWVudC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGR1cmF0aW9uTXMgPSBlbnRyaWVzRm9yTWVhc3VyZW1lbnRbMF0uZHVyYXRpb247XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5wZXJmb3JtYW5jZS5jbGVhck1lYXN1cmVzKHRoaXMubWVhc3VyZU5hbWUpO1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cucGVyZm9ybWFuY2UuY2xlYXJNYXJrcyh0aGlzLnN0YXJ0TWFyayk7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5wZXJmb3JtYW5jZS5jbGVhck1hcmtzKHRoaXMuZW5kTWFyayk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkdXJhdGlvbk1zO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgLy8gU2lsZW50bHkgY2F0Y2ggYW5kIHJldHVybiBudWxsXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuXG5leHBvcnQgeyBCcm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QnJvd3NlclBlcmZvcm1hbmNlTWVhc3VyZW1lbnQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiId: function() { return /* binding */ ApiId; },\n/* harmony export */   BrowserCacheLocation: function() { return /* binding */ BrowserCacheLocation; },\n/* harmony export */   BrowserConstants: function() { return /* binding */ BrowserConstants; },\n/* harmony export */   CacheLookupPolicy: function() { return /* binding */ CacheLookupPolicy; },\n/* harmony export */   DB_NAME: function() { return /* binding */ DB_NAME; },\n/* harmony export */   DB_TABLE_NAME: function() { return /* binding */ DB_TABLE_NAME; },\n/* harmony export */   DB_VERSION: function() { return /* binding */ DB_VERSION; },\n/* harmony export */   DEFAULT_REQUEST: function() { return /* binding */ DEFAULT_REQUEST; },\n/* harmony export */   HTTP_REQUEST_TYPE: function() { return /* binding */ HTTP_REQUEST_TYPE; },\n/* harmony export */   InMemoryCacheKeys: function() { return /* binding */ InMemoryCacheKeys; },\n/* harmony export */   InteractionStatus: function() { return /* binding */ InteractionStatus; },\n/* harmony export */   InteractionType: function() { return /* binding */ InteractionType; },\n/* harmony export */   KEY_FORMAT_JWK: function() { return /* binding */ KEY_FORMAT_JWK; },\n/* harmony export */   NativeConstants: function() { return /* binding */ NativeConstants; },\n/* harmony export */   NativeExtensionMethod: function() { return /* binding */ NativeExtensionMethod; },\n/* harmony export */   StaticCacheKeys: function() { return /* binding */ StaticCacheKeys; },\n/* harmony export */   TemporaryCacheKeys: function() { return /* binding */ TemporaryCacheKeys; },\n/* harmony export */   WrapperSKU: function() { return /* binding */ WrapperSKU; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Constants\n */\nconst BrowserConstants = {\n    /**\n     * Interaction in progress cache value\n     */\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\n    /**\n     * Invalid grant error code\n     */\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    /**\n     * Default popup window width\n     */\n    POPUP_WIDTH: 483,\n    /**\n     * Default popup window height\n     */\n    POPUP_HEIGHT: 600,\n    /**\n     * Name of the popup window starts with\n     */\n    POPUP_NAME_PREFIX: \"msal\",\n    /**\n     * Default popup monitor poll interval in milliseconds\n     */\n    DEFAULT_POLL_INTERVAL_MS: 30,\n    /**\n     * Msal-browser SKU\n     */\n    MSAL_SKU: \"msal.js.browser\",\n};\nconst NativeConstants = {\n    CHANNEL_ID: \"53ee284d-920a-4b59-9d30-a60315b26836\",\n    PREFERRED_EXTENSION_ID: \"ppnbnpeolgkicgegkbkbjmhlideopiji\",\n    MATS_TELEMETRY: \"MATS\",\n};\nconst NativeExtensionMethod = {\n    HandshakeRequest: \"Handshake\",\n    HandshakeResponse: \"HandshakeResponse\",\n    GetToken: \"GetToken\",\n    Response: \"Response\",\n};\nconst BrowserCacheLocation = {\n    LocalStorage: \"localStorage\",\n    SessionStorage: \"sessionStorage\",\n    MemoryStorage: \"memoryStorage\",\n};\n/**\n * HTTP Request types supported by MSAL.\n */\nconst HTTP_REQUEST_TYPE = {\n    GET: \"GET\",\n    POST: \"POST\",\n};\n/**\n * Temporary cache keys for MSAL, deleted after any request.\n */\nconst TemporaryCacheKeys = {\n    AUTHORITY: \"authority\",\n    ACQUIRE_TOKEN_ACCOUNT: \"acquireToken.account\",\n    SESSION_STATE: \"session.state\",\n    REQUEST_STATE: \"request.state\",\n    NONCE_IDTOKEN: \"nonce.id_token\",\n    ORIGIN_URI: \"request.origin\",\n    RENEW_STATUS: \"token.renew.status\",\n    URL_HASH: \"urlHash\",\n    REQUEST_PARAMS: \"request.params\",\n    SCOPES: \"scopes\",\n    INTERACTION_STATUS_KEY: \"interaction.status\",\n    CCS_CREDENTIAL: \"ccs.credential\",\n    CORRELATION_ID: \"request.correlationId\",\n    NATIVE_REQUEST: \"request.native\",\n    REDIRECT_CONTEXT: \"request.redirect.context\",\n};\nconst StaticCacheKeys = {\n    ACCOUNT_KEYS: \"msal.account.keys\",\n    TOKEN_KEYS: \"msal.token.keys\",\n};\n/**\n * Cache keys stored in-memory\n */\nconst InMemoryCacheKeys = {\n    WRAPPER_SKU: \"wrapper.sku\",\n    WRAPPER_VER: \"wrapper.version\",\n};\n/**\n * API Codes for Telemetry purposes.\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\n * 0-99 Silent Flow\n * 800-899 Auth Code Flow\n */\nconst ApiId = {\n    acquireTokenRedirect: 861,\n    acquireTokenPopup: 862,\n    ssoSilent: 863,\n    acquireTokenSilent_authCode: 864,\n    handleRedirectPromise: 865,\n    acquireTokenByCode: 866,\n    acquireTokenSilent_silentFlow: 61,\n    logout: 961,\n    logoutPopup: 962,\n};\n/*\n * Interaction type of the API - used for state and telemetry\n */\nvar InteractionType;\n(function (InteractionType) {\n    InteractionType[\"Redirect\"] = \"redirect\";\n    InteractionType[\"Popup\"] = \"popup\";\n    InteractionType[\"Silent\"] = \"silent\";\n    InteractionType[\"None\"] = \"none\";\n})(InteractionType || (InteractionType = {}));\n/**\n * Types of interaction currently in progress.\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\n */\nconst InteractionStatus = {\n    /**\n     * Initial status before interaction occurs\n     */\n    Startup: \"startup\",\n    /**\n     * Status set when all login calls occuring\n     */\n    Login: \"login\",\n    /**\n     * Status set when logout call occuring\n     */\n    Logout: \"logout\",\n    /**\n     * Status set for acquireToken calls\n     */\n    AcquireToken: \"acquireToken\",\n    /**\n     * Status set for ssoSilent calls\n     */\n    SsoSilent: \"ssoSilent\",\n    /**\n     * Status set when handleRedirect in progress\n     */\n    HandleRedirect: \"handleRedirect\",\n    /**\n     * Status set when interaction is complete\n     */\n    None: \"none\",\n};\nconst DEFAULT_REQUEST = {\n    scopes: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.OIDC_DEFAULT_SCOPES,\n};\n/**\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\n */\nconst KEY_FORMAT_JWK = \"jwk\";\n// Supported wrapper SKUs\nconst WrapperSKU = {\n    React: \"@azure/msal-react\",\n    Angular: \"@azure/msal-angular\",\n};\n// DatabaseStorage Constants\nconst DB_NAME = \"msal.db\";\nconst DB_VERSION = 1;\nconst DB_TABLE_NAME = `${DB_NAME}.keys`;\nconst CacheLookupPolicy = {\n    /*\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired\n     * or cannot be found the refresh token will be used to acquire a new one. Finally, if the refresh token\n     * is expired acquireTokenSilent will attempt to acquire new access and refresh tokens.\n     */\n    Default: 0,\n    /*\n     * acquireTokenSilent will only look for access tokens in the cache. It will not attempt to renew access or\n     * refresh tokens.\n     */\n    AccessToken: 1,\n    /*\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired or\n     * cannot be found, the refresh token will be used to acquire a new one. If the refresh token is expired, it\n     * will not be renewed and acquireTokenSilent will fail.\n     */\n    AccessTokenAndRefreshToken: 2,\n    /*\n     * acquireTokenSilent will not attempt to retrieve access tokens from the cache and will instead attempt to\n     * exchange the cached refresh token for a new access token. If the refresh token is expired, it will not be\n     * renewed and acquireTokenSilent will fail.\n     */\n    RefreshToken: 3,\n    /*\n     * acquireTokenSilent will not look in the cache for the access token. It will go directly to network with the\n     * cached refresh token. If the refresh token is expired an attempt will be made to renew it. This is equivalent to\n     * setting \"forceRefresh: true\".\n     */\n    RefreshTokenAndNetwork: 4,\n    /*\n     * acquireTokenSilent will attempt to renew both access and refresh tokens. It will not look in the cache. This will\n     * always fail if 3rd party cookies are blocked by the browser.\n     */\n    Skip: 5,\n};\n\n\n//# sourceMappingURL=BrowserConstants.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserProtocolUtils: function() { return /* binding */ BrowserProtocolUtils; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass BrowserProtocolUtils {\n    /**\n     * Extracts the BrowserStateObject from the state string.\n     * @param browserCrypto\n     * @param state\n     */\n    static extractBrowserRequestState(browserCrypto, state) {\n        if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(state)) {\n            return null;\n        }\n        try {\n            const requestStateObj = _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ProtocolUtils.parseRequestState(browserCrypto, state);\n            return requestStateObj.libraryState.meta;\n        }\n        catch (e) {\n            throw _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createInvalidStateError(state, e);\n        }\n    }\n    /**\n     * Parses properties of server response from url hash\n     * @param locationHash Hash from url\n     */\n    static parseServerResponseFromHash(locationHash) {\n        if (!locationHash) {\n            return {};\n        }\n        const hashUrlString = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.UrlString(locationHash);\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.UrlString.getDeserializedHash(hashUrlString.getHash());\n    }\n}\n\n\n//# sourceMappingURL=BrowserProtocolUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3V0aWxzL0Jyb3dzZXJQcm90b2NvbFV0aWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDK0U7O0FBRTVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDJEQUFXO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyw2REFBYTtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsK0RBQWU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MseURBQVM7QUFDM0MsZUFBZSx5REFBUztBQUN4QjtBQUNBOztBQUVnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3V0aWxzL0Jyb3dzZXJQcm90b2NvbFV0aWxzLm1qcz9lMDQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBTdHJpbmdVdGlscywgUHJvdG9jb2xVdGlscywgQ2xpZW50QXV0aEVycm9yLCBVcmxTdHJpbmcgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24nO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIEJyb3dzZXJQcm90b2NvbFV0aWxzIHtcbiAgICAvKipcbiAgICAgKiBFeHRyYWN0cyB0aGUgQnJvd3NlclN0YXRlT2JqZWN0IGZyb20gdGhlIHN0YXRlIHN0cmluZy5cbiAgICAgKiBAcGFyYW0gYnJvd3NlckNyeXB0b1xuICAgICAqIEBwYXJhbSBzdGF0ZVxuICAgICAqL1xuICAgIHN0YXRpYyBleHRyYWN0QnJvd3NlclJlcXVlc3RTdGF0ZShicm93c2VyQ3J5cHRvLCBzdGF0ZSkge1xuICAgICAgICBpZiAoU3RyaW5nVXRpbHMuaXNFbXB0eShzdGF0ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXF1ZXN0U3RhdGVPYmogPSBQcm90b2NvbFV0aWxzLnBhcnNlUmVxdWVzdFN0YXRlKGJyb3dzZXJDcnlwdG8sIHN0YXRlKTtcbiAgICAgICAgICAgIHJldHVybiByZXF1ZXN0U3RhdGVPYmoubGlicmFyeVN0YXRlLm1ldGE7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVJbnZhbGlkU3RhdGVFcnJvcihzdGF0ZSwgZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2VzIHByb3BlcnRpZXMgb2Ygc2VydmVyIHJlc3BvbnNlIGZyb20gdXJsIGhhc2hcbiAgICAgKiBAcGFyYW0gbG9jYXRpb25IYXNoIEhhc2ggZnJvbSB1cmxcbiAgICAgKi9cbiAgICBzdGF0aWMgcGFyc2VTZXJ2ZXJSZXNwb25zZUZyb21IYXNoKGxvY2F0aW9uSGFzaCkge1xuICAgICAgICBpZiAoIWxvY2F0aW9uSGFzaCkge1xuICAgICAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGhhc2hVcmxTdHJpbmcgPSBuZXcgVXJsU3RyaW5nKGxvY2F0aW9uSGFzaCk7XG4gICAgICAgIHJldHVybiBVcmxTdHJpbmcuZ2V0RGVzZXJpYWxpemVkSGFzaChoYXNoVXJsU3RyaW5nLmdldEhhc2goKSk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBCcm93c2VyUHJvdG9jb2xVdGlscyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QnJvd3NlclByb3RvY29sVXRpbHMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/utils/BrowserStringUtils.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/utils/BrowserStringUtils.mjs ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserStringUtils: function() { return /* binding */ BrowserStringUtils; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Utility functions for strings in a browser. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nclass BrowserStringUtils {\n    /**\n     * Converts string to Uint8Array\n     * @param sDOMStr\n     */\n    static stringToUtf8Arr(sDOMStr) {\n        let nChr;\n        let nArrLen = 0;\n        const nStrLen = sDOMStr.length;\n        /* mapping... */\n        for (let nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\n            nChr = sDOMStr.charCodeAt(nMapIdx);\n            nArrLen +=\n                nChr < 0x80\n                    ? 1\n                    : nChr < 0x800\n                        ? 2\n                        : nChr < 0x10000\n                            ? 3\n                            : nChr < 0x200000\n                                ? 4\n                                : nChr < 0x4000000\n                                    ? 5\n                                    : 6;\n        }\n        const aBytes = new Uint8Array(nArrLen);\n        /* transcription... */\n        for (let nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\n            nChr = sDOMStr.charCodeAt(nChrIdx);\n            if (nChr < 128) {\n                /* one byte */\n                aBytes[nIdx++] = nChr;\n            }\n            else if (nChr < 0x800) {\n                /* two bytes */\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            }\n            else if (nChr < 0x10000) {\n                /* three bytes */\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\n                aBytes[nIdx++] = 128 + ((nChr >>> 6) & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            }\n            else if (nChr < 0x200000) {\n                /* four bytes */\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\n                aBytes[nIdx++] = 128 + ((nChr >>> 12) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 6) & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            }\n            else if (nChr < 0x4000000) {\n                /* five bytes */\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\n                aBytes[nIdx++] = 128 + ((nChr >>> 18) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 12) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 6) & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } /* if (nChr <= 0x7fffffff) */\n            else {\n                /* six bytes */\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\n                aBytes[nIdx++] = 128 + ((nChr >>> 24) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 18) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 12) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 6) & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            }\n        }\n        return aBytes;\n    }\n    /**\n     * Converts Uint8Array to a string\n     * @param aBytes\n     */\n    static utf8ArrToString(aBytes) {\n        let sView = _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        for (let nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\n            nPart = aBytes[nIdx];\n            sView += String.fromCharCode(nPart > 251 && nPart < 254 && nIdx + 5 < nLen /* six bytes */\n                ? /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\n                    (nPart - 252) * 1073741824 +\n                        ((aBytes[++nIdx] - 128) << 24) +\n                        ((aBytes[++nIdx] - 128) << 18) +\n                        ((aBytes[++nIdx] - 128) << 12) +\n                        ((aBytes[++nIdx] - 128) << 6) +\n                        aBytes[++nIdx] -\n                        128\n                : nPart > 247 &&\n                    nPart < 252 &&\n                    nIdx + 4 < nLen /* five bytes */\n                    ? ((nPart - 248) << 24) +\n                        ((aBytes[++nIdx] - 128) << 18) +\n                        ((aBytes[++nIdx] - 128) << 12) +\n                        ((aBytes[++nIdx] - 128) << 6) +\n                        aBytes[++nIdx] -\n                        128\n                    : nPart > 239 &&\n                        nPart < 248 &&\n                        nIdx + 3 < nLen /* four bytes */\n                        ? ((nPart - 240) << 18) +\n                            ((aBytes[++nIdx] - 128) << 12) +\n                            ((aBytes[++nIdx] - 128) << 6) +\n                            aBytes[++nIdx] -\n                            128\n                        : nPart > 223 &&\n                            nPart < 240 &&\n                            nIdx + 2 < nLen /* three bytes */\n                            ? ((nPart - 224) << 12) +\n                                ((aBytes[++nIdx] - 128) << 6) +\n                                aBytes[++nIdx] -\n                                128\n                            : nPart > 191 &&\n                                nPart < 224 &&\n                                nIdx + 1 < nLen /* two bytes */\n                                ? ((nPart - 192) << 6) + aBytes[++nIdx] - 128\n                                : /* nPart < 127 ? */ /* one byte */\n                                    nPart);\n        }\n        return sView;\n    }\n    /**\n     * Returns stringified jwk.\n     * @param jwk\n     */\n    static getSortedObjectString(obj) {\n        return JSON.stringify(obj, Object.keys(obj).sort());\n    }\n}\n\n\n//# sourceMappingURL=BrowserStringUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/utils/BrowserStringUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserUtils: function() { return /* binding */ BrowserUtils; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"./node_modules/@azure/msal-common/dist/index.mjs\");\n/* harmony import */ var _network_FetchClient_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../network/FetchClient.mjs */ \"./node_modules/@azure/msal-browser/dist/network/FetchClient.mjs\");\n/* harmony import */ var _network_XhrClient_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../network/XhrClient.mjs */ \"./node_modules/@azure/msal-browser/dist/network/XhrClient.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Utility class for browser specific functions\n */\nclass BrowserUtils {\n    // #region Window Navigation and URL management\n    /**\n     * Clears hash from window url.\n     */\n    static clearHash(contentWindow) {\n        // Office.js sets history.replaceState to null\n        contentWindow.location.hash = _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        if (typeof contentWindow.history.replaceState === \"function\") {\n            // Full removes \"#\" from url\n            contentWindow.history.replaceState(null, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING, `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`);\n        }\n    }\n    /**\n     * Replaces current hash with hash from provided url\n     */\n    static replaceHash(url) {\n        const urlParts = url.split(\"#\");\n        urlParts.shift(); // Remove part before the hash\n        window.location.hash =\n            urlParts.length > 0 ? urlParts.join(\"#\") : _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n    }\n    /**\n     * Returns boolean of whether the current window is in an iframe or not.\n     */\n    static isInIframe() {\n        return window.parent !== window;\n    }\n    /**\n     * Returns boolean of whether or not the current window is a popup opened by msal\n     */\n    static isInPopup() {\n        return (typeof window !== \"undefined\" &&\n            !!window.opener &&\n            window.opener !== window &&\n            typeof window.name === \"string\" &&\n            window.name.indexOf(`${_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserConstants.POPUP_NAME_PREFIX}.`) === 0);\n    }\n    // #endregion\n    /**\n     * Returns current window URL as redirect uri\n     */\n    static getCurrentUri() {\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\n    }\n    /**\n     * Gets the homepage url for the current window location.\n     */\n    static getHomepage() {\n        const currentUrl = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.UrlString(window.location.href);\n        const urlComponents = currentUrl.getUrlComponents();\n        return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\n    }\n    /**\n     * Returns best compatible network client object.\n     */\n    static getBrowserNetworkClient() {\n        // @ts-ignore TS2774\n        if (window.fetch && window.Headers) {\n            return new _network_FetchClient_mjs__WEBPACK_IMPORTED_MODULE_2__.FetchClient();\n        }\n        else {\n            return new _network_XhrClient_mjs__WEBPACK_IMPORTED_MODULE_3__.XhrClient();\n        }\n    }\n    /**\n     * Throws error if we have completed an auth and are\n     * attempting another auth request inside an iframe.\n     */\n    static blockReloadInHiddenIframes() {\n        const isResponseHash = _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.UrlString.hashContainsKnownProperties(window.location.hash);\n        // return an error if called from the hidden iframe created by the msal js silent calls\n        if (isResponseHash && BrowserUtils.isInIframe()) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserAuthError.createBlockReloadInHiddenIframeError();\n        }\n    }\n    /**\n     * Block redirect operations in iframes unless explicitly allowed\n     * @param interactionType Interaction type for the request\n     * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\n     */\n    static blockRedirectInIframe(interactionType, allowRedirectInIframe) {\n        const isIframedApp = BrowserUtils.isInIframe();\n        if (interactionType === _BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionType.Redirect &&\n            isIframedApp &&\n            !allowRedirectInIframe) {\n            // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserAuthError.createRedirectInIframeError(isIframedApp);\n        }\n    }\n    /**\n     * Block redirectUri loaded in popup from calling AcquireToken APIs\n     */\n    static blockAcquireTokenInPopups() {\n        // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\n        if (BrowserUtils.isInPopup()) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserAuthError.createBlockAcquireTokenInPopupsError();\n        }\n    }\n    /**\n     * Throws error if token requests are made in non-browser environment\n     * @param isBrowserEnvironment Flag indicating if environment is a browser.\n     */\n    static blockNonBrowserEnvironment(isBrowserEnvironment) {\n        if (!isBrowserEnvironment) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserAuthError.createNonBrowserEnvironmentError();\n        }\n    }\n    /**\n     * Throws error if initialize hasn't been called\n     * @param initialized\n     */\n    static blockAPICallsBeforeInitialize(initialized) {\n        if (!initialized) {\n            throw _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserAuthError.createUninitializedPublicClientApplication();\n        }\n    }\n    /**\n     * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\n     */\n    static detectIEOrEdge() {\n        const ua = window.navigator.userAgent;\n        const msie = ua.indexOf(\"MSIE \");\n        const msie11 = ua.indexOf(\"Trident/\");\n        const msedge = ua.indexOf(\"Edge/\");\n        const isIE = msie > 0 || msie11 > 0;\n        const isEdge = msedge > 0;\n        return isIE || isEdge;\n    }\n}\n\n\n//# sourceMappingURL=BrowserUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/utils/MathUtils.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/utils/MathUtils.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MathUtils: function() { return /* binding */ MathUtils; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Utility class for math specific functions in browser.\n */\nclass MathUtils {\n    /**\n     * Decimal to Hex\n     *\n     * @param num\n     */\n    static decimalToHex(num) {\n        let hex = num.toString(16);\n        while (hex.length < 2) {\n            hex = \"0\" + hex;\n        }\n        return hex;\n    }\n}\n\n\n//# sourceMappingURL=MathUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3V0aWxzL01hdGhVdGlscy5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvdXRpbHMvTWF0aFV0aWxzLm1qcz8wNjY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogVXRpbGl0eSBjbGFzcyBmb3IgbWF0aCBzcGVjaWZpYyBmdW5jdGlvbnMgaW4gYnJvd3Nlci5cbiAqL1xuY2xhc3MgTWF0aFV0aWxzIHtcbiAgICAvKipcbiAgICAgKiBEZWNpbWFsIHRvIEhleFxuICAgICAqXG4gICAgICogQHBhcmFtIG51bVxuICAgICAqL1xuICAgIHN0YXRpYyBkZWNpbWFsVG9IZXgobnVtKSB7XG4gICAgICAgIGxldCBoZXggPSBudW0udG9TdHJpbmcoMTYpO1xuICAgICAgICB3aGlsZSAoaGV4Lmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgIGhleCA9IFwiMFwiICsgaGV4O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBoZXg7XG4gICAgfVxufVxuXG5leHBvcnQgeyBNYXRoVXRpbHMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1hdGhVdGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/utils/MathUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/account/AuthToken.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/AuthToken.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthToken: function() { return /* binding */ AuthToken; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * JWT Token representation class. Parses token string and generates claims object.\n */\nclass AuthToken {\n    constructor(rawToken, crypto) {\n        if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(rawToken)) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createTokenNullOrEmptyError(rawToken);\n        }\n        this.rawToken = rawToken;\n        this.claims = AuthToken.extractTokenClaims(rawToken, crypto);\n    }\n    /**\n     * Extract token by decoding the rawToken\n     *\n     * @param encodedToken\n     */\n    static extractTokenClaims(encodedToken, crypto) {\n        const decodedToken = _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.decodeAuthToken(encodedToken);\n        // token will be decoded to get the username\n        try {\n            const base64TokenPayload = decodedToken.JWSPayload;\n            // base64Decode() should throw an error if there is an issue\n            const base64Decoded = crypto.base64Decode(base64TokenPayload);\n            return JSON.parse(base64Decoded);\n        }\n        catch (err) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createTokenParsingError(err);\n        }\n    }\n    /**\n     * Determine if the token's max_age has transpired\n     */\n    static checkMaxAge(authTime, maxAge) {\n        /*\n         * per https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\n         * To force an immediate re-authentication: If an app requires that a user re-authenticate prior to access,\n         * provide a value of 0 for the max_age parameter and the AS will force a fresh login.\n         */\n        const fiveMinuteSkew = 300000; // five minutes in milliseconds\n        if (maxAge === 0 || Date.now() - fiveMinuteSkew > authTime + maxAge) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createMaxAgeTranspiredError();\n        }\n    }\n}\n\n\n//# sourceMappingURL=AuthToken.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9BdXRoVG9rZW4ubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDa0Q7QUFDUjs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrREFBVztBQUN2QixrQkFBa0IsdUVBQWU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsK0RBQVc7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1RUFBZTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0Esa0JBQWtCLHVFQUFlO0FBQ2pDO0FBQ0E7QUFDQTs7QUFFcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2FjY291bnQvQXV0aFRva2VuLm1qcz9iNTU1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IFN0cmluZ1V0aWxzIH0gZnJvbSAnLi4vdXRpbHMvU3RyaW5nVXRpbHMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIEpXVCBUb2tlbiByZXByZXNlbnRhdGlvbiBjbGFzcy4gUGFyc2VzIHRva2VuIHN0cmluZyBhbmQgZ2VuZXJhdGVzIGNsYWltcyBvYmplY3QuXG4gKi9cbmNsYXNzIEF1dGhUb2tlbiB7XG4gICAgY29uc3RydWN0b3IocmF3VG9rZW4sIGNyeXB0bykge1xuICAgICAgICBpZiAoU3RyaW5nVXRpbHMuaXNFbXB0eShyYXdUb2tlbikpIHtcbiAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVUb2tlbk51bGxPckVtcHR5RXJyb3IocmF3VG9rZW4pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucmF3VG9rZW4gPSByYXdUb2tlbjtcbiAgICAgICAgdGhpcy5jbGFpbXMgPSBBdXRoVG9rZW4uZXh0cmFjdFRva2VuQ2xhaW1zKHJhd1Rva2VuLCBjcnlwdG8pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBFeHRyYWN0IHRva2VuIGJ5IGRlY29kaW5nIHRoZSByYXdUb2tlblxuICAgICAqXG4gICAgICogQHBhcmFtIGVuY29kZWRUb2tlblxuICAgICAqL1xuICAgIHN0YXRpYyBleHRyYWN0VG9rZW5DbGFpbXMoZW5jb2RlZFRva2VuLCBjcnlwdG8pIHtcbiAgICAgICAgY29uc3QgZGVjb2RlZFRva2VuID0gU3RyaW5nVXRpbHMuZGVjb2RlQXV0aFRva2VuKGVuY29kZWRUb2tlbik7XG4gICAgICAgIC8vIHRva2VuIHdpbGwgYmUgZGVjb2RlZCB0byBnZXQgdGhlIHVzZXJuYW1lXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBiYXNlNjRUb2tlblBheWxvYWQgPSBkZWNvZGVkVG9rZW4uSldTUGF5bG9hZDtcbiAgICAgICAgICAgIC8vIGJhc2U2NERlY29kZSgpIHNob3VsZCB0aHJvdyBhbiBlcnJvciBpZiB0aGVyZSBpcyBhbiBpc3N1ZVxuICAgICAgICAgICAgY29uc3QgYmFzZTY0RGVjb2RlZCA9IGNyeXB0by5iYXNlNjREZWNvZGUoYmFzZTY0VG9rZW5QYXlsb2FkKTtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKGJhc2U2NERlY29kZWQpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVUb2tlblBhcnNpbmdFcnJvcihlcnIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERldGVybWluZSBpZiB0aGUgdG9rZW4ncyBtYXhfYWdlIGhhcyB0cmFuc3BpcmVkXG4gICAgICovXG4gICAgc3RhdGljIGNoZWNrTWF4QWdlKGF1dGhUaW1lLCBtYXhBZ2UpIHtcbiAgICAgICAgLypcbiAgICAgICAgICogcGVyIGh0dHBzOi8vb3BlbmlkLm5ldC9zcGVjcy9vcGVuaWQtY29ubmVjdC1jb3JlLTFfMC5odG1sI0F1dGhSZXF1ZXN0XG4gICAgICAgICAqIFRvIGZvcmNlIGFuIGltbWVkaWF0ZSByZS1hdXRoZW50aWNhdGlvbjogSWYgYW4gYXBwIHJlcXVpcmVzIHRoYXQgYSB1c2VyIHJlLWF1dGhlbnRpY2F0ZSBwcmlvciB0byBhY2Nlc3MsXG4gICAgICAgICAqIHByb3ZpZGUgYSB2YWx1ZSBvZiAwIGZvciB0aGUgbWF4X2FnZSBwYXJhbWV0ZXIgYW5kIHRoZSBBUyB3aWxsIGZvcmNlIGEgZnJlc2ggbG9naW4uXG4gICAgICAgICAqL1xuICAgICAgICBjb25zdCBmaXZlTWludXRlU2tldyA9IDMwMDAwMDsgLy8gZml2ZSBtaW51dGVzIGluIG1pbGxpc2Vjb25kc1xuICAgICAgICBpZiAobWF4QWdlID09PSAwIHx8IERhdGUubm93KCkgLSBmaXZlTWludXRlU2tldyA+IGF1dGhUaW1lICsgbWF4QWdlKSB7XG4gICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlTWF4QWdlVHJhbnNwaXJlZEVycm9yKCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCB7IEF1dGhUb2tlbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aFRva2VuLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CcsCredentialType: function() { return /* binding */ CcsCredentialType; }\n/* harmony export */ });\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst CcsCredentialType = {\n    HOME_ACCOUNT_ID: \"home_account_id\",\n    UPN: \"UPN\",\n};\n\n\n//# sourceMappingURL=CcsCredential.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9DY3NDcmVkZW50aWFsLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9hY2NvdW50L0Njc0NyZWRlbnRpYWwubWpzPzE0OTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0Jztcbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY29uc3QgQ2NzQ3JlZGVudGlhbFR5cGUgPSB7XG4gICAgSE9NRV9BQ0NPVU5UX0lEOiBcImhvbWVfYWNjb3VudF9pZFwiLFxuICAgIFVQTjogXCJVUE5cIixcbn07XG5cbmV4cG9ydCB7IENjc0NyZWRlbnRpYWxUeXBlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DY3NDcmVkZW50aWFsLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildClientInfo: function() { return /* binding */ buildClientInfo; },\n/* harmony export */   buildClientInfoFromHomeAccountId: function() { return /* binding */ buildClientInfoFromHomeAccountId; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Function to build a client info object from server clientInfo string\n * @param rawClientInfo\n * @param crypto\n */\nfunction buildClientInfo(rawClientInfo, crypto) {\n    if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(rawClientInfo)) {\n        throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createClientInfoEmptyError();\n    }\n    try {\n        const decodedClientInfo = crypto.base64Decode(rawClientInfo);\n        return JSON.parse(decodedClientInfo);\n    }\n    catch (e) {\n        throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createClientInfoDecodingError(e.message);\n    }\n}\n/**\n * Function to build a client info object from cached homeAccountId string\n * @param homeAccountId\n */\nfunction buildClientInfoFromHomeAccountId(homeAccountId) {\n    if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(homeAccountId)) {\n        throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createClientInfoDecodingError(\"Home account ID was empty.\");\n    }\n    const clientInfoParts = homeAccountId.split(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Separators.CLIENT_INFO_SEPARATOR, 2);\n    return {\n        uid: clientInfoParts[0],\n        utid: clientInfoParts.length < 2\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING\n            : clientInfoParts[1],\n    };\n}\n\n\n//# sourceMappingURL=ClientInfo.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9DbGllbnRJbmZvLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2E7QUFDa0Q7QUFDUjtBQUNROztBQUUvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsK0RBQVc7QUFDbkIsY0FBYyx1RUFBZTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHVFQUFlO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSwrREFBVztBQUNuQixjQUFjLHVFQUFlO0FBQzdCO0FBQ0EsZ0RBQWdELDREQUFVO0FBQzFEO0FBQ0E7QUFDQTtBQUNBLGNBQWMsMkRBQVM7QUFDdkI7QUFDQTtBQUNBOztBQUU2RDtBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9DbGllbnRJbmZvLm1qcz8zNzZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IFN0cmluZ1V0aWxzIH0gZnJvbSAnLi4vdXRpbHMvU3RyaW5nVXRpbHMubWpzJztcbmltcG9ydCB7IFNlcGFyYXRvcnMsIENvbnN0YW50cyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogRnVuY3Rpb24gdG8gYnVpbGQgYSBjbGllbnQgaW5mbyBvYmplY3QgZnJvbSBzZXJ2ZXIgY2xpZW50SW5mbyBzdHJpbmdcbiAqIEBwYXJhbSByYXdDbGllbnRJbmZvXG4gKiBAcGFyYW0gY3J5cHRvXG4gKi9cbmZ1bmN0aW9uIGJ1aWxkQ2xpZW50SW5mbyhyYXdDbGllbnRJbmZvLCBjcnlwdG8pIHtcbiAgICBpZiAoU3RyaW5nVXRpbHMuaXNFbXB0eShyYXdDbGllbnRJbmZvKSkge1xuICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlQ2xpZW50SW5mb0VtcHR5RXJyb3IoKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZGVjb2RlZENsaWVudEluZm8gPSBjcnlwdG8uYmFzZTY0RGVjb2RlKHJhd0NsaWVudEluZm8pO1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShkZWNvZGVkQ2xpZW50SW5mbyk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVDbGllbnRJbmZvRGVjb2RpbmdFcnJvcihlLm1lc3NhZ2UpO1xuICAgIH1cbn1cbi8qKlxuICogRnVuY3Rpb24gdG8gYnVpbGQgYSBjbGllbnQgaW5mbyBvYmplY3QgZnJvbSBjYWNoZWQgaG9tZUFjY291bnRJZCBzdHJpbmdcbiAqIEBwYXJhbSBob21lQWNjb3VudElkXG4gKi9cbmZ1bmN0aW9uIGJ1aWxkQ2xpZW50SW5mb0Zyb21Ib21lQWNjb3VudElkKGhvbWVBY2NvdW50SWQpIHtcbiAgICBpZiAoU3RyaW5nVXRpbHMuaXNFbXB0eShob21lQWNjb3VudElkKSkge1xuICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlQ2xpZW50SW5mb0RlY29kaW5nRXJyb3IoXCJIb21lIGFjY291bnQgSUQgd2FzIGVtcHR5LlwiKTtcbiAgICB9XG4gICAgY29uc3QgY2xpZW50SW5mb1BhcnRzID0gaG9tZUFjY291bnRJZC5zcGxpdChTZXBhcmF0b3JzLkNMSUVOVF9JTkZPX1NFUEFSQVRPUiwgMik7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdWlkOiBjbGllbnRJbmZvUGFydHNbMF0sXG4gICAgICAgIHV0aWQ6IGNsaWVudEluZm9QYXJ0cy5sZW5ndGggPCAyXG4gICAgICAgICAgICA/IENvbnN0YW50cy5FTVBUWV9TVFJJTkdcbiAgICAgICAgICAgIDogY2xpZW50SW5mb1BhcnRzWzFdLFxuICAgIH07XG59XG5cbmV4cG9ydCB7IGJ1aWxkQ2xpZW50SW5mbywgYnVpbGRDbGllbnRJbmZvRnJvbUhvbWVBY2NvdW50SWQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNsaWVudEluZm8ubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/Authority.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/Authority.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Authority: function() { return /* binding */ Authority; }\n/* harmony export */ });\n/* harmony import */ var _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AuthorityType.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\");\n/* harmony import */ var _OpenIdConfigResponse_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./OpenIdConfigResponse.mjs */ \"./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./AuthorityMetadata.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ProtocolMode.mjs */ \"./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _cache_entities_AuthorityMetadataEntity_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../cache/entities/AuthorityMetadataEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/AuthorityMetadataEntity.mjs\");\n/* harmony import */ var _AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./AuthorityOptions.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\");\n/* harmony import */ var _CloudInstanceDiscoveryResponse_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./CloudInstanceDiscoveryResponse.mjs */ \"./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs\");\n/* harmony import */ var _CloudInstanceDiscoveryErrorResponse_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./CloudInstanceDiscoveryErrorResponse.mjs */ \"./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs\");\n/* harmony import */ var _RegionDiscovery_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RegionDiscovery.mjs */ \"./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../error/AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\n * endpoint. It will store the pertinent config data in this object for use during token calls.\n * @internal\n */\nclass Authority {\n    constructor(authority, networkInterface, cacheManager, authorityOptions, logger, performanceClient, correlationId) {\n        this.canonicalAuthority = authority;\n        this._canonicalAuthority.validateAsUri();\n        this.networkInterface = networkInterface;\n        this.cacheManager = cacheManager;\n        this.authorityOptions = authorityOptions;\n        this.regionDiscoveryMetadata = {\n            region_used: undefined,\n            region_source: undefined,\n            region_outcome: undefined,\n        };\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n        this.regionDiscovery = new _RegionDiscovery_mjs__WEBPACK_IMPORTED_MODULE_0__.RegionDiscovery(networkInterface, this.performanceClient, this.correlationId);\n    }\n    /**\n     * Get {@link AuthorityType}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    getAuthorityType(authorityUri) {\n        // CIAM auth url pattern is being standardized as: <tenant>.ciamlogin.com\n        if (authorityUri.HostNameAndPort.endsWith(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.CIAM_AUTH_URL)) {\n            return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Ciam;\n        }\n        const pathSegments = authorityUri.PathSegments;\n        if (pathSegments.length) {\n            switch (pathSegments[0].toLowerCase()) {\n                case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.ADFS:\n                    return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Adfs;\n                case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.DSTS:\n                    return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Dsts;\n            }\n        }\n        return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Default;\n    }\n    // See above for AuthorityType\n    get authorityType() {\n        return this.getAuthorityType(this.canonicalAuthorityUrlComponents);\n    }\n    /**\n     * ProtocolMode enum representing the way endpoints are constructed.\n     */\n    get protocolMode() {\n        return this.authorityOptions.protocolMode;\n    }\n    /**\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\n     */\n    get options() {\n        return this.authorityOptions;\n    }\n    /**\n     * A URL that is the authority set by the developer\n     */\n    get canonicalAuthority() {\n        return this._canonicalAuthority.urlString;\n    }\n    /**\n     * Sets canonical authority.\n     */\n    set canonicalAuthority(url) {\n        this._canonicalAuthority = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(url);\n        this._canonicalAuthority.validateAsUri();\n        this._canonicalAuthorityUrlComponents = null;\n    }\n    /**\n     * Get authority components.\n     */\n    get canonicalAuthorityUrlComponents() {\n        if (!this._canonicalAuthorityUrlComponents) {\n            this._canonicalAuthorityUrlComponents =\n                this._canonicalAuthority.getUrlComponents();\n        }\n        return this._canonicalAuthorityUrlComponents;\n    }\n    /**\n     * Get hostname and port i.e. login.microsoftonline.com\n     */\n    get hostnameAndPort() {\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\n    }\n    /**\n     * Get tenant for authority.\n     */\n    get tenant() {\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\n    }\n    /**\n     * OAuth /authorize endpoint for requests\n     */\n    get authorizationEndpoint() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.authorization_endpoint);\n        }\n        else {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n    /**\n     * OAuth /token endpoint for requests\n     */\n    get tokenEndpoint() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.token_endpoint);\n        }\n        else {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n    get deviceCodeEndpoint() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\"));\n        }\n        else {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n    /**\n     * OAuth logout endpoint for requests\n     */\n    get endSessionEndpoint() {\n        if (this.discoveryComplete()) {\n            // ROPC policies may not have end_session_endpoint set\n            if (!this.metadata.end_session_endpoint) {\n                throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.ClientAuthError.createLogoutNotSupportedError();\n            }\n            return this.replacePath(this.metadata.end_session_endpoint);\n        }\n        else {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n    /**\n     * OAuth issuer for requests\n     */\n    get selfSignedJwtAudience() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.issuer);\n        }\n        else {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n    /**\n     * Jwks_uri for token signing keys\n     */\n    get jwksUri() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.jwks_uri);\n        }\n        else {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n    /**\n     * Returns a flag indicating that tenant name can be replaced in authority {@link IUri}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    canReplaceTenant(authorityUri) {\n        return (authorityUri.PathSegments.length === 1 &&\n            !Authority.reservedTenantDomains.has(authorityUri.PathSegments[0]) &&\n            this.getAuthorityType(authorityUri) === _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Default &&\n            this.protocolMode === _ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_5__.ProtocolMode.AAD);\n    }\n    /**\n     * Replaces tenant in url path with current tenant. Defaults to common.\n     * @param urlString\n     */\n    replaceTenant(urlString) {\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\n    }\n    /**\n     * Replaces path such as tenant or policy with the current tenant or policy.\n     * @param urlString\n     */\n    replacePath(urlString) {\n        let endpoint = urlString;\n        const cachedAuthorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(this.metadata.canonical_authority);\n        const cachedAuthorityUrlComponents = cachedAuthorityUrl.getUrlComponents();\n        const cachedAuthorityParts = cachedAuthorityUrlComponents.PathSegments;\n        const currentAuthorityParts = this.canonicalAuthorityUrlComponents.PathSegments;\n        currentAuthorityParts.forEach((currentPart, index) => {\n            let cachedPart = cachedAuthorityParts[index];\n            if (index === 0 &&\n                this.canReplaceTenant(cachedAuthorityUrlComponents)) {\n                const tenantId = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];\n                /**\n                 * Check if AAD canonical authority contains tenant domain name, for example \"testdomain.onmicrosoft.com\",\n                 * by comparing its first path segment to the corresponding authorization endpoint path segment, which is\n                 * always resolved with tenant id by OIDC.\n                 */\n                if (cachedPart !== tenantId) {\n                    this.logger.verbose(`Replacing tenant domain name ${cachedPart} with id ${tenantId}`);\n                    cachedPart = tenantId;\n                }\n            }\n            if (currentPart !== cachedPart) {\n                endpoint = endpoint.replace(`/${cachedPart}/`, `/${currentPart}/`);\n            }\n        });\n        return this.replaceTenant(endpoint);\n    }\n    /**\n     * The default open id configuration endpoint for any canonical authority.\n     */\n    get defaultOpenIdConfigurationEndpoint() {\n        const canonicalAuthorityHost = this.hostnameAndPort;\n        if (this.authorityType === _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Adfs ||\n            (this.protocolMode !== _ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_5__.ProtocolMode.AAD &&\n                !this.isAliasOfKnownMicrosoftAuthority(canonicalAuthorityHost))) {\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\n        }\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\n    }\n    /**\n     * Boolean that returns whethr or not tenant discovery has been completed.\n     */\n    discoveryComplete() {\n        return !!this.metadata;\n    }\n    /**\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\n     * and the /authorize, /token and logout endpoints.\n     */\n    async resolveEndpointsAsync() {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.AuthorityResolveEndpointsAsync, this.correlationId);\n        let metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\n        if (!metadataEntity) {\n            metadataEntity = new _cache_entities_AuthorityMetadataEntity_mjs__WEBPACK_IMPORTED_MODULE_7__.AuthorityMetadataEntity();\n            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\n        }\n        this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.correlationId);\n        const cloudDiscoverySource = await this.updateCloudDiscoveryMetadata(metadataEntity);\n        this.canonicalAuthority = this.canonicalAuthority.replace(this.hostnameAndPort, metadataEntity.preferred_network);\n        this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.AuthorityUpdateEndpointMetadata, this.correlationId);\n        const endpointSource = await this.updateEndpointMetadata(metadataEntity);\n        if (cloudDiscoverySource !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE &&\n            endpointSource !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE) {\n            // Reset the expiration time unless both values came from a successful cache lookup\n            metadataEntity.resetExpiresAt();\n            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\n        }\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(metadataEntity.preferred_cache);\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\n        this.metadata = metadataEntity;\n    }\n    /**\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\n     * @param metadataEntity\n     */\n    async updateEndpointMetadata(metadataEntity) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.AuthorityUpdateEndpointMetadata, this.correlationId);\n        this.logger.verbose(\"Attempting to get endpoint metadata from authority configuration\");\n        let metadata = this.getEndpointMetadataFromConfig();\n        if (metadata) {\n            this.logger.verbose(\"Found endpoint metadata in authority configuration\");\n            metadataEntity.updateEndpointMetadata(metadata, false);\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CONFIG;\n        }\n        this.logger.verbose(\"Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values.\");\n        // skipAuthorityMetadataCache is used to bypass hardcoded authority metadata and force a network metadata cache lookup and network metadata request if no cached response is available.\n        if (this.authorityOptions.skipAuthorityMetadataCache) {\n            this.logger.verbose(\"Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.\");\n        }\n        else {\n            let hardcodedMetadata = this.getEndpointMetadataFromHardcodedValues();\n            if (hardcodedMetadata) {\n                this.logger.verbose(\"Found endpoint metadata from hardcoded values.\");\n                // If the user prefers to use an azure region replace the global endpoints with regional information.\n                if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                    this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.correlationId);\n                    this.logger.verbose(\"Found azure region configuration. Updating endpoints with regional information.\");\n                    hardcodedMetadata =\n                        await this.updateMetadataWithRegionalInformation(hardcodedMetadata);\n                }\n                metadataEntity.updateEndpointMetadata(hardcodedMetadata, false);\n                return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.HARDCODED_VALUES;\n            }\n            else {\n                this.logger.verbose(\"Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.\");\n            }\n        }\n        // Check cached metadata entity expiration status\n        const metadataEntityExpired = metadataEntity.isExpired();\n        if (this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.endpointsFromNetwork &&\n            !metadataEntityExpired) {\n            // No need to update\n            this.logger.verbose(\"Found endpoint metadata in the cache.\");\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE;\n        }\n        else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n        this.logger.verbose(\"Did not find cached endpoint metadata... Attempting to get endpoint metadata from the network.\");\n        this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.correlationId);\n        metadata = await this.getEndpointMetadataFromNetwork();\n        if (metadata) {\n            this.logger.verbose(\"Endpoint metadata was successfully returned from getEndpointMetadataFromNetwork()\");\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.correlationId);\n                this.logger.verbose(\"Found azure region configuration. Updating endpoints with regional information.\");\n                metadata = await this.updateMetadataWithRegionalInformation(metadata);\n            }\n            metadataEntity.updateEndpointMetadata(metadata, true);\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.NETWORK;\n        }\n        else {\n            // Metadata could not be obtained from the config, cache, network or hardcoded values\n            this.logger.error(\"Did not find endpoint metadata from network... Metadata could not be obtained from config, cache, network or hardcoded values. Throwing Untrusted Authority Error.\");\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.ClientAuthError.createUnableToGetOpenidConfigError(this.defaultOpenIdConfigurationEndpoint);\n        }\n    }\n    /**\n     * Compares the number of url components after the domain to determine if the cached\n     * authority metadata can be used for the requested authority. Protects against same domain different\n     * authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\n     * @param metadataEntity\n     */\n    isAuthoritySameType(metadataEntity) {\n        const cachedAuthorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(metadataEntity.canonical_authority);\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\n        return (cachedParts.length ===\n            this.canonicalAuthorityUrlComponents.PathSegments.length);\n    }\n    /**\n     * Parse authorityMetadata config option\n     */\n    getEndpointMetadataFromConfig() {\n        if (this.authorityOptions.authorityMetadata) {\n            try {\n                return JSON.parse(this.authorityOptions.authorityMetadata);\n            }\n            catch (e) {\n                throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_8__.ClientConfigurationError.createInvalidAuthorityMetadataError();\n            }\n        }\n        return null;\n    }\n    /**\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    async getEndpointMetadataFromNetwork() {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.correlationId);\n        const perfEvent = this.performanceClient?.startMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.correlationId);\n        const options = {};\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n        const openIdConfigurationEndpoint = this.defaultOpenIdConfigurationEndpoint;\n        this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${openIdConfigurationEndpoint}`);\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint, options);\n            const isValidResponse = (0,_OpenIdConfigResponse_mjs__WEBPACK_IMPORTED_MODULE_9__.isOpenIdConfigResponse)(response.body);\n            if (isValidResponse) {\n                perfEvent?.end({ success: true });\n                return response.body;\n            }\n            else {\n                perfEvent?.end({\n                    success: false,\n                    errorCode: \"invalid_response\",\n                });\n                this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration`);\n                return null;\n            }\n        }\n        catch (e) {\n            perfEvent?.end({\n                success: false,\n                errorCode: \"request_failure\",\n            });\n            this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`);\n            return null;\n        }\n    }\n    /**\n     * Get OAuth endpoints for common authorities.\n     */\n    getEndpointMetadataFromHardcodedValues() {\n        if (this.canonicalAuthority in _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_10__.EndpointMetadata) {\n            return _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_10__.EndpointMetadata[this.canonicalAuthority];\n        }\n        return null;\n    }\n    /**\n     * Update the retrieved metadata with regional information.\n     * User selected Azure region will be used if configured.\n     */\n    async updateMetadataWithRegionalInformation(metadata) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.correlationId);\n        const userConfiguredAzureRegion = this.authorityOptions.azureRegionConfiguration?.azureRegion;\n        if (userConfiguredAzureRegion) {\n            if (userConfiguredAzureRegion !==\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.AZURE_REGION_AUTO_DISCOVER_FLAG) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\n                this.regionDiscoveryMetadata.region_used =\n                    userConfiguredAzureRegion;\n                return Authority.replaceWithRegionalInformation(metadata, userConfiguredAzureRegion);\n            }\n            this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.RegionDiscoveryDetectRegion, this.correlationId);\n            const autodetectedRegionName = await this.regionDiscovery.detectRegion(this.authorityOptions.azureRegionConfiguration\n                ?.environmentRegion, this.regionDiscoveryMetadata);\n            if (autodetectedRegionName) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL;\n                this.regionDiscoveryMetadata.region_used =\n                    autodetectedRegionName;\n                return Authority.replaceWithRegionalInformation(metadata, autodetectedRegionName);\n            }\n            this.regionDiscoveryMetadata.region_outcome =\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\n        }\n        return metadata;\n    }\n    /**\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache\n     * and returns where the information was retrieved from\n     * @param metadataEntity\n     * @returns AuthorityMetadataSource\n     */\n    async updateCloudDiscoveryMetadata(metadataEntity) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.correlationId);\n        this.logger.verbose(\"Attempting to get cloud discovery metadata  from authority configuration\");\n        this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities ||\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.NOT_APPLICABLE}`);\n        this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata ||\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.NOT_APPLICABLE}`);\n        this.logger.verbosePii(`Canonical Authority: ${metadataEntity.canonical_authority || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.NOT_APPLICABLE}`);\n        let metadata = this.getCloudDiscoveryMetadataFromConfig();\n        if (metadata) {\n            this.logger.verbose(\"Found cloud discovery metadata in authority configuration\");\n            metadataEntity.updateCloudDiscoveryMetadata(metadata, false);\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CONFIG;\n        }\n        // If the cached metadata came from config but that config was not passed to this instance, we must go to hardcoded values\n        this.logger.verbose(\"Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values.\");\n        if (this.options.skipAuthorityMetadataCache) {\n            this.logger.verbose(\"Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.\");\n        }\n        else {\n            const hardcodedMetadata = this.getCloudDiscoveryMetadataFromHardcodedValues();\n            if (hardcodedMetadata) {\n                this.logger.verbose(\"Found cloud discovery metadata from hardcoded values.\");\n                metadataEntity.updateCloudDiscoveryMetadata(hardcodedMetadata, false);\n                return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.HARDCODED_VALUES;\n            }\n            this.logger.verbose(\"Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.\");\n        }\n        const metadataEntityExpired = metadataEntity.isExpired();\n        if (this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.aliasesFromNetwork &&\n            !metadataEntityExpired) {\n            this.logger.verbose(\"Found cloud discovery metadata in the cache.\");\n            // No need to update\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE;\n        }\n        else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n        this.logger.verbose(\"Did not find cloud discovery metadata in the cache... Attempting to get cloud discovery metadata from the network.\");\n        this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.correlationId);\n        metadata = await this.getCloudDiscoveryMetadataFromNetwork();\n        if (metadata) {\n            this.logger.verbose(\"cloud discovery metadata was successfully returned from getCloudDiscoveryMetadataFromNetwork()\");\n            metadataEntity.updateCloudDiscoveryMetadata(metadata, true);\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.NETWORK;\n        }\n        // Metadata could not be obtained from the config, cache, network or hardcoded values\n        this.logger.error(\"Did not find cloud discovery metadata from network... Metadata could not be obtained from config, cache, network or hardcoded values. Throwing Untrusted Authority Error.\");\n        throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_8__.ClientConfigurationError.createUntrustedAuthorityError();\n    }\n    /**\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\n     */\n    getCloudDiscoveryMetadataFromConfig() {\n        // CIAM does not support cloud discovery metadata\n        if (this.authorityType === _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Ciam) {\n            this.logger.verbose(\"CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host.\");\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n        // Check if network response was provided in config\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\n            this.logger.verbose(\"The cloud discovery metadata has been provided as a network response, in the config.\");\n            try {\n                this.logger.verbose(\"Attempting to parse the cloud discovery metadata.\");\n                const parsedResponse = JSON.parse(this.authorityOptions.cloudDiscoveryMetadata);\n                const metadata = Authority.getCloudDiscoveryMetadataFromNetworkResponse(parsedResponse.metadata, this.hostnameAndPort);\n                this.logger.verbose(\"Parsed the cloud discovery metadata.\");\n                if (metadata) {\n                    this.logger.verbose(\"There is returnable metadata attached to the parsed cloud discovery metadata.\");\n                    return metadata;\n                }\n                else {\n                    this.logger.verbose(\"There is no metadata attached to the parsed cloud discovery metadata.\");\n                }\n            }\n            catch (e) {\n                this.logger.verbose(\"Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error.\");\n                throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_8__.ClientConfigurationError.createInvalidCloudDiscoveryMetadataError();\n            }\n        }\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\n        if (this.isInKnownAuthorities()) {\n            this.logger.verbose(\"The host is included in knownAuthorities. Creating new cloud discovery metadata from the host.\");\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n        return null;\n    }\n    /**\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    async getCloudDiscoveryMetadataFromNetwork() {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.correlationId);\n        const instanceDiscoveryEndpoint = `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\n        const options = {};\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n        let match = null;\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint, options);\n            let typedResponseBody;\n            let metadata;\n            if ((0,_CloudInstanceDiscoveryResponse_mjs__WEBPACK_IMPORTED_MODULE_11__.isCloudInstanceDiscoveryResponse)(response.body)) {\n                typedResponseBody =\n                    response.body;\n                metadata = typedResponseBody.metadata;\n                this.logger.verbosePii(`tenant_discovery_endpoint is: ${typedResponseBody.tenant_discovery_endpoint}`);\n            }\n            else if ((0,_CloudInstanceDiscoveryErrorResponse_mjs__WEBPACK_IMPORTED_MODULE_12__.isCloudInstanceDiscoveryErrorResponse)(response.body)) {\n                this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${response.status}`);\n                typedResponseBody =\n                    response.body;\n                if (typedResponseBody.error === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.INVALID_INSTANCE) {\n                    this.logger.error(\"The CloudInstanceDiscoveryErrorResponse error is invalid_instance.\");\n                    return null;\n                }\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${typedResponseBody.error}`);\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${typedResponseBody.error_description}`);\n                this.logger.warning(\"Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []\");\n                metadata = [];\n            }\n            else {\n                this.logger.error(\"AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse\");\n                return null;\n            }\n            this.logger.verbose(\"Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request.\");\n            match = Authority.getCloudDiscoveryMetadataFromNetworkResponse(metadata, this.hostnameAndPort);\n        }\n        catch (error) {\n            if (error instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.AuthError) {\n                this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\\nError: ${error.errorCode}\\nError Description: ${error.errorMessage}`);\n            }\n            else {\n                const typedError = error;\n                this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\\nError: ${typedError.name}\\nError Description: ${typedError.message}`);\n            }\n            return null;\n        }\n        // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\n        if (!match) {\n            this.logger.warning(\"The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request.\");\n            this.logger.verbose(\"Creating custom Authority for custom domain scenario.\");\n            match = Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n        return match;\n    }\n    /**\n     * Get cloud discovery metadata for common authorities\n     */\n    getCloudDiscoveryMetadataFromHardcodedValues() {\n        if (this.canonicalAuthority in _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_10__.InstanceDiscoveryMetadata) {\n            const hardcodedMetadataResponse = _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_10__.InstanceDiscoveryMetadata[this.canonicalAuthority];\n            const metadata = Authority.getCloudDiscoveryMetadataFromNetworkResponse(hardcodedMetadataResponse.metadata, this.hostnameAndPort);\n            return metadata;\n        }\n        return null;\n    }\n    /**\n     * Helper function to determine if this host is included in the knownAuthorities config option\n     */\n    isInKnownAuthorities() {\n        const matches = this.authorityOptions.knownAuthorities.filter((authority) => {\n            return (_url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.getDomainFromUrl(authority).toLowerCase() ===\n                this.hostnameAndPort);\n        });\n        return matches.length > 0;\n    }\n    /**\n     * helper function to populate the authority based on azureCloudOptions\n     * @param authorityString\n     * @param azureCloudOptions\n     */\n    static generateAuthority(authorityString, azureCloudOptions) {\n        let authorityAzureCloudInstance;\n        if (azureCloudOptions &&\n            azureCloudOptions.azureCloudInstance !== _AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_14__.AzureCloudInstance.None) {\n            const tenant = azureCloudOptions.tenant\n                ? azureCloudOptions.tenant\n                : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.DEFAULT_COMMON_TENANT;\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\n        }\n        return authorityAzureCloudInstance\n            ? authorityAzureCloudInstance\n            : authorityString;\n    }\n    /**\n     * Creates cloud discovery metadata object from a given host\n     * @param host\n     */\n    static createCloudDiscoveryMetadataFromHost(host) {\n        return {\n            preferred_network: host,\n            preferred_cache: host,\n            aliases: [host],\n        };\n    }\n    /**\n     * Searches instance discovery network response for the entry that contains the host in the aliases list\n     * @param response\n     * @param authority\n     */\n    static getCloudDiscoveryMetadataFromNetworkResponse(response, authority) {\n        for (let i = 0; i < response.length; i++) {\n            const metadata = response[i];\n            if (metadata.aliases.indexOf(authority) > -1) {\n                return metadata;\n            }\n        }\n        return null;\n    }\n    /**\n     * helper function to generate environment from authority object\n     */\n    getPreferredCache() {\n        if (this.discoveryComplete()) {\n            return this.metadata.preferred_cache;\n        }\n        else {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n    /**\n     * Returns whether or not the provided host is an alias of this authority instance\n     * @param host\n     */\n    isAlias(host) {\n        return this.metadata.aliases.indexOf(host) > -1;\n    }\n    /**\n     * Returns whether or not the provided host is an alias of a known Microsoft authority for purposes of endpoint discovery\n     * @param host\n     */\n    isAliasOfKnownMicrosoftAuthority(host) {\n        return _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_10__.InstanceDiscoveryMetadataAliases.has(host);\n    }\n    /**\n     * Checks whether the provided host is that of a public cloud authority\n     *\n     * @param authority string\n     * @returns bool\n     */\n    static isPublicCloudAuthority(host) {\n        return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\n    }\n    /**\n     * Rebuild the authority string with the region\n     *\n     * @param host string\n     * @param region string\n     */\n    static buildRegionalAuthorityString(host, region, queryString) {\n        // Create and validate a Url string object with the initial authority string\n        const authorityUrlInstance = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(host);\n        authorityUrlInstance.validateAsUri();\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\n        let hostNameAndPort = `${region}.${authorityUrlParts.HostNameAndPort}`;\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\n            hostNameAndPort = `${region}.${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\n        }\n        // Include the query string portion of the url\n        const url = _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.constructAuthorityUriFromObject({\n            ...authorityUrlInstance.getUrlComponents(),\n            HostNameAndPort: hostNameAndPort,\n        }).urlString;\n        // Add the query string if a query string was provided\n        if (queryString)\n            return `${url}?${queryString}`;\n        return url;\n    }\n    /**\n     * Replace the endpoints in the metadata object with their regional equivalents.\n     *\n     * @param metadata OpenIdConfigResponse\n     * @param azureRegion string\n     */\n    static replaceWithRegionalInformation(metadata, azureRegion) {\n        const regionalMetadata = { ...metadata };\n        regionalMetadata.authorization_endpoint =\n            Authority.buildRegionalAuthorityString(regionalMetadata.authorization_endpoint, azureRegion);\n        // TODO: Enquire on whether we should leave the query string or remove it before releasing the feature\n        regionalMetadata.token_endpoint =\n            Authority.buildRegionalAuthorityString(regionalMetadata.token_endpoint, azureRegion, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.REGIONAL_AUTH_NON_MSI_QUERY_STRING);\n        if (regionalMetadata.end_session_endpoint) {\n            regionalMetadata.end_session_endpoint =\n                Authority.buildRegionalAuthorityString(regionalMetadata.end_session_endpoint, azureRegion);\n        }\n        return regionalMetadata;\n    }\n    /**\n     * Transform CIAM_AUTHORIY as per the below rules:\n     * If no path segments found and it is a CIAM authority (hostname ends with .ciamlogin.com), then transform it\n     *\n     * NOTE: The transformation path should go away once STS supports CIAM with the format: `tenantIdorDomain.ciamlogin.com`\n     * `ciamlogin.com` can also change in the future and we should accommodate the same\n     *\n     * @param authority\n     */\n    static transformCIAMAuthority(authority) {\n        let ciamAuthority = authority.endsWith(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.FORWARD_SLASH)\n            ? authority\n            : `${authority}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.FORWARD_SLASH}`;\n        const authorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(authority);\n        const authorityUrlComponents = authorityUrl.getUrlComponents();\n        // check if transformation is needed\n        if (authorityUrlComponents.PathSegments.length === 0 &&\n            authorityUrlComponents.HostNameAndPort.endsWith(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.CIAM_AUTH_URL)) {\n            const tenantIdOrDomain = authorityUrlComponents.HostNameAndPort.split(\".\")[0];\n            ciamAuthority = `${ciamAuthority}${tenantIdOrDomain}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.AAD_TENANT_DOMAIN_SUFFIX}`;\n        }\n        return ciamAuthority;\n    }\n}\n// Reserved tenant domain names that will not be replaced with tenant id\nAuthority.reservedTenantDomains = new Set([\n    \"{tenant}\",\n    \"{tenantid}\",\n    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.COMMON,\n    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.CONSUMERS,\n    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.ORGANIZATIONS,\n]);\n\n\n//# sourceMappingURL=Authority.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/Authority.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthorityFactory: function() { return /* binding */ AuthorityFactory; }\n/* harmony export */ });\n/* harmony import */ var _Authority_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Authority.mjs */ \"./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass AuthorityFactory {\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Also performs endpoint discovery.\n     *\n     * @param authorityUri\n     * @param networkClient\n     * @param protocolMode\n     */\n    static async createDiscoveredInstance(authorityUri, networkClient, cacheManager, authorityOptions, logger, performanceClient, correlationId) {\n        performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, correlationId);\n        const authorityUriFinal = _Authority_mjs__WEBPACK_IMPORTED_MODULE_1__.Authority.transformCIAMAuthority(authorityUri);\n        // Initialize authority and perform discovery endpoint check.\n        const acquireTokenAuthority = AuthorityFactory.createInstance(authorityUriFinal, networkClient, cacheManager, authorityOptions, logger, performanceClient, correlationId);\n        try {\n            performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.AuthorityResolveEndpointsAsync, correlationId);\n            await acquireTokenAuthority.resolveEndpointsAsync();\n            return acquireTokenAuthority;\n        }\n        catch (e) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.ClientAuthError.createEndpointDiscoveryIncompleteError(e);\n        }\n    }\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Does not perform endpoint discovery.\n     *\n     * @param authorityUrl\n     * @param networkInterface\n     * @param protocolMode\n     */\n    static createInstance(authorityUrl, networkInterface, cacheManager, authorityOptions, logger, performanceClient, correlationId) {\n        // Throw error if authority url is empty\n        if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.StringUtils.isEmpty(authorityUrl)) {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_4__.ClientConfigurationError.createUrlEmptyError();\n        }\n        return new _Authority_mjs__WEBPACK_IMPORTED_MODULE_1__.Authority(authorityUrl, networkInterface, cacheManager, authorityOptions, logger, performanceClient, correlationId);\n    }\n}\n\n\n//# sourceMappingURL=AuthorityFactory.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eUZhY3RvcnkubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDK0I7QUFDcUM7QUFDMUI7QUFDUTtBQUNtQjs7QUFFbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQywwRkFBaUI7QUFDaEUsa0NBQWtDLHFEQUFTO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLCtDQUErQywwRkFBaUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsdUVBQWU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksK0RBQVc7QUFDdkIsa0JBQWtCLHlGQUF3QjtBQUMxQztBQUNBLG1CQUFtQixxREFBUztBQUM1QjtBQUNBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eUZhY3RvcnkubWpzPzFlZmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEF1dGhvcml0eSB9IGZyb20gJy4vQXV0aG9yaXR5Lm1qcyc7XG5pbXBvcnQgeyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRDb25maWd1cmF0aW9uRXJyb3IubWpzJztcbmltcG9ydCB7IFN0cmluZ1V0aWxzIH0gZnJvbSAnLi4vdXRpbHMvU3RyaW5nVXRpbHMubWpzJztcbmltcG9ydCB7IENsaWVudEF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgUGVyZm9ybWFuY2VFdmVudHMgfSBmcm9tICcuLi90ZWxlbWV0cnkvcGVyZm9ybWFuY2UvUGVyZm9ybWFuY2VFdmVudC5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKiBAaW50ZXJuYWwgKi9cbmNsYXNzIEF1dGhvcml0eUZhY3Rvcnkge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhbiBhdXRob3JpdHkgb2JqZWN0IG9mIHRoZSBjb3JyZWN0IHR5cGUgYmFzZWQgb24gdGhlIHVybFxuICAgICAqIFBlcmZvcm1zIGJhc2ljIGF1dGhvcml0eSB2YWxpZGF0aW9uIC0gY2hlY2tzIHRvIHNlZSBpZiB0aGUgYXV0aG9yaXR5IGlzIG9mIGEgdmFsaWQgdHlwZSAoaS5lLiBhYWQsIGIyYywgYWRmcylcbiAgICAgKlxuICAgICAqIEFsc28gcGVyZm9ybXMgZW5kcG9pbnQgZGlzY292ZXJ5LlxuICAgICAqXG4gICAgICogQHBhcmFtIGF1dGhvcml0eVVyaVxuICAgICAqIEBwYXJhbSBuZXR3b3JrQ2xpZW50XG4gICAgICogQHBhcmFtIHByb3RvY29sTW9kZVxuICAgICAqL1xuICAgIHN0YXRpYyBhc3luYyBjcmVhdGVEaXNjb3ZlcmVkSW5zdGFuY2UoYXV0aG9yaXR5VXJpLCBuZXR3b3JrQ2xpZW50LCBjYWNoZU1hbmFnZXIsIGF1dGhvcml0eU9wdGlvbnMsIGxvZ2dlciwgcGVyZm9ybWFuY2VDbGllbnQsIGNvcnJlbGF0aW9uSWQpIHtcbiAgICAgICAgcGVyZm9ybWFuY2VDbGllbnQ/LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuQXV0aG9yaXR5RmFjdG9yeUNyZWF0ZURpc2NvdmVyZWRJbnN0YW5jZSwgY29ycmVsYXRpb25JZCk7XG4gICAgICAgIGNvbnN0IGF1dGhvcml0eVVyaUZpbmFsID0gQXV0aG9yaXR5LnRyYW5zZm9ybUNJQU1BdXRob3JpdHkoYXV0aG9yaXR5VXJpKTtcbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBhdXRob3JpdHkgYW5kIHBlcmZvcm0gZGlzY292ZXJ5IGVuZHBvaW50IGNoZWNrLlxuICAgICAgICBjb25zdCBhY3F1aXJlVG9rZW5BdXRob3JpdHkgPSBBdXRob3JpdHlGYWN0b3J5LmNyZWF0ZUluc3RhbmNlKGF1dGhvcml0eVVyaUZpbmFsLCBuZXR3b3JrQ2xpZW50LCBjYWNoZU1hbmFnZXIsIGF1dGhvcml0eU9wdGlvbnMsIGxvZ2dlciwgcGVyZm9ybWFuY2VDbGllbnQsIGNvcnJlbGF0aW9uSWQpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcGVyZm9ybWFuY2VDbGllbnQ/LnNldFByZVF1ZXVlVGltZShQZXJmb3JtYW5jZUV2ZW50cy5BdXRob3JpdHlSZXNvbHZlRW5kcG9pbnRzQXN5bmMsIGNvcnJlbGF0aW9uSWQpO1xuICAgICAgICAgICAgYXdhaXQgYWNxdWlyZVRva2VuQXV0aG9yaXR5LnJlc29sdmVFbmRwb2ludHNBc3luYygpO1xuICAgICAgICAgICAgcmV0dXJuIGFjcXVpcmVUb2tlbkF1dGhvcml0eTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgdGhyb3cgQ2xpZW50QXV0aEVycm9yLmNyZWF0ZUVuZHBvaW50RGlzY292ZXJ5SW5jb21wbGV0ZUVycm9yKGUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhbiBhdXRob3JpdHkgb2JqZWN0IG9mIHRoZSBjb3JyZWN0IHR5cGUgYmFzZWQgb24gdGhlIHVybFxuICAgICAqIFBlcmZvcm1zIGJhc2ljIGF1dGhvcml0eSB2YWxpZGF0aW9uIC0gY2hlY2tzIHRvIHNlZSBpZiB0aGUgYXV0aG9yaXR5IGlzIG9mIGEgdmFsaWQgdHlwZSAoaS5lLiBhYWQsIGIyYywgYWRmcylcbiAgICAgKlxuICAgICAqIERvZXMgbm90IHBlcmZvcm0gZW5kcG9pbnQgZGlzY292ZXJ5LlxuICAgICAqXG4gICAgICogQHBhcmFtIGF1dGhvcml0eVVybFxuICAgICAqIEBwYXJhbSBuZXR3b3JrSW50ZXJmYWNlXG4gICAgICogQHBhcmFtIHByb3RvY29sTW9kZVxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVJbnN0YW5jZShhdXRob3JpdHlVcmwsIG5ldHdvcmtJbnRlcmZhY2UsIGNhY2hlTWFuYWdlciwgYXV0aG9yaXR5T3B0aW9ucywgbG9nZ2VyLCBwZXJmb3JtYW5jZUNsaWVudCwgY29ycmVsYXRpb25JZCkge1xuICAgICAgICAvLyBUaHJvdyBlcnJvciBpZiBhdXRob3JpdHkgdXJsIGlzIGVtcHR5XG4gICAgICAgIGlmIChTdHJpbmdVdGlscy5pc0VtcHR5KGF1dGhvcml0eVVybCkpIHtcbiAgICAgICAgICAgIHRocm93IENsaWVudENvbmZpZ3VyYXRpb25FcnJvci5jcmVhdGVVcmxFbXB0eUVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBBdXRob3JpdHkoYXV0aG9yaXR5VXJsLCBuZXR3b3JrSW50ZXJmYWNlLCBjYWNoZU1hbmFnZXIsIGF1dGhvcml0eU9wdGlvbnMsIGxvZ2dlciwgcGVyZm9ybWFuY2VDbGllbnQsIGNvcnJlbGF0aW9uSWQpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgQXV0aG9yaXR5RmFjdG9yeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aG9yaXR5RmFjdG9yeS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EndpointMetadata: function() { return /* binding */ EndpointMetadata; },\n/* harmony export */   InstanceDiscoveryMetadata: function() { return /* binding */ InstanceDiscoveryMetadata; },\n/* harmony export */   InstanceDiscoveryMetadataAliases: function() { return /* binding */ InstanceDiscoveryMetadataAliases; },\n/* harmony export */   rawMetdataJSON: function() { return /* binding */ rawMetdataJSON; }\n/* harmony export */ });\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst rawMetdataJSON = {\n    endpointMetadata: {\n        \"https://login.microsoftonline.com/common/\": {\n            token_endpoint: \"https://login.microsoftonline.com/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.com/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.com/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.com/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.com/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/common/\": {\n            token_endpoint: \"https://login.chinacloudapi.cn/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.chinacloudapi.cn/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint: \"https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.chinacloudapi.cn/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.chinacloudapi.cn/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.chinacloudapi.cn/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/common/\": {\n            token_endpoint: \"https://login.microsoftonline.us/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.us/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.us/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.us/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.us/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.us/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n        \"https://login.microsoftonline.com/consumers/\": {\n            token_endpoint: \"https://login.microsoftonline.com/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.com/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.com/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.com/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.com/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/consumers/\": {\n            token_endpoint: \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.chinacloudapi.cn/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint: \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.chinacloudapi.cn/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/consumers/\": {\n            token_endpoint: \"https://login.microsoftonline.us/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.us/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.us/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.us/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.us/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.us/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n        \"https://login.microsoftonline.com/organizations/\": {\n            token_endpoint: \"https://login.microsoftonline.com/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.com/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.com/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.com/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.com/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/organizations/\": {\n            token_endpoint: \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.chinacloudapi.cn/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint: \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.chinacloudapi.cn/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/organizations/\": {\n            token_endpoint: \"https://login.microsoftonline.us/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.us/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.us/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.us/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.us/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.us/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n    },\n    instanceDiscoveryMetadata: {\n        \"https://login.microsoftonline.com/common/\": {\n            tenant_discovery_endpoint: \"https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.chinacloudapi.cn/common/\": {\n            tenant_discovery_endpoint: \"https://login.chinacloudapi.cn/common/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.us/common/\": {\n            tenant_discovery_endpoint: \"https://login.microsoftonline.us/common/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.com/consumers/\": {\n            tenant_discovery_endpoint: \"https://login.microsoftonline.com/consumers/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.chinacloudapi.cn/consumers/\": {\n            tenant_discovery_endpoint: \"https://login.chinacloudapi.cn/consumers/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.us/consumers/\": {\n            tenant_discovery_endpoint: \"https://login.microsoftonline.us/consumers/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.com/organizations/\": {\n            tenant_discovery_endpoint: \"https://login.microsoftonline.com/organizations/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.chinacloudapi.cn/organizations/\": {\n            tenant_discovery_endpoint: \"https://login.chinacloudapi.cn/organizations/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.us/organizations/\": {\n            tenant_discovery_endpoint: \"https://login.microsoftonline.us/organizations/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n    },\n};\nconst EndpointMetadata = rawMetdataJSON.endpointMetadata;\nconst InstanceDiscoveryMetadata = rawMetdataJSON.instanceDiscoveryMetadata;\nconst InstanceDiscoveryMetadataAliases = new Set();\nfor (const key in InstanceDiscoveryMetadata) {\n    for (const metadata of InstanceDiscoveryMetadata[key].metadata) {\n        for (const alias of metadata.aliases) {\n            InstanceDiscoveryMetadataAliases.add(alias);\n        }\n    }\n}\n\n\n//# sourceMappingURL=AuthorityMetadata.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureCloudInstance: function() { return /* binding */ AzureCloudInstance; }\n/* harmony export */ });\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst AzureCloudInstance = {\n    // AzureCloudInstance is not specified.\n    None: \"none\",\n    // Microsoft Azure public cloud\n    AzurePublic: \"https://login.microsoftonline.com\",\n    // Microsoft PPE\n    AzurePpe: \"https://login.windows-ppe.net\",\n    // Microsoft Chinese national/regional cloud\n    AzureChina: \"https://login.chinacloudapi.cn\",\n    // Microsoft German national/regional cloud (\"Black Forest\")\n    AzureGermany: \"https://login.microsoftonline.de\",\n    // US Government cloud\n    AzureUsGovernment: \"https://login.microsoftonline.us\",\n};\n\n\n//# sourceMappingURL=AuthorityOptions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eU9wdGlvbnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eU9wdGlvbnMubWpzPzY1NWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0Jztcbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY29uc3QgQXp1cmVDbG91ZEluc3RhbmNlID0ge1xuICAgIC8vIEF6dXJlQ2xvdWRJbnN0YW5jZSBpcyBub3Qgc3BlY2lmaWVkLlxuICAgIE5vbmU6IFwibm9uZVwiLFxuICAgIC8vIE1pY3Jvc29mdCBBenVyZSBwdWJsaWMgY2xvdWRcbiAgICBBenVyZVB1YmxpYzogXCJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb21cIixcbiAgICAvLyBNaWNyb3NvZnQgUFBFXG4gICAgQXp1cmVQcGU6IFwiaHR0cHM6Ly9sb2dpbi53aW5kb3dzLXBwZS5uZXRcIixcbiAgICAvLyBNaWNyb3NvZnQgQ2hpbmVzZSBuYXRpb25hbC9yZWdpb25hbCBjbG91ZFxuICAgIEF6dXJlQ2hpbmE6IFwiaHR0cHM6Ly9sb2dpbi5jaGluYWNsb3VkYXBpLmNuXCIsXG4gICAgLy8gTWljcm9zb2Z0IEdlcm1hbiBuYXRpb25hbC9yZWdpb25hbCBjbG91ZCAoXCJCbGFjayBGb3Jlc3RcIilcbiAgICBBenVyZUdlcm1hbnk6IFwiaHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUuZGVcIixcbiAgICAvLyBVUyBHb3Zlcm5tZW50IGNsb3VkXG4gICAgQXp1cmVVc0dvdmVybm1lbnQ6IFwiaHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUudXNcIixcbn07XG5cbmV4cG9ydCB7IEF6dXJlQ2xvdWRJbnN0YW5jZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aG9yaXR5T3B0aW9ucy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthorityType: function() { return /* binding */ AuthorityType; }\n/* harmony export */ });\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Authority types supported by MSAL.\n */\nconst AuthorityType = {\n    Default: 0,\n    Adfs: 1,\n    Dsts: 2,\n    Ciam: 3,\n};\n\n\n//# sourceMappingURL=AuthorityType.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eVR5cGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9hdXRob3JpdHkvQXV0aG9yaXR5VHlwZS5tanM/NjUxOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIEF1dGhvcml0eSB0eXBlcyBzdXBwb3J0ZWQgYnkgTVNBTC5cbiAqL1xuY29uc3QgQXV0aG9yaXR5VHlwZSA9IHtcbiAgICBEZWZhdWx0OiAwLFxuICAgIEFkZnM6IDEsXG4gICAgRHN0czogMixcbiAgICBDaWFtOiAzLFxufTtcblxuZXhwb3J0IHsgQXV0aG9yaXR5VHlwZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aG9yaXR5VHlwZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCloudInstanceDiscoveryErrorResponse: function() { return /* binding */ isCloudInstanceDiscoveryErrorResponse; }\n/* harmony export */ });\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isCloudInstanceDiscoveryErrorResponse(response) {\n    return (response.hasOwnProperty(\"error\") &&\n        response.hasOwnProperty(\"error_description\"));\n}\n\n\n//# sourceMappingURL=CloudInstanceDiscoveryErrorResponse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlFcnJvclJlc3BvbnNlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlEO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9hdXRob3JpdHkvQ2xvdWRJbnN0YW5jZURpc2NvdmVyeUVycm9yUmVzcG9uc2UubWpzPzI5MTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0Jztcbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuZnVuY3Rpb24gaXNDbG91ZEluc3RhbmNlRGlzY292ZXJ5RXJyb3JSZXNwb25zZShyZXNwb25zZSkge1xuICAgIHJldHVybiAocmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJlcnJvclwiKSAmJlxuICAgICAgICByZXNwb25zZS5oYXNPd25Qcm9wZXJ0eShcImVycm9yX2Rlc2NyaXB0aW9uXCIpKTtcbn1cblxuZXhwb3J0IHsgaXNDbG91ZEluc3RhbmNlRGlzY292ZXJ5RXJyb3JSZXNwb25zZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2xvdWRJbnN0YW5jZURpc2NvdmVyeUVycm9yUmVzcG9uc2UubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCloudInstanceDiscoveryResponse: function() { return /* binding */ isCloudInstanceDiscoveryResponse; }\n/* harmony export */ });\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isCloudInstanceDiscoveryResponse(response) {\n    return (response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\n        response.hasOwnProperty(\"metadata\"));\n}\n\n\n//# sourceMappingURL=CloudInstanceDiscoveryResponse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlSZXNwb25zZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0QztBQUM1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlSZXNwb25zZS5tanM/YzNkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5mdW5jdGlvbiBpc0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlSZXNwb25zZShyZXNwb25zZSkge1xuICAgIHJldHVybiAocmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJ0ZW5hbnRfZGlzY292ZXJ5X2VuZHBvaW50XCIpICYmXG4gICAgICAgIHJlc3BvbnNlLmhhc093blByb3BlcnR5KFwibWV0YWRhdGFcIikpO1xufVxuXG5leHBvcnQgeyBpc0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlSZXNwb25zZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2xvdWRJbnN0YW5jZURpc2NvdmVyeVJlc3BvbnNlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isOpenIdConfigResponse: function() { return /* binding */ isOpenIdConfigResponse; }\n/* harmony export */ });\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isOpenIdConfigResponse(response) {\n    return (response.hasOwnProperty(\"authorization_endpoint\") &&\n        response.hasOwnProperty(\"token_endpoint\") &&\n        response.hasOwnProperty(\"issuer\") &&\n        response.hasOwnProperty(\"jwks_uri\"));\n}\n\n\n//# sourceMappingURL=OpenIdConfigResponse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L09wZW5JZENvbmZpZ1Jlc3BvbnNlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L09wZW5JZENvbmZpZ1Jlc3BvbnNlLm1qcz9lODU1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmZ1bmN0aW9uIGlzT3BlbklkQ29uZmlnUmVzcG9uc2UocmVzcG9uc2UpIHtcbiAgICByZXR1cm4gKHJlc3BvbnNlLmhhc093blByb3BlcnR5KFwiYXV0aG9yaXphdGlvbl9lbmRwb2ludFwiKSAmJlxuICAgICAgICByZXNwb25zZS5oYXNPd25Qcm9wZXJ0eShcInRva2VuX2VuZHBvaW50XCIpICYmXG4gICAgICAgIHJlc3BvbnNlLmhhc093blByb3BlcnR5KFwiaXNzdWVyXCIpICYmXG4gICAgICAgIHJlc3BvbnNlLmhhc093blByb3BlcnR5KFwiandrc191cmlcIikpO1xufVxuXG5leHBvcnQgeyBpc09wZW5JZENvbmZpZ1Jlc3BvbnNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PcGVuSWRDb25maWdSZXNwb25zZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtocolMode: function() { return /* binding */ ProtocolMode; }\n/* harmony export */ });\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Protocol modes supported by MSAL.\n */\nconst ProtocolMode = {\n    AAD: \"AAD\",\n    OIDC: \"OIDC\",\n};\n\n\n//# sourceMappingURL=ProtocolMode.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L1Byb3RvY29sTW9kZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L1Byb3RvY29sTW9kZS5tanM/ZGE4YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIFByb3RvY29sIG1vZGVzIHN1cHBvcnRlZCBieSBNU0FMLlxuICovXG5jb25zdCBQcm90b2NvbE1vZGUgPSB7XG4gICAgQUFEOiBcIkFBRFwiLFxuICAgIE9JREM6IFwiT0lEQ1wiLFxufTtcblxuZXhwb3J0IHsgUHJvdG9jb2xNb2RlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qcm90b2NvbE1vZGUubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RegionDiscovery: function() { return /* binding */ RegionDiscovery; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass RegionDiscovery {\n    constructor(networkInterface, performanceClient, correlationId) {\n        this.networkInterface = networkInterface;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n    }\n    /**\n     * Detect the region from the application's environment.\n     *\n     * @returns Promise<string | null>\n     */\n    async detectRegion(environmentRegion, regionDiscoveryMetadata) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryDetectRegion, this.correlationId);\n        // Initialize auto detected region with the region from the envrionment\n        let autodetectedRegionName = environmentRegion;\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS\n        if (!autodetectedRegionName) {\n            const options = RegionDiscovery.IMDS_OPTIONS;\n            try {\n                this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.correlationId);\n                const localIMDSVersionResponse = await this.getRegionFromIMDS(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.IMDS_VERSION, options);\n                if (localIMDSVersionResponse.status ===\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ResponseCodes.httpSuccess) {\n                    autodetectedRegionName = localIMDSVersionResponse.body;\n                    regionDiscoveryMetadata.region_source =\n                        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoverySources.IMDS;\n                }\n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry.\n                if (localIMDSVersionResponse.status ===\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ResponseCodes.httpBadRequest) {\n                    this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.correlationId);\n                    const currentIMDSVersion = await this.getCurrentVersion(options);\n                    if (!currentIMDSVersion) {\n                        regionDiscoveryMetadata.region_source =\n                            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                        return null;\n                    }\n                    this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.correlationId);\n                    const currentIMDSVersionResponse = await this.getRegionFromIMDS(currentIMDSVersion, options);\n                    if (currentIMDSVersionResponse.status ===\n                        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ResponseCodes.httpSuccess) {\n                        autodetectedRegionName =\n                            currentIMDSVersionResponse.body;\n                        regionDiscoveryMetadata.region_source =\n                            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoverySources.IMDS;\n                    }\n                }\n            }\n            catch (e) {\n                regionDiscoveryMetadata.region_source =\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                return null;\n            }\n        }\n        else {\n            regionDiscoveryMetadata.region_source =\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoverySources.ENVIRONMENT_VARIABLE;\n        }\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\n        if (!autodetectedRegionName) {\n            regionDiscoveryMetadata.region_source =\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoverySources.FAILED_AUTO_DETECTION;\n        }\n        return autodetectedRegionName || null;\n    }\n    /**\n     * Make the call to the IMDS endpoint\n     *\n     * @param imdsEndpointUrl\n     * @returns Promise<NetworkResponse<string>>\n     */\n    async getRegionFromIMDS(version, options) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.correlationId);\n        return this.networkInterface.sendGetRequestAsync(`${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`, options, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.IMDS_TIMEOUT);\n    }\n    /**\n     * Get the most recent version of the IMDS endpoint available\n     *\n     * @returns Promise<string | null>\n     */\n    async getCurrentVersion(options) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.correlationId);\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync(`${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.IMDS_ENDPOINT}?format=json`, options);\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\n            if (response.status === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ResponseCodes.httpBadRequest &&\n                response.body &&\n                response.body[\"newest-versions\"] &&\n                response.body[\"newest-versions\"].length > 0) {\n                return response.body[\"newest-versions\"][0];\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n}\n// Options for the IMDS endpoint request\nRegionDiscovery.IMDS_OPTIONS = {\n    headers: {\n        Metadata: \"true\",\n    },\n};\n\n\n//# sourceMappingURL=RegionDiscovery.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheManager: function() { return /* binding */ CacheManager; },\n/* harmony export */   DefaultStorageClass: function() { return /* binding */ DefaultStorageClass; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../request/ScopeSet.mjs */ \"./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./entities/AccountEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../account/AuthToken.mjs */ \"./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-common/dist/packageMetadata.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\n * @internal\n */\nclass CacheManager {\n    constructor(clientId, cryptoImpl, logger) {\n        this.clientId = clientId;\n        this.cryptoImpl = cryptoImpl;\n        this.commonLogger = logger.clone(_packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_0__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_0__.version);\n    }\n    /**\n     * Returns all accounts in cache\n     */\n    getAllAccounts() {\n        const allAccountKeys = this.getAccountKeys();\n        if (allAccountKeys.length < 1) {\n            return [];\n        }\n        const accountEntities = allAccountKeys.reduce((accounts, key) => {\n            const entity = this.getAccount(key);\n            if (!entity) {\n                return accounts;\n            }\n            accounts.push(entity);\n            return accounts;\n        }, []);\n        if (accountEntities.length < 1) {\n            return [];\n        }\n        else {\n            const allAccounts = accountEntities.map((accountEntity) => {\n                return this.getAccountInfoFromEntity(accountEntity);\n            });\n            return allAccounts;\n        }\n    }\n    /**\n     * Gets accountInfo object based on provided filters\n     */\n    getAccountInfoFilteredBy(accountFilter) {\n        const allAccounts = this.getAccountsFilteredBy(accountFilter);\n        if (allAccounts.length > 0) {\n            return this.getAccountInfoFromEntity(allAccounts[0]);\n        }\n        else {\n            return null;\n        }\n    }\n    getAccountInfoFromEntity(accountEntity) {\n        const accountInfo = accountEntity.getAccountInfo();\n        const idToken = this.getIdToken(accountInfo);\n        if (idToken) {\n            accountInfo.idToken = idToken.secret;\n            accountInfo.idTokenClaims = new _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthToken(idToken.secret, this.cryptoImpl).claims;\n        }\n        return accountInfo;\n    }\n    /**\n     * saves a cache record\n     * @param cacheRecord\n     */\n    async saveCacheRecord(cacheRecord, storeInCache) {\n        if (!cacheRecord) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.ClientAuthError.createNullOrUndefinedCacheRecord();\n        }\n        if (!!cacheRecord.account) {\n            this.setAccount(cacheRecord.account);\n        }\n        if (!!cacheRecord.idToken && storeInCache?.idToken !== false) {\n            this.setIdTokenCredential(cacheRecord.idToken);\n        }\n        if (!!cacheRecord.accessToken && storeInCache?.accessToken !== false) {\n            await this.saveAccessToken(cacheRecord.accessToken);\n        }\n        if (!!cacheRecord.refreshToken &&\n            storeInCache?.refreshToken !== false) {\n            this.setRefreshTokenCredential(cacheRecord.refreshToken);\n        }\n        if (!!cacheRecord.appMetadata) {\n            this.setAppMetadata(cacheRecord.appMetadata);\n        }\n    }\n    /**\n     * saves access token credential\n     * @param credential\n     */\n    async saveAccessToken(credential) {\n        const accessTokenFilter = {\n            clientId: credential.clientId,\n            credentialType: credential.credentialType,\n            environment: credential.environment,\n            homeAccountId: credential.homeAccountId,\n            realm: credential.realm,\n            tokenType: credential.tokenType,\n            requestedClaimsHash: credential.requestedClaimsHash,\n        };\n        const tokenKeys = this.getTokenKeys();\n        const currentScopes = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_3__.ScopeSet.fromString(credential.target);\n        const removedAccessTokens = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (!this.accessTokenKeyMatchesFilter(key, accessTokenFilter, false)) {\n                return;\n            }\n            const tokenEntity = this.getAccessTokenCredential(key);\n            if (tokenEntity &&\n                this.credentialMatchesFilter(tokenEntity, accessTokenFilter)) {\n                const tokenScopeSet = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_3__.ScopeSet.fromString(tokenEntity.target);\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\n                    removedAccessTokens.push(this.removeAccessToken(key));\n                }\n            }\n        });\n        await Promise.all(removedAccessTokens);\n        this.setAccessTokenCredential(credential);\n    }\n    /**\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\n     * @param homeAccountId\n     * @param environment\n     * @param realm\n     */\n    getAccountsFilteredBy(accountFilter) {\n        const allAccountKeys = this.getAccountKeys();\n        const matchingAccounts = [];\n        allAccountKeys.forEach((cacheKey) => {\n            if (!this.isAccountKey(cacheKey, accountFilter.homeAccountId, accountFilter.realm)) {\n                // Don't parse value if the key doesn't match the account filters\n                return;\n            }\n            const entity = this.getAccount(cacheKey);\n            if (!entity) {\n                return;\n            }\n            if (!!accountFilter.homeAccountId &&\n                !this.matchHomeAccountId(entity, accountFilter.homeAccountId)) {\n                return;\n            }\n            if (!!accountFilter.localAccountId &&\n                !this.matchLocalAccountId(entity, accountFilter.localAccountId)) {\n                return;\n            }\n            if (!!accountFilter.username &&\n                !this.matchUsername(entity, accountFilter.username)) {\n                return;\n            }\n            if (!!accountFilter.environment &&\n                !this.matchEnvironment(entity, accountFilter.environment)) {\n                return;\n            }\n            if (!!accountFilter.realm &&\n                !this.matchRealm(entity, accountFilter.realm)) {\n                return;\n            }\n            if (!!accountFilter.nativeAccountId &&\n                !this.matchNativeAccountId(entity, accountFilter.nativeAccountId)) {\n                return;\n            }\n            matchingAccounts.push(entity);\n        });\n        return matchingAccounts;\n    }\n    /**\n     * Returns true if the given key matches our account key schema. Also matches homeAccountId and/or tenantId if provided\n     * @param key\n     * @param homeAccountId\n     * @param tenantId\n     * @returns\n     */\n    isAccountKey(key, homeAccountId, tenantId) {\n        if (key.split(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Separators.CACHE_KEY_SEPARATOR).length < 3) {\n            // Account cache keys contain 3 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n        if (homeAccountId &&\n            !key.toLowerCase().includes(homeAccountId.toLowerCase())) {\n            return false;\n        }\n        if (tenantId && !key.toLowerCase().includes(tenantId.toLowerCase())) {\n            return false;\n        }\n        // Do not check environment as aliasing can cause false negatives\n        return true;\n    }\n    /**\n     * Returns true if the given key matches our credential key schema.\n     * @param key\n     */\n    isCredentialKey(key) {\n        if (key.split(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Separators.CACHE_KEY_SEPARATOR).length < 6) {\n            // Credential cache keys contain 6 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n        const lowerCaseKey = key.toLowerCase();\n        // Credential keys must indicate what credential type they represent\n        if (lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ID_TOKEN.toLowerCase()) ===\n            -1 &&\n            lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN.toLowerCase()) ===\n                -1 &&\n            lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) === -1 &&\n            lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.REFRESH_TOKEN.toLowerCase()) ===\n                -1) {\n            return false;\n        }\n        if (lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.REFRESH_TOKEN.toLowerCase()) >\n            -1) {\n            // Refresh tokens must contain the client id or family id\n            const clientIdValidation = `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.REFRESH_TOKEN}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Separators.CACHE_KEY_SEPARATOR}${this.clientId}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Separators.CACHE_KEY_SEPARATOR}`;\n            const familyIdValidation = `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.REFRESH_TOKEN}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Separators.CACHE_KEY_SEPARATOR}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.THE_FAMILY_ID}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Separators.CACHE_KEY_SEPARATOR}`;\n            if (lowerCaseKey.indexOf(clientIdValidation.toLowerCase()) === -1 &&\n                lowerCaseKey.indexOf(familyIdValidation.toLowerCase()) === -1) {\n                return false;\n            }\n        }\n        else if (lowerCaseKey.indexOf(this.clientId.toLowerCase()) === -1) {\n            // Tokens must contain the clientId\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns whether or not the given credential entity matches the filter\n     * @param entity\n     * @param filter\n     * @returns\n     */\n    credentialMatchesFilter(entity, filter) {\n        if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {\n            return false;\n        }\n        if (!!filter.userAssertionHash &&\n            !this.matchUserAssertionHash(entity, filter.userAssertionHash)) {\n            return false;\n        }\n        /*\n         * homeAccountId can be undefined, and we want to filter out cached items that have a homeAccountId of \"\"\n         * because we don't want a client_credential request to return a cached token that has a homeAccountId\n         */\n        if (typeof filter.homeAccountId === \"string\" &&\n            !this.matchHomeAccountId(entity, filter.homeAccountId)) {\n            return false;\n        }\n        if (!!filter.environment &&\n            !this.matchEnvironment(entity, filter.environment)) {\n            return false;\n        }\n        if (!!filter.realm && !this.matchRealm(entity, filter.realm)) {\n            return false;\n        }\n        if (!!filter.credentialType &&\n            !this.matchCredentialType(entity, filter.credentialType)) {\n            return false;\n        }\n        if (!!filter.familyId && !this.matchFamilyId(entity, filter.familyId)) {\n            return false;\n        }\n        /*\n         * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\n         * Resource specific refresh tokens case will be added when the support is deemed necessary\n         */\n        if (!!filter.target && !this.matchTarget(entity, filter.target)) {\n            return false;\n        }\n        // If request OR cached entity has requested Claims Hash, check if they match\n        if (filter.requestedClaimsHash || entity.requestedClaimsHash) {\n            // Don't match if either is undefined or they are different\n            if (entity.requestedClaimsHash !== filter.requestedClaimsHash) {\n                return false;\n            }\n        }\n        // Access Token with Auth Scheme specific matching\n        if (entity.credentialType ===\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME) {\n            if (!!filter.tokenType &&\n                !this.matchTokenType(entity, filter.tokenType)) {\n                return false;\n            }\n            // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\n            if (filter.tokenType === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.SSH) {\n                if (filter.keyId && !this.matchKeyId(entity, filter.keyId)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\n     * @param filter\n     */\n    getAppMetadataFilteredBy(filter) {\n        return this.getAppMetadataFilteredByInternal(filter.environment, filter.clientId);\n    }\n    /**\n     * Support function to help match appMetadata\n     * @param environment\n     * @param clientId\n     */\n    getAppMetadataFilteredByInternal(environment, clientId) {\n        const allCacheKeys = this.getKeys();\n        const matchingAppMetadata = {};\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-appMetadata type cache entities\n            if (!this.isAppMetadata(cacheKey)) {\n                return;\n            }\n            // Attempt retrieval\n            const entity = this.getAppMetadata(cacheKey);\n            if (!entity) {\n                return;\n            }\n            if (!!environment && !this.matchEnvironment(entity, environment)) {\n                return;\n            }\n            if (!!clientId && !this.matchClientId(entity, clientId)) {\n                return;\n            }\n            matchingAppMetadata[cacheKey] = entity;\n        });\n        return matchingAppMetadata;\n    }\n    /**\n     * retrieve authorityMetadata that contains a matching alias\n     * @param filter\n     */\n    getAuthorityMetadataByAlias(host) {\n        const allCacheKeys = this.getAuthorityMetadataKeys();\n        let matchedEntity = null;\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-authorityMetadata type cache entities\n            if (!this.isAuthorityMetadata(cacheKey) ||\n                cacheKey.indexOf(this.clientId) === -1) {\n                return;\n            }\n            // Attempt retrieval\n            const entity = this.getAuthorityMetadata(cacheKey);\n            if (!entity) {\n                return;\n            }\n            if (entity.aliases.indexOf(host) === -1) {\n                return;\n            }\n            matchedEntity = entity;\n        });\n        return matchedEntity;\n    }\n    /**\n     * Removes all accounts and related tokens from cache.\n     */\n    async removeAllAccounts() {\n        const allAccountKeys = this.getAccountKeys();\n        const removedAccounts = [];\n        allAccountKeys.forEach((cacheKey) => {\n            removedAccounts.push(this.removeAccount(cacheKey));\n        });\n        await Promise.all(removedAccounts);\n    }\n    /**\n     * Removes the account and related tokens for a given account key\n     * @param account\n     */\n    async removeAccount(accountKey) {\n        const account = this.getAccount(accountKey);\n        if (!account) {\n            return;\n        }\n        await this.removeAccountContext(account);\n        this.removeItem(accountKey);\n    }\n    /**\n     * Removes credentials associated with the provided account\n     * @param account\n     */\n    async removeAccountContext(account) {\n        const allTokenKeys = this.getTokenKeys();\n        const accountId = account.generateAccountId();\n        const removedCredentials = [];\n        allTokenKeys.idToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeIdToken(key);\n            }\n        });\n        allTokenKeys.accessToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                removedCredentials.push(this.removeAccessToken(key));\n            }\n        });\n        allTokenKeys.refreshToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeRefreshToken(key);\n            }\n        });\n        await Promise.all(removedCredentials);\n    }\n    /**\n     * returns a boolean if the given credential is removed\n     * @param credential\n     */\n    async removeAccessToken(key) {\n        const credential = this.getAccessTokenCredential(key);\n        if (!credential) {\n            return;\n        }\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\n        if (credential.credentialType.toLowerCase() ===\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) {\n            if (credential.tokenType === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.POP) {\n                const accessTokenWithAuthSchemeEntity = credential;\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\n                if (kid) {\n                    try {\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\n                    }\n                    catch (error) {\n                        throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.ClientAuthError.createBindingKeyNotRemovedError();\n                    }\n                }\n            }\n        }\n        return this.removeItem(key);\n    }\n    /**\n     * Removes all app metadata objects from cache.\n     */\n    removeAppMetadata() {\n        const allCacheKeys = this.getKeys();\n        allCacheKeys.forEach((cacheKey) => {\n            if (this.isAppMetadata(cacheKey)) {\n                this.removeItem(cacheKey);\n            }\n        });\n        return true;\n    }\n    /**\n     * Retrieve the cached credentials into a cacherecord\n     * @param account\n     * @param clientId\n     * @param scopes\n     * @param environment\n     * @param authScheme\n     */\n    readCacheRecord(account, request, environment) {\n        const tokenKeys = this.getTokenKeys();\n        const cachedAccount = this.readAccountFromCache(account);\n        const cachedIdToken = this.getIdToken(account, tokenKeys);\n        const cachedAccessToken = this.getAccessToken(account, request, tokenKeys);\n        const cachedRefreshToken = this.getRefreshToken(account, false, tokenKeys);\n        const cachedAppMetadata = this.readAppMetadataFromCache(environment);\n        if (cachedAccount && cachedIdToken) {\n            cachedAccount.idTokenClaims = new _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthToken(cachedIdToken.secret, this.cryptoImpl).claims;\n        }\n        return {\n            account: cachedAccount,\n            idToken: cachedIdToken,\n            accessToken: cachedAccessToken,\n            refreshToken: cachedRefreshToken,\n            appMetadata: cachedAppMetadata,\n        };\n    }\n    /**\n     * Retrieve AccountEntity from cache\n     * @param account\n     */\n    readAccountFromCache(account) {\n        const accountKey = _entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_5__.AccountEntity.generateAccountCacheKey(account);\n        return this.getAccount(accountKey);\n    }\n    /**\n     * Retrieve IdTokenEntity from cache\n     * @param clientId\n     * @param account\n     * @param inputRealm\n     */\n    getIdToken(account, tokenKeys) {\n        this.commonLogger.trace(\"CacheManager - getIdToken called\");\n        const idTokenFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ID_TOKEN,\n            clientId: this.clientId,\n            realm: account.tenantId,\n        };\n        const idTokens = this.getIdTokensByFilter(idTokenFilter, tokenKeys);\n        const numIdTokens = idTokens.length;\n        if (numIdTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getIdToken - No token found\");\n            return null;\n        }\n        else if (numIdTokens > 1) {\n            this.commonLogger.info(\"CacheManager:getIdToken - Multiple id tokens found, clearing them\");\n            idTokens.forEach((idToken) => {\n                this.removeIdToken(idToken.generateCredentialKey());\n            });\n            return null;\n        }\n        this.commonLogger.info(\"CacheManager:getIdToken - Returning id token\");\n        return idTokens[0];\n    }\n    /**\n     * Gets all idTokens matching the given filter\n     * @param filter\n     * @returns\n     */\n    getIdTokensByFilter(filter, tokenKeys) {\n        const idTokenKeys = (tokenKeys && tokenKeys.idToken) || this.getTokenKeys().idToken;\n        const idTokens = [];\n        idTokenKeys.forEach((key) => {\n            if (!this.idTokenKeyMatchesFilter(key, {\n                clientId: this.clientId,\n                ...filter,\n            })) {\n                return;\n            }\n            const idToken = this.getIdTokenCredential(key);\n            if (idToken && this.credentialMatchesFilter(idToken, filter)) {\n                idTokens.push(idToken);\n            }\n        });\n        return idTokens;\n    }\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @returns\n     */\n    idTokenKeyMatchesFilter(inputKey, filter) {\n        const key = inputKey.toLowerCase();\n        if (filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Removes idToken from the cache\n     * @param key\n     */\n    removeIdToken(key) {\n        this.removeItem(key);\n    }\n    /**\n     * Removes refresh token from the cache\n     * @param key\n     */\n    removeRefreshToken(key) {\n        this.removeItem(key);\n    }\n    /**\n     * Retrieve AccessTokenEntity from cache\n     * @param clientId\n     * @param account\n     * @param scopes\n     * @param authScheme\n     */\n    getAccessToken(account, request, tokenKeys) {\n        this.commonLogger.trace(\"CacheManager - getAccessToken called\");\n        const scopes = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_3__.ScopeSet.createSearchScopes(request.scopes);\n        const authScheme = request.authenticationScheme || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.BEARER;\n        /*\n         * Distinguish between Bearer and PoP/SSH token cache types\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        const credentialType = authScheme &&\n            authScheme.toLowerCase() !==\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.BEARER.toLowerCase()\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\n            : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN;\n        const accessTokenFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: credentialType,\n            clientId: this.clientId,\n            realm: account.tenantId,\n            target: scopes,\n            tokenType: authScheme,\n            keyId: request.sshKid,\n            requestedClaimsHash: request.requestedClaimsHash,\n        };\n        const accessTokenKeys = (tokenKeys && tokenKeys.accessToken) ||\n            this.getTokenKeys().accessToken;\n        const accessTokens = [];\n        accessTokenKeys.forEach((key) => {\n            // Validate key\n            if (this.accessTokenKeyMatchesFilter(key, accessTokenFilter, true)) {\n                const accessToken = this.getAccessTokenCredential(key);\n                // Validate value\n                if (accessToken &&\n                    this.credentialMatchesFilter(accessToken, accessTokenFilter)) {\n                    accessTokens.push(accessToken);\n                }\n            }\n        });\n        const numAccessTokens = accessTokens.length;\n        if (numAccessTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getAccessToken - No token found\");\n            return null;\n        }\n        else if (numAccessTokens > 1) {\n            this.commonLogger.info(\"CacheManager:getAccessToken - Multiple access tokens found, clearing them\");\n            accessTokens.forEach((accessToken) => {\n                this.removeAccessToken(accessToken.generateCredentialKey());\n            });\n            return null;\n        }\n        this.commonLogger.info(\"CacheManager:getAccessToken - Returning access token\");\n        return accessTokens[0];\n    }\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @param keyMustContainAllScopes\n     * @returns\n     */\n    accessTokenKeyMatchesFilter(inputKey, filter, keyMustContainAllScopes) {\n        const key = inputKey.toLowerCase();\n        if (filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.realm && key.indexOf(filter.realm.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.requestedClaimsHash &&\n            key.indexOf(filter.requestedClaimsHash.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.target) {\n            const scopes = filter.target.asArray();\n            for (let i = 0; i < scopes.length; i++) {\n                if (keyMustContainAllScopes &&\n                    !key.includes(scopes[i].toLowerCase())) {\n                    // When performing a cache lookup a missing scope would be a cache miss\n                    return false;\n                }\n                else if (!keyMustContainAllScopes &&\n                    key.includes(scopes[i].toLowerCase())) {\n                    // When performing a cache write, any token with a subset of requested scopes should be replaced\n                    return true;\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * Gets all access tokens matching the filter\n     * @param filter\n     * @returns\n     */\n    getAccessTokensByFilter(filter) {\n        const tokenKeys = this.getTokenKeys();\n        const accessTokens = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (!this.accessTokenKeyMatchesFilter(key, filter, true)) {\n                return;\n            }\n            const accessToken = this.getAccessTokenCredential(key);\n            if (accessToken &&\n                this.credentialMatchesFilter(accessToken, filter)) {\n                accessTokens.push(accessToken);\n            }\n        });\n        return accessTokens;\n    }\n    /**\n     * Helper to retrieve the appropriate refresh token from cache\n     * @param clientId\n     * @param account\n     * @param familyRT\n     */\n    getRefreshToken(account, familyRT, tokenKeys) {\n        this.commonLogger.trace(\"CacheManager - getRefreshToken called\");\n        const id = familyRT ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.THE_FAMILY_ID : undefined;\n        const refreshTokenFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.REFRESH_TOKEN,\n            clientId: this.clientId,\n            familyId: id,\n        };\n        const refreshTokenKeys = (tokenKeys && tokenKeys.refreshToken) ||\n            this.getTokenKeys().refreshToken;\n        const refreshTokens = [];\n        refreshTokenKeys.forEach((key) => {\n            // Validate key\n            if (this.refreshTokenKeyMatchesFilter(key, refreshTokenFilter)) {\n                const refreshToken = this.getRefreshTokenCredential(key);\n                // Validate value\n                if (refreshToken &&\n                    this.credentialMatchesFilter(refreshToken, refreshTokenFilter)) {\n                    refreshTokens.push(refreshToken);\n                }\n            }\n        });\n        const numRefreshTokens = refreshTokens.length;\n        if (numRefreshTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getRefreshToken - No refresh token found.\");\n            return null;\n        }\n        // address the else case after remove functions address environment aliases\n        this.commonLogger.info(\"CacheManager:getRefreshToken - returning refresh token\");\n        return refreshTokens[0];\n    }\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     */\n    refreshTokenKeyMatchesFilter(inputKey, filter) {\n        const key = inputKey.toLowerCase();\n        if (filter.familyId &&\n            key.indexOf(filter.familyId.toLowerCase()) === -1) {\n            return false;\n        }\n        // If familyId is used, clientId is not in the key\n        if (!filter.familyId &&\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Retrieve AppMetadataEntity from cache\n     */\n    readAppMetadataFromCache(environment) {\n        const appMetadataFilter = {\n            environment,\n            clientId: this.clientId,\n        };\n        const appMetadata = this.getAppMetadataFilteredBy(appMetadataFilter);\n        const appMetadataEntries = Object.keys(appMetadata).map((key) => appMetadata[key]);\n        const numAppMetadata = appMetadataEntries.length;\n        if (numAppMetadata < 1) {\n            return null;\n        }\n        else if (numAppMetadata > 1) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.ClientAuthError.createMultipleMatchingAppMetadataInCacheError();\n        }\n        return appMetadataEntries[0];\n    }\n    /**\n     * Return the family_id value associated  with FOCI\n     * @param environment\n     * @param clientId\n     */\n    isAppMetadataFOCI(environment) {\n        const appMetadata = this.readAppMetadataFromCache(environment);\n        return !!(appMetadata && appMetadata.familyId === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.THE_FAMILY_ID);\n    }\n    /**\n     * helper to match account ids\n     * @param value\n     * @param homeAccountId\n     */\n    matchHomeAccountId(entity, homeAccountId) {\n        return !!(typeof entity.homeAccountId === \"string\" &&\n            homeAccountId === entity.homeAccountId);\n    }\n    /**\n     * helper to match account ids\n     * @param entity\n     * @param localAccountId\n     * @returns\n     */\n    matchLocalAccountId(entity, localAccountId) {\n        return !!(typeof entity.localAccountId === \"string\" &&\n            localAccountId === entity.localAccountId);\n    }\n    /**\n     * helper to match usernames\n     * @param entity\n     * @param username\n     * @returns\n     */\n    matchUsername(entity, username) {\n        return !!(typeof entity.username === \"string\" &&\n            username.toLowerCase() === entity.username.toLowerCase());\n    }\n    /**\n     * helper to match assertion\n     * @param value\n     * @param oboAssertion\n     */\n    matchUserAssertionHash(entity, userAssertionHash) {\n        return !!(entity.userAssertionHash &&\n            userAssertionHash === entity.userAssertionHash);\n    }\n    /**\n     * helper to match environment\n     * @param value\n     * @param environment\n     */\n    matchEnvironment(entity, environment) {\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\n        if (cloudMetadata &&\n            cloudMetadata.aliases.indexOf(entity.environment) > -1) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * helper to match credential type\n     * @param entity\n     * @param credentialType\n     */\n    matchCredentialType(entity, credentialType) {\n        return (entity.credentialType &&\n            credentialType.toLowerCase() === entity.credentialType.toLowerCase());\n    }\n    /**\n     * helper to match client ids\n     * @param entity\n     * @param clientId\n     */\n    matchClientId(entity, clientId) {\n        return !!(entity.clientId && clientId === entity.clientId);\n    }\n    /**\n     * helper to match family ids\n     * @param entity\n     * @param familyId\n     */\n    matchFamilyId(entity, familyId) {\n        return !!(entity.familyId && familyId === entity.familyId);\n    }\n    /**\n     * helper to match realm\n     * @param entity\n     * @param realm\n     */\n    matchRealm(entity, realm) {\n        return !!(entity.realm && realm === entity.realm);\n    }\n    /**\n     * helper to match nativeAccountId\n     * @param entity\n     * @param nativeAccountId\n     * @returns boolean indicating the match result\n     */\n    matchNativeAccountId(entity, nativeAccountId) {\n        return !!(entity.nativeAccountId && nativeAccountId === entity.nativeAccountId);\n    }\n    /**\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\n     * @param entity\n     * @param target\n     */\n    matchTarget(entity, target) {\n        const isNotAccessTokenCredential = entity.credentialType !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN &&\n            entity.credentialType !==\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n        if (isNotAccessTokenCredential || !entity.target) {\n            return false;\n        }\n        const entityScopeSet = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_3__.ScopeSet.fromString(entity.target);\n        return entityScopeSet.containsScopeSet(target);\n    }\n    /**\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    matchTokenType(entity, tokenType) {\n        return !!(entity.tokenType && entity.tokenType === tokenType);\n    }\n    /**\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    matchKeyId(entity, keyId) {\n        return !!(entity.keyId && entity.keyId === keyId);\n    }\n    /**\n     * returns if a given cache entity is of the type appmetadata\n     * @param key\n     */\n    isAppMetadata(key) {\n        return key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.APP_METADATA) !== -1;\n    }\n    /**\n     * returns if a given cache entity is of the type authoritymetadata\n     * @param key\n     */\n    isAuthorityMetadata(key) {\n        return key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\n    }\n    /**\n     * returns cache key used for cloud instance metadata\n     */\n    generateAuthorityMetadataCacheKey(authority) {\n        return `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\n    }\n    /**\n     * Helper to convert serialized data to object\n     * @param obj\n     * @param json\n     */\n    static toObject(obj, json) {\n        for (const propertyName in json) {\n            obj[propertyName] = json[propertyName];\n        }\n        return obj;\n    }\n}\n/** @internal */\nclass DefaultStorageClass extends CacheManager {\n    setAccount() {\n        const notImplErr = \"Storage interface - setAccount() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    getAccount() {\n        const notImplErr = \"Storage interface - getAccount() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    setIdTokenCredential() {\n        const notImplErr = \"Storage interface - setIdTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    getIdTokenCredential() {\n        const notImplErr = \"Storage interface - getIdTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    setAccessTokenCredential() {\n        const notImplErr = \"Storage interface - setAccessTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    getAccessTokenCredential() {\n        const notImplErr = \"Storage interface - getAccessTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    setRefreshTokenCredential() {\n        const notImplErr = \"Storage interface - setRefreshTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    getRefreshTokenCredential() {\n        const notImplErr = \"Storage interface - getRefreshTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    setAppMetadata() {\n        const notImplErr = \"Storage interface - setAppMetadata() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    getAppMetadata() {\n        const notImplErr = \"Storage interface - getAppMetadata() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    setServerTelemetry() {\n        const notImplErr = \"Storage interface - setServerTelemetry() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    getServerTelemetry() {\n        const notImplErr = \"Storage interface - getServerTelemetry() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    setAuthorityMetadata() {\n        const notImplErr = \"Storage interface - setAuthorityMetadata() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    getAuthorityMetadata() {\n        const notImplErr = \"Storage interface - getAuthorityMetadata() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    getAuthorityMetadataKeys() {\n        const notImplErr = \"Storage interface - getAuthorityMetadataKeys() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    setThrottlingCache() {\n        const notImplErr = \"Storage interface - setThrottlingCache() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    getThrottlingCache() {\n        const notImplErr = \"Storage interface - getThrottlingCache() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    removeItem() {\n        const notImplErr = \"Storage interface - removeItem() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    containsKey() {\n        const notImplErr = \"Storage interface - containsKey() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    getKeys() {\n        const notImplErr = \"Storage interface - getKeys() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    getAccountKeys() {\n        const notImplErr = \"Storage interface - getAccountKeys() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    getTokenKeys() {\n        const notImplErr = \"Storage interface - getTokenKeys() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    async clear() {\n        const notImplErr = \"Storage interface - clear() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n    updateCredentialCacheKey() {\n        const notImplErr = \"Storage interface - updateCredentialCacheKey() has not been implemented for the cacheStorage interface.\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthError.createUnexpectedError(notImplErr);\n    }\n}\n\n\n//# sourceMappingURL=CacheManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/entities/AccessTokenEntity.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/entities/AccessTokenEntity.mjs ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessTokenEntity: function() { return /* binding */ AccessTokenEntity; }\n/* harmony export */ });\n/* harmony import */ var _CredentialEntity_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CredentialEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/CredentialEntity.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/TimeUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../account/AuthToken.mjs */ \"./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * ACCESS_TOKEN Credential Type\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-accesstoken-clientId-contoso.com-user.read\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, usually only used for refresh tokens\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n *      cachedAt: Absolute device time when entry was created in the cache.\n *      expiresOn: Token expiry time, calculated based on current UTC time in seconds. Represented as a string.\n *      extendedExpiresOn: Additional extended expiry time until when token is valid in case of server-side outage. Represented as string in UTC seconds.\n *      keyId: used for POP and SSH tokenTypes\n *      tokenType: Type of the token issued. Usually \"Bearer\"\n * }\n */\nclass AccessTokenEntity extends _CredentialEntity_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialEntity {\n    /**\n     * Create AccessTokenEntity\n     * @param homeAccountId\n     * @param environment\n     * @param accessToken\n     * @param clientId\n     * @param tenantId\n     * @param scopes\n     * @param expiresOn\n     * @param extExpiresOn\n     */\n    static createAccessTokenEntity(homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn, cryptoUtils, refreshOn, tokenType, userAssertionHash, keyId, requestedClaims, requestedClaimsHash) {\n        const atEntity = new AccessTokenEntity();\n        atEntity.homeAccountId = homeAccountId;\n        atEntity.credentialType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CredentialType.ACCESS_TOKEN;\n        atEntity.secret = accessToken;\n        const currentTime = _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.TimeUtils.nowSeconds();\n        atEntity.cachedAt = currentTime.toString();\n        /*\n         * Token expiry time.\n         * This value should be  calculated based on the current UTC time measured locally and the value  expires_in Represented as a string in JSON.\n         */\n        atEntity.expiresOn = expiresOn.toString();\n        atEntity.extendedExpiresOn = extExpiresOn.toString();\n        if (refreshOn) {\n            atEntity.refreshOn = refreshOn.toString();\n        }\n        atEntity.environment = environment;\n        atEntity.clientId = clientId;\n        atEntity.realm = tenantId;\n        atEntity.target = scopes;\n        atEntity.userAssertionHash = userAssertionHash;\n        atEntity.tokenType = _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.StringUtils.isEmpty(tokenType)\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.BEARER\n            : tokenType;\n        if (requestedClaims) {\n            atEntity.requestedClaims = requestedClaims;\n            atEntity.requestedClaimsHash = requestedClaimsHash;\n        }\n        /*\n         * Create Access Token With Auth Scheme instead of regular access token\n         * Cast to lower to handle \"bearer\" from ADFS\n         */\n        if (atEntity.tokenType?.toLowerCase() !==\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.BEARER.toLowerCase()) {\n            atEntity.credentialType =\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n            switch (atEntity.tokenType) {\n                case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.POP:\n                    // Make sure keyId is present and add it to credential\n                    const tokenClaims = _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthToken.extractTokenClaims(accessToken, cryptoUtils);\n                    if (!tokenClaims?.cnf?.kid) {\n                        throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.ClientAuthError.createTokenClaimsRequiredError();\n                    }\n                    atEntity.keyId = tokenClaims.cnf.kid;\n                    break;\n                case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.SSH:\n                    atEntity.keyId = keyId;\n            }\n        }\n        return atEntity;\n    }\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccessTokenEntity(entity) {\n        if (!entity) {\n            return false;\n        }\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity.hasOwnProperty(\"target\") &&\n            (entity[\"credentialType\"] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CredentialType.ACCESS_TOKEN ||\n                entity[\"credentialType\"] ===\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME));\n    }\n}\n\n\n//# sourceMappingURL=AccessTokenEntity.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/entities/AccessTokenEntity.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountEntity: function() { return /* binding */ AccountEntity; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../account/ClientInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../authority/AuthorityType.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\");\n/* harmony import */ var _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../authority/ProtocolMode.mjs */ \"./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\n *\n * Key : Value Schema\n *\n * Key: <home_account_id>-<environment>-<realm*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\n *      authorityType: Accounts authority type as a string\n *      name: Full name for the account, including given name and family name,\n *      lastModificationTime: last time this entity was modified in the cache\n *      lastModificationApp:\n *      idTokenClaims: Object containing claims parsed from ID token\n *      nativeAccountId: Account identifier on the native device\n * }\n * @internal\n */\nclass AccountEntity {\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId() {\n        const accountId = [this.homeAccountId, this.environment];\n        return accountId.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n    /**\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\n     */\n    generateAccountKey() {\n        return AccountEntity.generateAccountCacheKey({\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n        });\n    }\n    /**\n     * Returns the AccountInfo interface for this account.\n     */\n    getAccountInfo() {\n        return {\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n            name: this.name,\n            idTokenClaims: this.idTokenClaims,\n            nativeAccountId: this.nativeAccountId,\n            authorityType: this.authorityType,\n        };\n    }\n    /**\n     * Generates account key from interface\n     * @param accountInterface\n     */\n    static generateAccountCacheKey(accountInterface) {\n        const accountKey = [\n            accountInterface.homeAccountId,\n            accountInterface.environment || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n            accountInterface.tenantId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        ];\n        return accountKey.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n    /**\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\n     * @param accountDetails\n     */\n    static createAccount(accountDetails, authority) {\n        const account = new AccountEntity();\n        if (authority.authorityType === _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityType.Adfs) {\n            account.authorityType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.ADFS_ACCOUNT_TYPE;\n        }\n        else if (authority.protocolMode === _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_2__.ProtocolMode.AAD) {\n            account.authorityType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.MSSTS_ACCOUNT_TYPE;\n        }\n        else {\n            account.authorityType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        }\n        account.clientInfo = accountDetails.clientInfo;\n        account.homeAccountId = accountDetails.homeAccountId;\n        account.nativeAccountId = accountDetails.nativeAccountId;\n        const env = accountDetails.environment ||\n            (authority && authority.getPreferredCache());\n        if (!env) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError.createInvalidCacheEnvironmentError();\n        }\n        account.environment = env;\n        // non AAD scenarios can have empty realm\n        account.realm =\n            accountDetails.idTokenClaims.tid || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        account.idTokenClaims = accountDetails.idTokenClaims;\n        // How do you account for MSA CID here?\n        account.localAccountId =\n            accountDetails.idTokenClaims.oid ||\n                accountDetails.idTokenClaims.sub ||\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        /*\n         * In B2C scenarios the emails claim is used instead of preferred_username and it is an array.\n         * In most cases it will contain a single email. This field should not be relied upon if a custom\n         * policy is configured to return more than 1 email.\n         */\n        const preferredUsername = accountDetails.idTokenClaims.preferred_username ||\n            accountDetails.idTokenClaims.upn;\n        const email = accountDetails.idTokenClaims.emails\n            ? accountDetails.idTokenClaims.emails[0]\n            : null;\n        account.username = preferredUsername || email || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        account.name = accountDetails.idTokenClaims.name;\n        account.cloudGraphHostName = accountDetails.cloudGraphHostName;\n        account.msGraphHost = accountDetails.msGraphHost;\n        return account;\n    }\n    /**\n     * Creates an AccountEntity object from AccountInfo\n     * @param accountInfo\n     * @param cloudGraphHostName\n     * @param msGraphHost\n     * @returns\n     */\n    static createFromAccountInfo(accountInfo, cloudGraphHostName, msGraphHost) {\n        const account = new AccountEntity();\n        account.authorityType =\n            accountInfo.authorityType || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        account.homeAccountId = accountInfo.homeAccountId;\n        account.localAccountId = accountInfo.localAccountId;\n        account.nativeAccountId = accountInfo.nativeAccountId;\n        account.realm = accountInfo.tenantId;\n        account.environment = accountInfo.environment;\n        account.username = accountInfo.username;\n        account.name = accountInfo.name;\n        account.idTokenClaims = accountInfo.idTokenClaims;\n        account.cloudGraphHostName = cloudGraphHostName;\n        account.msGraphHost = msGraphHost;\n        return account;\n    }\n    /**\n     * Generate HomeAccountId from server response\n     * @param serverClientInfo\n     * @param authType\n     */\n    static generateHomeAccountId(serverClientInfo, authType, logger, cryptoObj, idTokenClaims) {\n        const accountId = idTokenClaims?.sub\n            ? idTokenClaims.sub\n            : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        // since ADFS does not have tid and does not set client_info\n        if (authType === _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityType.Adfs ||\n            authType === _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityType.Dsts) {\n            return accountId;\n        }\n        // for cases where there is clientInfo\n        if (serverClientInfo) {\n            try {\n                const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_4__.buildClientInfo)(serverClientInfo, cryptoObj);\n                if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_5__.StringUtils.isEmpty(clientInfo.uid) &&\n                    !_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_5__.StringUtils.isEmpty(clientInfo.utid)) {\n                    return `${clientInfo.uid}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`;\n                }\n            }\n            catch (e) { }\n        }\n        // default to \"sub\" claim\n        logger.verbose(\"No client info in response\");\n        return accountId;\n    }\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccountEntity(entity) {\n        if (!entity) {\n            return false;\n        }\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"localAccountId\") &&\n            entity.hasOwnProperty(\"username\") &&\n            entity.hasOwnProperty(\"authorityType\"));\n    }\n    /**\n     * Helper function to determine whether 2 accountInfo objects represent the same account\n     * @param accountA\n     * @param accountB\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\n     */\n    static accountInfoIsEqual(accountA, accountB, compareClaims) {\n        if (!accountA || !accountB) {\n            return false;\n        }\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\n        if (compareClaims) {\n            const accountAClaims = (accountA.idTokenClaims ||\n                {});\n            const accountBClaims = (accountB.idTokenClaims ||\n                {});\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\n            claimsMatch =\n                accountAClaims.iat === accountBClaims.iat &&\n                    accountAClaims.nonce === accountBClaims.nonce;\n        }\n        return (accountA.homeAccountId === accountB.homeAccountId &&\n            accountA.localAccountId === accountB.localAccountId &&\n            accountA.username === accountB.username &&\n            accountA.tenantId === accountB.tenantId &&\n            accountA.environment === accountB.environment &&\n            accountA.nativeAccountId === accountB.nativeAccountId &&\n            claimsMatch);\n    }\n}\n\n\n//# sourceMappingURL=AccountEntity.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/entities/AppMetadataEntity.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/entities/AppMetadataEntity.mjs ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppMetadataEntity: function() { return /* binding */ AppMetadataEntity; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * APP_METADATA Cache\n *\n * Key:Value Schema:\n *\n * Key: appmetadata-<environment>-<client_id>\n *\n * Value:\n * {\n *      clientId: client ID of the application\n *      environment: entity that issued the token, represented as a full host\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n * }\n */\nclass AppMetadataEntity {\n    /**\n     * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\n     */\n    generateAppMetadataKey() {\n        return AppMetadataEntity.generateAppMetadataCacheKey(this.environment, this.clientId);\n    }\n    /**\n     * Generate AppMetadata Cache Key\n     */\n    static generateAppMetadataCacheKey(environment, clientId) {\n        const appMetaDataKeyArray = [\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.APP_METADATA,\n            environment,\n            clientId,\n        ];\n        return appMetaDataKeyArray\n            .join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR)\n            .toLowerCase();\n    }\n    /**\n     * Creates AppMetadataEntity\n     * @param clientId\n     * @param environment\n     * @param familyId\n     */\n    static createAppMetadataEntity(clientId, environment, familyId) {\n        const appMetadata = new AppMetadataEntity();\n        appMetadata.clientId = clientId;\n        appMetadata.environment = environment;\n        if (familyId) {\n            appMetadata.familyId = familyId;\n        }\n        return appMetadata;\n    }\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAppMetadataEntity(key, entity) {\n        if (!entity) {\n            return false;\n        }\n        return (key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.APP_METADATA) === 0 &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"environment\"));\n    }\n}\n\n\n//# sourceMappingURL=AppMetadataEntity.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvZW50aXRpZXMvQXBwTWV0YWRhdGFFbnRpdHkubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUN3RDs7QUFFckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw4REFBWTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw0REFBVTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qiw4REFBWTtBQUN4QztBQUNBO0FBQ0E7QUFDQTs7QUFFNkI7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2NhY2hlL2VudGl0aWVzL0FwcE1ldGFkYXRhRW50aXR5Lm1qcz9jOWFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBTZXBhcmF0b3JzLCBBUFBfTUVUQURBVEEgfSBmcm9tICcuLi8uLi91dGlscy9Db25zdGFudHMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIEFQUF9NRVRBREFUQSBDYWNoZVxuICpcbiAqIEtleTpWYWx1ZSBTY2hlbWE6XG4gKlxuICogS2V5OiBhcHBtZXRhZGF0YS08ZW52aXJvbm1lbnQ+LTxjbGllbnRfaWQ+XG4gKlxuICogVmFsdWU6XG4gKiB7XG4gKiAgICAgIGNsaWVudElkOiBjbGllbnQgSUQgb2YgdGhlIGFwcGxpY2F0aW9uXG4gKiAgICAgIGVudmlyb25tZW50OiBlbnRpdHkgdGhhdCBpc3N1ZWQgdGhlIHRva2VuLCByZXByZXNlbnRlZCBhcyBhIGZ1bGwgaG9zdFxuICogICAgICBmYW1pbHlJZDogRmFtaWx5IElEIGlkZW50aWZpZXIsICcxJyByZXByZXNlbnRzIE1pY3Jvc29mdCBGYW1pbHlcbiAqIH1cbiAqL1xuY2xhc3MgQXBwTWV0YWRhdGFFbnRpdHkge1xuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlIEFwcE1ldGFkYXRhIENhY2hlIEtleSBhcyBwZXIgdGhlIHNjaGVtYTogYXBwbWV0YWRhdGEtPGVudmlyb25tZW50Pi08Y2xpZW50X2lkPlxuICAgICAqL1xuICAgIGdlbmVyYXRlQXBwTWV0YWRhdGFLZXkoKSB7XG4gICAgICAgIHJldHVybiBBcHBNZXRhZGF0YUVudGl0eS5nZW5lcmF0ZUFwcE1ldGFkYXRhQ2FjaGVLZXkodGhpcy5lbnZpcm9ubWVudCwgdGhpcy5jbGllbnRJZCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlIEFwcE1ldGFkYXRhIENhY2hlIEtleVxuICAgICAqL1xuICAgIHN0YXRpYyBnZW5lcmF0ZUFwcE1ldGFkYXRhQ2FjaGVLZXkoZW52aXJvbm1lbnQsIGNsaWVudElkKSB7XG4gICAgICAgIGNvbnN0IGFwcE1ldGFEYXRhS2V5QXJyYXkgPSBbXG4gICAgICAgICAgICBBUFBfTUVUQURBVEEsXG4gICAgICAgICAgICBlbnZpcm9ubWVudCxcbiAgICAgICAgICAgIGNsaWVudElkLFxuICAgICAgICBdO1xuICAgICAgICByZXR1cm4gYXBwTWV0YURhdGFLZXlBcnJheVxuICAgICAgICAgICAgLmpvaW4oU2VwYXJhdG9ycy5DQUNIRV9LRVlfU0VQQVJBVE9SKVxuICAgICAgICAgICAgLnRvTG93ZXJDYXNlKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgQXBwTWV0YWRhdGFFbnRpdHlcbiAgICAgKiBAcGFyYW0gY2xpZW50SWRcbiAgICAgKiBAcGFyYW0gZW52aXJvbm1lbnRcbiAgICAgKiBAcGFyYW0gZmFtaWx5SWRcbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlQXBwTWV0YWRhdGFFbnRpdHkoY2xpZW50SWQsIGVudmlyb25tZW50LCBmYW1pbHlJZCkge1xuICAgICAgICBjb25zdCBhcHBNZXRhZGF0YSA9IG5ldyBBcHBNZXRhZGF0YUVudGl0eSgpO1xuICAgICAgICBhcHBNZXRhZGF0YS5jbGllbnRJZCA9IGNsaWVudElkO1xuICAgICAgICBhcHBNZXRhZGF0YS5lbnZpcm9ubWVudCA9IGVudmlyb25tZW50O1xuICAgICAgICBpZiAoZmFtaWx5SWQpIHtcbiAgICAgICAgICAgIGFwcE1ldGFkYXRhLmZhbWlseUlkID0gZmFtaWx5SWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFwcE1ldGFkYXRhO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBWYWxpZGF0ZXMgYW4gZW50aXR5OiBjaGVja3MgZm9yIGFsbCBleHBlY3RlZCBwYXJhbXNcbiAgICAgKiBAcGFyYW0gZW50aXR5XG4gICAgICovXG4gICAgc3RhdGljIGlzQXBwTWV0YWRhdGFFbnRpdHkoa2V5LCBlbnRpdHkpIHtcbiAgICAgICAgaWYgKCFlbnRpdHkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKGtleS5pbmRleE9mKEFQUF9NRVRBREFUQSkgPT09IDAgJiZcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImNsaWVudElkXCIpICYmXG4gICAgICAgICAgICBlbnRpdHkuaGFzT3duUHJvcGVydHkoXCJlbnZpcm9ubWVudFwiKSk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBBcHBNZXRhZGF0YUVudGl0eSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXBwTWV0YWRhdGFFbnRpdHkubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/entities/AppMetadataEntity.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/entities/AuthorityMetadataEntity.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/entities/AuthorityMetadataEntity.mjs ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthorityMetadataEntity: function() { return /* binding */ AuthorityMetadataEntity; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/TimeUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass AuthorityMetadataEntity {\n    constructor() {\n        this.expiresAt =\n            _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.TimeUtils.nowSeconds() +\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n    /**\n     * Update the entity with new aliases, preferred_cache and preferred_network values\n     * @param metadata\n     * @param fromNetwork\n     */\n    updateCloudDiscoveryMetadata(metadata, fromNetwork) {\n        this.aliases = metadata.aliases;\n        this.preferred_cache = metadata.preferred_cache;\n        this.preferred_network = metadata.preferred_network;\n        this.aliasesFromNetwork = fromNetwork;\n    }\n    /**\n     * Update the entity with new endpoints\n     * @param metadata\n     * @param fromNetwork\n     */\n    updateEndpointMetadata(metadata, fromNetwork) {\n        this.authorization_endpoint = metadata.authorization_endpoint;\n        this.token_endpoint = metadata.token_endpoint;\n        this.end_session_endpoint = metadata.end_session_endpoint;\n        this.issuer = metadata.issuer;\n        this.endpointsFromNetwork = fromNetwork;\n        this.jwks_uri = metadata.jwks_uri;\n    }\n    /**\n     * Save the authority that was used to create this cache entry\n     * @param authority\n     */\n    updateCanonicalAuthority(authority) {\n        this.canonical_authority = authority;\n    }\n    /**\n     * Reset the exiresAt value\n     */\n    resetExpiresAt() {\n        this.expiresAt =\n            _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.TimeUtils.nowSeconds() +\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n    /**\n     * Returns whether or not the data needs to be refreshed\n     */\n    isExpired() {\n        return this.expiresAt <= _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.TimeUtils.nowSeconds();\n    }\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAuthorityMetadataEntity(key, entity) {\n        if (!entity) {\n            return false;\n        }\n        return (key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\n            entity.hasOwnProperty(\"aliases\") &&\n            entity.hasOwnProperty(\"preferred_cache\") &&\n            entity.hasOwnProperty(\"preferred_network\") &&\n            entity.hasOwnProperty(\"canonical_authority\") &&\n            entity.hasOwnProperty(\"authorization_endpoint\") &&\n            entity.hasOwnProperty(\"token_endpoint\") &&\n            entity.hasOwnProperty(\"issuer\") &&\n            entity.hasOwnProperty(\"aliasesFromNetwork\") &&\n            entity.hasOwnProperty(\"endpointsFromNetwork\") &&\n            entity.hasOwnProperty(\"expiresAt\") &&\n            entity.hasOwnProperty(\"jwks_uri\"));\n    }\n}\n\n\n//# sourceMappingURL=AuthorityMetadataEntity.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvZW50aXRpZXMvQXV0aG9yaXR5TWV0YWRhdGFFbnRpdHkubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDNEQ7QUFDbkI7O0FBRXREO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDJEQUFTO0FBQ3JCLGdCQUFnQiw4RUFBNEI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDJEQUFTO0FBQ3JCLGdCQUFnQiw4RUFBNEI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQywyREFBUztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsOEVBQTRCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVtQztBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvZW50aXRpZXMvQXV0aG9yaXR5TWV0YWRhdGFFbnRpdHkubWpzPzY1ZTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEFVVEhPUklUWV9NRVRBREFUQV9DT05TVEFOVFMgfSBmcm9tICcuLi8uLi91dGlscy9Db25zdGFudHMubWpzJztcbmltcG9ydCB7IFRpbWVVdGlscyB9IGZyb20gJy4uLy4uL3V0aWxzL1RpbWVVdGlscy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKiBAaW50ZXJuYWwgKi9cbmNsYXNzIEF1dGhvcml0eU1ldGFkYXRhRW50aXR5IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5leHBpcmVzQXQgPVxuICAgICAgICAgICAgVGltZVV0aWxzLm5vd1NlY29uZHMoKSArXG4gICAgICAgICAgICAgICAgQVVUSE9SSVRZX01FVEFEQVRBX0NPTlNUQU5UUy5SRUZSRVNIX1RJTUVfU0VDT05EUztcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXBkYXRlIHRoZSBlbnRpdHkgd2l0aCBuZXcgYWxpYXNlcywgcHJlZmVycmVkX2NhY2hlIGFuZCBwcmVmZXJyZWRfbmV0d29yayB2YWx1ZXNcbiAgICAgKiBAcGFyYW0gbWV0YWRhdGFcbiAgICAgKiBAcGFyYW0gZnJvbU5ldHdvcmtcbiAgICAgKi9cbiAgICB1cGRhdGVDbG91ZERpc2NvdmVyeU1ldGFkYXRhKG1ldGFkYXRhLCBmcm9tTmV0d29yaykge1xuICAgICAgICB0aGlzLmFsaWFzZXMgPSBtZXRhZGF0YS5hbGlhc2VzO1xuICAgICAgICB0aGlzLnByZWZlcnJlZF9jYWNoZSA9IG1ldGFkYXRhLnByZWZlcnJlZF9jYWNoZTtcbiAgICAgICAgdGhpcy5wcmVmZXJyZWRfbmV0d29yayA9IG1ldGFkYXRhLnByZWZlcnJlZF9uZXR3b3JrO1xuICAgICAgICB0aGlzLmFsaWFzZXNGcm9tTmV0d29yayA9IGZyb21OZXR3b3JrO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVcGRhdGUgdGhlIGVudGl0eSB3aXRoIG5ldyBlbmRwb2ludHNcbiAgICAgKiBAcGFyYW0gbWV0YWRhdGFcbiAgICAgKiBAcGFyYW0gZnJvbU5ldHdvcmtcbiAgICAgKi9cbiAgICB1cGRhdGVFbmRwb2ludE1ldGFkYXRhKG1ldGFkYXRhLCBmcm9tTmV0d29yaykge1xuICAgICAgICB0aGlzLmF1dGhvcml6YXRpb25fZW5kcG9pbnQgPSBtZXRhZGF0YS5hdXRob3JpemF0aW9uX2VuZHBvaW50O1xuICAgICAgICB0aGlzLnRva2VuX2VuZHBvaW50ID0gbWV0YWRhdGEudG9rZW5fZW5kcG9pbnQ7XG4gICAgICAgIHRoaXMuZW5kX3Nlc3Npb25fZW5kcG9pbnQgPSBtZXRhZGF0YS5lbmRfc2Vzc2lvbl9lbmRwb2ludDtcbiAgICAgICAgdGhpcy5pc3N1ZXIgPSBtZXRhZGF0YS5pc3N1ZXI7XG4gICAgICAgIHRoaXMuZW5kcG9pbnRzRnJvbU5ldHdvcmsgPSBmcm9tTmV0d29yaztcbiAgICAgICAgdGhpcy5qd2tzX3VyaSA9IG1ldGFkYXRhLmp3a3NfdXJpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTYXZlIHRoZSBhdXRob3JpdHkgdGhhdCB3YXMgdXNlZCB0byBjcmVhdGUgdGhpcyBjYWNoZSBlbnRyeVxuICAgICAqIEBwYXJhbSBhdXRob3JpdHlcbiAgICAgKi9cbiAgICB1cGRhdGVDYW5vbmljYWxBdXRob3JpdHkoYXV0aG9yaXR5KSB7XG4gICAgICAgIHRoaXMuY2Fub25pY2FsX2F1dGhvcml0eSA9IGF1dGhvcml0eTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVzZXQgdGhlIGV4aXJlc0F0IHZhbHVlXG4gICAgICovXG4gICAgcmVzZXRFeHBpcmVzQXQoKSB7XG4gICAgICAgIHRoaXMuZXhwaXJlc0F0ID1cbiAgICAgICAgICAgIFRpbWVVdGlscy5ub3dTZWNvbmRzKCkgK1xuICAgICAgICAgICAgICAgIEFVVEhPUklUWV9NRVRBREFUQV9DT05TVEFOVFMuUkVGUkVTSF9USU1FX1NFQ09ORFM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgd2hldGhlciBvciBub3QgdGhlIGRhdGEgbmVlZHMgdG8gYmUgcmVmcmVzaGVkXG4gICAgICovXG4gICAgaXNFeHBpcmVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5leHBpcmVzQXQgPD0gVGltZVV0aWxzLm5vd1NlY29uZHMoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVmFsaWRhdGVzIGFuIGVudGl0eTogY2hlY2tzIGZvciBhbGwgZXhwZWN0ZWQgcGFyYW1zXG4gICAgICogQHBhcmFtIGVudGl0eVxuICAgICAqL1xuICAgIHN0YXRpYyBpc0F1dGhvcml0eU1ldGFkYXRhRW50aXR5KGtleSwgZW50aXR5KSB7XG4gICAgICAgIGlmICghZW50aXR5KSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChrZXkuaW5kZXhPZihBVVRIT1JJVFlfTUVUQURBVEFfQ09OU1RBTlRTLkNBQ0hFX0tFWSkgPT09IDAgJiZcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImFsaWFzZXNcIikgJiZcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcInByZWZlcnJlZF9jYWNoZVwiKSAmJlxuICAgICAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwicHJlZmVycmVkX25ldHdvcmtcIikgJiZcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImNhbm9uaWNhbF9hdXRob3JpdHlcIikgJiZcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImF1dGhvcml6YXRpb25fZW5kcG9pbnRcIikgJiZcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcInRva2VuX2VuZHBvaW50XCIpICYmXG4gICAgICAgICAgICBlbnRpdHkuaGFzT3duUHJvcGVydHkoXCJpc3N1ZXJcIikgJiZcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImFsaWFzZXNGcm9tTmV0d29ya1wiKSAmJlxuICAgICAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwiZW5kcG9pbnRzRnJvbU5ldHdvcmtcIikgJiZcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImV4cGlyZXNBdFwiKSAmJlxuICAgICAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwiandrc191cmlcIikpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgQXV0aG9yaXR5TWV0YWRhdGFFbnRpdHkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF1dGhvcml0eU1ldGFkYXRhRW50aXR5Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/entities/AuthorityMetadataEntity.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/entities/CacheRecord.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/entities/CacheRecord.mjs ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheRecord: function() { return /* binding */ CacheRecord; }\n/* harmony export */ });\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass CacheRecord {\n    constructor(accountEntity, idTokenEntity, accessTokenEntity, refreshTokenEntity, appMetadataEntity) {\n        this.account = accountEntity || null;\n        this.idToken = idTokenEntity || null;\n        this.accessToken = accessTokenEntity || null;\n        this.refreshToken = refreshTokenEntity || null;\n        this.appMetadata = appMetadataEntity || null;\n    }\n}\n\n\n//# sourceMappingURL=CacheRecord.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvZW50aXRpZXMvQ2FjaGVSZWNvcmQubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2NhY2hlL2VudGl0aWVzL0NhY2hlUmVjb3JkLm1qcz8wMjE4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKiBAaW50ZXJuYWwgKi9cbmNsYXNzIENhY2hlUmVjb3JkIHtcbiAgICBjb25zdHJ1Y3RvcihhY2NvdW50RW50aXR5LCBpZFRva2VuRW50aXR5LCBhY2Nlc3NUb2tlbkVudGl0eSwgcmVmcmVzaFRva2VuRW50aXR5LCBhcHBNZXRhZGF0YUVudGl0eSkge1xuICAgICAgICB0aGlzLmFjY291bnQgPSBhY2NvdW50RW50aXR5IHx8IG51bGw7XG4gICAgICAgIHRoaXMuaWRUb2tlbiA9IGlkVG9rZW5FbnRpdHkgfHwgbnVsbDtcbiAgICAgICAgdGhpcy5hY2Nlc3NUb2tlbiA9IGFjY2Vzc1Rva2VuRW50aXR5IHx8IG51bGw7XG4gICAgICAgIHRoaXMucmVmcmVzaFRva2VuID0gcmVmcmVzaFRva2VuRW50aXR5IHx8IG51bGw7XG4gICAgICAgIHRoaXMuYXBwTWV0YWRhdGEgPSBhcHBNZXRhZGF0YUVudGl0eSB8fCBudWxsO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgQ2FjaGVSZWNvcmQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNhY2hlUmVjb3JkLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/entities/CacheRecord.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/entities/CredentialEntity.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/entities/CredentialEntity.mjs ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CredentialEntity: function() { return /* binding */ CredentialEntity; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Base type for credentials to be stored in the cache: eg: ACCESS_TOKEN, ID_TOKEN etc\n *\n * Key:Value Schema:\n *\n * Key: <home_account_id*>-<environment>-<credential_type>-<client_id>-<realm*>-<target*>-<requestedClaims*>-<scheme*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, usually only used for refresh tokens\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n *      tokenType: Matches the authentication scheme for which the token was issued (i.e. Bearer or pop)\n *      requestedClaimsHash: Matches the SHA 256 hash of the claims object included in the token request\n *      userAssertionHash: Matches the SHA 256 hash of the obo_assertion for the OBO flow\n * }\n */\nclass CredentialEntity {\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId() {\n        return CredentialEntity.generateAccountIdForCacheKey(this.homeAccountId, this.environment);\n    }\n    /**\n     * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\n     */\n    generateCredentialId() {\n        return CredentialEntity.generateCredentialIdForCacheKey(this.credentialType, this.clientId, this.realm, this.familyId);\n    }\n    /**\n     * Generate target key component as per schema: <target>\n     */\n    generateTarget() {\n        return CredentialEntity.generateTargetForCacheKey(this.target);\n    }\n    /**\n     * generates credential key\n     */\n    generateCredentialKey() {\n        return CredentialEntity.generateCredentialCacheKey(this.homeAccountId, this.environment, this.credentialType, this.clientId, this.realm, this.target, this.familyId, this.tokenType, this.requestedClaimsHash);\n    }\n    /**\n     * returns the type of the cache (in this case credential)\n     */\n    generateType() {\n        switch (this.credentialType) {\n            case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN:\n                return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheType.ID_TOKEN;\n            case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN:\n            case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheType.ACCESS_TOKEN;\n            case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN:\n                return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheType.REFRESH_TOKEN;\n            default: {\n                throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createUnexpectedCredentialTypeError();\n            }\n        }\n    }\n    /**\n     * generates credential key\n     * <home_account_id*>-\\<environment>-<credential_type>-<client_id>-<realm\\*>-<target\\*>-<scheme\\*>\n     */\n    static generateCredentialCacheKey(homeAccountId, environment, credentialType, clientId, realm, target, familyId, tokenType, requestedClaimsHash) {\n        const credentialKey = [\n            this.generateAccountIdForCacheKey(homeAccountId, environment),\n            this.generateCredentialIdForCacheKey(credentialType, clientId, realm, familyId),\n            this.generateTargetForCacheKey(target),\n            this.generateClaimsHashForCacheKey(requestedClaimsHash),\n            this.generateSchemeForCacheKey(tokenType),\n        ];\n        return credentialKey.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n    /**\n     * generates Account Id for keys\n     * @param homeAccountId\n     * @param environment\n     */\n    static generateAccountIdForCacheKey(homeAccountId, environment) {\n        const accountId = [homeAccountId, environment];\n        return accountId.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n    /**\n     * Generates Credential Id for keys\n     * @param credentialType\n     * @param realm\n     * @param clientId\n     * @param familyId\n     */\n    static generateCredentialIdForCacheKey(credentialType, clientId, realm, familyId) {\n        const clientOrFamilyId = credentialType === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN\n            ? familyId || clientId\n            : clientId;\n        const credentialId = [\n            credentialType,\n            clientOrFamilyId,\n            realm || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        ];\n        return credentialId.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n    /**\n     * Generate target key component as per schema: <target>\n     */\n    static generateTargetForCacheKey(scopes) {\n        return (scopes || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING).toLowerCase();\n    }\n    /**\n     * Generate requested claims key component as per schema: <requestedClaims>\n     */\n    static generateClaimsHashForCacheKey(requestedClaimsHash) {\n        return (requestedClaimsHash || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING).toLowerCase();\n    }\n    /**\n     * Generate scheme key componenet as per schema: <scheme>\n     */\n    static generateSchemeForCacheKey(tokenType) {\n        /*\n         * PoP Tokens and SSH certs include scheme in cache key\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        return tokenType &&\n            tokenType.toLowerCase() !==\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER.toLowerCase()\n            ? tokenType.toLowerCase()\n            : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n    }\n}\n\n\n//# sourceMappingURL=CredentialEntity.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/entities/CredentialEntity.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/entities/IdTokenEntity.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/entities/IdTokenEntity.mjs ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IdTokenEntity: function() { return /* binding */ IdTokenEntity; }\n/* harmony export */ });\n/* harmony import */ var _CredentialEntity_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CredentialEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/CredentialEntity.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * ID_TOKEN Cache\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      realm: Full tenant or organizational identifier that the account belongs to\n * }\n */\nclass IdTokenEntity extends _CredentialEntity_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialEntity {\n    /**\n     * Create IdTokenEntity\n     * @param homeAccountId\n     * @param authenticationResult\n     * @param clientId\n     * @param authority\n     */\n    static createIdTokenEntity(homeAccountId, environment, idToken, clientId, tenantId) {\n        const idTokenEntity = new IdTokenEntity();\n        idTokenEntity.credentialType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CredentialType.ID_TOKEN;\n        idTokenEntity.homeAccountId = homeAccountId;\n        idTokenEntity.environment = environment;\n        idTokenEntity.clientId = clientId;\n        idTokenEntity.secret = idToken;\n        idTokenEntity.realm = tenantId;\n        return idTokenEntity;\n    }\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isIdTokenEntity(entity) {\n        if (!entity) {\n            return false;\n        }\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity[\"credentialType\"] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CredentialType.ID_TOKEN);\n    }\n}\n\n\n//# sourceMappingURL=IdTokenEntity.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvZW50aXRpZXMvSWRUb2tlbkVudGl0eS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUM2QztBQUNDOztBQUUzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsbUVBQWdCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxnRUFBYztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsZ0VBQWM7QUFDdkQ7QUFDQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2NhY2hlL2VudGl0aWVzL0lkVG9rZW5FbnRpdHkubWpzPzg0YWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IENyZWRlbnRpYWxFbnRpdHkgfSBmcm9tICcuL0NyZWRlbnRpYWxFbnRpdHkubWpzJztcbmltcG9ydCB7IENyZWRlbnRpYWxUeXBlIH0gZnJvbSAnLi4vLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBJRF9UT0tFTiBDYWNoZVxuICpcbiAqIEtleTpWYWx1ZSBTY2hlbWE6XG4gKlxuICogS2V5IEV4YW1wbGU6IHVpZC51dGlkLWxvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20taWR0b2tlbi1jbGllbnRJZC1jb250b3NvLmNvbS1cbiAqXG4gKiBWYWx1ZSBTY2hlbWE6XG4gKiB7XG4gKiAgICAgIGhvbWVBY2NvdW50SWQ6IGhvbWUgYWNjb3VudCBpZGVudGlmaWVyIGZvciB0aGUgYXV0aCBzY2hlbWUsXG4gKiAgICAgIGVudmlyb25tZW50OiBlbnRpdHkgdGhhdCBpc3N1ZWQgdGhlIHRva2VuLCByZXByZXNlbnRlZCBhcyBhIGZ1bGwgaG9zdFxuICogICAgICBjcmVkZW50aWFsVHlwZTogVHlwZSBvZiBjcmVkZW50aWFsIGFzIGEgc3RyaW5nLCBjYW4gYmUgb25lIG9mIHRoZSBmb2xsb3dpbmc6IFJlZnJlc2hUb2tlbiwgQWNjZXNzVG9rZW4sIElkVG9rZW4sIFBhc3N3b3JkLCBDb29raWUsIENlcnRpZmljYXRlLCBPdGhlclxuICogICAgICBjbGllbnRJZDogY2xpZW50IElEIG9mIHRoZSBhcHBsaWNhdGlvblxuICogICAgICBzZWNyZXQ6IEFjdHVhbCBjcmVkZW50aWFsIGFzIGEgc3RyaW5nXG4gKiAgICAgIHJlYWxtOiBGdWxsIHRlbmFudCBvciBvcmdhbml6YXRpb25hbCBpZGVudGlmaWVyIHRoYXQgdGhlIGFjY291bnQgYmVsb25ncyB0b1xuICogfVxuICovXG5jbGFzcyBJZFRva2VuRW50aXR5IGV4dGVuZHMgQ3JlZGVudGlhbEVudGl0eSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIElkVG9rZW5FbnRpdHlcbiAgICAgKiBAcGFyYW0gaG9tZUFjY291bnRJZFxuICAgICAqIEBwYXJhbSBhdXRoZW50aWNhdGlvblJlc3VsdFxuICAgICAqIEBwYXJhbSBjbGllbnRJZFxuICAgICAqIEBwYXJhbSBhdXRob3JpdHlcbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlSWRUb2tlbkVudGl0eShob21lQWNjb3VudElkLCBlbnZpcm9ubWVudCwgaWRUb2tlbiwgY2xpZW50SWQsIHRlbmFudElkKSB7XG4gICAgICAgIGNvbnN0IGlkVG9rZW5FbnRpdHkgPSBuZXcgSWRUb2tlbkVudGl0eSgpO1xuICAgICAgICBpZFRva2VuRW50aXR5LmNyZWRlbnRpYWxUeXBlID0gQ3JlZGVudGlhbFR5cGUuSURfVE9LRU47XG4gICAgICAgIGlkVG9rZW5FbnRpdHkuaG9tZUFjY291bnRJZCA9IGhvbWVBY2NvdW50SWQ7XG4gICAgICAgIGlkVG9rZW5FbnRpdHkuZW52aXJvbm1lbnQgPSBlbnZpcm9ubWVudDtcbiAgICAgICAgaWRUb2tlbkVudGl0eS5jbGllbnRJZCA9IGNsaWVudElkO1xuICAgICAgICBpZFRva2VuRW50aXR5LnNlY3JldCA9IGlkVG9rZW47XG4gICAgICAgIGlkVG9rZW5FbnRpdHkucmVhbG0gPSB0ZW5hbnRJZDtcbiAgICAgICAgcmV0dXJuIGlkVG9rZW5FbnRpdHk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFZhbGlkYXRlcyBhbiBlbnRpdHk6IGNoZWNrcyBmb3IgYWxsIGV4cGVjdGVkIHBhcmFtc1xuICAgICAqIEBwYXJhbSBlbnRpdHlcbiAgICAgKi9cbiAgICBzdGF0aWMgaXNJZFRva2VuRW50aXR5KGVudGl0eSkge1xuICAgICAgICBpZiAoIWVudGl0eSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoZW50aXR5Lmhhc093blByb3BlcnR5KFwiaG9tZUFjY291bnRJZFwiKSAmJlxuICAgICAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwiZW52aXJvbm1lbnRcIikgJiZcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImNyZWRlbnRpYWxUeXBlXCIpICYmXG4gICAgICAgICAgICBlbnRpdHkuaGFzT3duUHJvcGVydHkoXCJyZWFsbVwiKSAmJlxuICAgICAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwiY2xpZW50SWRcIikgJiZcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcInNlY3JldFwiKSAmJlxuICAgICAgICAgICAgZW50aXR5W1wiY3JlZGVudGlhbFR5cGVcIl0gPT09IENyZWRlbnRpYWxUeXBlLklEX1RPS0VOKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IElkVG9rZW5FbnRpdHkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlkVG9rZW5FbnRpdHkubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/entities/IdTokenEntity.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/entities/RefreshTokenEntity.mjs":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/entities/RefreshTokenEntity.mjs ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RefreshTokenEntity: function() { return /* binding */ RefreshTokenEntity; }\n/* harmony export */ });\n/* harmony import */ var _CredentialEntity_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CredentialEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/CredentialEntity.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * REFRESH_TOKEN Cache\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-refreshtoken-clientId--\n *\n * Value:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n * }\n */\nclass RefreshTokenEntity extends _CredentialEntity_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialEntity {\n    /**\n     * Create RefreshTokenEntity\n     * @param homeAccountId\n     * @param authenticationResult\n     * @param clientId\n     * @param authority\n     */\n    static createRefreshTokenEntity(homeAccountId, environment, refreshToken, clientId, familyId, userAssertionHash) {\n        const rtEntity = new RefreshTokenEntity();\n        rtEntity.clientId = clientId;\n        rtEntity.credentialType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CredentialType.REFRESH_TOKEN;\n        rtEntity.environment = environment;\n        rtEntity.homeAccountId = homeAccountId;\n        rtEntity.secret = refreshToken;\n        rtEntity.userAssertionHash = userAssertionHash;\n        if (familyId)\n            rtEntity.familyId = familyId;\n        return rtEntity;\n    }\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isRefreshTokenEntity(entity) {\n        if (!entity) {\n            return false;\n        }\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity[\"credentialType\"] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CredentialType.REFRESH_TOKEN);\n    }\n}\n\n\n//# sourceMappingURL=RefreshTokenEntity.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvZW50aXRpZXMvUmVmcmVzaFRva2VuRW50aXR5Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQzZDO0FBQ0M7O0FBRTNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsbUVBQWdCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGdFQUFjO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxnRUFBYztBQUN2RDtBQUNBOztBQUU4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvZW50aXRpZXMvUmVmcmVzaFRva2VuRW50aXR5Lm1qcz80Yjg0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBDcmVkZW50aWFsRW50aXR5IH0gZnJvbSAnLi9DcmVkZW50aWFsRW50aXR5Lm1qcyc7XG5pbXBvcnQgeyBDcmVkZW50aWFsVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogUkVGUkVTSF9UT0tFTiBDYWNoZVxuICpcbiAqIEtleTpWYWx1ZSBTY2hlbWE6XG4gKlxuICogS2V5IEV4YW1wbGU6IHVpZC51dGlkLWxvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20tcmVmcmVzaHRva2VuLWNsaWVudElkLS1cbiAqXG4gKiBWYWx1ZTpcbiAqIHtcbiAqICAgICAgaG9tZUFjY291bnRJZDogaG9tZSBhY2NvdW50IGlkZW50aWZpZXIgZm9yIHRoZSBhdXRoIHNjaGVtZSxcbiAqICAgICAgZW52aXJvbm1lbnQ6IGVudGl0eSB0aGF0IGlzc3VlZCB0aGUgdG9rZW4sIHJlcHJlc2VudGVkIGFzIGEgZnVsbCBob3N0XG4gKiAgICAgIGNyZWRlbnRpYWxUeXBlOiBUeXBlIG9mIGNyZWRlbnRpYWwgYXMgYSBzdHJpbmcsIGNhbiBiZSBvbmUgb2YgdGhlIGZvbGxvd2luZzogUmVmcmVzaFRva2VuLCBBY2Nlc3NUb2tlbiwgSWRUb2tlbiwgUGFzc3dvcmQsIENvb2tpZSwgQ2VydGlmaWNhdGUsIE90aGVyXG4gKiAgICAgIGNsaWVudElkOiBjbGllbnQgSUQgb2YgdGhlIGFwcGxpY2F0aW9uXG4gKiAgICAgIHNlY3JldDogQWN0dWFsIGNyZWRlbnRpYWwgYXMgYSBzdHJpbmdcbiAqICAgICAgZmFtaWx5SWQ6IEZhbWlseSBJRCBpZGVudGlmaWVyLCAnMScgcmVwcmVzZW50cyBNaWNyb3NvZnQgRmFtaWx5XG4gKiAgICAgIHJlYWxtOiBGdWxsIHRlbmFudCBvciBvcmdhbml6YXRpb25hbCBpZGVudGlmaWVyIHRoYXQgdGhlIGFjY291bnQgYmVsb25ncyB0b1xuICogICAgICB0YXJnZXQ6IFBlcm1pc3Npb25zIHRoYXQgYXJlIGluY2x1ZGVkIGluIHRoZSB0b2tlbiwgb3IgZm9yIHJlZnJlc2ggdG9rZW5zLCB0aGUgcmVzb3VyY2UgaWRlbnRpZmllci5cbiAqIH1cbiAqL1xuY2xhc3MgUmVmcmVzaFRva2VuRW50aXR5IGV4dGVuZHMgQ3JlZGVudGlhbEVudGl0eSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIFJlZnJlc2hUb2tlbkVudGl0eVxuICAgICAqIEBwYXJhbSBob21lQWNjb3VudElkXG4gICAgICogQHBhcmFtIGF1dGhlbnRpY2F0aW9uUmVzdWx0XG4gICAgICogQHBhcmFtIGNsaWVudElkXG4gICAgICogQHBhcmFtIGF1dGhvcml0eVxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVSZWZyZXNoVG9rZW5FbnRpdHkoaG9tZUFjY291bnRJZCwgZW52aXJvbm1lbnQsIHJlZnJlc2hUb2tlbiwgY2xpZW50SWQsIGZhbWlseUlkLCB1c2VyQXNzZXJ0aW9uSGFzaCkge1xuICAgICAgICBjb25zdCBydEVudGl0eSA9IG5ldyBSZWZyZXNoVG9rZW5FbnRpdHkoKTtcbiAgICAgICAgcnRFbnRpdHkuY2xpZW50SWQgPSBjbGllbnRJZDtcbiAgICAgICAgcnRFbnRpdHkuY3JlZGVudGlhbFR5cGUgPSBDcmVkZW50aWFsVHlwZS5SRUZSRVNIX1RPS0VOO1xuICAgICAgICBydEVudGl0eS5lbnZpcm9ubWVudCA9IGVudmlyb25tZW50O1xuICAgICAgICBydEVudGl0eS5ob21lQWNjb3VudElkID0gaG9tZUFjY291bnRJZDtcbiAgICAgICAgcnRFbnRpdHkuc2VjcmV0ID0gcmVmcmVzaFRva2VuO1xuICAgICAgICBydEVudGl0eS51c2VyQXNzZXJ0aW9uSGFzaCA9IHVzZXJBc3NlcnRpb25IYXNoO1xuICAgICAgICBpZiAoZmFtaWx5SWQpXG4gICAgICAgICAgICBydEVudGl0eS5mYW1pbHlJZCA9IGZhbWlseUlkO1xuICAgICAgICByZXR1cm4gcnRFbnRpdHk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFZhbGlkYXRlcyBhbiBlbnRpdHk6IGNoZWNrcyBmb3IgYWxsIGV4cGVjdGVkIHBhcmFtc1xuICAgICAqIEBwYXJhbSBlbnRpdHlcbiAgICAgKi9cbiAgICBzdGF0aWMgaXNSZWZyZXNoVG9rZW5FbnRpdHkoZW50aXR5KSB7XG4gICAgICAgIGlmICghZW50aXR5KSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChlbnRpdHkuaGFzT3duUHJvcGVydHkoXCJob21lQWNjb3VudElkXCIpICYmXG4gICAgICAgICAgICBlbnRpdHkuaGFzT3duUHJvcGVydHkoXCJlbnZpcm9ubWVudFwiKSAmJlxuICAgICAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwiY3JlZGVudGlhbFR5cGVcIikgJiZcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImNsaWVudElkXCIpICYmXG4gICAgICAgICAgICBlbnRpdHkuaGFzT3duUHJvcGVydHkoXCJzZWNyZXRcIikgJiZcbiAgICAgICAgICAgIGVudGl0eVtcImNyZWRlbnRpYWxUeXBlXCJdID09PSBDcmVkZW50aWFsVHlwZS5SRUZSRVNIX1RPS0VOKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IFJlZnJlc2hUb2tlbkVudGl0eSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmVmcmVzaFRva2VuRW50aXR5Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/entities/RefreshTokenEntity.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/entities/ServerTelemetryEntity.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/entities/ServerTelemetryEntity.mjs ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerTelemetryEntity: function() { return /* binding */ ServerTelemetryEntity; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass ServerTelemetryEntity {\n    constructor() {\n        this.failedRequests = [];\n        this.errors = [];\n        this.cacheHits = 0;\n    }\n    /**\n     * validates if a given cache entry is \"Telemetry\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isServerTelemetryEntity(key, entity) {\n        const validateKey = key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\n        let validateEntity = true;\n        if (entity) {\n            validateEntity =\n                entity.hasOwnProperty(\"failedRequests\") &&\n                    entity.hasOwnProperty(\"errors\") &&\n                    entity.hasOwnProperty(\"cacheHits\");\n        }\n        return validateKey && validateEntity;\n    }\n}\n\n\n//# sourceMappingURL=ServerTelemetryEntity.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvZW50aXRpZXMvU2VydmVyVGVsZW1ldHJ5RW50aXR5Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDc0Q7O0FBRW5FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLHdFQUFzQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFaUM7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2NhY2hlL2VudGl0aWVzL1NlcnZlclRlbGVtZXRyeUVudGl0eS5tanM/MzUzNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgU0VSVkVSX1RFTEVNX0NPTlNUQU5UUyB9IGZyb20gJy4uLy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIFNlcnZlclRlbGVtZXRyeUVudGl0eSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZmFpbGVkUmVxdWVzdHMgPSBbXTtcbiAgICAgICAgdGhpcy5lcnJvcnMgPSBbXTtcbiAgICAgICAgdGhpcy5jYWNoZUhpdHMgPSAwO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiB2YWxpZGF0ZXMgaWYgYSBnaXZlbiBjYWNoZSBlbnRyeSBpcyBcIlRlbGVtZXRyeVwiLCBwYXJzZXMgPGtleSx2YWx1ZT5cbiAgICAgKiBAcGFyYW0ga2V5XG4gICAgICogQHBhcmFtIGVudGl0eVxuICAgICAqL1xuICAgIHN0YXRpYyBpc1NlcnZlclRlbGVtZXRyeUVudGl0eShrZXksIGVudGl0eSkge1xuICAgICAgICBjb25zdCB2YWxpZGF0ZUtleSA9IGtleS5pbmRleE9mKFNFUlZFUl9URUxFTV9DT05TVEFOVFMuQ0FDSEVfS0VZKSA9PT0gMDtcbiAgICAgICAgbGV0IHZhbGlkYXRlRW50aXR5ID0gdHJ1ZTtcbiAgICAgICAgaWYgKGVudGl0eSkge1xuICAgICAgICAgICAgdmFsaWRhdGVFbnRpdHkgPVxuICAgICAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImZhaWxlZFJlcXVlc3RzXCIpICYmXG4gICAgICAgICAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImVycm9yc1wiKSAmJlxuICAgICAgICAgICAgICAgICAgICBlbnRpdHkuaGFzT3duUHJvcGVydHkoXCJjYWNoZUhpdHNcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbGlkYXRlS2V5ICYmIHZhbGlkYXRlRW50aXR5O1xuICAgIH1cbn1cblxuZXhwb3J0IHsgU2VydmVyVGVsZW1ldHJ5RW50aXR5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXJ2ZXJUZWxlbWV0cnlFbnRpdHkubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/entities/ServerTelemetryEntity.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/entities/ThrottlingEntity.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/entities/ThrottlingEntity.mjs ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThrottlingEntity: function() { return /* binding */ ThrottlingEntity; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass ThrottlingEntity {\n    /**\n     * validates if a given cache entry is \"Throttling\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isThrottlingEntity(key, entity) {\n        let validateKey = false;\n        if (key) {\n            validateKey =\n                key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.THROTTLING_PREFIX) === 0;\n        }\n        let validateEntity = true;\n        if (entity) {\n            validateEntity = entity.hasOwnProperty(\"throttleTime\");\n        }\n        return validateKey && validateEntity;\n    }\n}\n\n\n//# sourceMappingURL=ThrottlingEntity.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvZW50aXRpZXMvVGhyb3R0bGluZ0VudGl0eS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNhO0FBQ21EOztBQUVoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHFFQUFtQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvZW50aXRpZXMvVGhyb3R0bGluZ0VudGl0eS5tanM/OWMzMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgVGhyb3R0bGluZ0NvbnN0YW50cyB9IGZyb20gJy4uLy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIFRocm90dGxpbmdFbnRpdHkge1xuICAgIC8qKlxuICAgICAqIHZhbGlkYXRlcyBpZiBhIGdpdmVuIGNhY2hlIGVudHJ5IGlzIFwiVGhyb3R0bGluZ1wiLCBwYXJzZXMgPGtleSx2YWx1ZT5cbiAgICAgKiBAcGFyYW0ga2V5XG4gICAgICogQHBhcmFtIGVudGl0eVxuICAgICAqL1xuICAgIHN0YXRpYyBpc1Rocm90dGxpbmdFbnRpdHkoa2V5LCBlbnRpdHkpIHtcbiAgICAgICAgbGV0IHZhbGlkYXRlS2V5ID0gZmFsc2U7XG4gICAgICAgIGlmIChrZXkpIHtcbiAgICAgICAgICAgIHZhbGlkYXRlS2V5ID1cbiAgICAgICAgICAgICAgICBrZXkuaW5kZXhPZihUaHJvdHRsaW5nQ29uc3RhbnRzLlRIUk9UVExJTkdfUFJFRklYKSA9PT0gMDtcbiAgICAgICAgfVxuICAgICAgICBsZXQgdmFsaWRhdGVFbnRpdHkgPSB0cnVlO1xuICAgICAgICBpZiAoZW50aXR5KSB7XG4gICAgICAgICAgICB2YWxpZGF0ZUVudGl0eSA9IGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcInRocm90dGxlVGltZVwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsaWRhdGVLZXkgJiYgdmFsaWRhdGVFbnRpdHk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBUaHJvdHRsaW5nRW50aXR5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UaHJvdHRsaW5nRW50aXR5Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/entities/ThrottlingEntity.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TokenCacheContext: function() { return /* binding */ TokenCacheContext; }\n/* harmony export */ });\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class instance helps track the memory changes facilitating\n * decisions to read from and write to the persistent cache\n */ class TokenCacheContext {\n    constructor(tokenCache, hasChanged) {\n        this.cache = tokenCache;\n        this.hasChanged = hasChanged;\n    }\n    /**\n     * boolean which indicates the changes in cache\n     */\n    get cacheHasChanged() {\n        return this.hasChanged;\n    }\n    /**\n     * function to retrieve the token cache\n     */\n    get tokenCache() {\n        return this.cache;\n    }\n}\n\n\n//# sourceMappingURL=TokenCacheContext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvcGVyc2lzdGVuY2UvVG9rZW5DYWNoZUNvbnRleHQubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9jYWNoZS9wZXJzaXN0ZW5jZS9Ub2tlbkNhY2hlQ29udGV4dC5tanM/MWU3YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIFRoaXMgY2xhc3MgaW5zdGFuY2UgaGVscHMgdHJhY2sgdGhlIG1lbW9yeSBjaGFuZ2VzIGZhY2lsaXRhdGluZ1xuICogZGVjaXNpb25zIHRvIHJlYWQgZnJvbSBhbmQgd3JpdGUgdG8gdGhlIHBlcnNpc3RlbnQgY2FjaGVcbiAqLyBjbGFzcyBUb2tlbkNhY2hlQ29udGV4dCB7XG4gICAgY29uc3RydWN0b3IodG9rZW5DYWNoZSwgaGFzQ2hhbmdlZCkge1xuICAgICAgICB0aGlzLmNhY2hlID0gdG9rZW5DYWNoZTtcbiAgICAgICAgdGhpcy5oYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogYm9vbGVhbiB3aGljaCBpbmRpY2F0ZXMgdGhlIGNoYW5nZXMgaW4gY2FjaGVcbiAgICAgKi9cbiAgICBnZXQgY2FjaGVIYXNDaGFuZ2VkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5oYXNDaGFuZ2VkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBmdW5jdGlvbiB0byByZXRyaWV2ZSB0aGUgdG9rZW4gY2FjaGVcbiAgICAgKi9cbiAgICBnZXQgdG9rZW5DYWNoZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FjaGU7XG4gICAgfVxufVxuXG5leHBvcnQgeyBUb2tlbkNhY2hlQ29udGV4dCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VG9rZW5DYWNoZUNvbnRleHQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthorizationCodeClient: function() { return /* binding */ AuthorizationCodeClient; }\n/* harmony export */ });\n/* harmony import */ var _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../request/RequestParameterBuilder.mjs */ \"./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../config/ClientConfiguration.mjs */ \"./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../crypto/PopTokenGenerator.mjs */ \"./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../account/ClientInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../account/CcsCredential.mjs */ \"./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _request_RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../request/RequestValidator.mjs */ \"./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Oauth2.0 Authorization Code client\n * @internal\n */\nclass AuthorizationCodeClient extends _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n    constructor(configuration, performanceClient) {\n        super(configuration, performanceClient);\n        // Flag to indicate if client is for hybrid spa auth code redemption\n        this.includeRedirectUri = true;\n        this.oidcDefaultScopes =\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes;\n    }\n    /**\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\n     * application. The URL target the /authorize endpoint of the authority configured in the\n     * application object.\n     *\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\n     * acquireToken(AuthorizationCodeRequest)\n     * @param request\n     */\n    async getAuthCodeUrl(request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.GetAuthCodeUrl, request.correlationId);\n        this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateQueryString, request.correlationId);\n        const queryString = await this.createAuthCodeUrlQueryString(request);\n        return _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_2__.UrlString.appendQueryString(this.authority.authorizationEndpoint, queryString);\n    }\n    /**\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\n     * authorization_code_grant\n     * @param request\n     */\n    async acquireToken(request, authCodePayload) {\n        if (!request || !request.code) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError.createTokenRequestCannotBeMadeError();\n        }\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientAcquireToken, request.correlationId);\n        const atsMeasurement = this.performanceClient?.startMeasurement(\n        // @ts-ignore\n        \"AuthCodeClientAcquireToken\", request.correlationId);\n        this.logger.info(\"in acquireToken call in auth-code client\");\n        const reqTimestamp = _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_4__.TimeUtils.nowSeconds();\n        this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientExecuteTokenRequest, request.correlationId);\n        const response = await this.executeTokenRequest(this.authority, request);\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.HeaderNames.X_MS_REQUEST_ID];\n        const httpVerAuthority = response.headers?.[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.HeaderNames.X_MS_HTTP_VERSION];\n        if (httpVerAuthority) {\n            atsMeasurement?.add({\n                httpVerAuthority,\n            });\n        }\n        const responseHandler = new _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_6__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin, this.performanceClient);\n        // Validate response. This function throws a server error if an error is returned by the server.\n        responseHandler.validateTokenResponse(response.body);\n        this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.HandleServerTokenResponse, request.correlationId);\n        return responseHandler\n            .handleServerTokenResponse(response.body, this.authority, reqTimestamp, request, authCodePayload, undefined, undefined, undefined, requestId)\n            .then((result) => {\n            atsMeasurement?.end({\n                success: true,\n            });\n            return result;\n        })\n            .catch((error) => {\n            this.logger.verbose(\"Error in fetching token in ACC\", request.correlationId);\n            atsMeasurement?.end({\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                success: false,\n            });\n            throw error;\n        });\n    }\n    /**\n     * Handles the hash fragment response from public client code request. Returns a code response used by\n     * the client to exchange for a token in acquireToken.\n     * @param hashFragment\n     */\n    handleFragmentResponse(hashFragment, cachedState) {\n        // Handle responses.\n        const responseHandler = new _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_6__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, null, null);\n        const serverParams = _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_2__.UrlString.getDeserializedCodeResponse(this.config.authOptions.authority.options.OIDCOptions\n            ?.serverResponseType, hashFragment);\n        // Get code response\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState, this.cryptoUtils);\n        // throw when there is no auth code in the response\n        if (!serverParams.code) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError.createNoAuthCodeInServerResponseError();\n        }\n        return {\n            ...serverParams,\n            // Code param is optional in ServerAuthorizationCodeResponse but required in AuthorizationCodePaylod\n            code: serverParams.code,\n        };\n    }\n    /**\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param authorityUri\n     */\n    getLogoutUri(logoutRequest) {\n        // Throw error if logoutRequest is null/undefined\n        if (!logoutRequest) {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_7__.ClientConfigurationError.createEmptyLogoutRequestError();\n        }\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\n        // Construct logout URI\n        return _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_2__.UrlString.appendQueryString(this.authority.endSessionEndpoint, queryString);\n    }\n    /**\n     * Executes POST request to token endpoint\n     * @param authority\n     * @param request\n     */\n    async executeTokenRequest(authority, request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientExecuteTokenRequest, request.correlationId);\n        this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateTokenRequestBody, request.correlationId);\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_2__.UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\n        const requestBody = await this.createTokenRequestBody(request);\n        let ccsCredential = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_8__.buildClientInfo)(request.clientInfo, this.cryptoUtils);\n                ccsCredential = {\n                    credential: `${clientInfo.uid}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_9__.CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            }\n            catch (e) {\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\n            }\n        }\n        const headers = this.createTokenRequestHeaders(ccsCredential || request.ccsCredential);\n        const thumbprint = {\n            clientId: this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        return this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint);\n    }\n    /**\n     * Generates a map for all the params to be sent to the service\n     * @param request\n     */\n    async createTokenRequestBody(request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateTokenRequestBody, request.correlationId);\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_10__.RequestParameterBuilder();\n        parameterBuilder.addClientId(request.tokenBodyParameters?.[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.AADServerParamKeys.CLIENT_ID] ||\n            this.config.authOptions.clientId);\n        /*\n         * For hybrid spa flow, there will be a code but no verifier\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\n         */\n        if (!this.includeRedirectUri) {\n            // Just validate\n            _request_RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_11__.RequestValidator.validateRedirectUri(request.redirectUri);\n        }\n        else {\n            // Validate and include redirect uri\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n        // Add scope array, parameter builder will add default scopes and dedupe\n        parameterBuilder.addScopes(request.scopes, true, this.oidcDefaultScopes);\n        // add code: user set, not validated\n        parameterBuilder.addAuthorizationCode(request.code);\n        // Add library metadata\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n        if (this.serverTelemetryManager && !(0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_12__.isOidcProtocolMode)(this.config)) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n        // add code_verifier if passed\n        if (request.codeVerifier) {\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\n        }\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n        parameterBuilder.addGrantType(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.GrantType.AUTHORIZATION_CODE_GRANT);\n        parameterBuilder.addClientInfo();\n        if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.AuthenticationScheme.POP) {\n            const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_13__.PopTokenGenerator(this.cryptoUtils, this.performanceClient);\n            this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.PopTokenGenerateCnf, request.correlationId);\n            const reqCnfData = await popTokenGenerator.generateCnf(request);\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n        }\n        else if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            }\n            else {\n                throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_7__.ClientConfigurationError.createMissingSshJwkError();\n            }\n        }\n        const correlationId = request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_14__.StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        let ccsCred = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_8__.buildClientInfo)(request.clientInfo, this.cryptoUtils);\n                ccsCred = {\n                    credential: `${clientInfo.uid}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_9__.CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            }\n            catch (e) {\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\n            }\n        }\n        else {\n            ccsCred = request.ccsCredential;\n        }\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_9__.CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_8__.buildClientInfoFromHomeAccountId)(ccsCred.credential);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\n                            e);\n                    }\n                    break;\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_9__.CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(ccsCred.credential);\n                    break;\n            }\n        }\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\n        }\n        // Add hybrid spa parameters if not already provided\n        if (request.enableSpaAuthorizationCode &&\n            (!request.tokenBodyParameters ||\n                !request.tokenBodyParameters[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.AADServerParamKeys.RETURN_SPA_CODE])) {\n            parameterBuilder.addExtraQueryParameters({\n                [_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.AADServerParamKeys.RETURN_SPA_CODE]: \"1\",\n            });\n        }\n        return parameterBuilder.createQueryString();\n    }\n    /**\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\n     * @param request\n     */\n    async createAuthCodeUrlQueryString(request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateQueryString, request.correlationId);\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_10__.RequestParameterBuilder();\n        parameterBuilder.addClientId(request.extraQueryParameters?.[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.AADServerParamKeys.CLIENT_ID] ||\n            this.config.authOptions.clientId);\n        const requestScopes = [\n            ...(request.scopes || []),\n            ...(request.extraScopesToConsent || []),\n        ];\n        parameterBuilder.addScopes(requestScopes, true, this.oidcDefaultScopes);\n        // validate the redirectUri (to be a non null value)\n        parameterBuilder.addRedirectUri(request.redirectUri);\n        // generate the correlationId if not set by the user and add\n        const correlationId = request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n        // add response_mode. If not passed in it defaults to query.\n        parameterBuilder.addResponseMode(request.responseMode);\n        // add response_type = code\n        parameterBuilder.addResponseTypeCode();\n        // add library info parameters\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        if (!(0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_12__.isOidcProtocolMode)(this.config)) {\n            parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        }\n        // add client_info=1\n        parameterBuilder.addClientInfo();\n        if (request.codeChallenge && request.codeChallengeMethod) {\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\n        }\n        if (request.prompt) {\n            parameterBuilder.addPrompt(request.prompt);\n        }\n        if (request.domainHint) {\n            parameterBuilder.addDomainHint(request.domainHint);\n        }\n        // Add sid or loginHint with preference for login_hint claim (in request) -> sid -> loginHint (upn/email) -> username of AccountInfo object\n        if (request.prompt !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.PromptValue.SELECT_ACCOUNT) {\n            // AAD will throw if prompt=select_account is passed with an account hint\n            if (request.sid && request.prompt === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.PromptValue.NONE) {\n                // SessionID is only used in silent calls\n                this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\");\n                parameterBuilder.addSid(request.sid);\n            }\n            else if (request.account) {\n                const accountSid = this.extractAccountSid(request.account);\n                const accountLoginHintClaim = this.extractLoginHint(request.account);\n                // If login_hint claim is present, use it over sid/username\n                if (accountLoginHintClaim) {\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: login_hint claim present on account\");\n                    parameterBuilder.addLoginHint(accountLoginHintClaim);\n                    try {\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_8__.buildClientInfoFromHomeAccountId)(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                }\n                else if (accountSid && request.prompt === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.PromptValue.NONE) {\n                    /*\n                     * If account and loginHint are provided, we will check account first for sid before adding loginHint\n                     * SessionId is only used in silent calls\n                     */\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\");\n                    parameterBuilder.addSid(accountSid);\n                    try {\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_8__.buildClientInfoFromHomeAccountId)(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                }\n                else if (request.loginHint) {\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from request\");\n                    parameterBuilder.addLoginHint(request.loginHint);\n                    parameterBuilder.addCcsUpn(request.loginHint);\n                }\n                else if (request.account.username) {\n                    // Fallback to account username if provided\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from account\");\n                    parameterBuilder.addLoginHint(request.account.username);\n                    try {\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_8__.buildClientInfoFromHomeAccountId)(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                }\n            }\n            else if (request.loginHint) {\n                this.logger.verbose(\"createAuthCodeUrlQueryString: No account, adding login_hint from request\");\n                parameterBuilder.addLoginHint(request.loginHint);\n                parameterBuilder.addCcsUpn(request.loginHint);\n            }\n        }\n        else {\n            this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\");\n        }\n        if (request.nonce) {\n            parameterBuilder.addNonce(request.nonce);\n        }\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_14__.StringUtils.isEmpty(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n        if (request.nativeBroker) {\n            // signal ests that this is a WAM call\n            parameterBuilder.addNativeBroker();\n            // pass the req_cnf for POP\n            if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_5__.AuthenticationScheme.POP) {\n                const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_13__.PopTokenGenerator(this.cryptoUtils);\n                // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n                const reqCnfData = await popTokenGenerator.generateCnf(request);\n                parameterBuilder.addPopToken(reqCnfData.reqCnfHash);\n            }\n        }\n        return parameterBuilder.createQueryString();\n    }\n    /**\n     * This API validates the `EndSessionRequest` and creates a URL\n     * @param request\n     */\n    createLogoutUrlQueryString(request) {\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_10__.RequestParameterBuilder();\n        if (request.postLogoutRedirectUri) {\n            parameterBuilder.addPostLogoutRedirectUri(request.postLogoutRedirectUri);\n        }\n        if (request.correlationId) {\n            parameterBuilder.addCorrelationId(request.correlationId);\n        }\n        if (request.idTokenHint) {\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\n        }\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n        if (request.logoutHint) {\n            parameterBuilder.addLogoutHint(request.logoutHint);\n        }\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n        return parameterBuilder.createQueryString();\n    }\n    /**\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\n     * @param account\n     */\n    extractAccountSid(account) {\n        return account.idTokenClaims?.sid || null;\n    }\n    extractLoginHint(account) {\n        return account.idTokenClaims?.login_hint || null;\n    }\n}\n\n\n//# sourceMappingURL=AuthorizationCodeClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/client/BaseClient.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/BaseClient.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseClient: function() { return /* binding */ BaseClient; }\n/* harmony export */ });\n/* harmony import */ var _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/ClientConfiguration.mjs */ \"./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _network_NetworkManager_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../network/NetworkManager.mjs */ \"./node_modules/@azure/msal-common/dist/network/NetworkManager.mjs\");\n/* harmony import */ var _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger/Logger.mjs */ \"./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-common/dist/packageMetadata.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../account/CcsCredential.mjs */ \"./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../account/ClientInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../request/RequestParameterBuilder.mjs */ \"./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\n * @internal\n */\nclass BaseClient {\n    constructor(configuration, performanceClient) {\n        // Set the configuration\n        this.config = (0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_0__.buildClientConfiguration)(configuration);\n        // Initialize the logger\n        this.logger = new _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__.Logger(this.config.loggerOptions, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.version);\n        // Initialize crypto\n        this.cryptoUtils = this.config.cryptoInterface;\n        // Initialize storage interface\n        this.cacheManager = this.config.storageInterface;\n        // Set the network interface\n        this.networkClient = this.config.networkInterface;\n        // Set the NetworkManager\n        this.networkManager = new _network_NetworkManager_mjs__WEBPACK_IMPORTED_MODULE_3__.NetworkManager(this.networkClient, this.cacheManager);\n        // Set TelemetryManager\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\n        // set Authority\n        this.authority = this.config.authOptions.authority;\n        // set performance telemetry client\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Creates default headers for requests to token endpoint\n     */\n    createTokenRequestHeaders(ccsCred) {\n        const headers = {};\n        headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.CONTENT_TYPE] = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.URL_FORM_CONTENT_TYPE;\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_5__.CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_6__.buildClientInfoFromHomeAccountId)(ccsCred.credential);\n                        headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.CCS_HEADER] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\n                            e);\n                    }\n                    break;\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_5__.CcsCredentialType.UPN:\n                    headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.CCS_HEADER] = `UPN: ${ccsCred.credential}`;\n                    break;\n            }\n        }\n        return headers;\n    }\n    /**\n     * Http post to token endpoint\n     * @param tokenEndpoint\n     * @param queryString\n     * @param headers\n     * @param thumbprint\n     */\n    async executePostToTokenEndpoint(tokenEndpoint, queryString, headers, thumbprint) {\n        const response = await this.networkManager.sendPostRequest(thumbprint, tokenEndpoint, { body: queryString, headers: headers });\n        if (this.config.serverTelemetryManager &&\n            response.status < 500 &&\n            response.status !== 429) {\n            // Telemetry data successfully logged by server, clear Telemetry cache\n            this.config.serverTelemetryManager.clearTelemetryCache();\n        }\n        return response;\n    }\n    /**\n     * Updates the authority object of the client. Endpoint discovery must be completed.\n     * @param updatedAuthority\n     */\n    updateAuthority(updatedAuthority) {\n        if (!updatedAuthority.discoveryComplete()) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_7__.ClientAuthError.createEndpointDiscoveryIncompleteError(\"Updated authority has not completed endpoint discovery.\");\n        }\n        this.authority = updatedAuthority;\n    }\n    /**\n     * Creates query string for the /token request\n     * @param request\n     */\n    createTokenQueryParameters(request) {\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_8__.RequestParameterBuilder();\n        if (request.tokenQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\n        }\n        return parameterBuilder.createQueryString();\n    }\n}\n\n\n//# sourceMappingURL=BaseClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2xpZW50L0Jhc2VDbGllbnQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2dFO0FBQ2Q7QUFDakI7QUFDa0I7QUFDVDtBQUNRO0FBQ0U7QUFDWTtBQUNJOztBQUVqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlGQUF3QjtBQUM5QztBQUNBLDBCQUEwQixzREFBTSw0QkFBNEIsc0RBQUksRUFBRSx5REFBTztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyx1RUFBYztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsNkRBQVcsaUJBQWlCLDJEQUFTO0FBQ3JEO0FBQ0E7QUFDQSxxQkFBcUIseUVBQWlCO0FBQ3RDO0FBQ0EsMkNBQTJDLHlGQUFnQztBQUMzRSxnQ0FBZ0MsNkRBQVcsc0JBQXNCLGVBQWUsR0FBRyxnQkFBZ0I7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHlFQUFpQjtBQUN0Qyw0QkFBNEIsNkRBQVcsdUJBQXVCLG1CQUFtQjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdHQUFnRyxxQ0FBcUM7QUFDckk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1RUFBZTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHlGQUF1QjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9jbGllbnQvQmFzZUNsaWVudC5tanM/NGVjMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgYnVpbGRDbGllbnRDb25maWd1cmF0aW9uIH0gZnJvbSAnLi4vY29uZmlnL0NsaWVudENvbmZpZ3VyYXRpb24ubWpzJztcbmltcG9ydCB7IE5ldHdvcmtNYW5hZ2VyIH0gZnJvbSAnLi4vbmV0d29yay9OZXR3b3JrTWFuYWdlci5tanMnO1xuaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSAnLi4vbG9nZ2VyL0xvZ2dlci5tanMnO1xuaW1wb3J0IHsgSGVhZGVyTmFtZXMsIENvbnN0YW50cyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgbmFtZSwgdmVyc2lvbiB9IGZyb20gJy4uL3BhY2thZ2VNZXRhZGF0YS5tanMnO1xuaW1wb3J0IHsgQ2xpZW50QXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBDY3NDcmVkZW50aWFsVHlwZSB9IGZyb20gJy4uL2FjY291bnQvQ2NzQ3JlZGVudGlhbC5tanMnO1xuaW1wb3J0IHsgYnVpbGRDbGllbnRJbmZvRnJvbUhvbWVBY2NvdW50SWQgfSBmcm9tICcuLi9hY2NvdW50L0NsaWVudEluZm8ubWpzJztcbmltcG9ydCB7IFJlcXVlc3RQYXJhbWV0ZXJCdWlsZGVyIH0gZnJvbSAnLi4vcmVxdWVzdC9SZXF1ZXN0UGFyYW1ldGVyQnVpbGRlci5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogQmFzZSBhcHBsaWNhdGlvbiBjbGFzcyB3aGljaCB3aWxsIGNvbnN0cnVjdCByZXF1ZXN0cyB0byBzZW5kIHRvIGFuZCBoYW5kbGUgcmVzcG9uc2VzIGZyb20gdGhlIE1pY3Jvc29mdCBTVFMgdXNpbmcgdGhlIGF1dGhvcml6YXRpb24gY29kZSBmbG93LlxuICogQGludGVybmFsXG4gKi9cbmNsYXNzIEJhc2VDbGllbnQge1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZ3VyYXRpb24sIHBlcmZvcm1hbmNlQ2xpZW50KSB7XG4gICAgICAgIC8vIFNldCB0aGUgY29uZmlndXJhdGlvblxuICAgICAgICB0aGlzLmNvbmZpZyA9IGJ1aWxkQ2xpZW50Q29uZmlndXJhdGlvbihjb25maWd1cmF0aW9uKTtcbiAgICAgICAgLy8gSW5pdGlhbGl6ZSB0aGUgbG9nZ2VyXG4gICAgICAgIHRoaXMubG9nZ2VyID0gbmV3IExvZ2dlcih0aGlzLmNvbmZpZy5sb2dnZXJPcHRpb25zLCBuYW1lLCB2ZXJzaW9uKTtcbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBjcnlwdG9cbiAgICAgICAgdGhpcy5jcnlwdG9VdGlscyA9IHRoaXMuY29uZmlnLmNyeXB0b0ludGVyZmFjZTtcbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBzdG9yYWdlIGludGVyZmFjZVxuICAgICAgICB0aGlzLmNhY2hlTWFuYWdlciA9IHRoaXMuY29uZmlnLnN0b3JhZ2VJbnRlcmZhY2U7XG4gICAgICAgIC8vIFNldCB0aGUgbmV0d29yayBpbnRlcmZhY2VcbiAgICAgICAgdGhpcy5uZXR3b3JrQ2xpZW50ID0gdGhpcy5jb25maWcubmV0d29ya0ludGVyZmFjZTtcbiAgICAgICAgLy8gU2V0IHRoZSBOZXR3b3JrTWFuYWdlclxuICAgICAgICB0aGlzLm5ldHdvcmtNYW5hZ2VyID0gbmV3IE5ldHdvcmtNYW5hZ2VyKHRoaXMubmV0d29ya0NsaWVudCwgdGhpcy5jYWNoZU1hbmFnZXIpO1xuICAgICAgICAvLyBTZXQgVGVsZW1ldHJ5TWFuYWdlclxuICAgICAgICB0aGlzLnNlcnZlclRlbGVtZXRyeU1hbmFnZXIgPSB0aGlzLmNvbmZpZy5zZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyO1xuICAgICAgICAvLyBzZXQgQXV0aG9yaXR5XG4gICAgICAgIHRoaXMuYXV0aG9yaXR5ID0gdGhpcy5jb25maWcuYXV0aE9wdGlvbnMuYXV0aG9yaXR5O1xuICAgICAgICAvLyBzZXQgcGVyZm9ybWFuY2UgdGVsZW1ldHJ5IGNsaWVudFxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50ID0gcGVyZm9ybWFuY2VDbGllbnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgZGVmYXVsdCBoZWFkZXJzIGZvciByZXF1ZXN0cyB0byB0b2tlbiBlbmRwb2ludFxuICAgICAqL1xuICAgIGNyZWF0ZVRva2VuUmVxdWVzdEhlYWRlcnMoY2NzQ3JlZCkge1xuICAgICAgICBjb25zdCBoZWFkZXJzID0ge307XG4gICAgICAgIGhlYWRlcnNbSGVhZGVyTmFtZXMuQ09OVEVOVF9UWVBFXSA9IENvbnN0YW50cy5VUkxfRk9STV9DT05URU5UX1RZUEU7XG4gICAgICAgIGlmICghdGhpcy5jb25maWcuc3lzdGVtT3B0aW9ucy5wcmV2ZW50Q29yc1ByZWZsaWdodCAmJiBjY3NDcmVkKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKGNjc0NyZWQudHlwZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgQ2NzQ3JlZGVudGlhbFR5cGUuSE9NRV9BQ0NPVU5UX0lEOlxuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xpZW50SW5mbyA9IGJ1aWxkQ2xpZW50SW5mb0Zyb21Ib21lQWNjb3VudElkKGNjc0NyZWQuY3JlZGVudGlhbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzW0hlYWRlck5hbWVzLkNDU19IRUFERVJdID0gYE9pZDoke2NsaWVudEluZm8udWlkfUAke2NsaWVudEluZm8udXRpZH1gO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKFwiQ291bGQgbm90IHBhcnNlIGhvbWUgYWNjb3VudCBJRCBmb3IgQ0NTIEhlYWRlcjogXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgQ2NzQ3JlZGVudGlhbFR5cGUuVVBOOlxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzW0hlYWRlck5hbWVzLkNDU19IRUFERVJdID0gYFVQTjogJHtjY3NDcmVkLmNyZWRlbnRpYWx9YDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhlYWRlcnM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEh0dHAgcG9zdCB0byB0b2tlbiBlbmRwb2ludFxuICAgICAqIEBwYXJhbSB0b2tlbkVuZHBvaW50XG4gICAgICogQHBhcmFtIHF1ZXJ5U3RyaW5nXG4gICAgICogQHBhcmFtIGhlYWRlcnNcbiAgICAgKiBAcGFyYW0gdGh1bWJwcmludFxuICAgICAqL1xuICAgIGFzeW5jIGV4ZWN1dGVQb3N0VG9Ub2tlbkVuZHBvaW50KHRva2VuRW5kcG9pbnQsIHF1ZXJ5U3RyaW5nLCBoZWFkZXJzLCB0aHVtYnByaW50KSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5uZXR3b3JrTWFuYWdlci5zZW5kUG9zdFJlcXVlc3QodGh1bWJwcmludCwgdG9rZW5FbmRwb2ludCwgeyBib2R5OiBxdWVyeVN0cmluZywgaGVhZGVyczogaGVhZGVycyB9KTtcbiAgICAgICAgaWYgKHRoaXMuY29uZmlnLnNlcnZlclRlbGVtZXRyeU1hbmFnZXIgJiZcbiAgICAgICAgICAgIHJlc3BvbnNlLnN0YXR1cyA8IDUwMCAmJlxuICAgICAgICAgICAgcmVzcG9uc2Uuc3RhdHVzICE9PSA0MjkpIHtcbiAgICAgICAgICAgIC8vIFRlbGVtZXRyeSBkYXRhIHN1Y2Nlc3NmdWxseSBsb2dnZWQgYnkgc2VydmVyLCBjbGVhciBUZWxlbWV0cnkgY2FjaGVcbiAgICAgICAgICAgIHRoaXMuY29uZmlnLnNlcnZlclRlbGVtZXRyeU1hbmFnZXIuY2xlYXJUZWxlbWV0cnlDYWNoZSgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXBkYXRlcyB0aGUgYXV0aG9yaXR5IG9iamVjdCBvZiB0aGUgY2xpZW50LiBFbmRwb2ludCBkaXNjb3ZlcnkgbXVzdCBiZSBjb21wbGV0ZWQuXG4gICAgICogQHBhcmFtIHVwZGF0ZWRBdXRob3JpdHlcbiAgICAgKi9cbiAgICB1cGRhdGVBdXRob3JpdHkodXBkYXRlZEF1dGhvcml0eSkge1xuICAgICAgICBpZiAoIXVwZGF0ZWRBdXRob3JpdHkuZGlzY292ZXJ5Q29tcGxldGUoKSkge1xuICAgICAgICAgICAgdGhyb3cgQ2xpZW50QXV0aEVycm9yLmNyZWF0ZUVuZHBvaW50RGlzY292ZXJ5SW5jb21wbGV0ZUVycm9yKFwiVXBkYXRlZCBhdXRob3JpdHkgaGFzIG5vdCBjb21wbGV0ZWQgZW5kcG9pbnQgZGlzY292ZXJ5LlwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmF1dGhvcml0eSA9IHVwZGF0ZWRBdXRob3JpdHk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgcXVlcnkgc3RyaW5nIGZvciB0aGUgL3Rva2VuIHJlcXVlc3RcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxuICAgICAqL1xuICAgIGNyZWF0ZVRva2VuUXVlcnlQYXJhbWV0ZXJzKHJlcXVlc3QpIHtcbiAgICAgICAgY29uc3QgcGFyYW1ldGVyQnVpbGRlciA9IG5ldyBSZXF1ZXN0UGFyYW1ldGVyQnVpbGRlcigpO1xuICAgICAgICBpZiAocmVxdWVzdC50b2tlblF1ZXJ5UGFyYW1ldGVycykge1xuICAgICAgICAgICAgcGFyYW1ldGVyQnVpbGRlci5hZGRFeHRyYVF1ZXJ5UGFyYW1ldGVycyhyZXF1ZXN0LnRva2VuUXVlcnlQYXJhbWV0ZXJzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGFyYW1ldGVyQnVpbGRlci5jcmVhdGVRdWVyeVN0cmluZygpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgQmFzZUNsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmFzZUNsaWVudC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RefreshTokenClient: function() { return /* binding */ RefreshTokenClient; }\n/* harmony export */ });\n/* harmony import */ var _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../config/ClientConfiguration.mjs */ \"./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../request/RequestParameterBuilder.mjs */ \"./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../crypto/PopTokenGenerator.mjs */ \"./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../error/ServerError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../account/CcsCredential.mjs */ \"./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../account/ClientInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/InteractionRequiredAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * OAuth2.0 refresh token client\n * @internal\n */\nclass RefreshTokenClient extends _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n    constructor(configuration, performanceClient) {\n        super(configuration, performanceClient);\n    }\n    async acquireToken(request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\n        const atsMeasurement = this.performanceClient?.startMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\n        this.logger.verbose(\"RefreshTokenClientAcquireToken called\", request.correlationId);\n        const reqTimestamp = _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.TimeUtils.nowSeconds();\n        this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\n        const response = await this.executeTokenRequest(request, this.authority);\n        const httpVerToken = response.headers?.[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.HeaderNames.X_MS_HTTP_VERSION];\n        atsMeasurement?.add({\n            refreshTokenSize: response.body.refresh_token?.length || 0,\n        });\n        if (httpVerToken) {\n            atsMeasurement?.add({\n                httpVerToken,\n            });\n        }\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.HeaderNames.X_MS_REQUEST_ID];\n        const responseHandler = new _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_4__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\n        responseHandler.validateTokenResponse(response.body);\n        this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.HandleServerTokenResponse, request.correlationId);\n        return responseHandler\n            .handleServerTokenResponse(response.body, this.authority, reqTimestamp, request, undefined, undefined, true, request.forceCache, requestId)\n            .then((result) => {\n            atsMeasurement?.end({\n                success: true,\n            });\n            return result;\n        })\n            .catch((error) => {\n            this.logger.verbose(\"Error in fetching refresh token\", request.correlationId);\n            atsMeasurement?.end({\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                success: false,\n            });\n            throw error;\n        });\n    }\n    /**\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\n     * @param request\n     */\n    async acquireTokenByRefreshToken(request) {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_5__.ClientConfigurationError.createEmptyTokenRequestError();\n        }\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request.correlationId);\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.ClientAuthError.createNoAccountInSilentRequestError();\n        }\n        // try checking if FOCI is enabled for the given application\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment);\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\n        if (isFOCI) {\n            try {\n                this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\n                return this.acquireTokenWithCachedRefreshToken(request, true);\n            }\n            catch (e) {\n                const noFamilyRTInCache = e instanceof _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionRequiredAuthError &&\n                    e.errorCode ===\n                        _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionRequiredAuthErrorMessage.noTokensFoundError\n                            .code;\n                const clientMismatchErrorWithFamilyRT = e instanceof _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_8__.ServerError &&\n                    e.errorCode === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.Errors.INVALID_GRANT_ERROR &&\n                    e.subError === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.Errors.CLIENT_MISMATCH_ERROR;\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\n                    this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\n                    return this.acquireTokenWithCachedRefreshToken(request, false);\n                    // throw in all other cases\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        // fall back to application refresh token acquisition\n        this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\n        return this.acquireTokenWithCachedRefreshToken(request, false);\n    }\n    /**\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\n     * @param request\n     */\n    async acquireTokenWithCachedRefreshToken(request, foci) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\n        // fetches family RT or application RT based on FOCI value\n        const atsMeasurement = this.performanceClient?.startMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\n        this.logger.verbose(\"RefreshTokenClientAcquireTokenWithCachedRefreshToken called\", request.correlationId);\n        const refreshToken = this.cacheManager.getRefreshToken(request.account, foci);\n        if (!refreshToken) {\n            atsMeasurement?.discard();\n            throw _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionRequiredAuthError.createNoTokensFoundError();\n        }\n        // attach cached RT size to the current measurement\n        atsMeasurement?.end({\n            success: true,\n        });\n        const refreshTokenRequest = {\n            ...request,\n            refreshToken: refreshToken.secret,\n            authenticationScheme: request.authenticationScheme || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.AuthenticationScheme.BEARER,\n            ccsCredential: {\n                credential: request.account.homeAccountId,\n                type: _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_9__.CcsCredentialType.HOME_ACCOUNT_ID,\n            },\n        };\n        this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\n        return this.acquireToken(refreshTokenRequest);\n    }\n    /**\n     * Constructs the network message and makes a NW call to the underlying secure token service\n     * @param request\n     * @param authority\n     */\n    async executeTokenRequest(request, authority) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\n        const acquireTokenMeasurement = this.performanceClient?.startMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\n        this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, request.correlationId);\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_10__.UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\n        const requestBody = await this.createTokenRequestBody(request);\n        const headers = this.createTokenRequestHeaders(request.ccsCredential);\n        const thumbprint = {\n            clientId: this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        return this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint)\n            .then((result) => {\n            acquireTokenMeasurement?.end({\n                success: true,\n            });\n            return result;\n        })\n            .catch((error) => {\n            acquireTokenMeasurement?.end({\n                success: false,\n            });\n            throw error;\n        });\n    }\n    /**\n     * Helper function to create the token request body\n     * @param request\n     */\n    async createTokenRequestBody(request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, request.correlationId);\n        const correlationId = request.correlationId;\n        const acquireTokenMeasurement = this.performanceClient?.startMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.BaseClientCreateTokenRequestHeaders, correlationId);\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_11__.RequestParameterBuilder();\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\n        parameterBuilder.addScopes(request.scopes, true, this.config.authOptions.authority.options.OIDCOptions?.defaultScopes);\n        parameterBuilder.addGrantType(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.GrantType.REFRESH_TOKEN_GRANT);\n        parameterBuilder.addClientInfo();\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n        if (this.serverTelemetryManager && !(0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_12__.isOidcProtocolMode)(this.config)) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n        parameterBuilder.addCorrelationId(correlationId);\n        parameterBuilder.addRefreshToken(request.refreshToken);\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n        if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.AuthenticationScheme.POP) {\n            const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_13__.PopTokenGenerator(this.cryptoUtils, this.performanceClient);\n            this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.PopTokenGenerateCnf, request.correlationId);\n            const reqCnfData = await popTokenGenerator.generateCnf(request);\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n        }\n        else if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            }\n            else {\n                acquireTokenMeasurement?.end({\n                    success: false,\n                });\n                throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_5__.ClientConfigurationError.createMissingSshJwkError();\n            }\n        }\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_14__.StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        if (this.config.systemOptions.preventCorsPreflight &&\n            request.ccsCredential) {\n            switch (request.ccsCredential.type) {\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_9__.CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_15__.buildClientInfoFromHomeAccountId)(request.ccsCredential.credential);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\n                            e);\n                    }\n                    break;\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_9__.CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(request.ccsCredential.credential);\n                    break;\n            }\n        }\n        acquireTokenMeasurement?.end({\n            success: true,\n        });\n        return parameterBuilder.createQueryString();\n    }\n}\n\n\n//# sourceMappingURL=RefreshTokenClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentFlowClient: function() { return /* binding */ SilentFlowClient; }\n/* harmony export */ });\n/* harmony import */ var _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../account/AuthToken.mjs */ \"./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RefreshTokenClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass SilentFlowClient extends _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n    constructor(configuration, performanceClient) {\n        super(configuration, performanceClient);\n    }\n    /**\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\n     * the given token and returns the renewed token\n     * @param request\n     */\n    async acquireToken(request) {\n        try {\n            return await this.acquireCachedToken(request);\n        }\n        catch (e) {\n            if (e instanceof _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError &&\n                e.errorCode === _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthErrorMessage.tokenRefreshRequired.code) {\n                const refreshTokenClient = new _RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_2__.RefreshTokenClient(this.config, this.performanceClient);\n                return refreshTokenClient.acquireTokenByRefreshToken(request);\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    /**\n     * Retrieves token from cache or throws an error if it must be refreshed.\n     * @param request\n     */\n    async acquireCachedToken(request) {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientConfigurationError.createEmptyTokenRequestError();\n        }\n        if (request.forceRefresh) {\n            // Must refresh due to present force_refresh flag.\n            this.serverTelemetryManager?.setCacheOutcome(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheOutcome.FORCE_REFRESH);\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - Skipping cache because forceRefresh is true.\");\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createRefreshRequiredError();\n        }\n        else if (!this.config.cacheOptions.claimsBasedCachingEnabled &&\n            !_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_5__.StringUtils.isEmptyObj(request.claims)) {\n            // Must refresh due to request parameters.\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - Skipping cache because claims-based caching is disabled and claims were requested.\");\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createRefreshRequiredError();\n        }\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createNoAccountInSilentRequestError();\n        }\n        const environment = request.authority || this.authority.getPreferredCache();\n        const cacheRecord = this.cacheManager.readCacheRecord(request.account, request, environment);\n        if (!cacheRecord.accessToken) {\n            // Must refresh due to non-existent access_token.\n            this.serverTelemetryManager?.setCacheOutcome(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheOutcome.NO_CACHED_ACCESS_TOKEN);\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - No access token found in cache for the given properties.\");\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createRefreshRequiredError();\n        }\n        else if (_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.TimeUtils.wasClockTurnedBack(cacheRecord.accessToken.cachedAt) ||\n            _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.TimeUtils.isTokenExpired(cacheRecord.accessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)) {\n            // Must refresh due to expired access_token.\n            this.serverTelemetryManager?.setCacheOutcome(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED);\n            this.logger.info(`SilentFlowClient:acquireCachedToken - Cached access token is expired or will expire within ${this.config.systemOptions.tokenRenewalOffsetSeconds} seconds.`);\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createRefreshRequiredError();\n        }\n        else if (cacheRecord.accessToken.refreshOn &&\n            _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.TimeUtils.isTokenExpired(cacheRecord.accessToken.refreshOn, 0)) {\n            // Must refresh due to the refresh_in value.\n            this.serverTelemetryManager?.setCacheOutcome(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheOutcome.REFRESH_CACHED_ACCESS_TOKEN);\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'.\");\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createRefreshRequiredError();\n        }\n        if (this.config.serverTelemetryManager) {\n            this.config.serverTelemetryManager.incrementCacheHits();\n        }\n        return await this.generateResultFromCacheRecord(cacheRecord, request);\n    }\n    /**\n     * Helper function to build response object from the CacheRecord\n     * @param cacheRecord\n     */\n    async generateResultFromCacheRecord(cacheRecord, request) {\n        let idTokenObj;\n        if (cacheRecord.idToken) {\n            idTokenObj = new _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_7__.AuthToken(cacheRecord.idToken.secret, this.config.cryptoInterface);\n        }\n        // token max_age check\n        if (request.maxAge || request.maxAge === 0) {\n            const authTime = idTokenObj?.claims.auth_time;\n            if (!authTime) {\n                throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAuthError.createAuthTimeNotFoundError();\n            }\n            _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_7__.AuthToken.checkMaxAge(authTime, request.maxAge);\n        }\n        return await _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_8__.ResponseHandler.generateAuthenticationResult(this.cryptoUtils, this.authority, cacheRecord, true, request, idTokenObj);\n    }\n}\n\n\n//# sourceMappingURL=SilentFlowClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_SYSTEM_OPTIONS: function() { return /* binding */ DEFAULT_SYSTEM_OPTIONS; },\n/* harmony export */   buildClientConfiguration: function() { return /* binding */ buildClientConfiguration; },\n/* harmony export */   isOidcProtocolMode: function() { return /* binding */ isOidcProtocolMode; }\n/* harmony export */ });\n/* harmony import */ var _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../crypto/ICrypto.mjs */ \"./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../logger/Logger.mjs */ \"./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-common/dist/packageMetadata.mjs\");\n/* harmony import */ var _authority_AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../authority/AuthorityOptions.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\");\n/* harmony import */ var _cache_CacheManager_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cache/CacheManager.mjs */ \"./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs\");\n/* harmony import */ var _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../authority/ProtocolMode.mjs */ \"./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// Token renewal offset default in seconds\nconst DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\nconst DEFAULT_SYSTEM_OPTIONS = {\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n    preventCorsPreflight: false,\n};\nconst DEFAULT_LOGGER_IMPLEMENTATION = {\n    loggerCallback: () => {\n        // allow users to not set loggerCallback\n    },\n    piiLoggingEnabled: false,\n    logLevel: _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Info,\n    correlationId: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n};\nconst DEFAULT_CACHE_OPTIONS = {\n    claimsBasedCachingEnabled: false,\n};\nconst DEFAULT_NETWORK_IMPLEMENTATION = {\n    async sendGetRequestAsync() {\n        const notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthError.createUnexpectedError(notImplErr);\n    },\n    async sendPostRequestAsync() {\n        const notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthError.createUnexpectedError(notImplErr);\n    },\n};\nconst DEFAULT_LIBRARY_INFO = {\n    sku: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.SKU,\n    version: _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_3__.version,\n    cpu: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n    os: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n};\nconst DEFAULT_CLIENT_CREDENTIALS = {\n    clientSecret: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n    clientAssertion: undefined,\n};\nconst DEFAULT_AZURE_CLOUD_OPTIONS = {\n    azureCloudInstance: _authority_AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_4__.AzureCloudInstance.None,\n    tenant: `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.DEFAULT_COMMON_TENANT}`,\n};\nconst DEFAULT_TELEMETRY_OPTIONS = {\n    application: {\n        appName: \"\",\n        appVersion: \"\",\n    },\n};\n/**\n * Function that sets the default options when not explicitly configured from app developer\n *\n * @param Configuration\n *\n * @returns Configuration\n */\nfunction buildClientConfiguration({ authOptions: userAuthOptions, systemOptions: userSystemOptions, loggerOptions: userLoggerOption, cacheOptions: userCacheOptions, storageInterface: storageImplementation, networkInterface: networkImplementation, cryptoInterface: cryptoImplementation, clientCredentials: clientCredentials, libraryInfo: libraryInfo, telemetry: telemetry, serverTelemetryManager: serverTelemetryManager, persistencePlugin: persistencePlugin, serializableCache: serializableCache, }) {\n    const loggerOptions = {\n        ...DEFAULT_LOGGER_IMPLEMENTATION,\n        ...userLoggerOption,\n    };\n    return {\n        authOptions: buildAuthOptions(userAuthOptions),\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\n        loggerOptions: loggerOptions,\n        cacheOptions: { ...DEFAULT_CACHE_OPTIONS, ...userCacheOptions },\n        storageInterface: storageImplementation ||\n            new _cache_CacheManager_mjs__WEBPACK_IMPORTED_MODULE_5__.DefaultStorageClass(userAuthOptions.clientId, _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_CRYPTO_IMPLEMENTATION, new _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_0__.Logger(loggerOptions)),\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n        cryptoInterface: cryptoImplementation || _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_CRYPTO_IMPLEMENTATION,\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\n        serverTelemetryManager: serverTelemetryManager || null,\n        persistencePlugin: persistencePlugin || null,\n        serializableCache: serializableCache || null,\n    };\n}\n/**\n * Construct authoptions from the client and platform passed values\n * @param authOptions\n */\nfunction buildAuthOptions(authOptions) {\n    return {\n        clientCapabilities: [],\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\n        skipAuthorityMetadataCache: false,\n        ...authOptions,\n    };\n}\n/**\n * Returns true if config has protocolMode set to ProtocolMode.OIDC, false otherwise\n * @param ClientConfiguration\n */\nfunction isOidcProtocolMode(config) {\n    return (config.authOptions.authority.options.protocolMode === _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_7__.ProtocolMode.OIDC);\n}\n\n\n//# sourceMappingURL=ClientConfiguration.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY29uZmlnL0NsaWVudENvbmZpZ3VyYXRpb24ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUN5RDtBQUNuQjtBQUNLO0FBQ0w7QUFDRjtBQUNzQjtBQUNQO0FBQ0g7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsY0FBYyx3REFBUTtBQUN0QixtQkFBbUIsMkRBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJEQUFTO0FBQ3ZCLEtBQUs7QUFDTDtBQUNBO0FBQ0EsY0FBYywyREFBUztBQUN2QixLQUFLO0FBQ0w7QUFDQTtBQUNBLFNBQVMsMkRBQVM7QUFDbEIsYUFBYSx5REFBTztBQUNwQixTQUFTLDJEQUFTO0FBQ2xCLFFBQVEsMkRBQVM7QUFDakI7QUFDQTtBQUNBLGtCQUFrQiwyREFBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsK0VBQWtCO0FBQzFDLGVBQWUsMkRBQVMsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyw2Y0FBNmM7QUFDamY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGlEQUFpRDtBQUMxRTtBQUNBLHdCQUF3QiwrQ0FBK0M7QUFDdkU7QUFDQSxnQkFBZ0Isd0VBQW1CLDJCQUEyQiw4RUFBNkIsTUFBTSxzREFBTTtBQUN2RztBQUNBLGlEQUFpRCw4RUFBNkI7QUFDOUU7QUFDQSx1QkFBdUIseUNBQXlDO0FBQ2hFLHFCQUFxQiw0Q0FBNEM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UscUVBQVk7QUFDOUU7O0FBRWdGO0FBQ2hGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9jb25maWcvQ2xpZW50Q29uZmlndXJhdGlvbi5tanM/YTI0NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgREVGQVVMVF9DUllQVE9fSU1QTEVNRU5UQVRJT04gfSBmcm9tICcuLi9jcnlwdG8vSUNyeXB0by5tanMnO1xuaW1wb3J0IHsgQXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBMb2dnZXIsIExvZ0xldmVsIH0gZnJvbSAnLi4vbG9nZ2VyL0xvZ2dlci5tanMnO1xuaW1wb3J0IHsgQ29uc3RhbnRzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi4vcGFja2FnZU1ldGFkYXRhLm1qcyc7XG5pbXBvcnQgeyBBenVyZUNsb3VkSW5zdGFuY2UgfSBmcm9tICcuLi9hdXRob3JpdHkvQXV0aG9yaXR5T3B0aW9ucy5tanMnO1xuaW1wb3J0IHsgRGVmYXVsdFN0b3JhZ2VDbGFzcyB9IGZyb20gJy4uL2NhY2hlL0NhY2hlTWFuYWdlci5tanMnO1xuaW1wb3J0IHsgUHJvdG9jb2xNb2RlIH0gZnJvbSAnLi4vYXV0aG9yaXR5L1Byb3RvY29sTW9kZS5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8vIFRva2VuIHJlbmV3YWwgb2Zmc2V0IGRlZmF1bHQgaW4gc2Vjb25kc1xuY29uc3QgREVGQVVMVF9UT0tFTl9SRU5FV0FMX09GRlNFVF9TRUMgPSAzMDA7XG5jb25zdCBERUZBVUxUX1NZU1RFTV9PUFRJT05TID0ge1xuICAgIHRva2VuUmVuZXdhbE9mZnNldFNlY29uZHM6IERFRkFVTFRfVE9LRU5fUkVORVdBTF9PRkZTRVRfU0VDLFxuICAgIHByZXZlbnRDb3JzUHJlZmxpZ2h0OiBmYWxzZSxcbn07XG5jb25zdCBERUZBVUxUX0xPR0dFUl9JTVBMRU1FTlRBVElPTiA9IHtcbiAgICBsb2dnZXJDYWxsYmFjazogKCkgPT4ge1xuICAgICAgICAvLyBhbGxvdyB1c2VycyB0byBub3Qgc2V0IGxvZ2dlckNhbGxiYWNrXG4gICAgfSxcbiAgICBwaWlMb2dnaW5nRW5hYmxlZDogZmFsc2UsXG4gICAgbG9nTGV2ZWw6IExvZ0xldmVsLkluZm8sXG4gICAgY29ycmVsYXRpb25JZDogQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcbn07XG5jb25zdCBERUZBVUxUX0NBQ0hFX09QVElPTlMgPSB7XG4gICAgY2xhaW1zQmFzZWRDYWNoaW5nRW5hYmxlZDogZmFsc2UsXG59O1xuY29uc3QgREVGQVVMVF9ORVRXT1JLX0lNUExFTUVOVEFUSU9OID0ge1xuICAgIGFzeW5jIHNlbmRHZXRSZXF1ZXN0QXN5bmMoKSB7XG4gICAgICAgIGNvbnN0IG5vdEltcGxFcnIgPSBcIk5ldHdvcmsgaW50ZXJmYWNlIC0gc2VuZEdldFJlcXVlc3RBc3luYygpIGhhcyBub3QgYmVlbiBpbXBsZW1lbnRlZFwiO1xuICAgICAgICB0aHJvdyBBdXRoRXJyb3IuY3JlYXRlVW5leHBlY3RlZEVycm9yKG5vdEltcGxFcnIpO1xuICAgIH0sXG4gICAgYXN5bmMgc2VuZFBvc3RSZXF1ZXN0QXN5bmMoKSB7XG4gICAgICAgIGNvbnN0IG5vdEltcGxFcnIgPSBcIk5ldHdvcmsgaW50ZXJmYWNlIC0gc2VuZFBvc3RSZXF1ZXN0QXN5bmMoKSBoYXMgbm90IGJlZW4gaW1wbGVtZW50ZWRcIjtcbiAgICAgICAgdGhyb3cgQXV0aEVycm9yLmNyZWF0ZVVuZXhwZWN0ZWRFcnJvcihub3RJbXBsRXJyKTtcbiAgICB9LFxufTtcbmNvbnN0IERFRkFVTFRfTElCUkFSWV9JTkZPID0ge1xuICAgIHNrdTogQ29uc3RhbnRzLlNLVSxcbiAgICB2ZXJzaW9uOiB2ZXJzaW9uLFxuICAgIGNwdTogQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcbiAgICBvczogQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcbn07XG5jb25zdCBERUZBVUxUX0NMSUVOVF9DUkVERU5USUFMUyA9IHtcbiAgICBjbGllbnRTZWNyZXQ6IENvbnN0YW50cy5FTVBUWV9TVFJJTkcsXG4gICAgY2xpZW50QXNzZXJ0aW9uOiB1bmRlZmluZWQsXG59O1xuY29uc3QgREVGQVVMVF9BWlVSRV9DTE9VRF9PUFRJT05TID0ge1xuICAgIGF6dXJlQ2xvdWRJbnN0YW5jZTogQXp1cmVDbG91ZEluc3RhbmNlLk5vbmUsXG4gICAgdGVuYW50OiBgJHtDb25zdGFudHMuREVGQVVMVF9DT01NT05fVEVOQU5UfWAsXG59O1xuY29uc3QgREVGQVVMVF9URUxFTUVUUllfT1BUSU9OUyA9IHtcbiAgICBhcHBsaWNhdGlvbjoge1xuICAgICAgICBhcHBOYW1lOiBcIlwiLFxuICAgICAgICBhcHBWZXJzaW9uOiBcIlwiLFxuICAgIH0sXG59O1xuLyoqXG4gKiBGdW5jdGlvbiB0aGF0IHNldHMgdGhlIGRlZmF1bHQgb3B0aW9ucyB3aGVuIG5vdCBleHBsaWNpdGx5IGNvbmZpZ3VyZWQgZnJvbSBhcHAgZGV2ZWxvcGVyXG4gKlxuICogQHBhcmFtIENvbmZpZ3VyYXRpb25cbiAqXG4gKiBAcmV0dXJucyBDb25maWd1cmF0aW9uXG4gKi9cbmZ1bmN0aW9uIGJ1aWxkQ2xpZW50Q29uZmlndXJhdGlvbih7IGF1dGhPcHRpb25zOiB1c2VyQXV0aE9wdGlvbnMsIHN5c3RlbU9wdGlvbnM6IHVzZXJTeXN0ZW1PcHRpb25zLCBsb2dnZXJPcHRpb25zOiB1c2VyTG9nZ2VyT3B0aW9uLCBjYWNoZU9wdGlvbnM6IHVzZXJDYWNoZU9wdGlvbnMsIHN0b3JhZ2VJbnRlcmZhY2U6IHN0b3JhZ2VJbXBsZW1lbnRhdGlvbiwgbmV0d29ya0ludGVyZmFjZTogbmV0d29ya0ltcGxlbWVudGF0aW9uLCBjcnlwdG9JbnRlcmZhY2U6IGNyeXB0b0ltcGxlbWVudGF0aW9uLCBjbGllbnRDcmVkZW50aWFsczogY2xpZW50Q3JlZGVudGlhbHMsIGxpYnJhcnlJbmZvOiBsaWJyYXJ5SW5mbywgdGVsZW1ldHJ5OiB0ZWxlbWV0cnksIHNlcnZlclRlbGVtZXRyeU1hbmFnZXI6IHNlcnZlclRlbGVtZXRyeU1hbmFnZXIsIHBlcnNpc3RlbmNlUGx1Z2luOiBwZXJzaXN0ZW5jZVBsdWdpbiwgc2VyaWFsaXphYmxlQ2FjaGU6IHNlcmlhbGl6YWJsZUNhY2hlLCB9KSB7XG4gICAgY29uc3QgbG9nZ2VyT3B0aW9ucyA9IHtcbiAgICAgICAgLi4uREVGQVVMVF9MT0dHRVJfSU1QTEVNRU5UQVRJT04sXG4gICAgICAgIC4uLnVzZXJMb2dnZXJPcHRpb24sXG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgICBhdXRoT3B0aW9uczogYnVpbGRBdXRoT3B0aW9ucyh1c2VyQXV0aE9wdGlvbnMpLFxuICAgICAgICBzeXN0ZW1PcHRpb25zOiB7IC4uLkRFRkFVTFRfU1lTVEVNX09QVElPTlMsIC4uLnVzZXJTeXN0ZW1PcHRpb25zIH0sXG4gICAgICAgIGxvZ2dlck9wdGlvbnM6IGxvZ2dlck9wdGlvbnMsXG4gICAgICAgIGNhY2hlT3B0aW9uczogeyAuLi5ERUZBVUxUX0NBQ0hFX09QVElPTlMsIC4uLnVzZXJDYWNoZU9wdGlvbnMgfSxcbiAgICAgICAgc3RvcmFnZUludGVyZmFjZTogc3RvcmFnZUltcGxlbWVudGF0aW9uIHx8XG4gICAgICAgICAgICBuZXcgRGVmYXVsdFN0b3JhZ2VDbGFzcyh1c2VyQXV0aE9wdGlvbnMuY2xpZW50SWQsIERFRkFVTFRfQ1JZUFRPX0lNUExFTUVOVEFUSU9OLCBuZXcgTG9nZ2VyKGxvZ2dlck9wdGlvbnMpKSxcbiAgICAgICAgbmV0d29ya0ludGVyZmFjZTogbmV0d29ya0ltcGxlbWVudGF0aW9uIHx8IERFRkFVTFRfTkVUV09SS19JTVBMRU1FTlRBVElPTixcbiAgICAgICAgY3J5cHRvSW50ZXJmYWNlOiBjcnlwdG9JbXBsZW1lbnRhdGlvbiB8fCBERUZBVUxUX0NSWVBUT19JTVBMRU1FTlRBVElPTixcbiAgICAgICAgY2xpZW50Q3JlZGVudGlhbHM6IGNsaWVudENyZWRlbnRpYWxzIHx8IERFRkFVTFRfQ0xJRU5UX0NSRURFTlRJQUxTLFxuICAgICAgICBsaWJyYXJ5SW5mbzogeyAuLi5ERUZBVUxUX0xJQlJBUllfSU5GTywgLi4ubGlicmFyeUluZm8gfSxcbiAgICAgICAgdGVsZW1ldHJ5OiB7IC4uLkRFRkFVTFRfVEVMRU1FVFJZX09QVElPTlMsIC4uLnRlbGVtZXRyeSB9LFxuICAgICAgICBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyOiBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyIHx8IG51bGwsXG4gICAgICAgIHBlcnNpc3RlbmNlUGx1Z2luOiBwZXJzaXN0ZW5jZVBsdWdpbiB8fCBudWxsLFxuICAgICAgICBzZXJpYWxpemFibGVDYWNoZTogc2VyaWFsaXphYmxlQ2FjaGUgfHwgbnVsbCxcbiAgICB9O1xufVxuLyoqXG4gKiBDb25zdHJ1Y3QgYXV0aG9wdGlvbnMgZnJvbSB0aGUgY2xpZW50IGFuZCBwbGF0Zm9ybSBwYXNzZWQgdmFsdWVzXG4gKiBAcGFyYW0gYXV0aE9wdGlvbnNcbiAqL1xuZnVuY3Rpb24gYnVpbGRBdXRoT3B0aW9ucyhhdXRoT3B0aW9ucykge1xuICAgIHJldHVybiB7XG4gICAgICAgIGNsaWVudENhcGFiaWxpdGllczogW10sXG4gICAgICAgIGF6dXJlQ2xvdWRPcHRpb25zOiBERUZBVUxUX0FaVVJFX0NMT1VEX09QVElPTlMsXG4gICAgICAgIHNraXBBdXRob3JpdHlNZXRhZGF0YUNhY2hlOiBmYWxzZSxcbiAgICAgICAgLi4uYXV0aE9wdGlvbnMsXG4gICAgfTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGNvbmZpZyBoYXMgcHJvdG9jb2xNb2RlIHNldCB0byBQcm90b2NvbE1vZGUuT0lEQywgZmFsc2Ugb3RoZXJ3aXNlXG4gKiBAcGFyYW0gQ2xpZW50Q29uZmlndXJhdGlvblxuICovXG5mdW5jdGlvbiBpc09pZGNQcm90b2NvbE1vZGUoY29uZmlnKSB7XG4gICAgcmV0dXJuIChjb25maWcuYXV0aE9wdGlvbnMuYXV0aG9yaXR5Lm9wdGlvbnMucHJvdG9jb2xNb2RlID09PSBQcm90b2NvbE1vZGUuT0lEQyk7XG59XG5cbmV4cG9ydCB7IERFRkFVTFRfU1lTVEVNX09QVElPTlMsIGJ1aWxkQ2xpZW50Q29uZmlndXJhdGlvbiwgaXNPaWRjUHJvdG9jb2xNb2RlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbGllbnRDb25maWd1cmF0aW9uLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CRYPTO_IMPLEMENTATION: function() { return /* binding */ DEFAULT_CRYPTO_IMPLEMENTATION; }\n/* harmony export */ });\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst DEFAULT_CRYPTO_IMPLEMENTATION = {\n    createNewGuid: () => {\n        const notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError.createUnexpectedError(notImplErr);\n    },\n    base64Decode: () => {\n        const notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError.createUnexpectedError(notImplErr);\n    },\n    base64Encode: () => {\n        const notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError.createUnexpectedError(notImplErr);\n    },\n    async generatePkceCodes() {\n        const notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError.createUnexpectedError(notImplErr);\n    },\n    async getPublicKeyThumbprint() {\n        const notImplErr = \"Crypto interface - getPublicKeyThumbprint() has not been implemented\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError.createUnexpectedError(notImplErr);\n    },\n    async removeTokenBindingKey() {\n        const notImplErr = \"Crypto interface - removeTokenBindingKey() has not been implemented\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError.createUnexpectedError(notImplErr);\n    },\n    async clearKeystore() {\n        const notImplErr = \"Crypto interface - clearKeystore() has not been implemented\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError.createUnexpectedError(notImplErr);\n    },\n    async signJwt() {\n        const notImplErr = \"Crypto interface - signJwt() has not been implemented\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError.createUnexpectedError(notImplErr);\n    },\n    async hashString() {\n        const notImplErr = \"Crypto interface - hashString() has not been implemented\";\n        throw _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError.createUnexpectedError(notImplErr);\n    },\n};\n\n\n//# sourceMappingURL=ICrypto.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL0lDcnlwdG8ubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUNzQzs7QUFFbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJEQUFTO0FBQ3ZCLEtBQUs7QUFDTDtBQUNBO0FBQ0EsY0FBYywyREFBUztBQUN2QixLQUFLO0FBQ0w7QUFDQTtBQUNBLGNBQWMsMkRBQVM7QUFDdkIsS0FBSztBQUNMO0FBQ0E7QUFDQSxjQUFjLDJEQUFTO0FBQ3ZCLEtBQUs7QUFDTDtBQUNBO0FBQ0EsY0FBYywyREFBUztBQUN2QixLQUFLO0FBQ0w7QUFDQTtBQUNBLGNBQWMsMkRBQVM7QUFDdkIsS0FBSztBQUNMO0FBQ0E7QUFDQSxjQUFjLDJEQUFTO0FBQ3ZCLEtBQUs7QUFDTDtBQUNBO0FBQ0EsY0FBYywyREFBUztBQUN2QixLQUFLO0FBQ0w7QUFDQTtBQUNBLGNBQWMsMkRBQVM7QUFDdkIsS0FBSztBQUNMOztBQUV5QztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL0lDcnlwdG8ubWpzP2Q1NTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0F1dGhFcnJvci5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNvbnN0IERFRkFVTFRfQ1JZUFRPX0lNUExFTUVOVEFUSU9OID0ge1xuICAgIGNyZWF0ZU5ld0d1aWQ6ICgpID0+IHtcbiAgICAgICAgY29uc3Qgbm90SW1wbEVyciA9IFwiQ3J5cHRvIGludGVyZmFjZSAtIGNyZWF0ZU5ld0d1aWQoKSBoYXMgbm90IGJlZW4gaW1wbGVtZW50ZWRcIjtcbiAgICAgICAgdGhyb3cgQXV0aEVycm9yLmNyZWF0ZVVuZXhwZWN0ZWRFcnJvcihub3RJbXBsRXJyKTtcbiAgICB9LFxuICAgIGJhc2U2NERlY29kZTogKCkgPT4ge1xuICAgICAgICBjb25zdCBub3RJbXBsRXJyID0gXCJDcnlwdG8gaW50ZXJmYWNlIC0gYmFzZTY0RGVjb2RlKCkgaGFzIG5vdCBiZWVuIGltcGxlbWVudGVkXCI7XG4gICAgICAgIHRocm93IEF1dGhFcnJvci5jcmVhdGVVbmV4cGVjdGVkRXJyb3Iobm90SW1wbEVycik7XG4gICAgfSxcbiAgICBiYXNlNjRFbmNvZGU6ICgpID0+IHtcbiAgICAgICAgY29uc3Qgbm90SW1wbEVyciA9IFwiQ3J5cHRvIGludGVyZmFjZSAtIGJhc2U2NEVuY29kZSgpIGhhcyBub3QgYmVlbiBpbXBsZW1lbnRlZFwiO1xuICAgICAgICB0aHJvdyBBdXRoRXJyb3IuY3JlYXRlVW5leHBlY3RlZEVycm9yKG5vdEltcGxFcnIpO1xuICAgIH0sXG4gICAgYXN5bmMgZ2VuZXJhdGVQa2NlQ29kZXMoKSB7XG4gICAgICAgIGNvbnN0IG5vdEltcGxFcnIgPSBcIkNyeXB0byBpbnRlcmZhY2UgLSBnZW5lcmF0ZVBrY2VDb2RlcygpIGhhcyBub3QgYmVlbiBpbXBsZW1lbnRlZFwiO1xuICAgICAgICB0aHJvdyBBdXRoRXJyb3IuY3JlYXRlVW5leHBlY3RlZEVycm9yKG5vdEltcGxFcnIpO1xuICAgIH0sXG4gICAgYXN5bmMgZ2V0UHVibGljS2V5VGh1bWJwcmludCgpIHtcbiAgICAgICAgY29uc3Qgbm90SW1wbEVyciA9IFwiQ3J5cHRvIGludGVyZmFjZSAtIGdldFB1YmxpY0tleVRodW1icHJpbnQoKSBoYXMgbm90IGJlZW4gaW1wbGVtZW50ZWRcIjtcbiAgICAgICAgdGhyb3cgQXV0aEVycm9yLmNyZWF0ZVVuZXhwZWN0ZWRFcnJvcihub3RJbXBsRXJyKTtcbiAgICB9LFxuICAgIGFzeW5jIHJlbW92ZVRva2VuQmluZGluZ0tleSgpIHtcbiAgICAgICAgY29uc3Qgbm90SW1wbEVyciA9IFwiQ3J5cHRvIGludGVyZmFjZSAtIHJlbW92ZVRva2VuQmluZGluZ0tleSgpIGhhcyBub3QgYmVlbiBpbXBsZW1lbnRlZFwiO1xuICAgICAgICB0aHJvdyBBdXRoRXJyb3IuY3JlYXRlVW5leHBlY3RlZEVycm9yKG5vdEltcGxFcnIpO1xuICAgIH0sXG4gICAgYXN5bmMgY2xlYXJLZXlzdG9yZSgpIHtcbiAgICAgICAgY29uc3Qgbm90SW1wbEVyciA9IFwiQ3J5cHRvIGludGVyZmFjZSAtIGNsZWFyS2V5c3RvcmUoKSBoYXMgbm90IGJlZW4gaW1wbGVtZW50ZWRcIjtcbiAgICAgICAgdGhyb3cgQXV0aEVycm9yLmNyZWF0ZVVuZXhwZWN0ZWRFcnJvcihub3RJbXBsRXJyKTtcbiAgICB9LFxuICAgIGFzeW5jIHNpZ25Kd3QoKSB7XG4gICAgICAgIGNvbnN0IG5vdEltcGxFcnIgPSBcIkNyeXB0byBpbnRlcmZhY2UgLSBzaWduSnd0KCkgaGFzIG5vdCBiZWVuIGltcGxlbWVudGVkXCI7XG4gICAgICAgIHRocm93IEF1dGhFcnJvci5jcmVhdGVVbmV4cGVjdGVkRXJyb3Iobm90SW1wbEVycik7XG4gICAgfSxcbiAgICBhc3luYyBoYXNoU3RyaW5nKCkge1xuICAgICAgICBjb25zdCBub3RJbXBsRXJyID0gXCJDcnlwdG8gaW50ZXJmYWNlIC0gaGFzaFN0cmluZygpIGhhcyBub3QgYmVlbiBpbXBsZW1lbnRlZFwiO1xuICAgICAgICB0aHJvdyBBdXRoRXJyb3IuY3JlYXRlVW5leHBlY3RlZEVycm9yKG5vdEltcGxFcnIpO1xuICAgIH0sXG59O1xuXG5leHBvcnQgeyBERUZBVUxUX0NSWVBUT19JTVBMRU1FTlRBVElPTiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SUNyeXB0by5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/crypto/JoseHeader.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/crypto/JoseHeader.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JoseHeader: function() { return /* binding */ JoseHeader; }\n/* harmony export */ });\n/* harmony import */ var _error_JoseHeaderError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/JoseHeaderError.mjs */ \"./node_modules/@azure/msal-common/dist/error/JoseHeaderError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass JoseHeader {\n    constructor(options) {\n        this.typ = options.typ;\n        this.alg = options.alg;\n        this.kid = options.kid;\n    }\n    /**\n     * Builds SignedHttpRequest formatted JOSE Header from the\n     * JOSE Header options provided or previously set on the object and returns\n     * the stringified header object.\n     * Throws if keyId or algorithm aren't provided since they are required for Access Token Binding.\n     * @param shrHeaderOptions\n     * @returns\n     */\n    static getShrHeaderString(shrHeaderOptions) {\n        // KeyID is required on the SHR header\n        if (!shrHeaderOptions.kid) {\n            throw _error_JoseHeaderError_mjs__WEBPACK_IMPORTED_MODULE_0__.JoseHeaderError.createMissingKidError();\n        }\n        // Alg is required on the SHR header\n        if (!shrHeaderOptions.alg) {\n            throw _error_JoseHeaderError_mjs__WEBPACK_IMPORTED_MODULE_0__.JoseHeaderError.createMissingAlgError();\n        }\n        const shrHeader = new JoseHeader({\n            // Access Token PoP headers must have type pop, but the type header can be overriden for special cases\n            typ: shrHeaderOptions.typ || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.JsonTypes.Pop,\n            kid: shrHeaderOptions.kid,\n            alg: shrHeaderOptions.alg,\n        });\n        return JSON.stringify(shrHeader);\n    }\n}\n\n\n//# sourceMappingURL=JoseHeader.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL0pvc2VIZWFkZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDa0Q7QUFDWjs7QUFFbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsdUVBQWU7QUFDakM7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHVFQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QywyREFBUztBQUNsRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2NyeXB0by9Kb3NlSGVhZGVyLm1qcz8zMDZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBKb3NlSGVhZGVyRXJyb3IgfSBmcm9tICcuLi9lcnJvci9Kb3NlSGVhZGVyRXJyb3IubWpzJztcbmltcG9ydCB7IEpzb25UeXBlcyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKiBAaW50ZXJuYWwgKi9cbmNsYXNzIEpvc2VIZWFkZXIge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy50eXAgPSBvcHRpb25zLnR5cDtcbiAgICAgICAgdGhpcy5hbGcgPSBvcHRpb25zLmFsZztcbiAgICAgICAgdGhpcy5raWQgPSBvcHRpb25zLmtpZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQnVpbGRzIFNpZ25lZEh0dHBSZXF1ZXN0IGZvcm1hdHRlZCBKT1NFIEhlYWRlciBmcm9tIHRoZVxuICAgICAqIEpPU0UgSGVhZGVyIG9wdGlvbnMgcHJvdmlkZWQgb3IgcHJldmlvdXNseSBzZXQgb24gdGhlIG9iamVjdCBhbmQgcmV0dXJuc1xuICAgICAqIHRoZSBzdHJpbmdpZmllZCBoZWFkZXIgb2JqZWN0LlxuICAgICAqIFRocm93cyBpZiBrZXlJZCBvciBhbGdvcml0aG0gYXJlbid0IHByb3ZpZGVkIHNpbmNlIHRoZXkgYXJlIHJlcXVpcmVkIGZvciBBY2Nlc3MgVG9rZW4gQmluZGluZy5cbiAgICAgKiBAcGFyYW0gc2hySGVhZGVyT3B0aW9uc1xuICAgICAqIEByZXR1cm5zXG4gICAgICovXG4gICAgc3RhdGljIGdldFNockhlYWRlclN0cmluZyhzaHJIZWFkZXJPcHRpb25zKSB7XG4gICAgICAgIC8vIEtleUlEIGlzIHJlcXVpcmVkIG9uIHRoZSBTSFIgaGVhZGVyXG4gICAgICAgIGlmICghc2hySGVhZGVyT3B0aW9ucy5raWQpIHtcbiAgICAgICAgICAgIHRocm93IEpvc2VIZWFkZXJFcnJvci5jcmVhdGVNaXNzaW5nS2lkRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBBbGcgaXMgcmVxdWlyZWQgb24gdGhlIFNIUiBoZWFkZXJcbiAgICAgICAgaWYgKCFzaHJIZWFkZXJPcHRpb25zLmFsZykge1xuICAgICAgICAgICAgdGhyb3cgSm9zZUhlYWRlckVycm9yLmNyZWF0ZU1pc3NpbmdBbGdFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNockhlYWRlciA9IG5ldyBKb3NlSGVhZGVyKHtcbiAgICAgICAgICAgIC8vIEFjY2VzcyBUb2tlbiBQb1AgaGVhZGVycyBtdXN0IGhhdmUgdHlwZSBwb3AsIGJ1dCB0aGUgdHlwZSBoZWFkZXIgY2FuIGJlIG92ZXJyaWRlbiBmb3Igc3BlY2lhbCBjYXNlc1xuICAgICAgICAgICAgdHlwOiBzaHJIZWFkZXJPcHRpb25zLnR5cCB8fCBKc29uVHlwZXMuUG9wLFxuICAgICAgICAgICAga2lkOiBzaHJIZWFkZXJPcHRpb25zLmtpZCxcbiAgICAgICAgICAgIGFsZzogc2hySGVhZGVyT3B0aW9ucy5hbGcsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoc2hySGVhZGVyKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IEpvc2VIZWFkZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUpvc2VIZWFkZXIubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/crypto/JoseHeader.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PopTokenGenerator: function() { return /* binding */ PopTokenGenerator; }\n/* harmony export */ });\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst KeyLocation = {\n    SW: \"sw\",\n    UHW: \"uhw\",\n};\n/** @internal */\nclass PopTokenGenerator {\n    constructor(cryptoUtils, performanceClient) {\n        this.cryptoUtils = cryptoUtils;\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\n     * @param request\n     * @returns\n     */\n    async generateCnf(request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.PopTokenGenerateCnf, request.correlationId);\n        this.performanceClient?.setPreQueueTime(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.PopTokenGenerateKid, request.correlationId);\n        const reqCnf = await this.generateKid(request);\n        const reqCnfString = this.cryptoUtils.base64Encode(JSON.stringify(reqCnf));\n        return {\n            kid: reqCnf.kid,\n            reqCnfString,\n            reqCnfHash: await this.cryptoUtils.hashString(reqCnfString),\n        };\n    }\n    /**\n     * Generates key_id for a SHR token request\n     * @param request\n     * @returns\n     */\n    async generateKid(request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.PopTokenGenerateKid, request.correlationId);\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(request);\n        return {\n            kid: kidThumbprint,\n            xms_ksl: KeyLocation.SW,\n        };\n    }\n    /**\n     * Signs the POP access_token with the local generated key-pair\n     * @param accessToken\n     * @param request\n     * @returns\n     */\n    async signPopToken(accessToken, keyId, request) {\n        return this.signPayload(accessToken, keyId, request);\n    }\n    /**\n     * Utility function to generate the signed JWT for an access_token\n     * @param payload\n     * @param kid\n     * @param request\n     * @param claims\n     * @returns\n     */\n    async signPayload(payload, keyId, request, claims) {\n        // Deconstruct request to extract SHR parameters\n        const { resourceRequestMethod, resourceRequestUri, shrClaims, shrNonce, } = request;\n        const resourceUrlString = resourceRequestUri\n            ? new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_1__.UrlString(resourceRequestUri)\n            : undefined;\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\n        return await this.cryptoUtils.signJwt({\n            at: payload,\n            ts: _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.TimeUtils.nowSeconds(),\n            m: resourceRequestMethod?.toUpperCase(),\n            u: resourceUrlComponents?.HostNameAndPort,\n            nonce: shrNonce || this.cryptoUtils.createNewGuid(),\n            p: resourceUrlComponents?.AbsolutePath,\n            q: resourceUrlComponents?.QueryString\n                ? [[], resourceUrlComponents.QueryString]\n                : undefined,\n            client_claims: shrClaims || undefined,\n            ...claims,\n        }, keyId, request.correlationId);\n    }\n}\n\n\n//# sourceMappingURL=PopTokenGenerator.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL1BvcFRva2VuR2VuZXJhdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDYTtBQUNzQztBQUNGO0FBQ2lDOztBQUVsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsMEZBQWlCO0FBQ3JFLGdEQUFnRCwwRkFBaUI7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCwwRkFBaUI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isa0VBQWtFO0FBQ2xGO0FBQ0Esa0JBQWtCLHlEQUFTO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDJEQUFTO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUU2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL1BvcFRva2VuR2VuZXJhdG9yLm1qcz9hNzZmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBUaW1lVXRpbHMgfSBmcm9tICcuLi91dGlscy9UaW1lVXRpbHMubWpzJztcbmltcG9ydCB7IFVybFN0cmluZyB9IGZyb20gJy4uL3VybC9VcmxTdHJpbmcubWpzJztcbmltcG9ydCB7IFBlcmZvcm1hbmNlRXZlbnRzIH0gZnJvbSAnLi4vdGVsZW1ldHJ5L3BlcmZvcm1hbmNlL1BlcmZvcm1hbmNlRXZlbnQubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jb25zdCBLZXlMb2NhdGlvbiA9IHtcbiAgICBTVzogXCJzd1wiLFxuICAgIFVIVzogXCJ1aHdcIixcbn07XG4vKiogQGludGVybmFsICovXG5jbGFzcyBQb3BUb2tlbkdlbmVyYXRvciB7XG4gICAgY29uc3RydWN0b3IoY3J5cHRvVXRpbHMsIHBlcmZvcm1hbmNlQ2xpZW50KSB7XG4gICAgICAgIHRoaXMuY3J5cHRvVXRpbHMgPSBjcnlwdG9VdGlscztcbiAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCA9IHBlcmZvcm1hbmNlQ2xpZW50O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgdGhlIHJlcV9jbmYgdmFsaWRhdGVkIGF0IHRoZSBSUCBpbiB0aGUgUE9QIHByb3RvY29sIGZvciBTSFIgcGFyYW1ldGVyc1xuICAgICAqIGFuZCByZXR1cm5zIGFuIG9iamVjdCBjb250YWluaW5nIHRoZSBrZXlpZCwgdGhlIGZ1bGwgcmVxX2NuZiBzdHJpbmcgYW5kIHRoZSByZXFfY25mIHN0cmluZyBoYXNoXG4gICAgICogQHBhcmFtIHJlcXVlc3RcbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIGFzeW5jIGdlbmVyYXRlQ25mKHJlcXVlc3QpIHtcbiAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudD8uYWRkUXVldWVNZWFzdXJlbWVudChQZXJmb3JtYW5jZUV2ZW50cy5Qb3BUb2tlbkdlbmVyYXRlQ25mLCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50Py5zZXRQcmVRdWV1ZVRpbWUoUGVyZm9ybWFuY2VFdmVudHMuUG9wVG9rZW5HZW5lcmF0ZUtpZCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgY29uc3QgcmVxQ25mID0gYXdhaXQgdGhpcy5nZW5lcmF0ZUtpZChyZXF1ZXN0KTtcbiAgICAgICAgY29uc3QgcmVxQ25mU3RyaW5nID0gdGhpcy5jcnlwdG9VdGlscy5iYXNlNjRFbmNvZGUoSlNPTi5zdHJpbmdpZnkocmVxQ25mKSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBraWQ6IHJlcUNuZi5raWQsXG4gICAgICAgICAgICByZXFDbmZTdHJpbmcsXG4gICAgICAgICAgICByZXFDbmZIYXNoOiBhd2FpdCB0aGlzLmNyeXB0b1V0aWxzLmhhc2hTdHJpbmcocmVxQ25mU3RyaW5nKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGtleV9pZCBmb3IgYSBTSFIgdG9rZW4gcmVxdWVzdFxuICAgICAqIEBwYXJhbSByZXF1ZXN0XG4gICAgICogQHJldHVybnNcbiAgICAgKi9cbiAgICBhc3luYyBnZW5lcmF0ZUtpZChyZXF1ZXN0KSB7XG4gICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQ/LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuUG9wVG9rZW5HZW5lcmF0ZUtpZCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgY29uc3Qga2lkVGh1bWJwcmludCA9IGF3YWl0IHRoaXMuY3J5cHRvVXRpbHMuZ2V0UHVibGljS2V5VGh1bWJwcmludChyZXF1ZXN0KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGtpZDoga2lkVGh1bWJwcmludCxcbiAgICAgICAgICAgIHhtc19rc2w6IEtleUxvY2F0aW9uLlNXLFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaWducyB0aGUgUE9QIGFjY2Vzc190b2tlbiB3aXRoIHRoZSBsb2NhbCBnZW5lcmF0ZWQga2V5LXBhaXJcbiAgICAgKiBAcGFyYW0gYWNjZXNzVG9rZW5cbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxuICAgICAqIEByZXR1cm5zXG4gICAgICovXG4gICAgYXN5bmMgc2lnblBvcFRva2VuKGFjY2Vzc1Rva2VuLCBrZXlJZCwgcmVxdWVzdCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zaWduUGF5bG9hZChhY2Nlc3NUb2tlbiwga2V5SWQsIHJlcXVlc3QpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVdGlsaXR5IGZ1bmN0aW9uIHRvIGdlbmVyYXRlIHRoZSBzaWduZWQgSldUIGZvciBhbiBhY2Nlc3NfdG9rZW5cbiAgICAgKiBAcGFyYW0gcGF5bG9hZFxuICAgICAqIEBwYXJhbSBraWRcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxuICAgICAqIEBwYXJhbSBjbGFpbXNcbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIGFzeW5jIHNpZ25QYXlsb2FkKHBheWxvYWQsIGtleUlkLCByZXF1ZXN0LCBjbGFpbXMpIHtcbiAgICAgICAgLy8gRGVjb25zdHJ1Y3QgcmVxdWVzdCB0byBleHRyYWN0IFNIUiBwYXJhbWV0ZXJzXG4gICAgICAgIGNvbnN0IHsgcmVzb3VyY2VSZXF1ZXN0TWV0aG9kLCByZXNvdXJjZVJlcXVlc3RVcmksIHNockNsYWltcywgc2hyTm9uY2UsIH0gPSByZXF1ZXN0O1xuICAgICAgICBjb25zdCByZXNvdXJjZVVybFN0cmluZyA9IHJlc291cmNlUmVxdWVzdFVyaVxuICAgICAgICAgICAgPyBuZXcgVXJsU3RyaW5nKHJlc291cmNlUmVxdWVzdFVyaSlcbiAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgICAgICBjb25zdCByZXNvdXJjZVVybENvbXBvbmVudHMgPSByZXNvdXJjZVVybFN0cmluZz8uZ2V0VXJsQ29tcG9uZW50cygpO1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5jcnlwdG9VdGlscy5zaWduSnd0KHtcbiAgICAgICAgICAgIGF0OiBwYXlsb2FkLFxuICAgICAgICAgICAgdHM6IFRpbWVVdGlscy5ub3dTZWNvbmRzKCksXG4gICAgICAgICAgICBtOiByZXNvdXJjZVJlcXVlc3RNZXRob2Q/LnRvVXBwZXJDYXNlKCksXG4gICAgICAgICAgICB1OiByZXNvdXJjZVVybENvbXBvbmVudHM/Lkhvc3ROYW1lQW5kUG9ydCxcbiAgICAgICAgICAgIG5vbmNlOiBzaHJOb25jZSB8fCB0aGlzLmNyeXB0b1V0aWxzLmNyZWF0ZU5ld0d1aWQoKSxcbiAgICAgICAgICAgIHA6IHJlc291cmNlVXJsQ29tcG9uZW50cz8uQWJzb2x1dGVQYXRoLFxuICAgICAgICAgICAgcTogcmVzb3VyY2VVcmxDb21wb25lbnRzPy5RdWVyeVN0cmluZ1xuICAgICAgICAgICAgICAgID8gW1tdLCByZXNvdXJjZVVybENvbXBvbmVudHMuUXVlcnlTdHJpbmddXG4gICAgICAgICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBjbGllbnRfY2xhaW1zOiBzaHJDbGFpbXMgfHwgdW5kZWZpbmVkLFxuICAgICAgICAgICAgLi4uY2xhaW1zLFxuICAgICAgICB9LCBrZXlJZCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IFBvcFRva2VuR2VuZXJhdG9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qb3BUb2tlbkdlbmVyYXRvci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/AuthError.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/AuthError.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthError: function() { return /* binding */ AuthError; },\n/* harmony export */   AuthErrorMessage: function() { return /* binding */ AuthErrorMessage; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst AuthErrorMessage = {\n    unexpectedError: {\n        code: \"unexpected_error\",\n        desc: \"Unexpected error in authentication.\",\n    },\n    postRequestFailed: {\n        code: \"post_request_failed\",\n        desc: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\n    },\n};\n/**\n * General error class thrown by the MSAL.js library.\n */\nclass AuthError extends Error {\n    constructor(errorCode, errorMessage, suberror) {\n        const errorString = errorMessage\n            ? `${errorCode}: ${errorMessage}`\n            : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n        this.errorCode = errorCode || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        this.subError = suberror || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        this.name = \"AuthError\";\n    }\n    setCorrelationId(correlationId) {\n        this.correlationId = correlationId;\n    }\n    /**\n     * Creates an error that is thrown when something unexpected happens in the library.\n     * @param errDesc\n     */\n    static createUnexpectedError(errDesc) {\n        return new AuthError(AuthErrorMessage.unexpectedError.code, `${AuthErrorMessage.unexpectedError.desc}: ${errDesc}`);\n    }\n    /**\n     * Creates an error for post request failures.\n     * @param errDesc\n     * @returns\n     */\n    static createPostRequestFailed(errDesc) {\n        return new AuthError(AuthErrorMessage.postRequestFailed.code, `${AuthErrorMessage.postRequestFailed.desc}: ${errDesc}`);\n    }\n}\n\n\n//# sourceMappingURL=AuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQXV0aEVycm9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQ3NDOztBQUVuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixVQUFVLElBQUksYUFBYTtBQUM1QztBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsMkRBQVM7QUFDL0MsNENBQTRDLDJEQUFTO0FBQ3JELG9DQUFvQywyREFBUztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVFQUF1RSxzQ0FBc0MsSUFBSSxRQUFRO0FBQ3pIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLHdDQUF3QyxJQUFJLFFBQVE7QUFDN0g7QUFDQTs7QUFFdUM7QUFDdkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2Vycm9yL0F1dGhFcnJvci5tanM/Yjg4NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQ29uc3RhbnRzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBBdXRoRXJyb3JNZXNzYWdlIGNsYXNzIGNvbnRhaW5pbmcgc3RyaW5nIGNvbnN0YW50cyB1c2VkIGJ5IGVycm9yIGNvZGVzIGFuZCBtZXNzYWdlcy5cbiAqL1xuY29uc3QgQXV0aEVycm9yTWVzc2FnZSA9IHtcbiAgICB1bmV4cGVjdGVkRXJyb3I6IHtcbiAgICAgICAgY29kZTogXCJ1bmV4cGVjdGVkX2Vycm9yXCIsXG4gICAgICAgIGRlc2M6IFwiVW5leHBlY3RlZCBlcnJvciBpbiBhdXRoZW50aWNhdGlvbi5cIixcbiAgICB9LFxuICAgIHBvc3RSZXF1ZXN0RmFpbGVkOiB7XG4gICAgICAgIGNvZGU6IFwicG9zdF9yZXF1ZXN0X2ZhaWxlZFwiLFxuICAgICAgICBkZXNjOiBcIlBvc3QgcmVxdWVzdCBmYWlsZWQgZnJvbSB0aGUgbmV0d29yaywgY291bGQgYmUgYSA0eHgvNXh4IG9yIGEgbmV0d29yayB1bmF2YWlsYWJpbGl0eS4gUGxlYXNlIGNoZWNrIHRoZSBleGFjdCBlcnJvciBjb2RlIGZvciBkZXRhaWxzLlwiLFxuICAgIH0sXG59O1xuLyoqXG4gKiBHZW5lcmFsIGVycm9yIGNsYXNzIHRocm93biBieSB0aGUgTVNBTC5qcyBsaWJyYXJ5LlxuICovXG5jbGFzcyBBdXRoRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UsIHN1YmVycm9yKSB7XG4gICAgICAgIGNvbnN0IGVycm9yU3RyaW5nID0gZXJyb3JNZXNzYWdlXG4gICAgICAgICAgICA/IGAke2Vycm9yQ29kZX06ICR7ZXJyb3JNZXNzYWdlfWBcbiAgICAgICAgICAgIDogZXJyb3JDb2RlO1xuICAgICAgICBzdXBlcihlcnJvclN0cmluZyk7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBBdXRoRXJyb3IucHJvdG90eXBlKTtcbiAgICAgICAgdGhpcy5lcnJvckNvZGUgPSBlcnJvckNvZGUgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcbiAgICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSBlcnJvck1lc3NhZ2UgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcbiAgICAgICAgdGhpcy5zdWJFcnJvciA9IHN1YmVycm9yIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiQXV0aEVycm9yXCI7XG4gICAgfVxuICAgIHNldENvcnJlbGF0aW9uSWQoY29ycmVsYXRpb25JZCkge1xuICAgICAgICB0aGlzLmNvcnJlbGF0aW9uSWQgPSBjb3JyZWxhdGlvbklkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGVycm9yIHRoYXQgaXMgdGhyb3duIHdoZW4gc29tZXRoaW5nIHVuZXhwZWN0ZWQgaGFwcGVucyBpbiB0aGUgbGlicmFyeS5cbiAgICAgKiBAcGFyYW0gZXJyRGVzY1xuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVVbmV4cGVjdGVkRXJyb3IoZXJyRGVzYykge1xuICAgICAgICByZXR1cm4gbmV3IEF1dGhFcnJvcihBdXRoRXJyb3JNZXNzYWdlLnVuZXhwZWN0ZWRFcnJvci5jb2RlLCBgJHtBdXRoRXJyb3JNZXNzYWdlLnVuZXhwZWN0ZWRFcnJvci5kZXNjfTogJHtlcnJEZXNjfWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGVycm9yIGZvciBwb3N0IHJlcXVlc3QgZmFpbHVyZXMuXG4gICAgICogQHBhcmFtIGVyckRlc2NcbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVQb3N0UmVxdWVzdEZhaWxlZChlcnJEZXNjKSB7XG4gICAgICAgIHJldHVybiBuZXcgQXV0aEVycm9yKEF1dGhFcnJvck1lc3NhZ2UucG9zdFJlcXVlc3RGYWlsZWQuY29kZSwgYCR7QXV0aEVycm9yTWVzc2FnZS5wb3N0UmVxdWVzdEZhaWxlZC5kZXNjfTogJHtlcnJEZXNjfWApO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgQXV0aEVycm9yLCBBdXRoRXJyb3JNZXNzYWdlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRoRXJyb3IubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/AuthError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientAuthError: function() { return /* binding */ ClientAuthError; },\n/* harmony export */   ClientAuthErrorMessage: function() { return /* binding */ ClientAuthErrorMessage; }\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst ClientAuthErrorMessage = {\n    clientInfoDecodingError: {\n        code: \"client_info_decoding_error\",\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\",\n    },\n    clientInfoEmptyError: {\n        code: \"client_info_empty_error\",\n        desc: \"The client info was empty. Please review the trace to determine the root cause.\",\n    },\n    tokenParsingError: {\n        code: \"token_parsing_error\",\n        desc: \"Token cannot be parsed. Please review stack trace to determine root cause.\",\n    },\n    nullOrEmptyToken: {\n        code: \"null_or_empty_token\",\n        desc: \"The token is null or empty. Please review the trace to determine the root cause.\",\n    },\n    endpointResolutionError: {\n        code: \"endpoints_resolution_error\",\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\",\n    },\n    networkError: {\n        code: \"network_error\",\n        desc: \"Network request failed. Please check network trace to determine root cause.\",\n    },\n    unableToGetOpenidConfigError: {\n        code: \"openid_config_error\",\n        desc: \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\",\n    },\n    hashNotDeserialized: {\n        code: \"hash_not_deserialized\",\n        desc: \"The hash parameters could not be deserialized. Please review the trace to determine the root cause.\",\n    },\n    blankGuidGenerated: {\n        code: \"blank_guid_generated\",\n        desc: \"The guid generated was blank. Please review the trace to determine the root cause.\",\n    },\n    invalidStateError: {\n        code: \"invalid_state\",\n        desc: \"State was not the expected format. Please check the logs to determine whether the request was sent using ProtocolUtils.setRequestState().\",\n    },\n    stateMismatchError: {\n        code: \"state_mismatch\",\n        desc: \"State mismatch error. Please check your network. Continued requests may cause cache overflow.\",\n    },\n    stateNotFoundError: {\n        code: \"state_not_found\",\n        desc: \"State not found\",\n    },\n    nonceMismatchError: {\n        code: \"nonce_mismatch\",\n        desc: \"Nonce mismatch error. This may be caused by a race condition in concurrent requests.\",\n    },\n    nonceNotFoundError: {\n        code: \"nonce_not_found\",\n        desc: \"nonce not found\",\n    },\n    authTimeNotFoundError: {\n        code: \"auth_time_not_found\",\n        desc: \"Max Age was requested and the ID token is missing the auth_time variable.\" +\n            \" auth_time is an optional claim and is not enabled by default - it must be enabled.\" +\n            \" See https://aka.ms/msaljs/optional-claims for more information.\",\n    },\n    maxAgeTranspiredError: {\n        code: \"max_age_transpired\",\n        desc: \"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.\",\n    },\n    noTokensFoundError: {\n        code: \"no_tokens_found\",\n        desc: \"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken().\",\n    },\n    multipleMatchingTokens: {\n        code: \"multiple_matching_tokens\",\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\n            \"Call AcquireToken again providing more requirements such as authority or account.\",\n    },\n    multipleMatchingAccounts: {\n        code: \"multiple_matching_accounts\",\n        desc: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\",\n    },\n    multipleMatchingAppMetadata: {\n        code: \"multiple_matching_appMetadata\",\n        desc: \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\",\n    },\n    tokenRequestCannotBeMade: {\n        code: \"request_cannot_be_made\",\n        desc: \"Token request cannot be made without authorization code or refresh token.\",\n    },\n    appendEmptyScopeError: {\n        code: \"cannot_append_empty_scope\",\n        desc: \"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info.\",\n    },\n    removeEmptyScopeError: {\n        code: \"cannot_remove_empty_scope\",\n        desc: \"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info.\",\n    },\n    appendScopeSetError: {\n        code: \"cannot_append_scopeset\",\n        desc: \"Cannot append ScopeSet due to error.\",\n    },\n    emptyInputScopeSetError: {\n        code: \"empty_input_scopeset\",\n        desc: \"Empty input ScopeSet cannot be processed.\",\n    },\n    DeviceCodePollingCancelled: {\n        code: \"device_code_polling_cancelled\",\n        desc: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\",\n    },\n    DeviceCodeExpired: {\n        code: \"device_code_expired\",\n        desc: \"Device code is expired.\",\n    },\n    DeviceCodeUnknownError: {\n        code: \"device_code_unknown_error\",\n        desc: \"Device code stopped polling for unknown reasons.\",\n    },\n    NoAccountInSilentRequest: {\n        code: \"no_account_in_silent_request\",\n        desc: \"Please pass an account object, silent flow is not supported without account information\",\n    },\n    invalidCacheRecord: {\n        code: \"invalid_cache_record\",\n        desc: \"Cache record object was null or undefined.\",\n    },\n    invalidCacheEnvironment: {\n        code: \"invalid_cache_environment\",\n        desc: \"Invalid environment when attempting to create cache entry\",\n    },\n    noAccountFound: {\n        code: \"no_account_found\",\n        desc: \"No account found in cache for given key.\",\n    },\n    CachePluginError: {\n        code: \"no cache plugin set on CacheManager\",\n        desc: \"ICachePlugin needs to be set before using readFromStorage or writeFromStorage\",\n    },\n    noCryptoObj: {\n        code: \"no_crypto_object\",\n        desc: \"No crypto object detected. This is required for the following operation: \",\n    },\n    invalidCacheType: {\n        code: \"invalid_cache_type\",\n        desc: \"Invalid cache type\",\n    },\n    unexpectedAccountType: {\n        code: \"unexpected_account_type\",\n        desc: \"Unexpected account type.\",\n    },\n    unexpectedCredentialType: {\n        code: \"unexpected_credential_type\",\n        desc: \"Unexpected credential type.\",\n    },\n    invalidAssertion: {\n        code: \"invalid_assertion\",\n        desc: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\",\n    },\n    invalidClientCredential: {\n        code: \"invalid_client_credential\",\n        desc: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\",\n    },\n    tokenRefreshRequired: {\n        code: \"token_refresh_required\",\n        desc: \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\",\n    },\n    userTimeoutReached: {\n        code: \"user_timeout_reached\",\n        desc: \"User defined timeout for device code polling reached\",\n    },\n    tokenClaimsRequired: {\n        code: \"token_claims_cnf_required_for_signedjwt\",\n        desc: \"Cannot generate a POP jwt if the token_claims are not populated\",\n    },\n    noAuthorizationCodeFromServer: {\n        code: \"authorization_code_missing_from_server_response\",\n        desc: \"Server response does not contain an authorization code to proceed\",\n    },\n    noAzureRegionDetected: {\n        code: \"no_azure_region_detected\",\n        desc: \"No azure region was detected and no fallback was made available\",\n    },\n    accessTokenEntityNullError: {\n        code: \"access_token_entity_null\",\n        desc: \"Access token entity is null, please check logs and cache to ensure a valid access token is present.\",\n    },\n    bindingKeyNotRemovedError: {\n        code: \"binding_key_not_removed\",\n        desc: \"Could not remove the credential's binding key from storage.\",\n    },\n    logoutNotSupported: {\n        code: \"end_session_endpoint_not_supported\",\n        desc: \"Provided authority does not support logout.\",\n    },\n    keyIdMissing: {\n        code: \"key_id_missing\",\n        desc: \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\",\n    },\n    noNetworkConnectivity: {\n        code: \"no_network_connectivity\",\n        desc: \"No network connectivity. Check your internet connection.\",\n    },\n    userCanceledError: {\n        code: \"user_canceled\",\n        desc: \"User canceled the flow.\",\n    },\n    missingTenantIdError: {\n        code: \"missing_tenant_id_error\",\n        desc: \"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.\",\n    },\n};\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nclass ClientAuthError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        this.name = \"ClientAuthError\";\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\n    }\n    /**\n     * Creates an error thrown when client info object doesn't decode correctly.\n     * @param caughtError\n     */\n    static createClientInfoDecodingError(caughtError) {\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, `${ClientAuthErrorMessage.clientInfoDecodingError.desc} Failed with error: ${caughtError}`);\n    }\n    /**\n     * Creates an error thrown if the client info is empty.\n     * @param rawClientInfo\n     */\n    static createClientInfoEmptyError() {\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoEmptyError.code, `${ClientAuthErrorMessage.clientInfoEmptyError.desc}`);\n    }\n    /**\n     * Creates an error thrown when the id token extraction errors out.\n     * @param err\n     */\n    static createTokenParsingError(caughtExtractionError) {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenParsingError.code, `${ClientAuthErrorMessage.tokenParsingError.desc} Failed with error: ${caughtExtractionError}`);\n    }\n    /**\n     * Creates an error thrown when the id token string is null or empty.\n     * @param invalidRawTokenString\n     */\n    static createTokenNullOrEmptyError(invalidRawTokenString) {\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyToken.code, `${ClientAuthErrorMessage.nullOrEmptyToken.desc} Raw Token Value: ${invalidRawTokenString}`);\n    }\n    /**\n     * Creates an error thrown when the endpoint discovery doesn't complete correctly.\n     */\n    static createEndpointDiscoveryIncompleteError(errDetail) {\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, `${ClientAuthErrorMessage.endpointResolutionError.desc} Detail: ${errDetail}`);\n    }\n    /**\n     * Creates an error thrown when the fetch client throws\n     */\n    static createNetworkError(endpoint, errDetail) {\n        return new ClientAuthError(ClientAuthErrorMessage.networkError.code, `${ClientAuthErrorMessage.networkError.desc} | Fetch client threw: ${errDetail} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n    /**\n     * Creates an error thrown when the openid-configuration endpoint cannot be reached or does not contain the required data\n     */\n    static createUnableToGetOpenidConfigError(errDetail) {\n        return new ClientAuthError(ClientAuthErrorMessage.unableToGetOpenidConfigError.code, `${ClientAuthErrorMessage.unableToGetOpenidConfigError.desc} Attempted to retrieve endpoints from: ${errDetail}`);\n    }\n    /**\n     * Creates an error thrown when the hash cannot be deserialized.\n     * @param hashParamObj\n     */\n    static createHashNotDeserializedError(hashParamObj) {\n        return new ClientAuthError(ClientAuthErrorMessage.hashNotDeserialized.code, `${ClientAuthErrorMessage.hashNotDeserialized.desc} Given Object: ${hashParamObj}`);\n    }\n    /**\n     * Creates an error thrown when the state cannot be parsed.\n     * @param invalidState\n     */\n    static createInvalidStateError(invalidState, errorString) {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, `${ClientAuthErrorMessage.invalidStateError.desc} Invalid State: ${invalidState}, Root Err: ${errorString}`);\n    }\n    /**\n     * Creates an error thrown when two states do not match.\n     */\n    static createStateMismatchError() {\n        return new ClientAuthError(ClientAuthErrorMessage.stateMismatchError.code, ClientAuthErrorMessage.stateMismatchError.desc);\n    }\n    /**\n     * Creates an error thrown when the state is not present\n     * @param missingState\n     */\n    static createStateNotFoundError(missingState) {\n        return new ClientAuthError(ClientAuthErrorMessage.stateNotFoundError.code, `${ClientAuthErrorMessage.stateNotFoundError.desc}:  ${missingState}`);\n    }\n    /**\n     * Creates an error thrown when the nonce does not match.\n     */\n    static createNonceMismatchError() {\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc);\n    }\n    /**\n     * Creates an error thrown when max_age was provided in the request, but auth_time is not in the token claims\n     * @param missingNonce\n     */\n    static createAuthTimeNotFoundError() {\n        return new ClientAuthError(ClientAuthErrorMessage.authTimeNotFoundError.code, ClientAuthErrorMessage.authTimeNotFoundError.desc);\n    }\n    /**\n     * Creates an error thrown when too much time has elapsed since the last end-user authentication\n     */\n    static createMaxAgeTranspiredError() {\n        return new ClientAuthError(ClientAuthErrorMessage.maxAgeTranspiredError.code, ClientAuthErrorMessage.maxAgeTranspiredError.desc);\n    }\n    /**\n     * Creates an error thrown when the mnonce is not present\n     * @param missingNonce\n     */\n    static createNonceNotFoundError(missingNonce) {\n        return new ClientAuthError(ClientAuthErrorMessage.nonceNotFoundError.code, `${ClientAuthErrorMessage.nonceNotFoundError.desc}:  ${missingNonce}`);\n    }\n    /**\n     * Throws error when multiple tokens are in cache.\n     */\n    static createMultipleMatchingTokensInCacheError() {\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code, `${ClientAuthErrorMessage.multipleMatchingTokens.desc}.`);\n    }\n    /**\n     * Throws error when multiple accounts are in cache for the given params\n     */\n    static createMultipleMatchingAccountsInCacheError() {\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAccounts.code, ClientAuthErrorMessage.multipleMatchingAccounts.desc);\n    }\n    /**\n     * Throws error when multiple appMetada are in cache for the given clientId.\n     */\n    static createMultipleMatchingAppMetadataInCacheError() {\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAppMetadata.code, ClientAuthErrorMessage.multipleMatchingAppMetadata.desc);\n    }\n    /**\n     * Throws error when no auth code or refresh token is given to ServerTokenRequestParameters.\n     */\n    static createTokenRequestCannotBeMadeError() {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCannotBeMade.code, ClientAuthErrorMessage.tokenRequestCannotBeMade.desc);\n    }\n    /**\n     * Throws error when attempting to append a null, undefined or empty scope to a set\n     * @param givenScope\n     */\n    static createAppendEmptyScopeToSetError(givenScope) {\n        return new ClientAuthError(ClientAuthErrorMessage.appendEmptyScopeError.code, `${ClientAuthErrorMessage.appendEmptyScopeError.desc} Given Scope: ${givenScope}`);\n    }\n    /**\n     * Throws error when attempting to append a null, undefined or empty scope to a set\n     * @param givenScope\n     */\n    static createRemoveEmptyScopeFromSetError(givenScope) {\n        return new ClientAuthError(ClientAuthErrorMessage.removeEmptyScopeError.code, `${ClientAuthErrorMessage.removeEmptyScopeError.desc} Given Scope: ${givenScope}`);\n    }\n    /**\n     * Throws error when attempting to append null or empty ScopeSet.\n     * @param appendError\n     */\n    static createAppendScopeSetError(appendError) {\n        return new ClientAuthError(ClientAuthErrorMessage.appendScopeSetError.code, `${ClientAuthErrorMessage.appendScopeSetError.desc} Detail Error: ${appendError}`);\n    }\n    /**\n     * Throws error if ScopeSet is null or undefined.\n     * @param givenScopeSet\n     */\n    static createEmptyInputScopeSetError() {\n        return new ClientAuthError(ClientAuthErrorMessage.emptyInputScopeSetError.code, `${ClientAuthErrorMessage.emptyInputScopeSetError.desc}`);\n    }\n    /**\n     * Throws error if user sets CancellationToken.cancel = true during polling of token endpoint during device code flow\n     */\n    static createDeviceCodeCancelledError() {\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodePollingCancelled.code, `${ClientAuthErrorMessage.DeviceCodePollingCancelled.desc}`);\n    }\n    /**\n     * Throws error if device code is expired\n     */\n    static createDeviceCodeExpiredError() {\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeExpired.code, `${ClientAuthErrorMessage.DeviceCodeExpired.desc}`);\n    }\n    /**\n     * Throws error if device code is expired\n     */\n    static createDeviceCodeUnknownError() {\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeUnknownError.code, `${ClientAuthErrorMessage.DeviceCodeUnknownError.desc}`);\n    }\n    /**\n     * Throws error when silent requests are made without an account object\n     */\n    static createNoAccountInSilentRequestError() {\n        return new ClientAuthError(ClientAuthErrorMessage.NoAccountInSilentRequest.code, `${ClientAuthErrorMessage.NoAccountInSilentRequest.desc}`);\n    }\n    /**\n     * Throws error when cache record is null or undefined.\n     */\n    static createNullOrUndefinedCacheRecord() {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheRecord.code, ClientAuthErrorMessage.invalidCacheRecord.desc);\n    }\n    /**\n     * Throws error when provided environment is not part of the CloudDiscoveryMetadata object\n     */\n    static createInvalidCacheEnvironmentError() {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheEnvironment.code, ClientAuthErrorMessage.invalidCacheEnvironment.desc);\n    }\n    /**\n     * Throws error when account is not found in cache.\n     */\n    static createNoAccountFoundError() {\n        return new ClientAuthError(ClientAuthErrorMessage.noAccountFound.code, ClientAuthErrorMessage.noAccountFound.desc);\n    }\n    /**\n     * Throws error if ICachePlugin not set on CacheManager.\n     */\n    static createCachePluginError() {\n        return new ClientAuthError(ClientAuthErrorMessage.CachePluginError.code, `${ClientAuthErrorMessage.CachePluginError.desc}`);\n    }\n    /**\n     * Throws error if crypto object not found.\n     * @param operationName\n     */\n    static createNoCryptoObjectError(operationName) {\n        return new ClientAuthError(ClientAuthErrorMessage.noCryptoObj.code, `${ClientAuthErrorMessage.noCryptoObj.desc}${operationName}`);\n    }\n    /**\n     * Throws error if cache type is invalid.\n     */\n    static createInvalidCacheTypeError() {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheType.code, `${ClientAuthErrorMessage.invalidCacheType.desc}`);\n    }\n    /**\n     * Throws error if unexpected account type.\n     */\n    static createUnexpectedAccountTypeError() {\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedAccountType.code, `${ClientAuthErrorMessage.unexpectedAccountType.desc}`);\n    }\n    /**\n     * Throws error if unexpected credential type.\n     */\n    static createUnexpectedCredentialTypeError() {\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedCredentialType.code, `${ClientAuthErrorMessage.unexpectedCredentialType.desc}`);\n    }\n    /**\n     * Throws error if client assertion is not valid.\n     */\n    static createInvalidAssertionError() {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAssertion.code, `${ClientAuthErrorMessage.invalidAssertion.desc}`);\n    }\n    /**\n     * Throws error if client assertion is not valid.\n     */\n    static createInvalidCredentialError() {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidClientCredential.code, `${ClientAuthErrorMessage.invalidClientCredential.desc}`);\n    }\n    /**\n     * Throws error if token cannot be retrieved from cache due to refresh being required.\n     */\n    static createRefreshRequiredError() {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRefreshRequired.code, ClientAuthErrorMessage.tokenRefreshRequired.desc);\n    }\n    /**\n     * Throws error if the user defined timeout is reached.\n     */\n    static createUserTimeoutReachedError() {\n        return new ClientAuthError(ClientAuthErrorMessage.userTimeoutReached.code, ClientAuthErrorMessage.userTimeoutReached.desc);\n    }\n    /*\n     * Throws error if token claims are not populated for a signed jwt generation\n     */\n    static createTokenClaimsRequiredError() {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenClaimsRequired.code, ClientAuthErrorMessage.tokenClaimsRequired.desc);\n    }\n    /**\n     * Throws error when the authorization code is missing from the server response\n     */\n    static createNoAuthCodeInServerResponseError() {\n        return new ClientAuthError(ClientAuthErrorMessage.noAuthorizationCodeFromServer.code, ClientAuthErrorMessage.noAuthorizationCodeFromServer.desc);\n    }\n    static createBindingKeyNotRemovedError() {\n        return new ClientAuthError(ClientAuthErrorMessage.bindingKeyNotRemovedError.code, ClientAuthErrorMessage.bindingKeyNotRemovedError.desc);\n    }\n    /**\n     * Thrown when logout is attempted for an authority that doesnt have an end_session_endpoint\n     */\n    static createLogoutNotSupportedError() {\n        return new ClientAuthError(ClientAuthErrorMessage.logoutNotSupported.code, ClientAuthErrorMessage.logoutNotSupported.desc);\n    }\n    /**\n     * Create an error when kid attribute is missing from a PoP token's cache record\n     */\n    static createKeyIdMissingError() {\n        return new ClientAuthError(ClientAuthErrorMessage.keyIdMissing.code, ClientAuthErrorMessage.keyIdMissing.desc);\n    }\n    /**\n     * Create an error when the client does not have network connectivity\n     */\n    static createNoNetworkConnectivityError() {\n        return new ClientAuthError(ClientAuthErrorMessage.noNetworkConnectivity.code, ClientAuthErrorMessage.noNetworkConnectivity.desc);\n    }\n    /**\n     * Create an error when the user cancels the flow\n     */\n    static createUserCanceledError() {\n        return new ClientAuthError(ClientAuthErrorMessage.userCanceledError.code, ClientAuthErrorMessage.userCanceledError.desc);\n    }\n    /**\n     * Creates an error for during acquireTokenByClientCredential when TenantId is set to \"common\" or \"organizations\"\n     */\n    static createMissingTenantIdError() {\n        return new _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError(ClientAuthErrorMessage.missingTenantIdError.code, ClientAuthErrorMessage.missingTenantIdError.desc);\n    }\n}\n\n\n//# sourceMappingURL=ClientAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientConfigurationError: function() { return /* binding */ ClientConfigurationError; },\n/* harmony export */   ClientConfigurationErrorMessage: function() { return /* binding */ ClientConfigurationErrorMessage; }\n/* harmony export */ });\n/* harmony import */ var _ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\n */\nconst ClientConfigurationErrorMessage = {\n    redirectUriNotSet: {\n        code: \"redirect_uri_empty\",\n        desc: \"A redirect URI is required for all calls, and none has been set.\",\n    },\n    postLogoutUriNotSet: {\n        code: \"post_logout_uri_empty\",\n        desc: \"A post logout redirect has not been set.\",\n    },\n    claimsRequestParsingError: {\n        code: \"claims_request_parsing_error\",\n        desc: \"Could not parse the given claims request object.\",\n    },\n    authorityUriInsecure: {\n        code: \"authority_uri_insecure\",\n        desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\n    },\n    urlParseError: {\n        code: \"url_parse_error\",\n        desc: \"URL could not be parsed into appropriate segments.\",\n    },\n    urlEmptyError: {\n        code: \"empty_url_error\",\n        desc: \"URL was empty or null.\",\n    },\n    emptyScopesError: {\n        code: \"empty_input_scopes_error\",\n        desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\",\n    },\n    nonArrayScopesError: {\n        code: \"nonarray_input_scopes_error\",\n        desc: \"Scopes cannot be passed as non-array.\",\n    },\n    clientIdSingleScopeError: {\n        code: \"clientid_input_scopes_error\",\n        desc: \"Client ID can only be provided as a single scope.\",\n    },\n    invalidPrompt: {\n        code: \"invalid_prompt_value\",\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent', 'create', 'none' and 'no_session'.  Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\n    },\n    invalidClaimsRequest: {\n        code: \"invalid_claims\",\n        desc: \"Given claims parameter must be a stringified JSON object.\",\n    },\n    tokenRequestEmptyError: {\n        code: \"token_request_empty\",\n        desc: \"Token request was empty and not found in cache.\",\n    },\n    logoutRequestEmptyError: {\n        code: \"logout_request_empty\",\n        desc: \"The logout request was null or undefined.\",\n    },\n    invalidCodeChallengeMethod: {\n        code: \"invalid_code_challenge_method\",\n        desc: 'code_challenge_method passed is invalid. Valid values are \"plain\" and \"S256\".',\n    },\n    invalidCodeChallengeParams: {\n        code: \"pkce_params_missing\",\n        desc: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\",\n    },\n    invalidCloudDiscoveryMetadata: {\n        code: \"invalid_cloud_discovery_metadata\",\n        desc: \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\",\n    },\n    invalidAuthorityMetadata: {\n        code: \"invalid_authority_metadata\",\n        desc: \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\",\n    },\n    untrustedAuthority: {\n        code: \"untrusted_authority\",\n        desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\",\n    },\n    invalidAzureCloudInstance: {\n        code: \"invalid_azure_cloud_instance\",\n        desc: \"Invalid AzureCloudInstance provided. Please refer MSAL JS docs: aks.ms/msaljs/azure_cloud_instance for valid values\",\n    },\n    missingSshJwk: {\n        code: \"missing_ssh_jwk\",\n        desc: \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\",\n    },\n    missingSshKid: {\n        code: \"missing_ssh_kid\",\n        desc: \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\",\n    },\n    missingNonceAuthenticationHeader: {\n        code: \"missing_nonce_authentication_header\",\n        desc: \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\",\n    },\n    invalidAuthenticationHeader: {\n        code: \"invalid_authentication_header\",\n        desc: \"Invalid authentication header provided\",\n    },\n    cannotSetOIDCOptions: {\n        code: \"cannot_set_OIDCOptions\",\n        desc: \"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.\",\n    },\n    cannotAllowNativeBroker: {\n        code: \"cannot_allow_native_broker\",\n        desc: \"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.\",\n    },\n    authorityMismatch: {\n        code: \"authority_mismatch\",\n        desc: \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\",\n    },\n};\n/**\n * Error thrown when there is an error in configuration of the MSAL.js library.\n */\nclass ClientConfigurationError extends _ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        this.name = \"ClientConfigurationError\";\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\n    }\n    /**\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\n     */\n    static createRedirectUriEmptyError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code, ClientConfigurationErrorMessage.redirectUriNotSet.desc);\n    }\n    /**\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\n     */\n    static createPostLogoutRedirectUriEmptyError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code, ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\n    }\n    /**\n     * Creates an error thrown when the claims request could not be successfully parsed\n     */\n    static createClaimsRequestParsingError(claimsRequestParseError) {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, `${ClientConfigurationErrorMessage.claimsRequestParsingError.desc} Given value: ${claimsRequestParseError}`);\n    }\n    /**\n     * Creates an error thrown if authority uri is given an insecure protocol.\n     * @param urlString\n     */\n    static createInsecureAuthorityUriError(urlString) {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code, `${ClientConfigurationErrorMessage.authorityUriInsecure.desc} Given URI: ${urlString}`);\n    }\n    /**\n     * Creates an error thrown if URL string does not parse into separate segments.\n     * @param urlString\n     */\n    static createUrlParseError(urlParseError) {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code, `${ClientConfigurationErrorMessage.urlParseError.desc} Given Error: ${urlParseError}`);\n    }\n    /**\n     * Creates an error thrown if URL string is empty or null.\n     * @param urlString\n     */\n    static createUrlEmptyError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code, ClientConfigurationErrorMessage.urlEmptyError.desc);\n    }\n    /**\n     * Error thrown when scopes are empty.\n     * @param scopesValue\n     */\n    static createEmptyScopesArrayError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code, `${ClientConfigurationErrorMessage.emptyScopesError.desc}`);\n    }\n    /**\n     * Error thrown when client id scope is not provided as single scope.\n     * @param inputScopes\n     */\n    static createClientIdSingleScopeError(inputScopes) {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code, `${ClientConfigurationErrorMessage.clientIdSingleScopeError.desc} Given Scopes: ${inputScopes}`);\n    }\n    /**\n     * Error thrown when prompt is not an allowed type.\n     * @param promptValue\n     */\n    static createInvalidPromptError(promptValue) {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, `${ClientConfigurationErrorMessage.invalidPrompt.desc} Given value: ${promptValue}`);\n    }\n    /**\n     * Creates error thrown when claims parameter is not a stringified JSON object\n     */\n    static createInvalidClaimsRequestError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidClaimsRequest.code, ClientConfigurationErrorMessage.invalidClaimsRequest.desc);\n    }\n    /**\n     * Throws error when token request is empty and nothing cached in storage.\n     */\n    static createEmptyLogoutRequestError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.logoutRequestEmptyError.code, ClientConfigurationErrorMessage.logoutRequestEmptyError.desc);\n    }\n    /**\n     * Throws error when token request is empty and nothing cached in storage.\n     */\n    static createEmptyTokenRequestError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.tokenRequestEmptyError.code, ClientConfigurationErrorMessage.tokenRequestEmptyError.desc);\n    }\n    /**\n     * Throws error when an invalid code_challenge_method is passed by the user\n     */\n    static createInvalidCodeChallengeMethodError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeMethod.code, ClientConfigurationErrorMessage.invalidCodeChallengeMethod.desc);\n    }\n    /**\n     * Throws error when both params: code_challenge and code_challenge_method are not passed together\n     */\n    static createInvalidCodeChallengeParamsError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeParams.code, ClientConfigurationErrorMessage.invalidCodeChallengeParams.desc);\n    }\n    /**\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\n     */\n    static createInvalidCloudDiscoveryMetadataError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.desc);\n    }\n    /**\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\n     */\n    static createInvalidAuthorityMetadataError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityMetadata.code, ClientConfigurationErrorMessage.invalidAuthorityMetadata.desc);\n    }\n    /**\n     * Throws error when provided authority is not a member of the trusted host list\n     */\n    static createUntrustedAuthorityError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc);\n    }\n    /**\n     * Throws error when the AzureCloudInstance is set to an invalid value\n     */\n    static createInvalidAzureCloudInstanceError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAzureCloudInstance.code, ClientConfigurationErrorMessage.invalidAzureCloudInstance.desc);\n    }\n    /**\n     * Throws an error when the authentication scheme is set to SSH but the SSH public key is omitted from the request\n     */\n    static createMissingSshJwkError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingSshJwk.code, ClientConfigurationErrorMessage.missingSshJwk.desc);\n    }\n    /**\n     * Throws an error when the authentication scheme is set to SSH but the SSH public key ID is omitted from the request\n     */\n    static createMissingSshKidError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingSshKid.code, ClientConfigurationErrorMessage.missingSshKid.desc);\n    }\n    /**\n     * Throws error when provided headers don't contain a header that a server nonce can be extracted from\n     */\n    static createMissingNonceAuthenticationHeadersError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingNonceAuthenticationHeader.code, ClientConfigurationErrorMessage.missingNonceAuthenticationHeader.desc);\n    }\n    /**\n     * Throws error when a provided header is invalid in any way\n     */\n    static createInvalidAuthenticationHeaderError(invalidHeaderName, details) {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthenticationHeader.code, `${ClientConfigurationErrorMessage.invalidAuthenticationHeader.desc}. Invalid header: ${invalidHeaderName}. Details: ${details}`);\n    }\n    /**\n     * Throws error when provided non-default OIDCOptions when not in OIDC protocol mode\n     */\n    static createCannotSetOIDCOptionsError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.cannotSetOIDCOptions.code, ClientConfigurationErrorMessage.cannotSetOIDCOptions.desc);\n    }\n    /**\n     * Throws error when allowNativeBroker is set to true when not in AAD protocol mode\n     */\n    static createCannotAllowNativeBrokerError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.cannotAllowNativeBroker.code, ClientConfigurationErrorMessage.cannotAllowNativeBroker.desc);\n    }\n    /**\n     * Create an error when the authority provided in request does not match authority provided in account or MSAL.js configuration.\n     */\n    static createAuthorityMismatchError() {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityMismatch.code, ClientConfigurationErrorMessage.authorityMismatch.desc);\n    }\n}\n\n\n//# sourceMappingURL=ClientConfigurationError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InteractionRequiredAuthError: function() { return /* binding */ InteractionRequiredAuthError; },\n/* harmony export */   InteractionRequiredAuthErrorMessage: function() { return /* binding */ InteractionRequiredAuthErrorMessage; },\n/* harmony export */   InteractionRequiredAuthSubErrorMessage: function() { return /* binding */ InteractionRequiredAuthSubErrorMessage; },\n/* harmony export */   InteractionRequiredServerErrorMessage: function() { return /* binding */ InteractionRequiredServerErrorMessage; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\n */\nconst InteractionRequiredServerErrorMessage = [\n    \"interaction_required\",\n    \"consent_required\",\n    \"login_required\",\n];\nconst InteractionRequiredAuthSubErrorMessage = [\n    \"message_only\",\n    \"additional_action\",\n    \"basic_action\",\n    \"user_password_expired\",\n    \"consent_required\",\n];\n/**\n * Interaction required errors defined by the SDK\n */\nconst InteractionRequiredAuthErrorMessage = {\n    noTokensFoundError: {\n        code: \"no_tokens_found\",\n        desc: \"No refresh token found in the cache. Please sign-in.\",\n    },\n    native_account_unavailable: {\n        code: \"native_account_unavailable\",\n        desc: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\",\n    },\n};\n/**\n * Error thrown when user interaction is required.\n */\nclass InteractionRequiredAuthError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError {\n    constructor(errorCode, errorMessage, subError, timestamp, traceId, correlationId, claims) {\n        super(errorCode, errorMessage, subError);\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n        this.timestamp = timestamp || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n        this.traceId = traceId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n        this.correlationId = correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n        this.claims = claims || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n        this.name = \"InteractionRequiredAuthError\";\n    }\n    /**\n     * Helper function used to determine if an error thrown by the server requires interaction to resolve\n     * @param errorCode\n     * @param errorString\n     * @param subError\n     */\n    static isInteractionRequiredError(errorCode, errorString, subError) {\n        const isInteractionRequiredErrorCode = !!errorCode &&\n            InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n        const isInteractionRequiredSubError = !!subError &&\n            InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n        const isInteractionRequiredErrorDesc = !!errorString &&\n            InteractionRequiredServerErrorMessage.some((irErrorCode) => {\n                return errorString.indexOf(irErrorCode) > -1;\n            });\n        return (isInteractionRequiredErrorCode ||\n            isInteractionRequiredErrorDesc ||\n            isInteractionRequiredSubError);\n    }\n    /**\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\n     */\n    static createNoTokensFoundError() {\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.noTokensFoundError.code, InteractionRequiredAuthErrorMessage.noTokensFoundError.desc);\n    }\n    /**\n     * Creates an error thrown when the native broker returns ACCOUNT_UNAVAILABLE status, indicating that the account was removed and interactive sign-in is required\n     * @returns\n     */\n    static createNativeAccountUnavailableError() {\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.native_account_unavailable.code, InteractionRequiredAuthErrorMessage.native_account_unavailable.desc);\n    }\n}\n\n\n//# sourceMappingURL=InteractionRequiredAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNzQztBQUNQOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxxREFBUztBQUNwRDtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsMkRBQVM7QUFDL0Msa0NBQWtDLDJEQUFTO0FBQzNDLDhDQUE4QywyREFBUztBQUN2RCxnQ0FBZ0MsMkRBQVM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0SjtBQUM1SiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvci5tanM/ZmEwYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQ29uc3RhbnRzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tICcuL0F1dGhFcnJvci5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogSW50ZXJhY3Rpb25SZXF1aXJlZFNlcnZlckVycm9yTWVzc2FnZSBjb250YWlucyBzdHJpbmcgY29uc3RhbnRzIHVzZWQgYnkgZXJyb3IgY29kZXMgYW5kIG1lc3NhZ2VzIHJldHVybmVkIGJ5IHRoZSBzZXJ2ZXIgaW5kaWNhdGluZyBpbnRlcmFjdGlvbiBpcyByZXF1aXJlZFxuICovXG5jb25zdCBJbnRlcmFjdGlvblJlcXVpcmVkU2VydmVyRXJyb3JNZXNzYWdlID0gW1xuICAgIFwiaW50ZXJhY3Rpb25fcmVxdWlyZWRcIixcbiAgICBcImNvbnNlbnRfcmVxdWlyZWRcIixcbiAgICBcImxvZ2luX3JlcXVpcmVkXCIsXG5dO1xuY29uc3QgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhTdWJFcnJvck1lc3NhZ2UgPSBbXG4gICAgXCJtZXNzYWdlX29ubHlcIixcbiAgICBcImFkZGl0aW9uYWxfYWN0aW9uXCIsXG4gICAgXCJiYXNpY19hY3Rpb25cIixcbiAgICBcInVzZXJfcGFzc3dvcmRfZXhwaXJlZFwiLFxuICAgIFwiY29uc2VudF9yZXF1aXJlZFwiLFxuXTtcbi8qKlxuICogSW50ZXJhY3Rpb24gcmVxdWlyZWQgZXJyb3JzIGRlZmluZWQgYnkgdGhlIFNES1xuICovXG5jb25zdCBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yTWVzc2FnZSA9IHtcbiAgICBub1Rva2Vuc0ZvdW5kRXJyb3I6IHtcbiAgICAgICAgY29kZTogXCJub190b2tlbnNfZm91bmRcIixcbiAgICAgICAgZGVzYzogXCJObyByZWZyZXNoIHRva2VuIGZvdW5kIGluIHRoZSBjYWNoZS4gUGxlYXNlIHNpZ24taW4uXCIsXG4gICAgfSxcbiAgICBuYXRpdmVfYWNjb3VudF91bmF2YWlsYWJsZToge1xuICAgICAgICBjb2RlOiBcIm5hdGl2ZV9hY2NvdW50X3VuYXZhaWxhYmxlXCIsXG4gICAgICAgIGRlc2M6IFwiVGhlIHJlcXVlc3RlZCBhY2NvdW50IGlzIG5vdCBhdmFpbGFibGUgaW4gdGhlIG5hdGl2ZSBicm9rZXIuIEl0IG1heSBoYXZlIGJlZW4gZGVsZXRlZCBvciBsb2dnZWQgb3V0LiBQbGVhc2Ugc2lnbi1pbiBhZ2FpbiB1c2luZyBhbiBpbnRlcmFjdGl2ZSBBUEkuXCIsXG4gICAgfSxcbn07XG4vKipcbiAqIEVycm9yIHRocm93biB3aGVuIHVzZXIgaW50ZXJhY3Rpb24gaXMgcmVxdWlyZWQuXG4gKi9cbmNsYXNzIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IgZXh0ZW5kcyBBdXRoRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlLCBzdWJFcnJvciwgdGltZXN0YW1wLCB0cmFjZUlkLCBjb3JyZWxhdGlvbklkLCBjbGFpbXMpIHtcbiAgICAgICAgc3VwZXIoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UsIHN1YkVycm9yKTtcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IucHJvdG90eXBlKTtcbiAgICAgICAgdGhpcy50aW1lc3RhbXAgPSB0aW1lc3RhbXAgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcbiAgICAgICAgdGhpcy50cmFjZUlkID0gdHJhY2VJZCB8fCBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xuICAgICAgICB0aGlzLmNvcnJlbGF0aW9uSWQgPSBjb3JyZWxhdGlvbklkIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XG4gICAgICAgIHRoaXMuY2xhaW1zID0gY2xhaW1zIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvclwiO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBIZWxwZXIgZnVuY3Rpb24gdXNlZCB0byBkZXRlcm1pbmUgaWYgYW4gZXJyb3IgdGhyb3duIGJ5IHRoZSBzZXJ2ZXIgcmVxdWlyZXMgaW50ZXJhY3Rpb24gdG8gcmVzb2x2ZVxuICAgICAqIEBwYXJhbSBlcnJvckNvZGVcbiAgICAgKiBAcGFyYW0gZXJyb3JTdHJpbmdcbiAgICAgKiBAcGFyYW0gc3ViRXJyb3JcbiAgICAgKi9cbiAgICBzdGF0aWMgaXNJbnRlcmFjdGlvblJlcXVpcmVkRXJyb3IoZXJyb3JDb2RlLCBlcnJvclN0cmluZywgc3ViRXJyb3IpIHtcbiAgICAgICAgY29uc3QgaXNJbnRlcmFjdGlvblJlcXVpcmVkRXJyb3JDb2RlID0gISFlcnJvckNvZGUgJiZcbiAgICAgICAgICAgIEludGVyYWN0aW9uUmVxdWlyZWRTZXJ2ZXJFcnJvck1lc3NhZ2UuaW5kZXhPZihlcnJvckNvZGUpID4gLTE7XG4gICAgICAgIGNvbnN0IGlzSW50ZXJhY3Rpb25SZXF1aXJlZFN1YkVycm9yID0gISFzdWJFcnJvciAmJlxuICAgICAgICAgICAgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhTdWJFcnJvck1lc3NhZ2UuaW5kZXhPZihzdWJFcnJvcikgPiAtMTtcbiAgICAgICAgY29uc3QgaXNJbnRlcmFjdGlvblJlcXVpcmVkRXJyb3JEZXNjID0gISFlcnJvclN0cmluZyAmJlxuICAgICAgICAgICAgSW50ZXJhY3Rpb25SZXF1aXJlZFNlcnZlckVycm9yTWVzc2FnZS5zb21lKChpckVycm9yQ29kZSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBlcnJvclN0cmluZy5pbmRleE9mKGlyRXJyb3JDb2RlKSA+IC0xO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiAoaXNJbnRlcmFjdGlvblJlcXVpcmVkRXJyb3JDb2RlIHx8XG4gICAgICAgICAgICBpc0ludGVyYWN0aW9uUmVxdWlyZWRFcnJvckRlc2MgfHxcbiAgICAgICAgICAgIGlzSW50ZXJhY3Rpb25SZXF1aXJlZFN1YkVycm9yKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBlcnJvciB0aHJvd24gd2hlbiB0aGUgYXV0aG9yaXphdGlvbiBjb2RlIHJlcXVpcmVkIGZvciBhIHRva2VuIHJlcXVlc3QgaXMgbnVsbCBvciBlbXB0eS5cbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlTm9Ub2tlbnNGb3VuZEVycm9yKCkge1xuICAgICAgICByZXR1cm4gbmV3IEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IoSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvck1lc3NhZ2Uubm9Ub2tlbnNGb3VuZEVycm9yLmNvZGUsIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JNZXNzYWdlLm5vVG9rZW5zRm91bmRFcnJvci5kZXNjKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBlcnJvciB0aHJvd24gd2hlbiB0aGUgbmF0aXZlIGJyb2tlciByZXR1cm5zIEFDQ09VTlRfVU5BVkFJTEFCTEUgc3RhdHVzLCBpbmRpY2F0aW5nIHRoYXQgdGhlIGFjY291bnQgd2FzIHJlbW92ZWQgYW5kIGludGVyYWN0aXZlIHNpZ24taW4gaXMgcmVxdWlyZWRcbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVOYXRpdmVBY2NvdW50VW5hdmFpbGFibGVFcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yKEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JNZXNzYWdlLm5hdGl2ZV9hY2NvdW50X3VuYXZhaWxhYmxlLmNvZGUsIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JNZXNzYWdlLm5hdGl2ZV9hY2NvdW50X3VuYXZhaWxhYmxlLmRlc2MpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvciwgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvck1lc3NhZ2UsIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoU3ViRXJyb3JNZXNzYWdlLCBJbnRlcmFjdGlvblJlcXVpcmVkU2VydmVyRXJyb3JNZXNzYWdlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/JoseHeaderError.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/JoseHeaderError.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JoseHeaderError: function() { return /* binding */ JoseHeaderError; },\n/* harmony export */   JoseHeaderErrorMessage: function() { return /* binding */ JoseHeaderErrorMessage; }\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst JoseHeaderErrorMessage = {\n    missingKidError: {\n        code: \"missing_kid_error\",\n        desc: \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\",\n    },\n    missingAlgError: {\n        code: \"missing_alg_error\",\n        desc: \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\",\n    },\n};\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nclass JoseHeaderError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        this.name = \"JoseHeaderError\";\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\n    }\n    /**\n     * Creates an error thrown when keyId isn't set on JOSE header.\n     */\n    static createMissingKidError() {\n        return new JoseHeaderError(JoseHeaderErrorMessage.missingKidError.code, JoseHeaderErrorMessage.missingKidError.desc);\n    }\n    /**\n     * Creates an error thrown when algorithm isn't set on JOSE header.\n     */\n    static createMissingAlgError() {\n        return new JoseHeaderError(JoseHeaderErrorMessage.missingAlgError.code, JoseHeaderErrorMessage.missingAlgError.desc);\n    }\n}\n\n\n//# sourceMappingURL=JoseHeaderError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSm9zZUhlYWRlckVycm9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQytCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixxREFBUztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW1EO0FBQ25EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9lcnJvci9Kb3NlSGVhZGVyRXJyb3IubWpzP2IxYmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEF1dGhFcnJvciB9IGZyb20gJy4vQXV0aEVycm9yLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBDbGllbnRBdXRoRXJyb3JNZXNzYWdlIGNsYXNzIGNvbnRhaW5pbmcgc3RyaW5nIGNvbnN0YW50cyB1c2VkIGJ5IGVycm9yIGNvZGVzIGFuZCBtZXNzYWdlcy5cbiAqL1xuY29uc3QgSm9zZUhlYWRlckVycm9yTWVzc2FnZSA9IHtcbiAgICBtaXNzaW5nS2lkRXJyb3I6IHtcbiAgICAgICAgY29kZTogXCJtaXNzaW5nX2tpZF9lcnJvclwiLFxuICAgICAgICBkZXNjOiBcIlRoZSBKT1NFIEhlYWRlciBmb3IgdGhlIHJlcXVlc3RlZCBKV1QsIEpXUyBvciBKV0sgb2JqZWN0IHJlcXVpcmVzIGEga2V5SWQgdG8gYmUgY29uZmlndXJlZCBhcyB0aGUgJ2tpZCcgaGVhZGVyIGNsYWltLiBObyAna2lkJyB2YWx1ZSB3YXMgcHJvdmlkZWQuXCIsXG4gICAgfSxcbiAgICBtaXNzaW5nQWxnRXJyb3I6IHtcbiAgICAgICAgY29kZTogXCJtaXNzaW5nX2FsZ19lcnJvclwiLFxuICAgICAgICBkZXNjOiBcIlRoZSBKT1NFIEhlYWRlciBmb3IgdGhlIHJlcXVlc3RlZCBKV1QsIEpXUyBvciBKV0sgb2JqZWN0IHJlcXVpcmVzIGFuIGFsZ29yaXRobSB0byBiZSBzcGVjaWZpZWQgYXMgdGhlICdhbGcnIGhlYWRlciBjbGFpbS4gTm8gJ2FsZycgdmFsdWUgd2FzIHByb3ZpZGVkLlwiLFxuICAgIH0sXG59O1xuLyoqXG4gKiBFcnJvciB0aHJvd24gd2hlbiB0aGVyZSBpcyBhbiBlcnJvciBpbiB0aGUgY2xpZW50IGNvZGUgcnVubmluZyBvbiB0aGUgYnJvd3Nlci5cbiAqL1xuY2xhc3MgSm9zZUhlYWRlckVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSkge1xuICAgICAgICBzdXBlcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiSm9zZUhlYWRlckVycm9yXCI7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBKb3NlSGVhZGVyRXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBlcnJvciB0aHJvd24gd2hlbiBrZXlJZCBpc24ndCBzZXQgb24gSk9TRSBoZWFkZXIuXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZU1pc3NpbmdLaWRFcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBKb3NlSGVhZGVyRXJyb3IoSm9zZUhlYWRlckVycm9yTWVzc2FnZS5taXNzaW5nS2lkRXJyb3IuY29kZSwgSm9zZUhlYWRlckVycm9yTWVzc2FnZS5taXNzaW5nS2lkRXJyb3IuZGVzYyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gZXJyb3IgdGhyb3duIHdoZW4gYWxnb3JpdGhtIGlzbid0IHNldCBvbiBKT1NFIGhlYWRlci5cbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlTWlzc2luZ0FsZ0Vycm9yKCkge1xuICAgICAgICByZXR1cm4gbmV3IEpvc2VIZWFkZXJFcnJvcihKb3NlSGVhZGVyRXJyb3JNZXNzYWdlLm1pc3NpbmdBbGdFcnJvci5jb2RlLCBKb3NlSGVhZGVyRXJyb3JNZXNzYWdlLm1pc3NpbmdBbGdFcnJvci5kZXNjKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IEpvc2VIZWFkZXJFcnJvciwgSm9zZUhlYWRlckVycm9yTWVzc2FnZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Sm9zZUhlYWRlckVycm9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/JoseHeaderError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/ServerError.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ServerError.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerError: function() { return /* binding */ ServerError; }\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Error thrown when there is an error with the server code, for example, unavailability.\n */\nclass ServerError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError {\n    constructor(errorCode, errorMessage, subError) {\n        super(errorCode, errorMessage, subError);\n        this.name = \"ServerError\";\n        Object.setPrototypeOf(this, ServerError.prototype);\n    }\n}\n\n\n//# sourceMappingURL=ServerError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvU2VydmVyRXJyb3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUMrQjs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIscURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvU2VydmVyRXJyb3IubWpzPzkyMjkiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEF1dGhFcnJvciB9IGZyb20gJy4vQXV0aEVycm9yLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBFcnJvciB0aHJvd24gd2hlbiB0aGVyZSBpcyBhbiBlcnJvciB3aXRoIHRoZSBzZXJ2ZXIgY29kZSwgZm9yIGV4YW1wbGUsIHVuYXZhaWxhYmlsaXR5LlxuICovXG5jbGFzcyBTZXJ2ZXJFcnJvciBleHRlbmRzIEF1dGhFcnJvciB7XG4gICAgY29uc3RydWN0b3IoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UsIHN1YkVycm9yKSB7XG4gICAgICAgIHN1cGVyKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlLCBzdWJFcnJvcik7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiU2VydmVyRXJyb3JcIjtcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIFNlcnZlckVycm9yLnByb3RvdHlwZSk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBTZXJ2ZXJFcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2VydmVyRXJyb3IubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/ServerError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/index.mjs ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AADAuthorityConstants: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.AADAuthorityConstants; },\n/* harmony export */   AADServerParamKeys: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.AADServerParamKeys; },\n/* harmony export */   AccessTokenEntity: function() { return /* reexport safe */ _cache_entities_AccessTokenEntity_mjs__WEBPACK_IMPORTED_MODULE_19__.AccessTokenEntity; },\n/* harmony export */   AccountEntity: function() { return /* reexport safe */ _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_17__.AccountEntity; },\n/* harmony export */   AppMetadataEntity: function() { return /* reexport safe */ _cache_entities_AppMetadataEntity_mjs__WEBPACK_IMPORTED_MODULE_16__.AppMetadataEntity; },\n/* harmony export */   AuthError: function() { return /* reexport safe */ _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_37__.AuthError; },\n/* harmony export */   AuthErrorMessage: function() { return /* reexport safe */ _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_37__.AuthErrorMessage; },\n/* harmony export */   AuthToken: function() { return /* reexport safe */ _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_5__.AuthToken; },\n/* harmony export */   AuthenticationHeaderParser: function() { return /* reexport safe */ _request_AuthenticationHeaderParser_mjs__WEBPACK_IMPORTED_MODULE_34__.AuthenticationHeaderParser; },\n/* harmony export */   AuthenticationScheme: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.AuthenticationScheme; },\n/* harmony export */   Authority: function() { return /* reexport safe */ _authority_Authority_mjs__WEBPACK_IMPORTED_MODULE_8__.Authority; },\n/* harmony export */   AuthorityFactory: function() { return /* reexport safe */ _authority_AuthorityFactory_mjs__WEBPACK_IMPORTED_MODULE_10__.AuthorityFactory; },\n/* harmony export */   AuthorityMetadataEntity: function() { return /* reexport safe */ _cache_entities_AuthorityMetadataEntity_mjs__WEBPACK_IMPORTED_MODULE_22__.AuthorityMetadataEntity; },\n/* harmony export */   AuthorityType: function() { return /* reexport safe */ _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_11__.AuthorityType; },\n/* harmony export */   AuthorizationCodeClient: function() { return /* reexport safe */ _client_AuthorizationCodeClient_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthorizationCodeClient; },\n/* harmony export */   AzureCloudInstance: function() { return /* reexport safe */ _authority_AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_9__.AzureCloudInstance; },\n/* harmony export */   BaseClient: function() { return /* reexport safe */ _client_BaseClient_mjs__WEBPACK_IMPORTED_MODULE_3__.BaseClient; },\n/* harmony export */   CacheAccountType: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.CacheAccountType; },\n/* harmony export */   CacheManager: function() { return /* reexport safe */ _cache_CacheManager_mjs__WEBPACK_IMPORTED_MODULE_13__.CacheManager; },\n/* harmony export */   CacheOutcome: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.CacheOutcome; },\n/* harmony export */   CacheRecord: function() { return /* reexport safe */ _cache_entities_CacheRecord_mjs__WEBPACK_IMPORTED_MODULE_14__.CacheRecord; },\n/* harmony export */   CacheType: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.CacheType; },\n/* harmony export */   CcsCredentialType: function() { return /* reexport safe */ _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_6__.CcsCredentialType; },\n/* harmony export */   ClaimsRequestKeys: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.ClaimsRequestKeys; },\n/* harmony export */   ClientAuthError: function() { return /* reexport safe */ _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_39__.ClientAuthError; },\n/* harmony export */   ClientAuthErrorMessage: function() { return /* reexport safe */ _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_39__.ClientAuthErrorMessage; },\n/* harmony export */   ClientConfigurationError: function() { return /* reexport safe */ _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_40__.ClientConfigurationError; },\n/* harmony export */   ClientConfigurationErrorMessage: function() { return /* reexport safe */ _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_40__.ClientConfigurationErrorMessage; },\n/* harmony export */   CodeChallengeMethodValues: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.CodeChallengeMethodValues; },\n/* harmony export */   Constants: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.Constants; },\n/* harmony export */   CredentialEntity: function() { return /* reexport safe */ _cache_entities_CredentialEntity_mjs__WEBPACK_IMPORTED_MODULE_15__.CredentialEntity; },\n/* harmony export */   CredentialType: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.CredentialType; },\n/* harmony export */   DEFAULT_CRYPTO_IMPLEMENTATION: function() { return /* reexport safe */ _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_29__.DEFAULT_CRYPTO_IMPLEMENTATION; },\n/* harmony export */   DEFAULT_SYSTEM_OPTIONS: function() { return /* reexport safe */ _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_SYSTEM_OPTIONS; },\n/* harmony export */   DefaultStorageClass: function() { return /* reexport safe */ _cache_CacheManager_mjs__WEBPACK_IMPORTED_MODULE_13__.DefaultStorageClass; },\n/* harmony export */   Errors: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.Errors; },\n/* harmony export */   GrantType: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.GrantType; },\n/* harmony export */   HeaderNames: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.HeaderNames; },\n/* harmony export */   IdToken: function() { return /* reexport safe */ _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_5__.AuthToken; },\n/* harmony export */   IdTokenEntity: function() { return /* reexport safe */ _cache_entities_IdTokenEntity_mjs__WEBPACK_IMPORTED_MODULE_18__.IdTokenEntity; },\n/* harmony export */   IntFields: function() { return /* reexport safe */ _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_46__.IntFields; },\n/* harmony export */   InteractionRequiredAuthError: function() { return /* reexport safe */ _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_36__.InteractionRequiredAuthError; },\n/* harmony export */   InteractionRequiredAuthErrorMessage: function() { return /* reexport safe */ _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_36__.InteractionRequiredAuthErrorMessage; },\n/* harmony export */   JoseHeader: function() { return /* reexport safe */ _crypto_JoseHeader_mjs__WEBPACK_IMPORTED_MODULE_30__.JoseHeader; },\n/* harmony export */   LogLevel: function() { return /* reexport safe */ _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_35__.LogLevel; },\n/* harmony export */   Logger: function() { return /* reexport safe */ _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_35__.Logger; },\n/* harmony export */   NetworkManager: function() { return /* reexport safe */ _network_NetworkManager_mjs__WEBPACK_IMPORTED_MODULE_26__.NetworkManager; },\n/* harmony export */   OIDC_DEFAULT_SCOPES: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.OIDC_DEFAULT_SCOPES; },\n/* harmony export */   ONE_DAY_IN_MS: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.ONE_DAY_IN_MS; },\n/* harmony export */   PasswordGrantConstants: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.PasswordGrantConstants; },\n/* harmony export */   PerformanceClient: function() { return /* reexport safe */ _telemetry_performance_PerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_47__.PerformanceClient; },\n/* harmony export */   PerformanceEventStatus: function() { return /* reexport safe */ _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_46__.PerformanceEventStatus; },\n/* harmony export */   PerformanceEvents: function() { return /* reexport safe */ _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_46__.PerformanceEvents; },\n/* harmony export */   PersistentCacheKeys: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.PersistentCacheKeys; },\n/* harmony export */   PopTokenGenerator: function() { return /* reexport safe */ _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_49__.PopTokenGenerator; },\n/* harmony export */   PromptValue: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.PromptValue; },\n/* harmony export */   ProtocolMode: function() { return /* reexport safe */ _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_12__.ProtocolMode; },\n/* harmony export */   ProtocolUtils: function() { return /* reexport safe */ _utils_ProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_43__.ProtocolUtils; },\n/* harmony export */   RefreshTokenClient: function() { return /* reexport safe */ _client_RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_1__.RefreshTokenClient; },\n/* harmony export */   RefreshTokenEntity: function() { return /* reexport safe */ _cache_entities_RefreshTokenEntity_mjs__WEBPACK_IMPORTED_MODULE_20__.RefreshTokenEntity; },\n/* harmony export */   RequestParameterBuilder: function() { return /* reexport safe */ _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_31__.RequestParameterBuilder; },\n/* harmony export */   ResponseHandler: function() { return /* reexport safe */ _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_32__.ResponseHandler; },\n/* harmony export */   ResponseMode: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.ResponseMode; },\n/* harmony export */   SSOTypes: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.SSOTypes; },\n/* harmony export */   ScopeSet: function() { return /* reexport safe */ _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_33__.ScopeSet; },\n/* harmony export */   ServerError: function() { return /* reexport safe */ _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_38__.ServerError; },\n/* harmony export */   ServerResponseType: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.ServerResponseType; },\n/* harmony export */   ServerTelemetryEntity: function() { return /* reexport safe */ _cache_entities_ServerTelemetryEntity_mjs__WEBPACK_IMPORTED_MODULE_21__.ServerTelemetryEntity; },\n/* harmony export */   ServerTelemetryManager: function() { return /* reexport safe */ _telemetry_server_ServerTelemetryManager_mjs__WEBPACK_IMPORTED_MODULE_45__.ServerTelemetryManager; },\n/* harmony export */   SilentFlowClient: function() { return /* reexport safe */ _client_SilentFlowClient_mjs__WEBPACK_IMPORTED_MODULE_2__.SilentFlowClient; },\n/* harmony export */   StringUtils: function() { return /* reexport safe */ _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_42__.StringUtils; },\n/* harmony export */   StubPerformanceClient: function() { return /* reexport safe */ _telemetry_performance_StubPerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_48__.StubPerformanceClient; },\n/* harmony export */   StubbedNetworkModule: function() { return /* reexport safe */ _network_INetworkModule_mjs__WEBPACK_IMPORTED_MODULE_25__.StubbedNetworkModule; },\n/* harmony export */   THE_FAMILY_ID: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.THE_FAMILY_ID; },\n/* harmony export */   ThrottlingConstants: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__.ThrottlingConstants; },\n/* harmony export */   ThrottlingEntity: function() { return /* reexport safe */ _cache_entities_ThrottlingEntity_mjs__WEBPACK_IMPORTED_MODULE_23__.ThrottlingEntity; },\n/* harmony export */   ThrottlingUtils: function() { return /* reexport safe */ _network_ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_27__.ThrottlingUtils; },\n/* harmony export */   TimeUtils: function() { return /* reexport safe */ _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_44__.TimeUtils; },\n/* harmony export */   TokenCacheContext: function() { return /* reexport safe */ _cache_persistence_TokenCacheContext_mjs__WEBPACK_IMPORTED_MODULE_24__.TokenCacheContext; },\n/* harmony export */   UrlString: function() { return /* reexport safe */ _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_28__.UrlString; },\n/* harmony export */   buildClientInfo: function() { return /* reexport safe */ _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_7__.buildClientInfo; },\n/* harmony export */   buildClientInfoFromHomeAccountId: function() { return /* reexport safe */ _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_7__.buildClientInfoFromHomeAccountId; },\n/* harmony export */   version: function() { return /* reexport safe */ _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_50__.version; }\n/* harmony export */ });\n/* harmony import */ var _client_AuthorizationCodeClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client/AuthorizationCodeClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs\");\n/* harmony import */ var _client_RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client/RefreshTokenClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs\");\n/* harmony import */ var _client_SilentFlowClient_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./client/SilentFlowClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs\");\n/* harmony import */ var _client_BaseClient_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./client/BaseClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config/ClientConfiguration.mjs */ \"./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./account/AuthToken.mjs */ \"./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./account/CcsCredential.mjs */ \"./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./account/ClientInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _authority_Authority_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./authority/Authority.mjs */ \"./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _authority_AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./authority/AuthorityOptions.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\");\n/* harmony import */ var _authority_AuthorityFactory_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./authority/AuthorityFactory.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs\");\n/* harmony import */ var _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./authority/AuthorityType.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\");\n/* harmony import */ var _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./authority/ProtocolMode.mjs */ \"./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _cache_CacheManager_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./cache/CacheManager.mjs */ \"./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs\");\n/* harmony import */ var _cache_entities_CacheRecord_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./cache/entities/CacheRecord.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/CacheRecord.mjs\");\n/* harmony import */ var _cache_entities_CredentialEntity_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./cache/entities/CredentialEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/CredentialEntity.mjs\");\n/* harmony import */ var _cache_entities_AppMetadataEntity_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./cache/entities/AppMetadataEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/AppMetadataEntity.mjs\");\n/* harmony import */ var _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./cache/entities/AccountEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _cache_entities_IdTokenEntity_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./cache/entities/IdTokenEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/IdTokenEntity.mjs\");\n/* harmony import */ var _cache_entities_AccessTokenEntity_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./cache/entities/AccessTokenEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/AccessTokenEntity.mjs\");\n/* harmony import */ var _cache_entities_RefreshTokenEntity_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./cache/entities/RefreshTokenEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/RefreshTokenEntity.mjs\");\n/* harmony import */ var _cache_entities_ServerTelemetryEntity_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./cache/entities/ServerTelemetryEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/ServerTelemetryEntity.mjs\");\n/* harmony import */ var _cache_entities_AuthorityMetadataEntity_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./cache/entities/AuthorityMetadataEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/AuthorityMetadataEntity.mjs\");\n/* harmony import */ var _cache_entities_ThrottlingEntity_mjs__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./cache/entities/ThrottlingEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/ThrottlingEntity.mjs\");\n/* harmony import */ var _cache_persistence_TokenCacheContext_mjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./cache/persistence/TokenCacheContext.mjs */ \"./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs\");\n/* harmony import */ var _network_INetworkModule_mjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./network/INetworkModule.mjs */ \"./node_modules/@azure/msal-common/dist/network/INetworkModule.mjs\");\n/* harmony import */ var _network_NetworkManager_mjs__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./network/NetworkManager.mjs */ \"./node_modules/@azure/msal-common/dist/network/NetworkManager.mjs\");\n/* harmony import */ var _network_ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./network/ThrottlingUtils.mjs */ \"./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./url/UrlString.mjs */ \"./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./crypto/ICrypto.mjs */ \"./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs\");\n/* harmony import */ var _crypto_JoseHeader_mjs__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./crypto/JoseHeader.mjs */ \"./node_modules/@azure/msal-common/dist/crypto/JoseHeader.mjs\");\n/* harmony import */ var _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./request/RequestParameterBuilder.mjs */ \"./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./response/ResponseHandler.mjs */ \"./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./request/ScopeSet.mjs */ \"./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _request_AuthenticationHeaderParser_mjs__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./request/AuthenticationHeaderParser.mjs */ \"./node_modules/@azure/msal-common/dist/request/AuthenticationHeaderParser.mjs\");\n/* harmony import */ var _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./logger/Logger.mjs */ \"./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./error/InteractionRequiredAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./error/AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./error/ServerError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _utils_ProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./utils/ProtocolUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./utils/TimeUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _telemetry_server_ServerTelemetryManager_mjs__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./telemetry/server/ServerTelemetryManager.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./telemetry/performance/PerformanceClient.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceClient.mjs\");\n/* harmony import */ var _telemetry_performance_StubPerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./telemetry/performance/StubPerformanceClient.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs\");\n/* harmony import */ var _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./crypto/PopTokenGenerator.mjs */ \"./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./packageMetadata.mjs */ \"./node_modules/@azure/msal-common/dist/packageMetadata.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNrRTtBQUNWO0FBQ0o7QUFDWjtBQUNxQjtBQUNBO0FBQ1Y7QUFDNkI7QUFDdkM7QUFDZ0I7QUFDRjtBQUNOO0FBQ0Y7QUFDaUI7QUFDZDtBQUNVO0FBQ0U7QUFDUjtBQUNBO0FBQ1E7QUFDRTtBQUNNO0FBQ0k7QUFDZDtBQUNLO0FBQ1Y7QUFDTjtBQUNFO0FBQ2hCO0FBQ3FCO0FBQ2hCO0FBQzJCO0FBQ2Y7QUFDZjtBQUNvQztBQUMvQjtBQUNzRTtBQUN6RDtBQUNkO0FBQ2dDO0FBQzJCO0FBQ3lUO0FBQ3BYO0FBQ0k7QUFDUjtBQUNxQztBQUM2QjtBQUNsQztBQUNRO0FBQ3ZCO0FBQ25CO0FBQ2hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9pbmRleC5tanM/Y2JhNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuZXhwb3J0IHsgQXV0aG9yaXphdGlvbkNvZGVDbGllbnQgfSBmcm9tICcuL2NsaWVudC9BdXRob3JpemF0aW9uQ29kZUNsaWVudC5tanMnO1xuZXhwb3J0IHsgUmVmcmVzaFRva2VuQ2xpZW50IH0gZnJvbSAnLi9jbGllbnQvUmVmcmVzaFRva2VuQ2xpZW50Lm1qcyc7XG5leHBvcnQgeyBTaWxlbnRGbG93Q2xpZW50IH0gZnJvbSAnLi9jbGllbnQvU2lsZW50Rmxvd0NsaWVudC5tanMnO1xuZXhwb3J0IHsgQmFzZUNsaWVudCB9IGZyb20gJy4vY2xpZW50L0Jhc2VDbGllbnQubWpzJztcbmV4cG9ydCB7IERFRkFVTFRfU1lTVEVNX09QVElPTlMgfSBmcm9tICcuL2NvbmZpZy9DbGllbnRDb25maWd1cmF0aW9uLm1qcyc7XG5leHBvcnQgeyBBdXRoVG9rZW4sIEF1dGhUb2tlbiBhcyBJZFRva2VuIH0gZnJvbSAnLi9hY2NvdW50L0F1dGhUb2tlbi5tanMnO1xuZXhwb3J0IHsgQ2NzQ3JlZGVudGlhbFR5cGUgfSBmcm9tICcuL2FjY291bnQvQ2NzQ3JlZGVudGlhbC5tanMnO1xuZXhwb3J0IHsgYnVpbGRDbGllbnRJbmZvLCBidWlsZENsaWVudEluZm9Gcm9tSG9tZUFjY291bnRJZCB9IGZyb20gJy4vYWNjb3VudC9DbGllbnRJbmZvLm1qcyc7XG5leHBvcnQgeyBBdXRob3JpdHkgfSBmcm9tICcuL2F1dGhvcml0eS9BdXRob3JpdHkubWpzJztcbmV4cG9ydCB7IEF6dXJlQ2xvdWRJbnN0YW5jZSB9IGZyb20gJy4vYXV0aG9yaXR5L0F1dGhvcml0eU9wdGlvbnMubWpzJztcbmV4cG9ydCB7IEF1dGhvcml0eUZhY3RvcnkgfSBmcm9tICcuL2F1dGhvcml0eS9BdXRob3JpdHlGYWN0b3J5Lm1qcyc7XG5leHBvcnQgeyBBdXRob3JpdHlUeXBlIH0gZnJvbSAnLi9hdXRob3JpdHkvQXV0aG9yaXR5VHlwZS5tanMnO1xuZXhwb3J0IHsgUHJvdG9jb2xNb2RlIH0gZnJvbSAnLi9hdXRob3JpdHkvUHJvdG9jb2xNb2RlLm1qcyc7XG5leHBvcnQgeyBDYWNoZU1hbmFnZXIsIERlZmF1bHRTdG9yYWdlQ2xhc3MgfSBmcm9tICcuL2NhY2hlL0NhY2hlTWFuYWdlci5tanMnO1xuZXhwb3J0IHsgQ2FjaGVSZWNvcmQgfSBmcm9tICcuL2NhY2hlL2VudGl0aWVzL0NhY2hlUmVjb3JkLm1qcyc7XG5leHBvcnQgeyBDcmVkZW50aWFsRW50aXR5IH0gZnJvbSAnLi9jYWNoZS9lbnRpdGllcy9DcmVkZW50aWFsRW50aXR5Lm1qcyc7XG5leHBvcnQgeyBBcHBNZXRhZGF0YUVudGl0eSB9IGZyb20gJy4vY2FjaGUvZW50aXRpZXMvQXBwTWV0YWRhdGFFbnRpdHkubWpzJztcbmV4cG9ydCB7IEFjY291bnRFbnRpdHkgfSBmcm9tICcuL2NhY2hlL2VudGl0aWVzL0FjY291bnRFbnRpdHkubWpzJztcbmV4cG9ydCB7IElkVG9rZW5FbnRpdHkgfSBmcm9tICcuL2NhY2hlL2VudGl0aWVzL0lkVG9rZW5FbnRpdHkubWpzJztcbmV4cG9ydCB7IEFjY2Vzc1Rva2VuRW50aXR5IH0gZnJvbSAnLi9jYWNoZS9lbnRpdGllcy9BY2Nlc3NUb2tlbkVudGl0eS5tanMnO1xuZXhwb3J0IHsgUmVmcmVzaFRva2VuRW50aXR5IH0gZnJvbSAnLi9jYWNoZS9lbnRpdGllcy9SZWZyZXNoVG9rZW5FbnRpdHkubWpzJztcbmV4cG9ydCB7IFNlcnZlclRlbGVtZXRyeUVudGl0eSB9IGZyb20gJy4vY2FjaGUvZW50aXRpZXMvU2VydmVyVGVsZW1ldHJ5RW50aXR5Lm1qcyc7XG5leHBvcnQgeyBBdXRob3JpdHlNZXRhZGF0YUVudGl0eSB9IGZyb20gJy4vY2FjaGUvZW50aXRpZXMvQXV0aG9yaXR5TWV0YWRhdGFFbnRpdHkubWpzJztcbmV4cG9ydCB7IFRocm90dGxpbmdFbnRpdHkgfSBmcm9tICcuL2NhY2hlL2VudGl0aWVzL1Rocm90dGxpbmdFbnRpdHkubWpzJztcbmV4cG9ydCB7IFRva2VuQ2FjaGVDb250ZXh0IH0gZnJvbSAnLi9jYWNoZS9wZXJzaXN0ZW5jZS9Ub2tlbkNhY2hlQ29udGV4dC5tanMnO1xuZXhwb3J0IHsgU3R1YmJlZE5ldHdvcmtNb2R1bGUgfSBmcm9tICcuL25ldHdvcmsvSU5ldHdvcmtNb2R1bGUubWpzJztcbmV4cG9ydCB7IE5ldHdvcmtNYW5hZ2VyIH0gZnJvbSAnLi9uZXR3b3JrL05ldHdvcmtNYW5hZ2VyLm1qcyc7XG5leHBvcnQgeyBUaHJvdHRsaW5nVXRpbHMgfSBmcm9tICcuL25ldHdvcmsvVGhyb3R0bGluZ1V0aWxzLm1qcyc7XG5leHBvcnQgeyBVcmxTdHJpbmcgfSBmcm9tICcuL3VybC9VcmxTdHJpbmcubWpzJztcbmV4cG9ydCB7IERFRkFVTFRfQ1JZUFRPX0lNUExFTUVOVEFUSU9OIH0gZnJvbSAnLi9jcnlwdG8vSUNyeXB0by5tanMnO1xuZXhwb3J0IHsgSm9zZUhlYWRlciB9IGZyb20gJy4vY3J5cHRvL0pvc2VIZWFkZXIubWpzJztcbmV4cG9ydCB7IFJlcXVlc3RQYXJhbWV0ZXJCdWlsZGVyIH0gZnJvbSAnLi9yZXF1ZXN0L1JlcXVlc3RQYXJhbWV0ZXJCdWlsZGVyLm1qcyc7XG5leHBvcnQgeyBSZXNwb25zZUhhbmRsZXIgfSBmcm9tICcuL3Jlc3BvbnNlL1Jlc3BvbnNlSGFuZGxlci5tanMnO1xuZXhwb3J0IHsgU2NvcGVTZXQgfSBmcm9tICcuL3JlcXVlc3QvU2NvcGVTZXQubWpzJztcbmV4cG9ydCB7IEF1dGhlbnRpY2F0aW9uSGVhZGVyUGFyc2VyIH0gZnJvbSAnLi9yZXF1ZXN0L0F1dGhlbnRpY2F0aW9uSGVhZGVyUGFyc2VyLm1qcyc7XG5leHBvcnQgeyBMb2dMZXZlbCwgTG9nZ2VyIH0gZnJvbSAnLi9sb2dnZXIvTG9nZ2VyLm1qcyc7XG5leHBvcnQgeyBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yLCBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yTWVzc2FnZSB9IGZyb20gJy4vZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvci5tanMnO1xuZXhwb3J0IHsgQXV0aEVycm9yLCBBdXRoRXJyb3JNZXNzYWdlIH0gZnJvbSAnLi9lcnJvci9BdXRoRXJyb3IubWpzJztcbmV4cG9ydCB7IFNlcnZlckVycm9yIH0gZnJvbSAnLi9lcnJvci9TZXJ2ZXJFcnJvci5tanMnO1xuZXhwb3J0IHsgQ2xpZW50QXV0aEVycm9yLCBDbGllbnRBdXRoRXJyb3JNZXNzYWdlIH0gZnJvbSAnLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcbmV4cG9ydCB7IENsaWVudENvbmZpZ3VyYXRpb25FcnJvciwgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yTWVzc2FnZSB9IGZyb20gJy4vZXJyb3IvQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLm1qcyc7XG5leHBvcnQgeyBBQURBdXRob3JpdHlDb25zdGFudHMsIEFBRFNlcnZlclBhcmFtS2V5cywgQXV0aGVudGljYXRpb25TY2hlbWUsIENhY2hlQWNjb3VudFR5cGUsIENhY2hlT3V0Y29tZSwgQ2FjaGVUeXBlLCBDbGFpbXNSZXF1ZXN0S2V5cywgQ29kZUNoYWxsZW5nZU1ldGhvZFZhbHVlcywgQ29uc3RhbnRzLCBDcmVkZW50aWFsVHlwZSwgRXJyb3JzLCBHcmFudFR5cGUsIEhlYWRlck5hbWVzLCBPSURDX0RFRkFVTFRfU0NPUEVTLCBPTkVfREFZX0lOX01TLCBQYXNzd29yZEdyYW50Q29uc3RhbnRzLCBQZXJzaXN0ZW50Q2FjaGVLZXlzLCBQcm9tcHRWYWx1ZSwgUmVzcG9uc2VNb2RlLCBTU09UeXBlcywgU2VydmVyUmVzcG9uc2VUeXBlLCBUSEVfRkFNSUxZX0lELCBUaHJvdHRsaW5nQ29uc3RhbnRzIH0gZnJvbSAnLi91dGlscy9Db25zdGFudHMubWpzJztcbmV4cG9ydCB7IFN0cmluZ1V0aWxzIH0gZnJvbSAnLi91dGlscy9TdHJpbmdVdGlscy5tanMnO1xuZXhwb3J0IHsgUHJvdG9jb2xVdGlscyB9IGZyb20gJy4vdXRpbHMvUHJvdG9jb2xVdGlscy5tanMnO1xuZXhwb3J0IHsgVGltZVV0aWxzIH0gZnJvbSAnLi91dGlscy9UaW1lVXRpbHMubWpzJztcbmV4cG9ydCB7IFNlcnZlclRlbGVtZXRyeU1hbmFnZXIgfSBmcm9tICcuL3RlbGVtZXRyeS9zZXJ2ZXIvU2VydmVyVGVsZW1ldHJ5TWFuYWdlci5tanMnO1xuZXhwb3J0IHsgSW50RmllbGRzLCBQZXJmb3JtYW5jZUV2ZW50U3RhdHVzLCBQZXJmb3JtYW5jZUV2ZW50cyB9IGZyb20gJy4vdGVsZW1ldHJ5L3BlcmZvcm1hbmNlL1BlcmZvcm1hbmNlRXZlbnQubWpzJztcbmV4cG9ydCB7IFBlcmZvcm1hbmNlQ2xpZW50IH0gZnJvbSAnLi90ZWxlbWV0cnkvcGVyZm9ybWFuY2UvUGVyZm9ybWFuY2VDbGllbnQubWpzJztcbmV4cG9ydCB7IFN0dWJQZXJmb3JtYW5jZUNsaWVudCB9IGZyb20gJy4vdGVsZW1ldHJ5L3BlcmZvcm1hbmNlL1N0dWJQZXJmb3JtYW5jZUNsaWVudC5tanMnO1xuZXhwb3J0IHsgUG9wVG9rZW5HZW5lcmF0b3IgfSBmcm9tICcuL2NyeXB0by9Qb3BUb2tlbkdlbmVyYXRvci5tanMnO1xuZXhwb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4vcGFja2FnZU1ldGFkYXRhLm1qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/index.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/logger/Logger.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/logger/Logger.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogLevel: function() { return /* binding */ LogLevel; },\n/* harmony export */   Logger: function() { return /* binding */ Logger; }\n/* harmony export */ });\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Log message level.\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\n    LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\n})(LogLevel || (LogLevel = {}));\n/**\n * Class which facilitates logging of messages to a specific place.\n */\nclass Logger {\n    constructor(loggerOptions, packageName, packageVersion) {\n        // Current log level, defaults to info.\n        this.level = LogLevel.Info;\n        const defaultLoggerCallback = () => {\n            return;\n        };\n        const setLoggerOptions = loggerOptions || Logger.createDefaultLoggerOptions();\n        this.localCallback =\n            setLoggerOptions.loggerCallback || defaultLoggerCallback;\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\n        this.level =\n            typeof setLoggerOptions.logLevel === \"number\"\n                ? setLoggerOptions.logLevel\n                : LogLevel.Info;\n        this.correlationId =\n            setLoggerOptions.correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        this.packageName = packageName || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        this.packageVersion = packageVersion || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n    }\n    static createDefaultLoggerOptions() {\n        return {\n            loggerCallback: () => {\n                // allow users to not set loggerCallback\n            },\n            piiLoggingEnabled: false,\n            logLevel: LogLevel.Info,\n        };\n    }\n    /**\n     * Create new Logger with existing configurations.\n     */\n    clone(packageName, packageVersion, correlationId) {\n        return new Logger({\n            loggerCallback: this.localCallback,\n            piiLoggingEnabled: this.piiLoggingEnabled,\n            logLevel: this.level,\n            correlationId: correlationId || this.correlationId,\n        }, packageName, packageVersion);\n    }\n    /**\n     * Log message with required options.\n     */\n    logMessage(logMessage, options) {\n        if (options.logLevel > this.level ||\n            (!this.piiLoggingEnabled && options.containsPii)) {\n            return;\n        }\n        const timestamp = new Date().toUTCString();\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\n        let logHeader;\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.StringUtils.isEmpty(options.correlationId)) {\n            logHeader = `[${timestamp}] : [${options.correlationId}]`;\n        }\n        else if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.StringUtils.isEmpty(this.correlationId)) {\n            logHeader = `[${timestamp}] : [${this.correlationId}]`;\n        }\n        else {\n            logHeader = `[${timestamp}]`;\n        }\n        const log = `${logHeader} : ${this.packageName}@${this.packageVersion} : ${LogLevel[options.logLevel]} - ${logMessage}`;\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\n    }\n    /**\n     * Execute callback with message.\n     */\n    executeCallback(level, message, containsPii) {\n        if (this.localCallback) {\n            this.localCallback(level, message, containsPii);\n        }\n    }\n    /**\n     * Logs error messages.\n     */\n    error(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: false,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs error messages with PII.\n     */\n    errorPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: true,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs warning messages.\n     */\n    warning(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: false,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs warning messages with PII.\n     */\n    warningPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: true,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs info messages.\n     */\n    info(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: false,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs info messages with PII.\n     */\n    infoPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: true,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs verbose messages.\n     */\n    verbose(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: false,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs verbose messages with PII.\n     */\n    verbosePii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: true,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs trace messages.\n     */\n    trace(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: false,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs trace messages with PII.\n     */\n    tracePii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: true,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Returns whether PII Logging is enabled or not.\n     */\n    isPiiLoggingEnabled() {\n        return this.piiLoggingEnabled || false;\n    }\n}\n\n\n//# sourceMappingURL=Logger.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/logger/Logger.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/network/INetworkModule.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/network/INetworkModule.mjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StubbedNetworkModule: function() { return /* binding */ StubbedNetworkModule; }\n/* harmony export */ });\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst StubbedNetworkModule = {\n    sendGetRequestAsync: () => {\n        const notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented for the Network interface.\";\n        return Promise.reject(_error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError.createUnexpectedError(notImplErr));\n    },\n    sendPostRequestAsync: () => {\n        const notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented for the Network interface.\";\n        return Promise.reject(_error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError.createUnexpectedError(notImplErr));\n    },\n};\n\n\n//# sourceMappingURL=INetworkModule.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbmV0d29yay9JTmV0d29ya01vZHVsZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNhO0FBQ3NDOztBQUVuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiwyREFBUztBQUN2QyxLQUFLO0FBQ0w7QUFDQTtBQUNBLDhCQUE4QiwyREFBUztBQUN2QyxLQUFLO0FBQ0w7O0FBRWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9uZXR3b3JrL0lOZXR3b3JrTW9kdWxlLm1qcz9mMWVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9BdXRoRXJyb3IubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jb25zdCBTdHViYmVkTmV0d29ya01vZHVsZSA9IHtcbiAgICBzZW5kR2V0UmVxdWVzdEFzeW5jOiAoKSA9PiB7XG4gICAgICAgIGNvbnN0IG5vdEltcGxFcnIgPSBcIk5ldHdvcmsgaW50ZXJmYWNlIC0gc2VuZEdldFJlcXVlc3RBc3luYygpIGhhcyBub3QgYmVlbiBpbXBsZW1lbnRlZCBmb3IgdGhlIE5ldHdvcmsgaW50ZXJmYWNlLlwiO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoQXV0aEVycm9yLmNyZWF0ZVVuZXhwZWN0ZWRFcnJvcihub3RJbXBsRXJyKSk7XG4gICAgfSxcbiAgICBzZW5kUG9zdFJlcXVlc3RBc3luYzogKCkgPT4ge1xuICAgICAgICBjb25zdCBub3RJbXBsRXJyID0gXCJOZXR3b3JrIGludGVyZmFjZSAtIHNlbmRQb3N0UmVxdWVzdEFzeW5jKCkgaGFzIG5vdCBiZWVuIGltcGxlbWVudGVkIGZvciB0aGUgTmV0d29yayBpbnRlcmZhY2UuXCI7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChBdXRoRXJyb3IuY3JlYXRlVW5leHBlY3RlZEVycm9yKG5vdEltcGxFcnIpKTtcbiAgICB9LFxufTtcblxuZXhwb3J0IHsgU3R1YmJlZE5ldHdvcmtNb2R1bGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlOZXR3b3JrTW9kdWxlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/network/INetworkModule.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/network/NetworkManager.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/network/NetworkManager.mjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NetworkManager: function() { return /* binding */ NetworkManager; }\n/* harmony export */ });\n/* harmony import */ var _ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ThrottlingUtils.mjs */ \"./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass NetworkManager {\n    constructor(networkClient, cacheManager) {\n        this.networkClient = networkClient;\n        this.cacheManager = cacheManager;\n    }\n    /**\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\n     * @param thumbprint\n     * @param tokenEndpoint\n     * @param options\n     */\n    async sendPostRequest(thumbprint, tokenEndpoint, options) {\n        _ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n        let response;\n        try {\n            response = await this.networkClient.sendPostRequestAsync(tokenEndpoint, options);\n        }\n        catch (e) {\n            if (e instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\n                throw e;\n            }\n            else {\n                throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.ClientAuthError.createNetworkError(tokenEndpoint, e);\n            }\n        }\n        _ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n        return response;\n    }\n}\n\n\n//# sourceMappingURL=NetworkManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbmV0d29yay9OZXR3b3JrTWFuYWdlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2E7QUFDMkM7QUFDTDtBQUNZOztBQUUvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBZTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDJEQUFTO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix1RUFBZTtBQUNyQztBQUNBO0FBQ0EsUUFBUSxpRUFBZTtBQUN2QjtBQUNBO0FBQ0E7O0FBRTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9uZXR3b3JrL05ldHdvcmtNYW5hZ2VyLm1qcz8yMjkyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBUaHJvdHRsaW5nVXRpbHMgfSBmcm9tICcuL1Rocm90dGxpbmdVdGlscy5tanMnO1xuaW1wb3J0IHsgQXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKiogQGludGVybmFsICovXG5jbGFzcyBOZXR3b3JrTWFuYWdlciB7XG4gICAgY29uc3RydWN0b3IobmV0d29ya0NsaWVudCwgY2FjaGVNYW5hZ2VyKSB7XG4gICAgICAgIHRoaXMubmV0d29ya0NsaWVudCA9IG5ldHdvcmtDbGllbnQ7XG4gICAgICAgIHRoaXMuY2FjaGVNYW5hZ2VyID0gY2FjaGVNYW5hZ2VyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcmFwcyBzZW5kUG9zdFJlcXVlc3RBc3luYyB3aXRoIG5lY2Vzc2FyeSBwcmVmbGlnaHQgYW5kIHBvc3RmbGlnaHQgbG9naWNcbiAgICAgKiBAcGFyYW0gdGh1bWJwcmludFxuICAgICAqIEBwYXJhbSB0b2tlbkVuZHBvaW50XG4gICAgICogQHBhcmFtIG9wdGlvbnNcbiAgICAgKi9cbiAgICBhc3luYyBzZW5kUG9zdFJlcXVlc3QodGh1bWJwcmludCwgdG9rZW5FbmRwb2ludCwgb3B0aW9ucykge1xuICAgICAgICBUaHJvdHRsaW5nVXRpbHMucHJlUHJvY2Vzcyh0aGlzLmNhY2hlTWFuYWdlciwgdGh1bWJwcmludCk7XG4gICAgICAgIGxldCByZXNwb25zZTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJlc3BvbnNlID0gYXdhaXQgdGhpcy5uZXR3b3JrQ2xpZW50LnNlbmRQb3N0UmVxdWVzdEFzeW5jKHRva2VuRW5kcG9pbnQsIG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBpZiAoZSBpbnN0YW5jZW9mIEF1dGhFcnJvcikge1xuICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlTmV0d29ya0Vycm9yKHRva2VuRW5kcG9pbnQsIGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFRocm90dGxpbmdVdGlscy5wb3N0UHJvY2Vzcyh0aGlzLmNhY2hlTWFuYWdlciwgdGh1bWJwcmludCwgcmVzcG9uc2UpO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfVxufVxuXG5leHBvcnQgeyBOZXR3b3JrTWFuYWdlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TmV0d29ya01hbmFnZXIubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/network/NetworkManager.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThrottlingUtils: function() { return /* binding */ ThrottlingUtils; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ServerError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass ThrottlingUtils {\n    /**\n     * Prepares a RequestThumbprint to be stored as a key.\n     * @param thumbprint\n     */\n    static generateThrottlingStorageKey(thumbprint) {\n        return `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(thumbprint)}`;\n    }\n    /**\n     * Performs necessary throttling checks before a network request.\n     * @param cacheManager\n     * @param thumbprint\n     */\n    static preProcess(cacheManager, thumbprint) {\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\n        const value = cacheManager.getThrottlingCache(key);\n        if (value) {\n            if (value.throttleTime < Date.now()) {\n                cacheManager.removeItem(key);\n                return;\n            }\n            throw new _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_1__.ServerError(value.errorCodes?.join(\" \") || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING, value.errorMessage, value.subError);\n        }\n    }\n    /**\n     * Performs necessary throttling checks after a network request.\n     * @param cacheManager\n     * @param thumbprint\n     * @param response\n     */\n    static postProcess(cacheManager, thumbprint, response) {\n        if (ThrottlingUtils.checkResponseStatus(response) ||\n            ThrottlingUtils.checkResponseForRetryAfter(response)) {\n            const thumbprintValue = {\n                throttleTime: ThrottlingUtils.calculateThrottleTime(parseInt(response.headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.RETRY_AFTER])),\n                error: response.body.error,\n                errorCodes: response.body.error_codes,\n                errorMessage: response.body.error_description,\n                subError: response.body.suberror,\n            };\n            cacheManager.setThrottlingCache(ThrottlingUtils.generateThrottlingStorageKey(thumbprint), thumbprintValue);\n        }\n    }\n    /**\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\n     * @param response\n     */\n    static checkResponseStatus(response) {\n        return (response.status === 429 ||\n            (response.status >= 500 && response.status < 600));\n    }\n    /**\n     * Checks a NetworkResponse object's RetryAfter header\n     * @param response\n     */\n    static checkResponseForRetryAfter(response) {\n        if (response.headers) {\n            return (response.headers.hasOwnProperty(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.RETRY_AFTER) &&\n                (response.status < 200 || response.status >= 300));\n        }\n        return false;\n    }\n    /**\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\n     * @param throttleTime\n     */\n    static calculateThrottleTime(throttleTime) {\n        const time = throttleTime <= 0 ? 0 : throttleTime;\n        const currentSeconds = Date.now() / 1000;\n        return Math.floor(Math.min(currentSeconds +\n            (time || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS), currentSeconds +\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS) * 1000);\n    }\n    static removeThrottle(cacheManager, clientId, request, homeAccountIdentifier) {\n        const thumbprint = {\n            clientId: clientId,\n            authority: request.authority,\n            scopes: request.scopes,\n            homeAccountIdentifier: homeAccountIdentifier,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        const key = this.generateThrottlingStorageKey(thumbprint);\n        cacheManager.removeItem(key);\n    }\n}\n\n\n//# sourceMappingURL=ThrottlingUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbmV0d29yay9UaHJvdHRsaW5nVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDd0U7QUFDOUI7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IscUVBQW1CLG1CQUFtQixHQUFHLDJCQUEyQjtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLCtEQUFXLGdDQUFnQywyREFBUztBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4RkFBOEYsNkRBQVc7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsNkRBQVc7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFFQUFtQjtBQUN4QyxZQUFZLHFFQUFtQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9uZXR3b3JrL1Rocm90dGxpbmdVdGlscy5tanM/MDZjZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgVGhyb3R0bGluZ0NvbnN0YW50cywgQ29uc3RhbnRzLCBIZWFkZXJOYW1lcyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgU2VydmVyRXJyb3IgfSBmcm9tICcuLi9lcnJvci9TZXJ2ZXJFcnJvci5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKiBAaW50ZXJuYWwgKi9cbmNsYXNzIFRocm90dGxpbmdVdGlscyB7XG4gICAgLyoqXG4gICAgICogUHJlcGFyZXMgYSBSZXF1ZXN0VGh1bWJwcmludCB0byBiZSBzdG9yZWQgYXMgYSBrZXkuXG4gICAgICogQHBhcmFtIHRodW1icHJpbnRcbiAgICAgKi9cbiAgICBzdGF0aWMgZ2VuZXJhdGVUaHJvdHRsaW5nU3RvcmFnZUtleSh0aHVtYnByaW50KSB7XG4gICAgICAgIHJldHVybiBgJHtUaHJvdHRsaW5nQ29uc3RhbnRzLlRIUk9UVExJTkdfUFJFRklYfS4ke0pTT04uc3RyaW5naWZ5KHRodW1icHJpbnQpfWA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBlcmZvcm1zIG5lY2Vzc2FyeSB0aHJvdHRsaW5nIGNoZWNrcyBiZWZvcmUgYSBuZXR3b3JrIHJlcXVlc3QuXG4gICAgICogQHBhcmFtIGNhY2hlTWFuYWdlclxuICAgICAqIEBwYXJhbSB0aHVtYnByaW50XG4gICAgICovXG4gICAgc3RhdGljIHByZVByb2Nlc3MoY2FjaGVNYW5hZ2VyLCB0aHVtYnByaW50KSB7XG4gICAgICAgIGNvbnN0IGtleSA9IFRocm90dGxpbmdVdGlscy5nZW5lcmF0ZVRocm90dGxpbmdTdG9yYWdlS2V5KHRodW1icHJpbnQpO1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGNhY2hlTWFuYWdlci5nZXRUaHJvdHRsaW5nQ2FjaGUoa2V5KTtcbiAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUudGhyb3R0bGVUaW1lIDwgRGF0ZS5ub3coKSkge1xuICAgICAgICAgICAgICAgIGNhY2hlTWFuYWdlci5yZW1vdmVJdGVtKGtleSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgbmV3IFNlcnZlckVycm9yKHZhbHVlLmVycm9yQ29kZXM/LmpvaW4oXCIgXCIpIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkcsIHZhbHVlLmVycm9yTWVzc2FnZSwgdmFsdWUuc3ViRXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBlcmZvcm1zIG5lY2Vzc2FyeSB0aHJvdHRsaW5nIGNoZWNrcyBhZnRlciBhIG5ldHdvcmsgcmVxdWVzdC5cbiAgICAgKiBAcGFyYW0gY2FjaGVNYW5hZ2VyXG4gICAgICogQHBhcmFtIHRodW1icHJpbnRcbiAgICAgKiBAcGFyYW0gcmVzcG9uc2VcbiAgICAgKi9cbiAgICBzdGF0aWMgcG9zdFByb2Nlc3MoY2FjaGVNYW5hZ2VyLCB0aHVtYnByaW50LCByZXNwb25zZSkge1xuICAgICAgICBpZiAoVGhyb3R0bGluZ1V0aWxzLmNoZWNrUmVzcG9uc2VTdGF0dXMocmVzcG9uc2UpIHx8XG4gICAgICAgICAgICBUaHJvdHRsaW5nVXRpbHMuY2hlY2tSZXNwb25zZUZvclJldHJ5QWZ0ZXIocmVzcG9uc2UpKSB7XG4gICAgICAgICAgICBjb25zdCB0aHVtYnByaW50VmFsdWUgPSB7XG4gICAgICAgICAgICAgICAgdGhyb3R0bGVUaW1lOiBUaHJvdHRsaW5nVXRpbHMuY2FsY3VsYXRlVGhyb3R0bGVUaW1lKHBhcnNlSW50KHJlc3BvbnNlLmhlYWRlcnNbSGVhZGVyTmFtZXMuUkVUUllfQUZURVJdKSksXG4gICAgICAgICAgICAgICAgZXJyb3I6IHJlc3BvbnNlLmJvZHkuZXJyb3IsXG4gICAgICAgICAgICAgICAgZXJyb3JDb2RlczogcmVzcG9uc2UuYm9keS5lcnJvcl9jb2RlcyxcbiAgICAgICAgICAgICAgICBlcnJvck1lc3NhZ2U6IHJlc3BvbnNlLmJvZHkuZXJyb3JfZGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgICAgc3ViRXJyb3I6IHJlc3BvbnNlLmJvZHkuc3ViZXJyb3IsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2FjaGVNYW5hZ2VyLnNldFRocm90dGxpbmdDYWNoZShUaHJvdHRsaW5nVXRpbHMuZ2VuZXJhdGVUaHJvdHRsaW5nU3RvcmFnZUtleSh0aHVtYnByaW50KSwgdGh1bWJwcmludFZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGVja3MgYSBOZXR3b3JrUmVzcG9uc2Ugb2JqZWN0J3Mgc3RhdHVzIGNvZGVzIGFnYWluc3QgNDI5IG9yIDV4eFxuICAgICAqIEBwYXJhbSByZXNwb25zZVxuICAgICAqL1xuICAgIHN0YXRpYyBjaGVja1Jlc3BvbnNlU3RhdHVzKHJlc3BvbnNlKSB7XG4gICAgICAgIHJldHVybiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MjkgfHxcbiAgICAgICAgICAgIChyZXNwb25zZS5zdGF0dXMgPj0gNTAwICYmIHJlc3BvbnNlLnN0YXR1cyA8IDYwMCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGVja3MgYSBOZXR3b3JrUmVzcG9uc2Ugb2JqZWN0J3MgUmV0cnlBZnRlciBoZWFkZXJcbiAgICAgKiBAcGFyYW0gcmVzcG9uc2VcbiAgICAgKi9cbiAgICBzdGF0aWMgY2hlY2tSZXNwb25zZUZvclJldHJ5QWZ0ZXIocmVzcG9uc2UpIHtcbiAgICAgICAgaWYgKHJlc3BvbnNlLmhlYWRlcnMpIHtcbiAgICAgICAgICAgIHJldHVybiAocmVzcG9uc2UuaGVhZGVycy5oYXNPd25Qcm9wZXJ0eShIZWFkZXJOYW1lcy5SRVRSWV9BRlRFUikgJiZcbiAgICAgICAgICAgICAgICAocmVzcG9uc2Uuc3RhdHVzIDwgMjAwIHx8IHJlc3BvbnNlLnN0YXR1cyA+PSAzMDApKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENhbGN1bGF0ZXMgdGhlIFVuaXgtdGltZSB2YWx1ZSBmb3IgYSB0aHJvdHRsZSB0byBleHBpcmUgZ2l2ZW4gdGhyb3R0bGVUaW1lIGluIHNlY29uZHMuXG4gICAgICogQHBhcmFtIHRocm90dGxlVGltZVxuICAgICAqL1xuICAgIHN0YXRpYyBjYWxjdWxhdGVUaHJvdHRsZVRpbWUodGhyb3R0bGVUaW1lKSB7XG4gICAgICAgIGNvbnN0IHRpbWUgPSB0aHJvdHRsZVRpbWUgPD0gMCA/IDAgOiB0aHJvdHRsZVRpbWU7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRTZWNvbmRzID0gRGF0ZS5ub3coKSAvIDEwMDA7XG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgubWluKGN1cnJlbnRTZWNvbmRzICtcbiAgICAgICAgICAgICh0aW1lIHx8IFRocm90dGxpbmdDb25zdGFudHMuREVGQVVMVF9USFJPVFRMRV9USU1FX1NFQ09ORFMpLCBjdXJyZW50U2Vjb25kcyArXG4gICAgICAgICAgICBUaHJvdHRsaW5nQ29uc3RhbnRzLkRFRkFVTFRfTUFYX1RIUk9UVExFX1RJTUVfU0VDT05EUykgKiAxMDAwKTtcbiAgICB9XG4gICAgc3RhdGljIHJlbW92ZVRocm90dGxlKGNhY2hlTWFuYWdlciwgY2xpZW50SWQsIHJlcXVlc3QsIGhvbWVBY2NvdW50SWRlbnRpZmllcikge1xuICAgICAgICBjb25zdCB0aHVtYnByaW50ID0ge1xuICAgICAgICAgICAgY2xpZW50SWQ6IGNsaWVudElkLFxuICAgICAgICAgICAgYXV0aG9yaXR5OiByZXF1ZXN0LmF1dGhvcml0eSxcbiAgICAgICAgICAgIHNjb3BlczogcmVxdWVzdC5zY29wZXMsXG4gICAgICAgICAgICBob21lQWNjb3VudElkZW50aWZpZXI6IGhvbWVBY2NvdW50SWRlbnRpZmllcixcbiAgICAgICAgICAgIGNsYWltczogcmVxdWVzdC5jbGFpbXMsXG4gICAgICAgICAgICBhdXRoZW50aWNhdGlvblNjaGVtZTogcmVxdWVzdC5hdXRoZW50aWNhdGlvblNjaGVtZSxcbiAgICAgICAgICAgIHJlc291cmNlUmVxdWVzdE1ldGhvZDogcmVxdWVzdC5yZXNvdXJjZVJlcXVlc3RNZXRob2QsXG4gICAgICAgICAgICByZXNvdXJjZVJlcXVlc3RVcmk6IHJlcXVlc3QucmVzb3VyY2VSZXF1ZXN0VXJpLFxuICAgICAgICAgICAgc2hyQ2xhaW1zOiByZXF1ZXN0LnNockNsYWltcyxcbiAgICAgICAgICAgIHNzaEtpZDogcmVxdWVzdC5zc2hLaWQsXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGtleSA9IHRoaXMuZ2VuZXJhdGVUaHJvdHRsaW5nU3RvcmFnZUtleSh0aHVtYnByaW50KTtcbiAgICAgICAgY2FjaGVNYW5hZ2VyLnJlbW92ZUl0ZW0oa2V5KTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IFRocm90dGxpbmdVdGlscyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VGhyb3R0bGluZ1V0aWxzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/packageMetadata.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/packageMetadata.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   name: function() { return /* binding */ name; },\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n/* eslint-disable header/header */\nconst name = \"@azure/msal-common\";\nconst version = \"14.0.2\";\n\n\n//# sourceMappingURL=packageMetadata.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcGFja2FnZU1ldGFkYXRhLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7O0FBRXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9wYWNrYWdlTWV0YWRhdGEubWpzP2U0MTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIGhlYWRlci9oZWFkZXIgKi9cbmNvbnN0IG5hbWUgPSBcIkBhenVyZS9tc2FsLWNvbW1vblwiO1xuY29uc3QgdmVyc2lvbiA9IFwiMTQuMC4yXCI7XG5cbmV4cG9ydCB7IG5hbWUsIHZlcnNpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhY2thZ2VNZXRhZGF0YS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/packageMetadata.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/request/AuthenticationHeaderParser.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/request/AuthenticationHeaderParser.mjs ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticationHeaderParser: function() { return /* binding */ AuthenticationHeaderParser; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This is a helper class that parses supported HTTP response authentication headers to extract and return\n * header challenge values that can be used outside the basic authorization flows.\n */\nclass AuthenticationHeaderParser {\n    constructor(headers) {\n        this.headers = headers;\n    }\n    /**\n     * This method parses the SHR nonce value out of either the Authentication-Info or WWW-Authenticate authentication headers.\n     * @returns\n     */\n    getShrNonce() {\n        // Attempt to parse nonce from Authentiacation-Info\n        const authenticationInfo = this.headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.AuthenticationInfo];\n        if (authenticationInfo) {\n            const authenticationInfoChallenges = this.parseChallenges(authenticationInfo);\n            if (authenticationInfoChallenges.nextnonce) {\n                return authenticationInfoChallenges.nextnonce;\n            }\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientConfigurationError.createInvalidAuthenticationHeaderError(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.AuthenticationInfo, \"nextnonce challenge is missing.\");\n        }\n        // Attempt to parse nonce from WWW-Authenticate\n        const wwwAuthenticate = this.headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.WWWAuthenticate];\n        if (wwwAuthenticate) {\n            const wwwAuthenticateChallenges = this.parseChallenges(wwwAuthenticate);\n            if (wwwAuthenticateChallenges.nonce) {\n                return wwwAuthenticateChallenges.nonce;\n            }\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientConfigurationError.createInvalidAuthenticationHeaderError(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.WWWAuthenticate, \"nonce challenge is missing.\");\n        }\n        // If neither header is present, throw missing headers error\n        throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientConfigurationError.createMissingNonceAuthenticationHeadersError();\n    }\n    /**\n     * Parses an HTTP header's challenge set into a key/value map.\n     * @param header\n     * @returns\n     */\n    parseChallenges(header) {\n        const schemeSeparator = header.indexOf(\" \");\n        const challenges = header.substr(schemeSeparator + 1).split(\",\");\n        const challengeMap = {};\n        challenges.forEach((challenge) => {\n            const [key, value] = challenge.split(\"=\");\n            // Remove escaped quotation marks (', \") from challenge string to keep only the challenge value\n            challengeMap[key] = unescape(value.replace(/['\"]+/g, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING));\n        });\n        return challengeMap;\n    }\n}\n\n\n//# sourceMappingURL=AuthenticationHeaderParser.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcmVxdWVzdC9BdXRoZW50aWNhdGlvbkhlYWRlclBhcnNlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUNvRTtBQUNqQjs7QUFFaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELDZEQUFXO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUZBQXdCLHdDQUF3Qyw2REFBVztBQUM3RjtBQUNBO0FBQ0EsNkNBQTZDLDZEQUFXO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUZBQXdCLHdDQUF3Qyw2REFBVztBQUM3RjtBQUNBO0FBQ0EsY0FBYyx5RkFBd0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsMkRBQVM7QUFDMUUsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFc0M7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L3JlcXVlc3QvQXV0aGVudGljYXRpb25IZWFkZXJQYXJzZXIubWpzPzk0OGIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IENsaWVudENvbmZpZ3VyYXRpb25FcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudENvbmZpZ3VyYXRpb25FcnJvci5tanMnO1xuaW1wb3J0IHsgSGVhZGVyTmFtZXMsIENvbnN0YW50cyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogVGhpcyBpcyBhIGhlbHBlciBjbGFzcyB0aGF0IHBhcnNlcyBzdXBwb3J0ZWQgSFRUUCByZXNwb25zZSBhdXRoZW50aWNhdGlvbiBoZWFkZXJzIHRvIGV4dHJhY3QgYW5kIHJldHVyblxuICogaGVhZGVyIGNoYWxsZW5nZSB2YWx1ZXMgdGhhdCBjYW4gYmUgdXNlZCBvdXRzaWRlIHRoZSBiYXNpYyBhdXRob3JpemF0aW9uIGZsb3dzLlxuICovXG5jbGFzcyBBdXRoZW50aWNhdGlvbkhlYWRlclBhcnNlciB7XG4gICAgY29uc3RydWN0b3IoaGVhZGVycykge1xuICAgICAgICB0aGlzLmhlYWRlcnMgPSBoZWFkZXJzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGlzIG1ldGhvZCBwYXJzZXMgdGhlIFNIUiBub25jZSB2YWx1ZSBvdXQgb2YgZWl0aGVyIHRoZSBBdXRoZW50aWNhdGlvbi1JbmZvIG9yIFdXVy1BdXRoZW50aWNhdGUgYXV0aGVudGljYXRpb24gaGVhZGVycy5cbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIGdldFNock5vbmNlKCkge1xuICAgICAgICAvLyBBdHRlbXB0IHRvIHBhcnNlIG5vbmNlIGZyb20gQXV0aGVudGlhY2F0aW9uLUluZm9cbiAgICAgICAgY29uc3QgYXV0aGVudGljYXRpb25JbmZvID0gdGhpcy5oZWFkZXJzW0hlYWRlck5hbWVzLkF1dGhlbnRpY2F0aW9uSW5mb107XG4gICAgICAgIGlmIChhdXRoZW50aWNhdGlvbkluZm8pIHtcbiAgICAgICAgICAgIGNvbnN0IGF1dGhlbnRpY2F0aW9uSW5mb0NoYWxsZW5nZXMgPSB0aGlzLnBhcnNlQ2hhbGxlbmdlcyhhdXRoZW50aWNhdGlvbkluZm8pO1xuICAgICAgICAgICAgaWYgKGF1dGhlbnRpY2F0aW9uSW5mb0NoYWxsZW5nZXMubmV4dG5vbmNlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF1dGhlbnRpY2F0aW9uSW5mb0NoYWxsZW5nZXMubmV4dG5vbmNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLmNyZWF0ZUludmFsaWRBdXRoZW50aWNhdGlvbkhlYWRlckVycm9yKEhlYWRlck5hbWVzLkF1dGhlbnRpY2F0aW9uSW5mbywgXCJuZXh0bm9uY2UgY2hhbGxlbmdlIGlzIG1pc3NpbmcuXCIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIEF0dGVtcHQgdG8gcGFyc2Ugbm9uY2UgZnJvbSBXV1ctQXV0aGVudGljYXRlXG4gICAgICAgIGNvbnN0IHd3d0F1dGhlbnRpY2F0ZSA9IHRoaXMuaGVhZGVyc1tIZWFkZXJOYW1lcy5XV1dBdXRoZW50aWNhdGVdO1xuICAgICAgICBpZiAod3d3QXV0aGVudGljYXRlKSB7XG4gICAgICAgICAgICBjb25zdCB3d3dBdXRoZW50aWNhdGVDaGFsbGVuZ2VzID0gdGhpcy5wYXJzZUNoYWxsZW5nZXMod3d3QXV0aGVudGljYXRlKTtcbiAgICAgICAgICAgIGlmICh3d3dBdXRoZW50aWNhdGVDaGFsbGVuZ2VzLm5vbmNlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHd3d0F1dGhlbnRpY2F0ZUNoYWxsZW5nZXMubm9uY2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IuY3JlYXRlSW52YWxpZEF1dGhlbnRpY2F0aW9uSGVhZGVyRXJyb3IoSGVhZGVyTmFtZXMuV1dXQXV0aGVudGljYXRlLCBcIm5vbmNlIGNoYWxsZW5nZSBpcyBtaXNzaW5nLlwiKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiBuZWl0aGVyIGhlYWRlciBpcyBwcmVzZW50LCB0aHJvdyBtaXNzaW5nIGhlYWRlcnMgZXJyb3JcbiAgICAgICAgdGhyb3cgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLmNyZWF0ZU1pc3NpbmdOb25jZUF1dGhlbnRpY2F0aW9uSGVhZGVyc0Vycm9yKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhcnNlcyBhbiBIVFRQIGhlYWRlcidzIGNoYWxsZW5nZSBzZXQgaW50byBhIGtleS92YWx1ZSBtYXAuXG4gICAgICogQHBhcmFtIGhlYWRlclxuICAgICAqIEByZXR1cm5zXG4gICAgICovXG4gICAgcGFyc2VDaGFsbGVuZ2VzKGhlYWRlcikge1xuICAgICAgICBjb25zdCBzY2hlbWVTZXBhcmF0b3IgPSBoZWFkZXIuaW5kZXhPZihcIiBcIik7XG4gICAgICAgIGNvbnN0IGNoYWxsZW5nZXMgPSBoZWFkZXIuc3Vic3RyKHNjaGVtZVNlcGFyYXRvciArIDEpLnNwbGl0KFwiLFwiKTtcbiAgICAgICAgY29uc3QgY2hhbGxlbmdlTWFwID0ge307XG4gICAgICAgIGNoYWxsZW5nZXMuZm9yRWFjaCgoY2hhbGxlbmdlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBba2V5LCB2YWx1ZV0gPSBjaGFsbGVuZ2Uuc3BsaXQoXCI9XCIpO1xuICAgICAgICAgICAgLy8gUmVtb3ZlIGVzY2FwZWQgcXVvdGF0aW9uIG1hcmtzICgnLCBcIikgZnJvbSBjaGFsbGVuZ2Ugc3RyaW5nIHRvIGtlZXAgb25seSB0aGUgY2hhbGxlbmdlIHZhbHVlXG4gICAgICAgICAgICBjaGFsbGVuZ2VNYXBba2V5XSA9IHVuZXNjYXBlKHZhbHVlLnJlcGxhY2UoL1snXCJdKy9nLCBDb25zdGFudHMuRU1QVFlfU1RSSU5HKSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gY2hhbGxlbmdlTWFwO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgQXV0aGVudGljYXRpb25IZWFkZXJQYXJzZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF1dGhlbnRpY2F0aW9uSGVhZGVyUGFyc2VyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/request/AuthenticationHeaderParser.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestParameterBuilder: function() { return /* binding */ RequestParameterBuilder; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ScopeSet.mjs */ \"./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RequestValidator.mjs */ \"./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass RequestParameterBuilder {\n    constructor() {\n        this.parameters = new Map();\n    }\n    /**\n     * add response_type = code\n     */\n    addResponseTypeCode() {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.CODE_RESPONSE_TYPE));\n    }\n    /**\n     * add response_type = token id_token\n     */\n    addResponseTypeForTokenAndIdToken() {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(`${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.TOKEN_RESPONSE_TYPE} ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.ID_TOKEN_RESPONSE_TYPE}`));\n    }\n    /**\n     * add response_mode. defaults to query.\n     * @param responseMode\n     */\n    addResponseMode(responseMode) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.RESPONSE_MODE, encodeURIComponent(responseMode ? responseMode : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ResponseMode.QUERY));\n    }\n    /**\n     * Add flag to indicate STS should attempt to use WAM if available\n     */\n    addNativeBroker() {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.NATIVE_BROKER, encodeURIComponent(\"1\"));\n    }\n    /**\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\n     * @param scopeSet\n     * @param addOidcScopes\n     */\n    addScopes(scopes, addOidcScopes = true, defaultScopes = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.OIDC_DEFAULT_SCOPES) {\n        // Always add openid to the scopes when adding OIDC scopes\n        if (addOidcScopes &&\n            !defaultScopes.includes(\"openid\") &&\n            !scopes.includes(\"openid\")) {\n            defaultScopes.push(\"openid\");\n        }\n        const requestScopes = addOidcScopes\n            ? [...(scopes || []), ...defaultScopes]\n            : scopes || [];\n        const scopeSet = new _ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_1__.ScopeSet(requestScopes);\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.SCOPE, encodeURIComponent(scopeSet.printScopes()));\n    }\n    /**\n     * add clientId\n     * @param clientId\n     */\n    addClientId(clientId) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.CLIENT_ID, encodeURIComponent(clientId));\n    }\n    /**\n     * add redirect_uri\n     * @param redirectUri\n     */\n    addRedirectUri(redirectUri) {\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_2__.RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.REDIRECT_URI, encodeURIComponent(redirectUri));\n    }\n    /**\n     * add post logout redirectUri\n     * @param redirectUri\n     */\n    addPostLogoutRedirectUri(redirectUri) {\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_2__.RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.POST_LOGOUT_URI, encodeURIComponent(redirectUri));\n    }\n    /**\n     * add id_token_hint to logout request\n     * @param idTokenHint\n     */\n    addIdTokenHint(idTokenHint) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.ID_TOKEN_HINT, encodeURIComponent(idTokenHint));\n    }\n    /**\n     * add domain_hint\n     * @param domainHint\n     */\n    addDomainHint(domainHint) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SSOTypes.DOMAIN_HINT, encodeURIComponent(domainHint));\n    }\n    /**\n     * add login_hint\n     * @param loginHint\n     */\n    addLoginHint(loginHint) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SSOTypes.LOGIN_HINT, encodeURIComponent(loginHint));\n    }\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\n     * @param loginHint\n     */\n    addCcsUpn(loginHint) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.CCS_HEADER, encodeURIComponent(`UPN:${loginHint}`));\n    }\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for account object\n     * @param loginHint\n     */\n    addCcsOid(clientInfo) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.CCS_HEADER, encodeURIComponent(`Oid:${clientInfo.uid}@${clientInfo.utid}`));\n    }\n    /**\n     * add sid\n     * @param sid\n     */\n    addSid(sid) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SSOTypes.SID, encodeURIComponent(sid));\n    }\n    /**\n     * add claims\n     * @param claims\n     */\n    addClaims(claims, clientCapabilities) {\n        const mergedClaims = this.addClientCapabilitiesToClaims(claims, clientCapabilities);\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_2__.RequestValidator.validateClaims(mergedClaims);\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.CLAIMS, encodeURIComponent(mergedClaims));\n    }\n    /**\n     * add correlationId\n     * @param correlationId\n     */\n    addCorrelationId(correlationId) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\n    }\n    /**\n     * add library info query params\n     * @param libraryInfo\n     */\n    addLibraryInfo(libraryInfo) {\n        // Telemetry Info\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.X_CLIENT_VER, libraryInfo.version);\n        if (libraryInfo.os) {\n            this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\n        }\n        if (libraryInfo.cpu) {\n            this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.X_CLIENT_CPU, libraryInfo.cpu);\n        }\n    }\n    /**\n     * Add client telemetry parameters\n     * @param appTelemetry\n     */\n    addApplicationTelemetry(appTelemetry) {\n        if (appTelemetry?.appName) {\n            this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.X_APP_NAME, appTelemetry.appName);\n        }\n        if (appTelemetry?.appVersion) {\n            this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.X_APP_VER, appTelemetry.appVersion);\n        }\n    }\n    /**\n     * add prompt\n     * @param prompt\n     */\n    addPrompt(prompt) {\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_2__.RequestValidator.validatePrompt(prompt);\n        this.parameters.set(`${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.PROMPT}`, encodeURIComponent(prompt));\n    }\n    /**\n     * add state\n     * @param state\n     */\n    addState(state) {\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.StringUtils.isEmpty(state)) {\n            this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.STATE, encodeURIComponent(state));\n        }\n    }\n    /**\n     * add nonce\n     * @param nonce\n     */\n    addNonce(nonce) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.NONCE, encodeURIComponent(nonce));\n    }\n    /**\n     * add code_challenge and code_challenge_method\n     * - throw if either of them are not passed\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    addCodeChallengeParams(codeChallenge, codeChallengeMethod) {\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_2__.RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\n        if (codeChallenge && codeChallengeMethod) {\n            this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\n            this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\n        }\n        else {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_4__.ClientConfigurationError.createInvalidCodeChallengeParamsError();\n        }\n    }\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addAuthorizationCode(code) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.CODE, encodeURIComponent(code));\n    }\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addDeviceCode(code) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.DEVICE_CODE, encodeURIComponent(code));\n    }\n    /**\n     * add the `refreshToken` passed by the user\n     * @param refreshToken\n     */\n    addRefreshToken(refreshToken) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.REFRESH_TOKEN, encodeURIComponent(refreshToken));\n    }\n    /**\n     * add the `code_verifier` passed by the user to exchange for a token\n     * @param codeVerifier\n     */\n    addCodeVerifier(codeVerifier) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.CODE_VERIFIER, encodeURIComponent(codeVerifier));\n    }\n    /**\n     * add client_secret\n     * @param clientSecret\n     */\n    addClientSecret(clientSecret) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.CLIENT_SECRET, encodeURIComponent(clientSecret));\n    }\n    /**\n     * add clientAssertion for confidential client flows\n     * @param clientAssertion\n     */\n    addClientAssertion(clientAssertion) {\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.StringUtils.isEmpty(clientAssertion)) {\n            this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.CLIENT_ASSERTION, encodeURIComponent(clientAssertion));\n        }\n    }\n    /**\n     * add clientAssertionType for confidential client flows\n     * @param clientAssertionType\n     */\n    addClientAssertionType(clientAssertionType) {\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.StringUtils.isEmpty(clientAssertionType)) {\n            this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.CLIENT_ASSERTION_TYPE, encodeURIComponent(clientAssertionType));\n        }\n    }\n    /**\n     * add OBO assertion for confidential client flows\n     * @param clientAssertion\n     */\n    addOboAssertion(oboAssertion) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.OBO_ASSERTION, encodeURIComponent(oboAssertion));\n    }\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addRequestTokenUse(tokenUse) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.REQUESTED_TOKEN_USE, encodeURIComponent(tokenUse));\n    }\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addGrantType(grantType) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.GRANT_TYPE, encodeURIComponent(grantType));\n    }\n    /**\n     * add client info\n     *\n     */\n    addClientInfo() {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_INFO, \"1\");\n    }\n    /**\n     * add extraQueryParams\n     * @param eQParams\n     */\n    addExtraQueryParameters(eQParams) {\n        const sanitizedEQParams = _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_2__.RequestValidator.sanitizeEQParams(eQParams, this.parameters);\n        Object.keys(sanitizedEQParams).forEach((key) => {\n            this.parameters.set(key, eQParams[key]);\n        });\n    }\n    addClientCapabilitiesToClaims(claims, clientCapabilities) {\n        let mergedClaims;\n        // Parse provided claims into JSON object or initialize empty object\n        if (!claims) {\n            mergedClaims = {};\n        }\n        else {\n            try {\n                mergedClaims = JSON.parse(claims);\n            }\n            catch (e) {\n                throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_4__.ClientConfigurationError.createInvalidClaimsRequestError();\n            }\n        }\n        if (clientCapabilities && clientCapabilities.length > 0) {\n            if (!mergedClaims.hasOwnProperty(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ClaimsRequestKeys.ACCESS_TOKEN)) {\n                // Add access_token key to claims object\n                mergedClaims[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ClaimsRequestKeys.ACCESS_TOKEN] = {};\n            }\n            // Add xms_cc claim with provided clientCapabilities to access_token key\n            mergedClaims[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ClaimsRequestKeys.ACCESS_TOKEN][_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ClaimsRequestKeys.XMS_CC] = {\n                values: clientCapabilities,\n            };\n        }\n        return JSON.stringify(mergedClaims);\n    }\n    /**\n     * adds `username` for Password Grant flow\n     * @param username\n     */\n    addUsername(username) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.PasswordGrantConstants.username, encodeURIComponent(username));\n    }\n    /**\n     * adds `password` for Password Grant flow\n     * @param password\n     */\n    addPassword(password) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.PasswordGrantConstants.password, encodeURIComponent(password));\n    }\n    /**\n     * add pop_jwk to query params\n     * @param cnfString\n     */\n    addPopToken(cnfString) {\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.StringUtils.isEmpty(cnfString)) {\n            this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.TOKEN_TYPE, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.POP);\n            this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.REQ_CNF, encodeURIComponent(cnfString));\n        }\n    }\n    /**\n     * add SSH JWK and key ID to query params\n     */\n    addSshJwk(sshJwkString) {\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.StringUtils.isEmpty(sshJwkString)) {\n            this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.TOKEN_TYPE, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.SSH);\n            this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.REQ_CNF, encodeURIComponent(sshJwkString));\n        }\n    }\n    /**\n     * add server telemetry fields\n     * @param serverTelemetryManager\n     */\n    addServerTelemetry(serverTelemetryManager) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.X_CLIENT_CURR_TELEM, serverTelemetryManager.generateCurrentRequestHeaderValue());\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.X_CLIENT_LAST_TELEM, serverTelemetryManager.generateLastRequestHeaderValue());\n    }\n    /**\n     * Adds parameter that indicates to the server that throttling is supported\n     */\n    addThrottling() {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.X_MS_LIB_CAPABILITY, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE);\n    }\n    /**\n     * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\n     */\n    addLogoutHint(logoutHint) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AADServerParamKeys.LOGOUT_HINT, encodeURIComponent(logoutHint));\n    }\n    /**\n     * Utility to create a URL from the params map\n     */\n    createQueryString() {\n        const queryParameterArray = new Array();\n        this.parameters.forEach((value, key) => {\n            queryParameterArray.push(`${key}=${value}`);\n        });\n        return queryParameterArray.join(\"&\");\n    }\n}\n\n\n//# sourceMappingURL=RequestParameterBuilder.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestValidator: function() { return /* binding */ RequestValidator; }\n/* harmony export */ });\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Validates server consumable params from the \"request\" objects\n */\nclass RequestValidator {\n    /**\n     * Utility to check if the `redirectUri` in the request is a non-null value\n     * @param redirectUri\n     */\n    static validateRedirectUri(redirectUri) {\n        if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(redirectUri)) {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientConfigurationError.createRedirectUriEmptyError();\n        }\n    }\n    /**\n     * Utility to validate prompt sent by the user in the request\n     * @param prompt\n     */\n    static validatePrompt(prompt) {\n        const promptValues = [];\n        for (const value in _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.PromptValue) {\n            promptValues.push(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.PromptValue[value]);\n        }\n        if (promptValues.indexOf(prompt) < 0) {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientConfigurationError.createInvalidPromptError(prompt);\n        }\n    }\n    static validateClaims(claims) {\n        try {\n            JSON.parse(claims);\n        }\n        catch (e) {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientConfigurationError.createInvalidClaimsRequestError();\n        }\n    }\n    /**\n     * Utility to validate code_challenge and code_challenge_method\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeParams(codeChallenge, codeChallengeMethod) {\n        if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(codeChallenge) ||\n            _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(codeChallengeMethod)) {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientConfigurationError.createInvalidCodeChallengeParamsError();\n        }\n        else {\n            this.validateCodeChallengeMethod(codeChallengeMethod);\n        }\n    }\n    /**\n     * Utility to validate code_challenge_method\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeMethod(codeChallengeMethod) {\n        if ([\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CodeChallengeMethodValues.PLAIN,\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CodeChallengeMethodValues.S256,\n        ].indexOf(codeChallengeMethod) < 0) {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientConfigurationError.createInvalidCodeChallengeMethodError();\n        }\n    }\n    /**\n     * Removes unnecessary, duplicate, and empty string query parameters from extraQueryParameters\n     * @param request\n     */\n    static sanitizeEQParams(eQParams, queryParams) {\n        if (!eQParams) {\n            return {};\n        }\n        // Remove any query parameters already included in SSO params\n        queryParams.forEach((value, key) => {\n            if (eQParams[key]) {\n                delete eQParams[key];\n            }\n        });\n        // remove empty string parameters\n        return Object.fromEntries(Object.entries(eQParams).filter((kv) => kv[1] !== \"\"));\n    }\n}\n\n\n//# sourceMappingURL=RequestValidator.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcmVxdWVzdC9SZXF1ZXN0VmFsaWRhdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDYTtBQUMwQztBQUMwQjtBQUNEOztBQUVoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksK0RBQVc7QUFDdkIsa0JBQWtCLHlGQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDZEQUFXO0FBQ3ZDLDhCQUE4Qiw2REFBVztBQUN6QztBQUNBO0FBQ0Esa0JBQWtCLHlGQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix5RkFBd0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksK0RBQVc7QUFDdkIsWUFBWSwrREFBVztBQUN2QixrQkFBa0IseUZBQXdCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDJFQUF5QjtBQUNyQyxZQUFZLDJFQUF5QjtBQUNyQztBQUNBLGtCQUFrQix5RkFBd0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcmVxdWVzdC9SZXF1ZXN0VmFsaWRhdG9yLm1qcz9hMTU2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBTdHJpbmdVdGlscyB9IGZyb20gJy4uL3V0aWxzL1N0cmluZ1V0aWxzLm1qcyc7XG5pbXBvcnQgeyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRDb25maWd1cmF0aW9uRXJyb3IubWpzJztcbmltcG9ydCB7IENvZGVDaGFsbGVuZ2VNZXRob2RWYWx1ZXMsIFByb21wdFZhbHVlIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBWYWxpZGF0ZXMgc2VydmVyIGNvbnN1bWFibGUgcGFyYW1zIGZyb20gdGhlIFwicmVxdWVzdFwiIG9iamVjdHNcbiAqL1xuY2xhc3MgUmVxdWVzdFZhbGlkYXRvciB7XG4gICAgLyoqXG4gICAgICogVXRpbGl0eSB0byBjaGVjayBpZiB0aGUgYHJlZGlyZWN0VXJpYCBpbiB0aGUgcmVxdWVzdCBpcyBhIG5vbi1udWxsIHZhbHVlXG4gICAgICogQHBhcmFtIHJlZGlyZWN0VXJpXG4gICAgICovXG4gICAgc3RhdGljIHZhbGlkYXRlUmVkaXJlY3RVcmkocmVkaXJlY3RVcmkpIHtcbiAgICAgICAgaWYgKFN0cmluZ1V0aWxzLmlzRW1wdHkocmVkaXJlY3RVcmkpKSB7XG4gICAgICAgICAgICB0aHJvdyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IuY3JlYXRlUmVkaXJlY3RVcmlFbXB0eUVycm9yKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogVXRpbGl0eSB0byB2YWxpZGF0ZSBwcm9tcHQgc2VudCBieSB0aGUgdXNlciBpbiB0aGUgcmVxdWVzdFxuICAgICAqIEBwYXJhbSBwcm9tcHRcbiAgICAgKi9cbiAgICBzdGF0aWMgdmFsaWRhdGVQcm9tcHQocHJvbXB0KSB7XG4gICAgICAgIGNvbnN0IHByb21wdFZhbHVlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIGluIFByb21wdFZhbHVlKSB7XG4gICAgICAgICAgICBwcm9tcHRWYWx1ZXMucHVzaChQcm9tcHRWYWx1ZVt2YWx1ZV0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9tcHRWYWx1ZXMuaW5kZXhPZihwcm9tcHQpIDwgMCkge1xuICAgICAgICAgICAgdGhyb3cgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLmNyZWF0ZUludmFsaWRQcm9tcHRFcnJvcihwcm9tcHQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyB2YWxpZGF0ZUNsYWltcyhjbGFpbXMpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIEpTT04ucGFyc2UoY2xhaW1zKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgdGhyb3cgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLmNyZWF0ZUludmFsaWRDbGFpbXNSZXF1ZXN0RXJyb3IoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBVdGlsaXR5IHRvIHZhbGlkYXRlIGNvZGVfY2hhbGxlbmdlIGFuZCBjb2RlX2NoYWxsZW5nZV9tZXRob2RcbiAgICAgKiBAcGFyYW0gY29kZUNoYWxsZW5nZVxuICAgICAqIEBwYXJhbSBjb2RlQ2hhbGxlbmdlTWV0aG9kXG4gICAgICovXG4gICAgc3RhdGljIHZhbGlkYXRlQ29kZUNoYWxsZW5nZVBhcmFtcyhjb2RlQ2hhbGxlbmdlLCBjb2RlQ2hhbGxlbmdlTWV0aG9kKSB7XG4gICAgICAgIGlmIChTdHJpbmdVdGlscy5pc0VtcHR5KGNvZGVDaGFsbGVuZ2UpIHx8XG4gICAgICAgICAgICBTdHJpbmdVdGlscy5pc0VtcHR5KGNvZGVDaGFsbGVuZ2VNZXRob2QpKSB7XG4gICAgICAgICAgICB0aHJvdyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IuY3JlYXRlSW52YWxpZENvZGVDaGFsbGVuZ2VQYXJhbXNFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy52YWxpZGF0ZUNvZGVDaGFsbGVuZ2VNZXRob2QoY29kZUNoYWxsZW5nZU1ldGhvZCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogVXRpbGl0eSB0byB2YWxpZGF0ZSBjb2RlX2NoYWxsZW5nZV9tZXRob2RcbiAgICAgKiBAcGFyYW0gY29kZUNoYWxsZW5nZU1ldGhvZFxuICAgICAqL1xuICAgIHN0YXRpYyB2YWxpZGF0ZUNvZGVDaGFsbGVuZ2VNZXRob2QoY29kZUNoYWxsZW5nZU1ldGhvZCkge1xuICAgICAgICBpZiAoW1xuICAgICAgICAgICAgQ29kZUNoYWxsZW5nZU1ldGhvZFZhbHVlcy5QTEFJTixcbiAgICAgICAgICAgIENvZGVDaGFsbGVuZ2VNZXRob2RWYWx1ZXMuUzI1NixcbiAgICAgICAgXS5pbmRleE9mKGNvZGVDaGFsbGVuZ2VNZXRob2QpIDwgMCkge1xuICAgICAgICAgICAgdGhyb3cgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLmNyZWF0ZUludmFsaWRDb2RlQ2hhbGxlbmdlTWV0aG9kRXJyb3IoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIHVubmVjZXNzYXJ5LCBkdXBsaWNhdGUsIGFuZCBlbXB0eSBzdHJpbmcgcXVlcnkgcGFyYW1ldGVycyBmcm9tIGV4dHJhUXVlcnlQYXJhbWV0ZXJzXG4gICAgICogQHBhcmFtIHJlcXVlc3RcbiAgICAgKi9cbiAgICBzdGF0aWMgc2FuaXRpemVFUVBhcmFtcyhlUVBhcmFtcywgcXVlcnlQYXJhbXMpIHtcbiAgICAgICAgaWYgKCFlUVBhcmFtcykge1xuICAgICAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgICB9XG4gICAgICAgIC8vIFJlbW92ZSBhbnkgcXVlcnkgcGFyYW1ldGVycyBhbHJlYWR5IGluY2x1ZGVkIGluIFNTTyBwYXJhbXNcbiAgICAgICAgcXVlcnlQYXJhbXMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgaWYgKGVRUGFyYW1zW2tleV0pIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgZVFQYXJhbXNba2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIC8vIHJlbW92ZSBlbXB0eSBzdHJpbmcgcGFyYW1ldGVyc1xuICAgICAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKGVRUGFyYW1zKS5maWx0ZXIoKGt2KSA9PiBrdlsxXSAhPT0gXCJcIikpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgUmVxdWVzdFZhbGlkYXRvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmVxdWVzdFZhbGlkYXRvci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScopeSet: function() { return /* binding */ ScopeSet; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\n * to ensure uniqueness of strings.\n */\nclass ScopeSet {\n    constructor(inputScopes) {\n        // Filter empty string and null/undefined array items\n        const scopeArr = inputScopes\n            ? _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.trimArrayEntries([...inputScopes])\n            : [];\n        const filteredInput = scopeArr\n            ? _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.removeEmptyStringsFromArray(scopeArr)\n            : [];\n        // Validate and filter scopes (validate function throws if validation fails)\n        this.validateInputScopes(filteredInput);\n        this.scopes = new Set(); // Iterator in constructor not supported by IE11\n        filteredInput.forEach((scope) => this.scopes.add(scope));\n    }\n    /**\n     * Factory method to create ScopeSet from space-delimited string\n     * @param inputScopeString\n     * @param appClientId\n     * @param scopesRequired\n     */\n    static fromString(inputScopeString) {\n        const scopeString = inputScopeString || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n        const inputScopes = scopeString.split(\" \");\n        return new ScopeSet(inputScopes);\n    }\n    /**\n     * Creates the set of scopes to search for in cache lookups\n     * @param inputScopeString\n     * @returns\n     */\n    static createSearchScopes(inputScopeString) {\n        const scopeSet = new ScopeSet(inputScopeString);\n        if (!scopeSet.containsOnlyOIDCScopes()) {\n            scopeSet.removeOIDCScopes();\n        }\n        else {\n            scopeSet.removeScope(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.OFFLINE_ACCESS_SCOPE);\n        }\n        return scopeSet;\n    }\n    /**\n     * Used to validate the scopes input parameter requested  by the developer.\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\n     */\n    validateInputScopes(inputScopes) {\n        // Check if scopes are required but not given or is an empty array\n        if (!inputScopes || inputScopes.length < 1) {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_2__.ClientConfigurationError.createEmptyScopesArrayError();\n        }\n    }\n    /**\n     * Check if a given scope is present in this set of scopes.\n     * @param scope\n     */\n    containsScope(scope) {\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\n        // compare lowercase scopes\n        return !_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(scope)\n            ? lowerCaseScopesSet.scopes.has(scope.toLowerCase())\n            : false;\n    }\n    /**\n     * Check if a set of scopes is present in this set of scopes.\n     * @param scopeSet\n     */\n    containsScopeSet(scopeSet) {\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\n            return false;\n        }\n        return (this.scopes.size >= scopeSet.scopes.size &&\n            scopeSet.asArray().every((scope) => this.containsScope(scope)));\n    }\n    /**\n     * Check if set of scopes contains only the defaults\n     */\n    containsOnlyOIDCScopes() {\n        let defaultScopeCount = 0;\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OIDC_SCOPES.forEach((defaultScope) => {\n            if (this.containsScope(defaultScope)) {\n                defaultScopeCount += 1;\n            }\n        });\n        return this.scopes.size === defaultScopeCount;\n    }\n    /**\n     * Appends single scope if passed\n     * @param newScope\n     */\n    appendScope(newScope) {\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(newScope)) {\n            this.scopes.add(newScope.trim());\n        }\n    }\n    /**\n     * Appends multiple scopes if passed\n     * @param newScopes\n     */\n    appendScopes(newScopes) {\n        try {\n            newScopes.forEach((newScope) => this.appendScope(newScope));\n        }\n        catch (e) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError.createAppendScopeSetError(e);\n        }\n    }\n    /**\n     * Removes element from set of scopes.\n     * @param scope\n     */\n    removeScope(scope) {\n        if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(scope)) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\n        }\n        this.scopes.delete(scope.trim());\n    }\n    /**\n     * Removes default scopes from set of scopes\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\n     */\n    removeOIDCScopes() {\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OIDC_SCOPES.forEach((defaultScope) => {\n            this.scopes.delete(defaultScope);\n        });\n    }\n    /**\n     * Combines an array of scopes with the current set of scopes.\n     * @param otherScopes\n     */\n    unionScopeSets(otherScopes) {\n        if (!otherScopes) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError.createEmptyInputScopeSetError();\n        }\n        const unionScopes = new Set(); // Iterator in constructor not supported in IE11\n        otherScopes.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\n        this.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\n        return unionScopes;\n    }\n    /**\n     * Check if scopes intersect between this set and another.\n     * @param otherScopes\n     */\n    intersectingScopeSets(otherScopes) {\n        if (!otherScopes) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError.createEmptyInputScopeSetError();\n        }\n        // Do not allow OIDC scopes to be the only intersecting scopes\n        if (!otherScopes.containsOnlyOIDCScopes()) {\n            otherScopes.removeOIDCScopes();\n        }\n        const unionScopes = this.unionScopeSets(otherScopes);\n        const sizeOtherScopes = otherScopes.getScopeCount();\n        const sizeThisScopes = this.getScopeCount();\n        const sizeUnionScopes = unionScopes.size;\n        return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\n    }\n    /**\n     * Returns size of set of scopes.\n     */\n    getScopeCount() {\n        return this.scopes.size;\n    }\n    /**\n     * Returns the scopes as an array of string values\n     */\n    asArray() {\n        const array = [];\n        this.scopes.forEach((val) => array.push(val));\n        return array;\n    }\n    /**\n     * Prints scopes into a space-delimited string\n     */\n    printScopes() {\n        if (this.scopes) {\n            const scopeArr = this.asArray();\n            return scopeArr.join(\" \");\n        }\n        return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n    }\n    /**\n     * Prints scopes into a space-delimited lower-case string (used for caching)\n     */\n    printScopesLowerCase() {\n        return this.printScopes().toLowerCase();\n    }\n}\n\n\n//# sourceMappingURL=ScopeSet.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResponseHandler: function() { return /* binding */ ResponseHandler; }\n/* harmony export */ });\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../account/ClientInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ServerError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../account/AuthToken.mjs */ \"./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../request/ScopeSet.mjs */ \"./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../cache/entities/AccountEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _cache_entities_IdTokenEntity_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../cache/entities/IdTokenEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/IdTokenEntity.mjs\");\n/* harmony import */ var _cache_entities_AccessTokenEntity_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../cache/entities/AccessTokenEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/AccessTokenEntity.mjs\");\n/* harmony import */ var _cache_entities_RefreshTokenEntity_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../cache/entities/RefreshTokenEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/RefreshTokenEntity.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/InteractionRequiredAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/* harmony import */ var _cache_entities_CacheRecord_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../cache/entities/CacheRecord.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/CacheRecord.mjs\");\n/* harmony import */ var _utils_ProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/ProtocolUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../crypto/PopTokenGenerator.mjs */ \"./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/* harmony import */ var _cache_entities_AppMetadataEntity_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../cache/entities/AppMetadataEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/AppMetadataEntity.mjs\");\n/* harmony import */ var _cache_persistence_TokenCacheContext_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../cache/persistence/TokenCacheContext.mjs */ \"./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class that handles response parsing.\n * @internal\n */\nclass ResponseHandler {\n    constructor(clientId, cacheStorage, cryptoObj, logger, serializableCache, persistencePlugin, performanceClient) {\n        this.clientId = clientId;\n        this.cacheStorage = cacheStorage;\n        this.cryptoObj = cryptoObj;\n        this.logger = logger;\n        this.serializableCache = serializableCache;\n        this.persistencePlugin = persistencePlugin;\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Function which validates server authorization code response.\n     * @param serverResponseHash\n     * @param cachedState\n     * @param cryptoObj\n     */\n    validateServerAuthorizationCodeResponse(serverResponseHash, cachedState, cryptoObj) {\n        if (!serverResponseHash.state || !cachedState) {\n            throw serverResponseHash.state\n                ? _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createStateNotFoundError(\"Cached State\")\n                : _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createStateNotFoundError(\"Server State\");\n        }\n        let decodedServerResponseHash;\n        let decodedCachedState;\n        try {\n            decodedServerResponseHash = decodeURIComponent(serverResponseHash.state);\n        }\n        catch (e) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createInvalidStateError(serverResponseHash.state, `Server response hash URI could not be decoded`);\n        }\n        try {\n            decodedCachedState = decodeURIComponent(cachedState);\n        }\n        catch (e) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createInvalidStateError(serverResponseHash.state, `Cached state URI could not be decoded`);\n        }\n        if (decodedServerResponseHash !== decodedCachedState) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createStateMismatchError();\n        }\n        // Check for error\n        if (serverResponseHash.error ||\n            serverResponseHash.error_description ||\n            serverResponseHash.suberror) {\n            if (_error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionRequiredAuthError.isInteractionRequiredError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror)) {\n                throw new _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionRequiredAuthError(serverResponseHash.error || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, serverResponseHash.error_description, serverResponseHash.suberror, serverResponseHash.timestamp || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, serverResponseHash.trace_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, serverResponseHash.correlation_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, serverResponseHash.claims || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING);\n            }\n            throw new _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_3__.ServerError(serverResponseHash.error || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, serverResponseHash.error_description, serverResponseHash.suberror);\n        }\n        if (serverResponseHash.client_info) {\n            (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_4__.buildClientInfo)(serverResponseHash.client_info, cryptoObj);\n        }\n    }\n    /**\n     * Function which validates server authorization token response.\n     * @param serverResponse\n     */\n    validateTokenResponse(serverResponse) {\n        // Check for error\n        if (serverResponse.error ||\n            serverResponse.error_description ||\n            serverResponse.suberror) {\n            if (_error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionRequiredAuthError.isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\n                throw new _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, serverResponse.trace_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, serverResponse.correlation_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, serverResponse.claims || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING);\n            }\n            const errString = `${serverResponse.error_codes} - [${serverResponse.timestamp}]: ${serverResponse.error_description} - Correlation ID: ${serverResponse.correlation_id} - Trace ID: ${serverResponse.trace_id}`;\n            throw new _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_3__.ServerError(serverResponse.error, errString, serverResponse.suberror);\n        }\n    }\n    /**\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\n     * @param serverTokenResponse\n     * @param authority\n     */\n    async handleServerTokenResponse(serverTokenResponse, authority, reqTimestamp, request, authCodePayload, userAssertionHash, handlingRefreshTokenResponse, forceCacheRefreshTokenResponse, serverRequestId) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.PerformanceEvents.HandleServerTokenResponse, serverTokenResponse.correlation_id);\n        // create an idToken object (not entity)\n        let idTokenObj;\n        if (serverTokenResponse.id_token) {\n            idTokenObj = new _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthToken(serverTokenResponse.id_token || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, this.cryptoObj);\n            // token nonce check (TODO: Add a warning if no nonce is given?)\n            if (authCodePayload &&\n                !_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_7__.StringUtils.isEmpty(authCodePayload.nonce)) {\n                if (idTokenObj.claims.nonce !== authCodePayload.nonce) {\n                    throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createNonceMismatchError();\n                }\n            }\n            // token max_age check\n            if (request.maxAge || request.maxAge === 0) {\n                const authTime = idTokenObj.claims.auth_time;\n                if (!authTime) {\n                    throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createAuthTimeNotFoundError();\n                }\n                _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_6__.AuthToken.checkMaxAge(authTime, request.maxAge);\n            }\n        }\n        // generate homeAccountId\n        this.homeAccountIdentifier = _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_8__.AccountEntity.generateHomeAccountId(serverTokenResponse.client_info || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, authority.authorityType, this.logger, this.cryptoObj, idTokenObj?.claims);\n        // save the response tokens\n        let requestStateObj;\n        if (!!authCodePayload && !!authCodePayload.state) {\n            requestStateObj = _utils_ProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_9__.ProtocolUtils.parseRequestState(this.cryptoObj, authCodePayload.state);\n        }\n        // Add keyId from request to serverTokenResponse if defined\n        serverTokenResponse.key_id =\n            serverTokenResponse.key_id || request.sshKid || undefined;\n        const cacheRecord = this.generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenObj, userAssertionHash, authCodePayload);\n        let cacheContext;\n        try {\n            if (this.persistencePlugin && this.serializableCache) {\n                this.logger.verbose(\"Persistence enabled, calling beforeCacheAccess\");\n                cacheContext = new _cache_persistence_TokenCacheContext_mjs__WEBPACK_IMPORTED_MODULE_10__.TokenCacheContext(this.serializableCache, true);\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\n            }\n            /*\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal, unless explicitly flagged by\n             * the developer, as in the case of refresh token flow used in ADAL Node to MSAL Node migration.\n             */\n            if (handlingRefreshTokenResponse &&\n                !forceCacheRefreshTokenResponse &&\n                cacheRecord.account) {\n                const key = cacheRecord.account.generateAccountKey();\n                const account = this.cacheStorage.getAccount(key);\n                if (!account) {\n                    this.logger.warning(\"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\");\n                    return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenObj, requestStateObj, undefined, serverRequestId);\n                }\n            }\n            await this.cacheStorage.saveCacheRecord(cacheRecord, request.storeInCache);\n        }\n        finally {\n            if (this.persistencePlugin &&\n                this.serializableCache &&\n                cacheContext) {\n                this.logger.verbose(\"Persistence enabled, calling afterCacheAccess\");\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\n            }\n        }\n        return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenObj, requestStateObj, serverTokenResponse, serverRequestId);\n    }\n    /**\n     * Generates CacheRecord\n     * @param serverTokenResponse\n     * @param idTokenObj\n     * @param authority\n     */\n    generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenObj, userAssertionHash, authCodePayload) {\n        const env = authority.getPreferredCache();\n        if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_7__.StringUtils.isEmpty(env)) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createInvalidCacheEnvironmentError();\n        }\n        // IdToken: non AAD scenarios can have empty realm\n        let cachedIdToken;\n        let cachedAccount;\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_7__.StringUtils.isEmpty(serverTokenResponse.id_token) &&\n            !!idTokenObj) {\n            cachedIdToken = _cache_entities_IdTokenEntity_mjs__WEBPACK_IMPORTED_MODULE_11__.IdTokenEntity.createIdTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.id_token || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, this.clientId, idTokenObj.claims.tid || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING);\n            cachedAccount = _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_8__.AccountEntity.createAccount({\n                homeAccountId: this.homeAccountIdentifier,\n                idTokenClaims: idTokenObj.claims,\n                clientInfo: serverTokenResponse.client_info,\n                cloudGraphHostName: authCodePayload?.cloud_graph_host_name,\n                msGraphHost: authCodePayload?.msgraph_host,\n            }, authority);\n        }\n        // AccessToken\n        let cachedAccessToken = null;\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_7__.StringUtils.isEmpty(serverTokenResponse.access_token)) {\n            // If scopes not returned in server response, use request scopes\n            const responseScopes = serverTokenResponse.scope\n                ? _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__.ScopeSet.fromString(serverTokenResponse.scope)\n                : new _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__.ScopeSet(request.scopes || []);\n            /*\n             * Use timestamp calculated before request\n             * Server may return timestamps as strings, parse to numbers if so.\n             */\n            const expiresIn = (typeof serverTokenResponse.expires_in === \"string\"\n                ? parseInt(serverTokenResponse.expires_in, 10)\n                : serverTokenResponse.expires_in) || 0;\n            const extExpiresIn = (typeof serverTokenResponse.ext_expires_in === \"string\"\n                ? parseInt(serverTokenResponse.ext_expires_in, 10)\n                : serverTokenResponse.ext_expires_in) || 0;\n            const refreshIn = (typeof serverTokenResponse.refresh_in === \"string\"\n                ? parseInt(serverTokenResponse.refresh_in, 10)\n                : serverTokenResponse.refresh_in) || undefined;\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\n            const extendedTokenExpirationSeconds = tokenExpirationSeconds + extExpiresIn;\n            const refreshOnSeconds = refreshIn && refreshIn > 0\n                ? reqTimestamp + refreshIn\n                : undefined;\n            // non AAD scenarios can have empty realm\n            cachedAccessToken = _cache_entities_AccessTokenEntity_mjs__WEBPACK_IMPORTED_MODULE_13__.AccessTokenEntity.createAccessTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.access_token || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, this.clientId, idTokenObj\n                ? idTokenObj.claims.tid || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING\n                : authority.tenant, responseScopes.printScopes(), tokenExpirationSeconds, extendedTokenExpirationSeconds, this.cryptoObj, refreshOnSeconds, serverTokenResponse.token_type, userAssertionHash, serverTokenResponse.key_id, request.claims, request.requestedClaimsHash);\n        }\n        // refreshToken\n        let cachedRefreshToken = null;\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_7__.StringUtils.isEmpty(serverTokenResponse.refresh_token)) {\n            cachedRefreshToken = _cache_entities_RefreshTokenEntity_mjs__WEBPACK_IMPORTED_MODULE_14__.RefreshTokenEntity.createRefreshTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING, this.clientId, serverTokenResponse.foci, userAssertionHash);\n        }\n        // appMetadata\n        let cachedAppMetadata = null;\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_7__.StringUtils.isEmpty(serverTokenResponse.foci)) {\n            cachedAppMetadata = _cache_entities_AppMetadataEntity_mjs__WEBPACK_IMPORTED_MODULE_15__.AppMetadataEntity.createAppMetadataEntity(this.clientId, env, serverTokenResponse.foci);\n        }\n        return new _cache_entities_CacheRecord_mjs__WEBPACK_IMPORTED_MODULE_16__.CacheRecord(cachedAccount, cachedIdToken, cachedAccessToken, cachedRefreshToken, cachedAppMetadata);\n    }\n    /**\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\n     *\n     * Optionally takes a state string that is set as-is in the response.\n     *\n     * @param cacheRecord\n     * @param idTokenObj\n     * @param fromTokenCache\n     * @param stateString\n     */\n    static async generateAuthenticationResult(cryptoObj, authority, cacheRecord, fromTokenCache, request, idTokenObj, requestState, serverTokenResponse, requestId) {\n        let accessToken = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n        let responseScopes = [];\n        let expiresOn = null;\n        let extExpiresOn;\n        let familyId = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n        if (cacheRecord.accessToken) {\n            if (cacheRecord.accessToken.tokenType === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthenticationScheme.POP) {\n                const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_17__.PopTokenGenerator(cryptoObj);\n                const { secret, keyId } = cacheRecord.accessToken;\n                if (!keyId) {\n                    throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createKeyIdMissingError();\n                }\n                accessToken = await popTokenGenerator.signPopToken(secret, keyId, request);\n            }\n            else {\n                accessToken = cacheRecord.accessToken.secret;\n            }\n            responseScopes = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__.ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\n        }\n        if (cacheRecord.appMetadata) {\n            familyId =\n                cacheRecord.appMetadata.familyId === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.THE_FAMILY_ID\n                    ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.THE_FAMILY_ID\n                    : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n        }\n        const uid = idTokenObj?.claims.oid ||\n            idTokenObj?.claims.sub ||\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n        const tid = idTokenObj?.claims.tid || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n        // for hybrid + native bridge enablement, send back the native account Id\n        if (serverTokenResponse?.spa_accountid && !!cacheRecord.account) {\n            cacheRecord.account.nativeAccountId =\n                serverTokenResponse?.spa_accountid;\n        }\n        return {\n            authority: authority.canonicalAuthority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: cacheRecord.account\n                ? cacheRecord.account.getAccountInfo()\n                : null,\n            idToken: idTokenObj ? idTokenObj.rawToken : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING,\n            idTokenClaims: idTokenObj ? idTokenObj.claims : {},\n            accessToken: accessToken,\n            fromCache: fromTokenCache,\n            expiresOn: expiresOn,\n            correlationId: request.correlationId,\n            requestId: requestId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING,\n            extExpiresOn: extExpiresOn,\n            familyId: familyId,\n            tokenType: cacheRecord.accessToken?.tokenType || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING,\n            state: requestState\n                ? requestState.userRequestState\n                : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING,\n            cloudGraphHostName: cacheRecord.account?.cloudGraphHostName ||\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING,\n            msGraphHost: cacheRecord.account?.msGraphHost || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING,\n            code: serverTokenResponse?.spa_code,\n            fromNativeBroker: false,\n        };\n    }\n}\n\n\n//# sourceMappingURL=ResponseHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceClient.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceClient.mjs ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PerformanceClient: function() { return /* binding */ PerformanceClient; }\n/* harmony export */ });\n/* harmony import */ var _PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass PerformanceClient {\n    /**\n     * Creates an instance of PerformanceClient,\n     * an abstract class containing core performance telemetry logic.\n     *\n     * @constructor\n     * @param {string} clientId Client ID of the application\n     * @param {string} authority Authority used by the application\n     * @param {Logger} logger Logger used by the application\n     * @param {string} libraryName Name of the library\n     * @param {string} libraryVersion Version of the library\n     * @param {ApplicationTelemetry} applicationTelemetry application name and version\n     * @param {Set<String>} intFields integer fields to be truncated\n     */\n    constructor(clientId, authority, logger, libraryName, libraryVersion, applicationTelemetry, intFields) {\n        this.authority = authority;\n        this.libraryName = libraryName;\n        this.libraryVersion = libraryVersion;\n        this.applicationTelemetry = applicationTelemetry;\n        this.clientId = clientId;\n        this.logger = logger;\n        this.callbacks = new Map();\n        this.eventsByCorrelationId = new Map();\n        this.queueMeasurements = new Map();\n        this.preQueueTimeByCorrelationId = new Map();\n        this.intFields = intFields || new Set();\n        for (const item of _PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.IntFields) {\n            this.intFields.add(item);\n        }\n    }\n    /**\n     * Starts and returns an platform-specific implementation of IPerformanceMeasurement.\n     * Note: this function can be changed to abstract at the next major version bump.\n     *\n     * @param {string} measureName\n     * @param {string} correlationId\n     * @returns {IPerformanceMeasurement}\n     */\n    startPerformanceMeasurement(measureName, // eslint-disable-line @typescript-eslint/no-unused-vars\n    correlationId // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        return {};\n    }\n    /**\n     * Gets map of pre-queue times by correlation Id\n     *\n     * @param {PerformanceEvents} eventName\n     * @param {string} correlationId\n     * @returns {number}\n     */\n    getPreQueueTime(eventName, correlationId) {\n        const preQueueEvent = this.preQueueTimeByCorrelationId.get(correlationId);\n        if (!preQueueEvent) {\n            this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue times found for correlationId: ${correlationId}, unable to add queue measurement`);\n            return;\n        }\n        else if (preQueueEvent.name !== eventName) {\n            this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue time found for ${eventName}, unable to add queue measurement`);\n            return;\n        }\n        return preQueueEvent.time;\n    }\n    /**\n     * Calculates the difference between current time and time when function was queued.\n     * Note: It is possible to have 0 as the queue time if the current time and the queued time was the same.\n     *\n     * @param {number} preQueueTime\n     * @param {number} currentTime\n     * @returns {number}\n     */\n    calculateQueuedTime(preQueueTime, currentTime) {\n        if (preQueueTime < 1) {\n            this.logger.trace(`PerformanceClient: preQueueTime should be a positive integer and not ${preQueueTime}`);\n            return 0;\n        }\n        if (currentTime < 1) {\n            this.logger.trace(`PerformanceClient: currentTime should be a positive integer and not ${currentTime}`);\n            return 0;\n        }\n        if (currentTime < preQueueTime) {\n            this.logger.trace(\"PerformanceClient: currentTime is less than preQueueTime, check how time is being retrieved\");\n            return 0;\n        }\n        return currentTime - preQueueTime;\n    }\n    /**\n     * Adds queue measurement time to QueueMeasurements array for given correlation ID.\n     *\n     * @param {PerformanceEvents} eventName\n     * @param {?string} correlationId\n     * @param {?number} queueTime\n     * @param {?boolean} manuallyCompleted - indicator for manually completed queue measurements\n     * @returns\n     */\n    addQueueMeasurement(eventName, correlationId, queueTime, manuallyCompleted) {\n        if (!correlationId) {\n            this.logger.trace(`PerformanceClient.addQueueMeasurement: correlationId not provided for ${eventName}, cannot add queue measurement`);\n            return;\n        }\n        if (queueTime === 0) {\n            // Possible for there to be no queue time after calculation\n            this.logger.trace(`PerformanceClient.addQueueMeasurement: queue time provided for ${eventName} is ${queueTime}`);\n        }\n        else if (!queueTime) {\n            this.logger.trace(`PerformanceClient.addQueueMeasurement: no queue time provided for ${eventName}`);\n            return;\n        }\n        const queueMeasurement = {\n            eventName,\n            queueTime,\n            manuallyCompleted,\n        };\n        // Adds to existing correlation Id if present in queueMeasurements\n        const existingMeasurements = this.queueMeasurements.get(correlationId);\n        if (existingMeasurements) {\n            existingMeasurements.push(queueMeasurement);\n            this.queueMeasurements.set(correlationId, existingMeasurements);\n        }\n        else {\n            // Sets new correlation Id if not present in queueMeasurements\n            this.logger.trace(`PerformanceClient.addQueueMeasurement: adding correlationId ${correlationId} to queue measurements`);\n            const measurementArray = [queueMeasurement];\n            this.queueMeasurements.set(correlationId, measurementArray);\n        }\n        // Delete processed pre-queue event.\n        this.preQueueTimeByCorrelationId.delete(correlationId);\n    }\n    /**\n     * Starts measuring performance for a given operation. Returns a function that should be used to end the measurement.\n     *\n     * @param {PerformanceEvents} measureName\n     * @param {?string} [correlationId]\n     * @returns {InProgressPerformanceEvent}\n     */\n    startMeasurement(measureName, correlationId) {\n        // Generate a placeholder correlation if the request does not provide one\n        const eventCorrelationId = correlationId || this.generateId();\n        if (!correlationId) {\n            this.logger.info(`PerformanceClient: No correlation id provided for ${measureName}, generating`, eventCorrelationId);\n        }\n        this.logger.trace(`PerformanceClient: Performance measurement started for ${measureName}`, eventCorrelationId);\n        const performanceMeasurement = this.startPerformanceMeasurement(measureName, eventCorrelationId);\n        performanceMeasurement.startMeasurement();\n        const inProgressEvent = {\n            eventId: this.generateId(),\n            status: _PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEventStatus.InProgress,\n            authority: this.authority,\n            libraryName: this.libraryName,\n            libraryVersion: this.libraryVersion,\n            clientId: this.clientId,\n            name: measureName,\n            startTimeMs: Date.now(),\n            correlationId: eventCorrelationId,\n            appName: this.applicationTelemetry?.appName,\n            appVersion: this.applicationTelemetry?.appVersion,\n        };\n        // Store in progress events so they can be discarded if not ended properly\n        this.cacheEventByCorrelationId(inProgressEvent);\n        // Return the event and functions the caller can use to properly end/flush the measurement\n        return {\n            end: (event) => {\n                return this.endMeasurement({\n                    // Initial set of event properties\n                    ...inProgressEvent,\n                    // Properties set when event ends\n                    ...event,\n                }, performanceMeasurement);\n            },\n            discard: () => {\n                return this.discardMeasurements(inProgressEvent.correlationId);\n            },\n            add: (fields) => {\n                return this.addFields(fields, inProgressEvent.correlationId);\n            },\n            increment: (fields) => {\n                return this.incrementFields(fields, inProgressEvent.correlationId);\n            },\n            measurement: performanceMeasurement,\n            event: inProgressEvent,\n        };\n    }\n    /**\n     * Stops measuring the performance for an operation. Should only be called directly by PerformanceClient classes,\n     * as consumers should instead use the function returned by startMeasurement.\n     * Adds a new field named as \"[event name]DurationMs\" for sub-measurements, completes and emits an event\n     * otherwise.\n     *\n     * @param {PerformanceEvent} event\n     * @param {IPerformanceMeasurement} measurement\n     * @returns {(PerformanceEvent | null)}\n     */\n    endMeasurement(event, measurement) {\n        const rootEvent = this.eventsByCorrelationId.get(event.correlationId);\n        if (!rootEvent) {\n            this.logger.trace(`PerformanceClient: Measurement not found for ${event.eventId}`, event.correlationId);\n            return null;\n        }\n        const isRoot = event.eventId === rootEvent.eventId;\n        let queueInfo = {\n            totalQueueTime: 0,\n            totalQueueCount: 0,\n            manuallyCompletedCount: 0,\n        };\n        if (isRoot) {\n            queueInfo = this.getQueueInfo(event.correlationId);\n            this.discardCache(rootEvent.correlationId);\n        }\n        else {\n            rootEvent.incompleteSubMeasurements?.delete(event.eventId);\n        }\n        measurement?.endMeasurement();\n        const durationMs = measurement?.flushMeasurement();\n        // null indicates no measurement was taken (e.g. needed performance APIs not present)\n        if (!durationMs) {\n            this.logger.trace(\"PerformanceClient: Performance measurement not taken\", rootEvent.correlationId);\n            return null;\n        }\n        this.logger.trace(`PerformanceClient: Performance measurement ended for ${event.name}: ${durationMs} ms`, event.correlationId);\n        // Add sub-measurement attribute to root event.\n        if (!isRoot) {\n            rootEvent[event.name + \"DurationMs\"] = Math.floor(durationMs);\n            return { ...rootEvent };\n        }\n        let finalEvent = { ...rootEvent, ...event };\n        let incompleteSubsCount = 0;\n        // Incomplete sub-measurements are discarded. They are likely an instrumentation bug that should be fixed.\n        finalEvent.incompleteSubMeasurements?.forEach((subMeasurement) => {\n            this.logger.trace(`PerformanceClient: Incomplete submeasurement ${subMeasurement.name} found for ${event.name}`, finalEvent.correlationId);\n            incompleteSubsCount++;\n        });\n        finalEvent.incompleteSubMeasurements = undefined;\n        finalEvent = {\n            ...finalEvent,\n            durationMs: Math.round(durationMs),\n            queuedTimeMs: queueInfo.totalQueueTime,\n            queuedCount: queueInfo.totalQueueCount,\n            queuedManuallyCompletedCount: queueInfo.manuallyCompletedCount,\n            status: _PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEventStatus.Completed,\n            incompleteSubsCount,\n        };\n        this.truncateIntegralFields(finalEvent);\n        this.emitEvents([finalEvent], event.correlationId);\n        return finalEvent;\n    }\n    /**\n     * Saves extra information to be emitted when the measurements are flushed\n     * @param fields\n     * @param correlationId\n     */\n    addFields(fields, correlationId) {\n        this.logger.trace(\"PerformanceClient: Updating static fields\");\n        const event = this.eventsByCorrelationId.get(correlationId);\n        if (event) {\n            this.eventsByCorrelationId.set(correlationId, {\n                ...event,\n                ...fields,\n            });\n        }\n        else {\n            this.logger.trace(\"PerformanceClient: Event not found for\", correlationId);\n        }\n    }\n    /**\n     * Increment counters to be emitted when the measurements are flushed\n     * @param fields {string[]}\n     * @param correlationId {string} correlation identifier\n     */\n    incrementFields(fields, correlationId) {\n        this.logger.trace(\"PerformanceClient: Updating counters\");\n        const event = this.eventsByCorrelationId.get(correlationId);\n        if (event) {\n            for (const counter in fields) {\n                if (!event.hasOwnProperty(counter)) {\n                    event[counter] = 0;\n                }\n                else if (isNaN(Number(event[counter]))) {\n                    return;\n                }\n                event[counter] += fields[counter];\n            }\n        }\n        else {\n            this.logger.trace(\"PerformanceClient: Event not found for\", correlationId);\n        }\n    }\n    /**\n     * Upserts event into event cache.\n     * First key is the correlation id, second key is the event id.\n     * Allows for events to be grouped by correlation id,\n     * and to easily allow for properties on them to be updated.\n     *\n     * @private\n     * @param {PerformanceEvent} event\n     */\n    cacheEventByCorrelationId(event) {\n        const rootEvent = this.eventsByCorrelationId.get(event.correlationId);\n        if (rootEvent) {\n            this.logger.trace(`PerformanceClient: Performance measurement for ${event.name} added/updated`, event.correlationId);\n            rootEvent.incompleteSubMeasurements =\n                rootEvent.incompleteSubMeasurements || new Map();\n            rootEvent.incompleteSubMeasurements.set(event.eventId, {\n                name: event.name,\n                startTimeMs: event.startTimeMs,\n            });\n        }\n        else {\n            this.logger.trace(`PerformanceClient: Performance measurement for ${event.name} started`, event.correlationId);\n            this.eventsByCorrelationId.set(event.correlationId, { ...event });\n        }\n    }\n    getQueueInfo(correlationId) {\n        const queueMeasurementForCorrelationId = this.queueMeasurements.get(correlationId);\n        if (!queueMeasurementForCorrelationId) {\n            this.logger.trace(`PerformanceClient: no queue measurements found for for correlationId: ${correlationId}`);\n        }\n        let totalQueueTime = 0;\n        let totalQueueCount = 0;\n        let manuallyCompletedCount = 0;\n        queueMeasurementForCorrelationId?.forEach((measurement) => {\n            totalQueueTime += measurement.queueTime;\n            totalQueueCount++;\n            manuallyCompletedCount += measurement.manuallyCompleted ? 1 : 0;\n        });\n        return {\n            totalQueueTime,\n            totalQueueCount,\n            manuallyCompletedCount,\n        };\n    }\n    /**\n     * Removes measurements for a given correlation id.\n     *\n     * @param {string} correlationId\n     */\n    discardMeasurements(correlationId) {\n        this.logger.trace(\"PerformanceClient: Performance measurements discarded\", correlationId);\n        this.eventsByCorrelationId.delete(correlationId);\n    }\n    /**\n     * Removes cache for a given correlation id.\n     *\n     * @param {string} correlationId correlation identifier\n     */\n    discardCache(correlationId) {\n        this.discardMeasurements(correlationId);\n        this.logger.trace(\"PerformanceClient: QueueMeasurements discarded\", correlationId);\n        this.queueMeasurements.delete(correlationId);\n        this.logger.trace(\"PerformanceClient: Pre-queue times discarded\", correlationId);\n        this.preQueueTimeByCorrelationId.delete(correlationId);\n    }\n    /**\n     * Registers a callback function to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback) {\n        const callbackId = this.generateId();\n        this.callbacks.set(callbackId, callback);\n        this.logger.verbose(`PerformanceClient: Performance callback registered with id: ${callbackId}`);\n        return callbackId;\n    }\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId) {\n        const result = this.callbacks.delete(callbackId);\n        if (result) {\n            this.logger.verbose(`PerformanceClient: Performance callback ${callbackId} removed.`);\n        }\n        else {\n            this.logger.verbose(`PerformanceClient: Performance callback ${callbackId} not removed.`);\n        }\n        return result;\n    }\n    /**\n     * Emits events to all registered callbacks.\n     *\n     * @param {PerformanceEvent[]} events\n     * @param {?string} [correlationId]\n     */\n    emitEvents(events, correlationId) {\n        this.logger.verbose(\"PerformanceClient: Emitting performance events\", correlationId);\n        this.callbacks.forEach((callback, callbackId) => {\n            this.logger.trace(`PerformanceClient: Emitting event to callback ${callbackId}`, correlationId);\n            callback.apply(null, [events]);\n        });\n    }\n    /**\n     * Enforce truncation of integral fields in performance event.\n     * @param {PerformanceEvent} event performance event to update.\n     * @param {Set<string>} intFields integral fields.\n     */\n    truncateIntegralFields(event) {\n        this.intFields.forEach((key) => {\n            if (key in event && typeof event[key] === \"number\") {\n                event[key] = Math.floor(event[key]);\n            }\n        });\n    }\n}\n\n\n//# sourceMappingURL=PerformanceClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IntFields: function() { return /* binding */ IntFields; },\n/* harmony export */   PerformanceEventStatus: function() { return /* binding */ PerformanceEventStatus; },\n/* harmony export */   PerformanceEvents: function() { return /* binding */ PerformanceEvents; }\n/* harmony export */ });\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\n *\n * @export\n * @enum {number}\n */\nconst PerformanceEvents = {\n    /**\n     * acquireTokenByCode API (msal-browser and msal-node).\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\n     */\n    AcquireTokenByCode: \"acquireTokenByCode\",\n    /**\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\n     * Used to renew an access token using a refresh token against the token endpoint.\n     */\n    AcquireTokenByRefreshToken: \"acquireTokenByRefreshToken\",\n    /**\n     * acquireTokenSilent API (msal-browser and msal-node).\n     * Used to silently acquire a new access token (from the cache or the network).\n     */\n    AcquireTokenSilent: \"acquireTokenSilent\",\n    /**\n     * acquireTokenSilentAsync (msal-browser).\n     * Internal API for acquireTokenSilent.\n     */\n    AcquireTokenSilentAsync: \"acquireTokenSilentAsync\",\n    /**\n     * acquireTokenPopup (msal-browser).\n     * Used to acquire a new access token interactively through pop ups\n     */\n    AcquireTokenPopup: \"acquireTokenPopup\",\n    /**\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\n     */\n    CryptoOptsGetPublicKeyThumbprint: \"cryptoOptsGetPublicKeyThumbprint\",\n    /**\n     * signJwt API in CryptoOpts class (msal-browser).\n     * Used to signed a pop token.\n     */\n    CryptoOptsSignJwt: \"cryptoOptsSignJwt\",\n    /**\n     * acquireToken API in the SilentCacheClient class (msal-browser).\n     * Used to read access tokens from the cache.\n     */\n    SilentCacheClientAcquireToken: \"silentCacheClientAcquireToken\",\n    /**\n     * acquireToken API in the SilentIframeClient class (msal-browser).\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\n     */\n    SilentIframeClientAcquireToken: \"silentIframeClientAcquireToken\",\n    /**\n     * acquireToken API in SilentRereshClient (msal-browser).\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\n     */\n    SilentRefreshClientAcquireToken: \"silentRefreshClientAcquireToken\",\n    /**\n     * ssoSilent API (msal-browser).\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\n     */\n    SsoSilent: \"ssoSilent\",\n    /**\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\n     * Used to load authority metadata for a request.\n     */\n    StandardInteractionClientGetDiscoveredAuthority: \"standardInteractionClientGetDiscoveredAuthority\",\n    /**\n     * acquireToken APIs in msal-browser.\n     * Used to make an /authorize endpoint call with native brokering enabled.\n     */\n    FetchAccountIdWithNativeBroker: \"fetchAccountIdWithNativeBroker\",\n    /**\n     * acquireToken API in NativeInteractionClient class (msal-browser).\n     * Used to acquire a token from Native component when native brokering is enabled.\n     */\n    NativeInteractionClientAcquireToken: \"nativeInteractionClientAcquireToken\",\n    /**\n     * Time spent creating default headers for requests to token endpoint\n     */\n    BaseClientCreateTokenRequestHeaders: \"baseClientCreateTokenRequestHeaders\",\n    /**\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\n     */\n    BrokerHandhshake: \"brokerHandshake\",\n    /**\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\n     */\n    AcquireTokenByRefreshTokenInBroker: \"acquireTokenByRefreshTokenInBroker\",\n    /**\n     * Time taken for token acquisition by broker\n     */\n    AcquireTokenByBroker: \"acquireTokenByBroker\",\n    /**\n     * Time spent on the network for refresh token acquisition\n     */\n    RefreshTokenClientExecuteTokenRequest: \"refreshTokenClientExecuteTokenRequest\",\n    /**\n     * Time taken for acquiring refresh token , records RT size\n     */\n    RefreshTokenClientAcquireToken: \"refreshTokenClientAcquireToken\",\n    /**\n     * Time taken for acquiring cached refresh token\n     */\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken: \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\n    /**\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientAcquireTokenByRefreshToken: \"refreshTokenClientAcquireTokenByRefreshToken\",\n    /**\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientCreateTokenRequestBody: \"refreshTokenClientCreateTokenRequestBody\",\n    /**\n     * acquireTokenFromCache (msal-browser).\n     * Internal API for acquiring token from cache\n     */\n    AcquireTokenFromCache: \"acquireTokenFromCache\",\n    /**\n     * acquireTokenBySilentIframe (msal-browser).\n     * Internal API for acquiring token by silent Iframe\n     */\n    AcquireTokenBySilentIframe: \"acquireTokenBySilentIframe\",\n    /**\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\n     */\n    InitializeBaseRequest: \"initializeBaseRequest\",\n    /**\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\n     */\n    InitializeSilentRequest: \"initializeSilentRequest\",\n    InitializeClientApplication: \"initializeClientApplication\",\n    /**\n     * Helper function in SilentIframeClient class (msal-browser).\n     */\n    SilentIframeClientTokenHelper: \"silentIframeClientTokenHelper\",\n    /**\n     * SilentHandler\n     */\n    SilentHandlerInitiateAuthRequest: \"silentHandlerInitiateAuthRequest\",\n    SilentHandlerMonitorIframeForHash: \"silentHandlerMonitorIframeForHash\",\n    SilentHandlerLoadFrame: \"silentHandlerLoadFrame\",\n    /**\n     * Helper functions in StandardInteractionClient class (msal-browser)\n     */\n    StandardInteractionClientCreateAuthCodeClient: \"standardInteractionClientCreateAuthCodeClient\",\n    StandardInteractionClientGetClientConfiguration: \"standardInteractionClientGetClientConfiguration\",\n    StandardInteractionClientInitializeAuthorizationRequest: \"standardInteractionClientInitializeAuthorizationRequest\",\n    StandardInteractionClientInitializeAuthorizationCodeRequest: \"standardInteractionClientInitializeAuthorizationCodeRequest\",\n    /**\n     * getAuthCodeUrl API (msal-browser and msal-node).\n     */\n    GetAuthCodeUrl: \"getAuthCodeUrl\",\n    /**\n     * Functions from InteractionHandler (msal-browser)\n     */\n    HandleCodeResponseFromServer: \"handleCodeResponseFromServer\",\n    HandleCodeResponseFromHash: \"handleCodeResponseFromHash\",\n    UpdateTokenEndpointAuthority: \"updateTokenEndpointAuthority\",\n    /**\n     * APIs in Authorization Code Client (msal-common)\n     */\n    AuthClientAcquireToken: \"authClientAcquireToken\",\n    AuthClientExecuteTokenRequest: \"authClientExecuteTokenRequest\",\n    AuthClientCreateTokenRequestBody: \"authClientCreateTokenRequestBody\",\n    AuthClientCreateQueryString: \"authClientCreateQueryString\",\n    /**\n     * Generate functions in PopTokenGenerator (msal-common)\n     */\n    PopTokenGenerateCnf: \"popTokenGenerateCnf\",\n    PopTokenGenerateKid: \"popTokenGenerateKid\",\n    /**\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\n     */\n    HandleServerTokenResponse: \"handleServerTokenResponse\",\n    /**\n     * Authority functions\n     */\n    AuthorityFactoryCreateDiscoveredInstance: \"authorityFactoryCreateDiscoveredInstance\",\n    AuthorityResolveEndpointsAsync: \"authorityResolveEndpointsAsync\",\n    AuthorityGetCloudDiscoveryMetadataFromNetwork: \"authorityGetCloudDiscoveryMetadataFromNetwork\",\n    AuthorityUpdateCloudDiscoveryMetadata: \"authorityUpdateCloudDiscoveryMetadata\",\n    AuthorityGetEndpointMetadataFromNetwork: \"authorityGetEndpointMetadataFromNetwork\",\n    AuthorityUpdateEndpointMetadata: \"authorityUpdateEndpointMetadata\",\n    AuthorityUpdateMetadataWithRegionalInformation: \"authorityUpdateMetadataWithRegionalInformation\",\n    /**\n     * Region Discovery functions\n     */\n    RegionDiscoveryDetectRegion: \"regionDiscoveryDetectRegion\",\n    RegionDiscoveryGetRegionFromIMDS: \"regionDiscoveryGetRegionFromIMDS\",\n    RegionDiscoveryGetCurrentVersion: \"regionDiscoveryGetCurrentVersion\",\n    AcquireTokenByCodeAsync: \"acquireTokenByCodeAsync\",\n    GetEndpointMetadataFromNetwork: \"getEndpointMetadataFromNetwork\",\n    GetCloudDiscoveryMetadataFromNetworkMeasurement: \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\n    HandleRedirectPromiseMeasurement: \"handleRedirectPromiseMeasurement\",\n    UpdateCloudDiscoveryMetadataMeasurement: \"updateCloudDiscoveryMetadataMeasurement\",\n    UsernamePasswordClientAcquireToken: \"usernamePasswordClientAcquireToken\",\n    NativeMessageHandlerHandshake: \"nativeMessageHandlerHandshake\",\n    NativeGenerateAuthResult: \"nativeGenerateAuthResult\",\n};\n/**\n * State of the performance event.\n *\n * @export\n * @enum {number}\n */\nconst PerformanceEventStatus = {\n    NotStarted: 0,\n    InProgress: 1,\n    Completed: 2,\n};\nconst IntFields = new Set([\n    \"accessTokenSize\",\n    \"durationMs\",\n    \"idTokenSize\",\n    \"matsSilentStatus\",\n    \"matsHttpStatus\",\n    \"refreshTokenSize\",\n    \"queuedTimeMs\",\n    \"startTimeMs\",\n    \"status\",\n]);\n\n\n//# sourceMappingURL=PerformanceEvent.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StubPerformanceClient: function() { return /* binding */ StubPerformanceClient; },\n/* harmony export */   StubPerformanceMeasurement: function() { return /* binding */ StubPerformanceMeasurement; }\n/* harmony export */ });\n/* harmony import */ var _PerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PerformanceClient.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceClient.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass StubPerformanceMeasurement {\n    startMeasurement() {\n        return;\n    }\n    endMeasurement() {\n        return;\n    }\n    flushMeasurement() {\n        return null;\n    }\n}\nclass StubPerformanceClient extends _PerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceClient {\n    generateId() {\n        return \"callback-id\";\n    }\n    startPerformanceMeasurement() {\n        return new StubPerformanceMeasurement();\n    }\n    calculateQueuedTime() {\n        return 0;\n    }\n    addQueueMeasurement() {\n        return;\n    }\n    setPreQueueTime() {\n        return;\n    }\n    endMeasurement() {\n        return null;\n    }\n    discardMeasurements() {\n        return;\n    }\n    removePerformanceCallback() {\n        return true;\n    }\n    addPerformanceCallback() {\n        return \"\";\n    }\n    emitEvents() {\n        return;\n    }\n    addFields() {\n        return;\n    }\n    incrementFields() {\n        return;\n    }\n    cacheEventByCorrelationId() {\n        return;\n    }\n}\n\n\n//# sourceMappingURL=StubPerformanceClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdGVsZW1ldHJ5L3BlcmZvcm1hbmNlL1N0dWJQZXJmb3JtYW5jZUNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUMrQzs7QUFFNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLHFFQUFpQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNkQ7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L3RlbGVtZXRyeS9wZXJmb3JtYW5jZS9TdHViUGVyZm9ybWFuY2VDbGllbnQubWpzP2EzYzkiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IFBlcmZvcm1hbmNlQ2xpZW50IH0gZnJvbSAnLi9QZXJmb3JtYW5jZUNsaWVudC5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIFN0dWJQZXJmb3JtYW5jZU1lYXN1cmVtZW50IHtcbiAgICBzdGFydE1lYXN1cmVtZW50KCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGVuZE1lYXN1cmVtZW50KCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGZsdXNoTWVhc3VyZW1lbnQoKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbmNsYXNzIFN0dWJQZXJmb3JtYW5jZUNsaWVudCBleHRlbmRzIFBlcmZvcm1hbmNlQ2xpZW50IHtcbiAgICBnZW5lcmF0ZUlkKCkge1xuICAgICAgICByZXR1cm4gXCJjYWxsYmFjay1pZFwiO1xuICAgIH1cbiAgICBzdGFydFBlcmZvcm1hbmNlTWVhc3VyZW1lbnQoKSB7XG4gICAgICAgIHJldHVybiBuZXcgU3R1YlBlcmZvcm1hbmNlTWVhc3VyZW1lbnQoKTtcbiAgICB9XG4gICAgY2FsY3VsYXRlUXVldWVkVGltZSgpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIGFkZFF1ZXVlTWVhc3VyZW1lbnQoKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgc2V0UHJlUXVldWVUaW1lKCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGVuZE1lYXN1cmVtZW50KCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgZGlzY2FyZE1lYXN1cmVtZW50cygpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICByZW1vdmVQZXJmb3JtYW5jZUNhbGxiYWNrKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgYWRkUGVyZm9ybWFuY2VDYWxsYmFjaygpIHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxuICAgIGVtaXRFdmVudHMoKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgYWRkRmllbGRzKCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGluY3JlbWVudEZpZWxkcygpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjYWNoZUV2ZW50QnlDb3JyZWxhdGlvbklkKCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxufVxuXG5leHBvcnQgeyBTdHViUGVyZm9ybWFuY2VDbGllbnQsIFN0dWJQZXJmb3JtYW5jZU1lYXN1cmVtZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdHViUGVyZm9ybWFuY2VDbGllbnQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerTelemetryManager: function() { return /* binding */ ServerTelemetryManager; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _cache_entities_ServerTelemetryEntity_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../cache/entities/ServerTelemetryEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/ServerTelemetryEntity.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass ServerTelemetryManager {\n    constructor(telemetryRequest, cacheManager) {\n        this.cacheOutcome = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheOutcome.NO_CACHE_HIT;\n        this.cacheManager = cacheManager;\n        this.apiId = telemetryRequest.apiId;\n        this.correlationId = telemetryRequest.correlationId;\n        this.wrapperSKU = telemetryRequest.wrapperSKU || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        this.wrapperVer = telemetryRequest.wrapperVer || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        this.telemetryCacheKey =\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CACHE_KEY +\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR +\n                telemetryRequest.clientId;\n    }\n    /**\n     * API to add MSER Telemetry to request\n     */\n    generateCurrentRequestHeaderValue() {\n        const request = `${this.apiId}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\n        const platformFields = [this.wrapperSKU, this.wrapperVer].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\n        const requestWithRegionDiscoveryFields = [\n            request,\n            regionDiscoveryFields,\n        ].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        return [\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            requestWithRegionDiscoveryFields,\n            platformFields,\n        ].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n    /**\n     * API to add MSER Telemetry for the last failed request\n     */\n    generateLastRequestHeaderValue() {\n        const lastRequests = this.getLastRequests();\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const failedRequests = lastRequests.failedRequests\n            .slice(0, 2 * maxErrors)\n            .join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errors = lastRequests.errors\n            .slice(0, maxErrors)\n            .join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errorCount = lastRequests.errors.length;\n        // Indicate whether this header contains all data or partial data\n        const overflow = maxErrors < errorCount\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE\n            : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\n        const platformFields = [errorCount, overflow].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        return [\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            lastRequests.cacheHits,\n            failedRequests,\n            errors,\n            platformFields,\n        ].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n    /**\n     * API to cache token failures for MSER data capture\n     * @param error\n     */\n    cacheFailedRequest(error) {\n        const lastRequests = this.getLastRequests();\n        if (lastRequests.errors.length >=\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS) {\n            // Remove a cached error to make room, first in first out\n            lastRequests.failedRequests.shift(); // apiId\n            lastRequests.failedRequests.shift(); // correlationId\n            lastRequests.errors.shift();\n        }\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\n        if (error instanceof Error && !!error && error.toString()) {\n            if (error instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\n                if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringUtils.isEmpty(error.subError)) {\n                    lastRequests.errors.push(error.subError);\n                }\n                else if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringUtils.isEmpty(error.errorCode)) {\n                    lastRequests.errors.push(error.errorCode);\n                }\n                else {\n                    lastRequests.errors.push(error.toString());\n                }\n            }\n            else {\n                lastRequests.errors.push(error.toString());\n            }\n        }\n        else {\n            lastRequests.errors.push(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\n        }\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n        return;\n    }\n    /**\n     * Update server telemetry cache entry by incrementing cache hit counter\n     */\n    incrementCacheHits() {\n        const lastRequests = this.getLastRequests();\n        lastRequests.cacheHits += 1;\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n        return lastRequests.cacheHits;\n    }\n    /**\n     * Get the server telemetry entity from cache or initialize a new one\n     */\n    getLastRequests() {\n        const initialValue = new _cache_entities_ServerTelemetryEntity_mjs__WEBPACK_IMPORTED_MODULE_3__.ServerTelemetryEntity();\n        const lastRequests = this.cacheManager.getServerTelemetry(this.telemetryCacheKey);\n        return lastRequests || initialValue;\n    }\n    /**\n     * Remove server telemetry cache entry\n     */\n    clearTelemetryCache() {\n        const lastRequests = this.getLastRequests();\n        const numErrorsFlushed = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const errorCount = lastRequests.errors.length;\n        if (numErrorsFlushed === errorCount) {\n            // All errors were sent on last request, clear Telemetry cache\n            this.cacheManager.removeItem(this.telemetryCacheKey);\n        }\n        else {\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\n            const serverTelemEntity = new _cache_entities_ServerTelemetryEntity_mjs__WEBPACK_IMPORTED_MODULE_3__.ServerTelemetryEntity();\n            serverTelemEntity.failedRequests =\n                lastRequests.failedRequests.slice(numErrorsFlushed * 2); // failedRequests contains 2 items for each error\n            serverTelemEntity.errors =\n                lastRequests.errors.slice(numErrorsFlushed);\n            this.cacheManager.setServerTelemetry(this.telemetryCacheKey, serverTelemEntity);\n        }\n    }\n    /**\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\n     * @param serverTelemetryEntity\n     */\n    static maxErrorsToSend(serverTelemetryEntity) {\n        let i;\n        let maxErrors = 0;\n        let dataSize = 0;\n        const errorCount = serverTelemetryEntity.errors.length;\n        for (i = 0; i < errorCount; i++) {\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\n            const apiId = serverTelemetryEntity.failedRequests[2 * i] ||\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n            const correlationId = serverTelemetryEntity.failedRequests[2 * i + 1] ||\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n            const errorCode = serverTelemetryEntity.errors[i] || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\n            dataSize +=\n                apiId.toString().length +\n                    correlationId.toString().length +\n                    errorCode.length +\n                    3;\n            if (dataSize < _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\n                // Adding this entry to the header would still keep header size below the limit\n                maxErrors += 1;\n            }\n            else {\n                break;\n            }\n        }\n        return maxErrors;\n    }\n    /**\n     * Get the region discovery fields\n     *\n     * @returns string\n     */\n    getRegionDiscoveryFields() {\n        const regionDiscoveryFields = [];\n        regionDiscoveryFields.push(this.regionUsed || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionSource || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionOutcome || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING);\n        return regionDiscoveryFields.join(\",\");\n    }\n    /**\n     * Update the region discovery metadata\n     *\n     * @param regionDiscoveryMetadata\n     * @returns void\n     */\n    updateRegionDiscoveryMetadata(regionDiscoveryMetadata) {\n        this.regionUsed = regionDiscoveryMetadata.region_used;\n        this.regionSource = regionDiscoveryMetadata.region_source;\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\n    }\n    /**\n     * Set cache outcome\n     */\n    setCacheOutcome(cacheOutcome) {\n        this.cacheOutcome = cacheOutcome;\n    }\n}\n\n\n//# sourceMappingURL=ServerTelemetryManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/url/UrlString.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/url/UrlString.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UrlString: function() { return /* binding */ UrlString; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Url object class which can perform various transformations on url strings.\n */\nclass UrlString {\n    get urlString() {\n        return this._urlString;\n    }\n    constructor(url) {\n        this._urlString = url;\n        if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(this._urlString)) {\n            // Throws error if url is empty\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientConfigurationError.createUrlEmptyError();\n        }\n        if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(this.getHash())) {\n            this._urlString = UrlString.canonicalizeUri(url);\n        }\n    }\n    /**\n     * Ensure urls are lower case and end with a / character.\n     * @param url\n     */\n    static canonicalizeUri(url) {\n        if (url) {\n            let lowerCaseUrl = url.toLowerCase();\n            if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.endsWith(lowerCaseUrl, \"?\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\n            }\n            else if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\n            }\n            if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.endsWith(lowerCaseUrl, \"/\")) {\n                lowerCaseUrl += \"/\";\n            }\n            return lowerCaseUrl;\n        }\n        return url;\n    }\n    /**\n     * Throws if urlString passed is not a valid authority URI string.\n     */\n    validateAsUri() {\n        // Attempts to parse url for uri components\n        let components;\n        try {\n            components = this.getUrlComponents();\n        }\n        catch (e) {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientConfigurationError.createUrlParseError(e);\n        }\n        // Throw error if URI or path segments are not parseable.\n        if (!components.HostNameAndPort || !components.PathSegments) {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientConfigurationError.createUrlParseError(`Given url string: ${this.urlString}`);\n        }\n        // Throw error if uri is insecure.\n        if (!components.Protocol ||\n            components.Protocol.toLowerCase() !== \"https:\") {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientConfigurationError.createInsecureAuthorityUriError(this.urlString);\n        }\n    }\n    /**\n     * Given a url and a query string return the url with provided query string appended\n     * @param url\n     * @param queryString\n     */\n    static appendQueryString(url, queryString) {\n        if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(queryString)) {\n            return url;\n        }\n        return url.indexOf(\"?\") < 0\n            ? `${url}?${queryString}`\n            : `${url}&${queryString}`;\n    }\n    /**\n     * Returns a url with the hash removed\n     * @param url\n     */\n    static removeHashFromUrl(url) {\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\n    }\n    /**\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\n     * @param href The url\n     * @param tenantId The tenant id to replace\n     */\n    replaceTenantPath(tenantId) {\n        const urlObject = this.getUrlComponents();\n        const pathArray = urlObject.PathSegments;\n        if (tenantId &&\n            pathArray.length !== 0 &&\n            (pathArray[0] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.AADAuthorityConstants.COMMON ||\n                pathArray[0] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.AADAuthorityConstants.ORGANIZATIONS)) {\n            pathArray[0] = tenantId;\n        }\n        return UrlString.constructAuthorityUriFromObject(urlObject);\n    }\n    /**\n     * Returns the anchor part(#) of the URL\n     */\n    getHash() {\n        return UrlString.parseHash(this.urlString);\n    }\n    /**\n     * Parses out the components from a url string.\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\n     */\n    getUrlComponents() {\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n        const regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\n        // If url string does not match regEx, we throw an error\n        const match = this.urlString.match(regEx);\n        if (!match) {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientConfigurationError.createUrlParseError(`Given url string: ${this.urlString}`);\n        }\n        // Url component object\n        const urlComponents = {\n            Protocol: match[1],\n            HostNameAndPort: match[4],\n            AbsolutePath: match[5],\n            QueryString: match[7],\n        };\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\n        urlComponents.PathSegments = pathSegments;\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(urlComponents.QueryString) &&\n            urlComponents.QueryString.endsWith(\"/\")) {\n            urlComponents.QueryString = urlComponents.QueryString.substring(0, urlComponents.QueryString.length - 1);\n        }\n        return urlComponents;\n    }\n    static getDomainFromUrl(url) {\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\n        const match = url.match(regEx);\n        if (!match) {\n            throw _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientConfigurationError.createUrlParseError(`Given url string: ${url}`);\n        }\n        return match[2];\n    }\n    static getAbsoluteUrl(relativeUrl, baseUrl) {\n        if (relativeUrl[0] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.FORWARD_SLASH) {\n            const url = new UrlString(baseUrl);\n            const baseComponents = url.getUrlComponents();\n            return (baseComponents.Protocol +\n                \"//\" +\n                baseComponents.HostNameAndPort +\n                relativeUrl);\n        }\n        return relativeUrl;\n    }\n    /**\n     * Parses hash string from given string. Returns empty string if no hash symbol is found.\n     * @param hashString\n     */\n    static parseHash(hashString) {\n        const hashIndex1 = hashString.indexOf(\"#\");\n        const hashIndex2 = hashString.indexOf(\"#/\");\n        if (hashIndex2 > -1) {\n            return hashString.substring(hashIndex2 + 2);\n        }\n        else if (hashIndex1 > -1) {\n            return hashString.substring(hashIndex1 + 1);\n        }\n        return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n    }\n    /**\n     * Parses query string from given string. Returns empty string if no query symbol is found.\n     * @param queryString\n     */\n    static parseQueryString(queryString) {\n        const queryIndex1 = queryString.indexOf(\"?\");\n        const queryIndex2 = queryString.indexOf(\"/?\");\n        if (queryIndex2 > -1) {\n            return queryString.substring(queryIndex2 + 2);\n        }\n        else if (queryIndex1 > -1) {\n            return queryString.substring(queryIndex1 + 1);\n        }\n        return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n    }\n    /**\n     * Parses query server response string from given string.\n     * Extract hash between '?code=' and '#' if trailing '# is present.\n     * Returns empty string if no query symbol is found.\n     * @param queryString\n     */\n    static parseQueryServerResponse(queryString) {\n        const queryIndex1 = queryString.indexOf(\"?code\");\n        const queryIndex2 = queryString.indexOf(\"/?code\");\n        const hashIndex = queryString.indexOf(\"#\");\n        if (queryIndex2 > -1 && hashIndex > -1) {\n            return queryString.substring(queryIndex2 + 2, hashIndex);\n        }\n        else if (queryIndex2 > -1) {\n            return queryString.substring(queryIndex2 + 2);\n        }\n        else if (queryIndex1 > -1 && hashIndex > -1) {\n            return queryString.substring(queryIndex1 + 1, hashIndex);\n        }\n        else if (queryIndex1 > -1) {\n            return queryString.substring(queryIndex1 + 1);\n        }\n        return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n    }\n    static constructAuthorityUriFromObject(urlObject) {\n        return new UrlString(urlObject.Protocol +\n            \"//\" +\n            urlObject.HostNameAndPort +\n            \"/\" +\n            urlObject.PathSegments.join(\"/\"));\n    }\n    /**\n     * Returns URL hash as server auth code response object.\n     */\n    static getDeserializedHash(hash) {\n        // Check if given hash is empty\n        if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(hash)) {\n            return {};\n        }\n        // Strip the # symbol if present\n        const parsedHash = UrlString.parseHash(hash);\n        // If # symbol was not present, above will return empty string, so give original hash value\n        const deserializedHash = _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.queryStringToObject(_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(parsedHash) ? hash : parsedHash);\n        // Check if deserialization didn't work\n        if (!deserializedHash) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError.createHashNotDeserializedError(JSON.stringify(deserializedHash));\n        }\n        return deserializedHash;\n    }\n    /**\n     * Returns URL query string as server auth code response object.\n     */\n    static getDeserializedQueryString(query) {\n        // Check if given query is empty\n        if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(query)) {\n            return {};\n        }\n        // Strip the ? symbol if present\n        const parsedQueryString = UrlString.parseQueryString(query);\n        // If ? symbol was not present, above will return empty string, so give original query value\n        const deserializedQueryString = _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.queryStringToObject(_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(parsedQueryString)\n            ? query\n            : parsedQueryString);\n        // Check if deserialization didn't work\n        if (!deserializedQueryString) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError.createHashNotDeserializedError(JSON.stringify(deserializedQueryString));\n        }\n        return deserializedQueryString;\n    }\n    /**\n     * Returns either deserialized query string or deserialized hash, depending on the serverResponseType\n     * as a server auth code response object.\n     */\n    static getDeserializedCodeResponse(serverResponseType, hashFragment) {\n        const hashUrlString = new UrlString(hashFragment);\n        let serverParams;\n        if (serverResponseType === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ServerResponseType.QUERY) {\n            serverParams = UrlString.getDeserializedQueryString(hashFragment);\n        }\n        else {\n            serverParams = UrlString.getDeserializedHash(hashUrlString.getHash());\n        }\n        return serverParams;\n    }\n    /**\n     * Check if the hash of the URL string contains known properties\n     */\n    static hashContainsKnownProperties(hash) {\n        if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(hash) || hash.indexOf(\"=\") < 0) {\n            // Hash doesn't contain key/value pairs\n            return false;\n        }\n        const parameters = UrlString.getDeserializedHash(hash);\n        return !!(parameters.code ||\n            parameters.error_description ||\n            parameters.error ||\n            parameters.state);\n    }\n}\n\n\n//# sourceMappingURL=UrlString.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/url/UrlString.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/utils/Constants.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/Constants.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AADAuthorityConstants: function() { return /* binding */ AADAuthorityConstants; },\n/* harmony export */   AADServerParamKeys: function() { return /* binding */ AADServerParamKeys; },\n/* harmony export */   APP_METADATA: function() { return /* binding */ APP_METADATA; },\n/* harmony export */   AUTHORITY_METADATA_CONSTANTS: function() { return /* binding */ AUTHORITY_METADATA_CONSTANTS; },\n/* harmony export */   AuthenticationScheme: function() { return /* binding */ AuthenticationScheme; },\n/* harmony export */   AuthorityMetadataSource: function() { return /* binding */ AuthorityMetadataSource; },\n/* harmony export */   CLIENT_INFO: function() { return /* binding */ CLIENT_INFO; },\n/* harmony export */   CacheAccountType: function() { return /* binding */ CacheAccountType; },\n/* harmony export */   CacheOutcome: function() { return /* binding */ CacheOutcome; },\n/* harmony export */   CacheType: function() { return /* binding */ CacheType; },\n/* harmony export */   ClaimsRequestKeys: function() { return /* binding */ ClaimsRequestKeys; },\n/* harmony export */   CodeChallengeMethodValues: function() { return /* binding */ CodeChallengeMethodValues; },\n/* harmony export */   Constants: function() { return /* binding */ Constants; },\n/* harmony export */   CredentialType: function() { return /* binding */ CredentialType; },\n/* harmony export */   Errors: function() { return /* binding */ Errors; },\n/* harmony export */   GrantType: function() { return /* binding */ GrantType; },\n/* harmony export */   HeaderNames: function() { return /* binding */ HeaderNames; },\n/* harmony export */   JsonTypes: function() { return /* binding */ JsonTypes; },\n/* harmony export */   OIDC_DEFAULT_SCOPES: function() { return /* binding */ OIDC_DEFAULT_SCOPES; },\n/* harmony export */   OIDC_SCOPES: function() { return /* binding */ OIDC_SCOPES; },\n/* harmony export */   ONE_DAY_IN_MS: function() { return /* binding */ ONE_DAY_IN_MS; },\n/* harmony export */   PasswordGrantConstants: function() { return /* binding */ PasswordGrantConstants; },\n/* harmony export */   PersistentCacheKeys: function() { return /* binding */ PersistentCacheKeys; },\n/* harmony export */   PromptValue: function() { return /* binding */ PromptValue; },\n/* harmony export */   RegionDiscoveryOutcomes: function() { return /* binding */ RegionDiscoveryOutcomes; },\n/* harmony export */   RegionDiscoverySources: function() { return /* binding */ RegionDiscoverySources; },\n/* harmony export */   ResponseCodes: function() { return /* binding */ ResponseCodes; },\n/* harmony export */   ResponseMode: function() { return /* binding */ ResponseMode; },\n/* harmony export */   SERVER_TELEM_CONSTANTS: function() { return /* binding */ SERVER_TELEM_CONSTANTS; },\n/* harmony export */   SSOTypes: function() { return /* binding */ SSOTypes; },\n/* harmony export */   Separators: function() { return /* binding */ Separators; },\n/* harmony export */   ServerResponseType: function() { return /* binding */ ServerResponseType; },\n/* harmony export */   THE_FAMILY_ID: function() { return /* binding */ THE_FAMILY_ID; },\n/* harmony export */   ThrottlingConstants: function() { return /* binding */ ThrottlingConstants; }\n/* harmony export */ });\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst Constants = {\n    LIBRARY_NAME: \"MSAL.JS\",\n    SKU: \"msal.js.common\",\n    // Prefix for all library cache entries\n    CACHE_PREFIX: \"msal\",\n    // default authority\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n    DEFAULT_COMMON_TENANT: \"common\",\n    // ADFS String\n    ADFS: \"adfs\",\n    DSTS: \"dstsv2\",\n    // Default AAD Instance Discovery Endpoint\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n    // CIAM URL\n    CIAM_AUTH_URL: \".ciamlogin.com\",\n    AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\n    // Resource delimiter - used for certain cache entries\n    RESOURCE_DELIM: \"|\",\n    // Placeholder for non-existent account ids/objects\n    NO_ACCOUNT: \"NO_ACCOUNT\",\n    // Claims\n    CLAIMS: \"claims\",\n    // Consumer UTID\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n    // Default scopes\n    OPENID_SCOPE: \"openid\",\n    PROFILE_SCOPE: \"profile\",\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\n    EMAIL_SCOPE: \"email\",\n    // Default response type for authorization code flow\n    CODE_RESPONSE_TYPE: \"code\",\n    CODE_GRANT_TYPE: \"authorization_code\",\n    RT_GRANT_TYPE: \"refresh_token\",\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n    AUTHORIZATION_PENDING: \"authorization_pending\",\n    NOT_DEFINED: \"not_defined\",\n    EMPTY_STRING: \"\",\n    NOT_APPLICABLE: \"N/A\",\n    FORWARD_SLASH: \"/\",\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\n    IMDS_VERSION: \"2020-06-01\",\n    IMDS_TIMEOUT: 2000,\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\n    REGIONAL_AUTH_NON_MSI_QUERY_STRING: \"allowestsrnonmsi=true\",\n    KNOWN_PUBLIC_CLOUDS: [\n        \"login.microsoftonline.com\",\n        \"login.windows.net\",\n        \"login.microsoft.com\",\n        \"sts.windows.net\",\n    ],\n    TOKEN_RESPONSE_TYPE: \"token\",\n    ID_TOKEN_RESPONSE_TYPE: \"id_token\",\n    SHR_NONCE_VALIDITY: 240,\n    INVALID_INSTANCE: \"invalid_instance\",\n};\nconst OIDC_DEFAULT_SCOPES = [\n    Constants.OPENID_SCOPE,\n    Constants.PROFILE_SCOPE,\n    Constants.OFFLINE_ACCESS_SCOPE,\n];\nconst OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, Constants.EMAIL_SCOPE];\n/**\n * Request header names\n */\nconst HeaderNames = {\n    CONTENT_TYPE: \"Content-Type\",\n    RETRY_AFTER: \"Retry-After\",\n    CCS_HEADER: \"X-AnchorMailbox\",\n    WWWAuthenticate: \"WWW-Authenticate\",\n    AuthenticationInfo: \"Authentication-Info\",\n    X_MS_REQUEST_ID: \"x-ms-request-id\",\n    X_MS_HTTP_VERSION: \"x-ms-httpver\",\n};\n/**\n * Persistent cache keys MSAL which stay while user is logged in.\n */\nconst PersistentCacheKeys = {\n    ID_TOKEN: \"idtoken\",\n    CLIENT_INFO: \"client.info\",\n    ADAL_ID_TOKEN: \"adal.idtoken\",\n    ERROR: \"error\",\n    ERROR_DESC: \"error.description\",\n    ACTIVE_ACCOUNT: \"active-account\",\n    ACTIVE_ACCOUNT_FILTERS: \"active-account-filters\", // new cache entry for active_account for a more robust version for browser\n};\n/**\n * String constants related to AAD Authority\n */\nconst AADAuthorityConstants = {\n    COMMON: \"common\",\n    ORGANIZATIONS: \"organizations\",\n    CONSUMERS: \"consumers\",\n};\n/**\n * Keys in the hashParams sent by AAD Server\n */\nconst AADServerParamKeys = {\n    CLIENT_ID: \"client_id\",\n    REDIRECT_URI: \"redirect_uri\",\n    RESPONSE_TYPE: \"response_type\",\n    RESPONSE_MODE: \"response_mode\",\n    GRANT_TYPE: \"grant_type\",\n    CLAIMS: \"claims\",\n    SCOPE: \"scope\",\n    ERROR: \"error\",\n    ERROR_DESCRIPTION: \"error_description\",\n    ACCESS_TOKEN: \"access_token\",\n    ID_TOKEN: \"id_token\",\n    REFRESH_TOKEN: \"refresh_token\",\n    EXPIRES_IN: \"expires_in\",\n    STATE: \"state\",\n    NONCE: \"nonce\",\n    PROMPT: \"prompt\",\n    SESSION_STATE: \"session_state\",\n    CLIENT_INFO: \"client_info\",\n    CODE: \"code\",\n    CODE_CHALLENGE: \"code_challenge\",\n    CODE_CHALLENGE_METHOD: \"code_challenge_method\",\n    CODE_VERIFIER: \"code_verifier\",\n    CLIENT_REQUEST_ID: \"client-request-id\",\n    X_CLIENT_SKU: \"x-client-SKU\",\n    X_CLIENT_VER: \"x-client-VER\",\n    X_CLIENT_OS: \"x-client-OS\",\n    X_CLIENT_CPU: \"x-client-CPU\",\n    X_CLIENT_CURR_TELEM: \"x-client-current-telemetry\",\n    X_CLIENT_LAST_TELEM: \"x-client-last-telemetry\",\n    X_MS_LIB_CAPABILITY: \"x-ms-lib-capability\",\n    X_APP_NAME: \"x-app-name\",\n    X_APP_VER: \"x-app-ver\",\n    POST_LOGOUT_URI: \"post_logout_redirect_uri\",\n    ID_TOKEN_HINT: \"id_token_hint\",\n    DEVICE_CODE: \"device_code\",\n    CLIENT_SECRET: \"client_secret\",\n    CLIENT_ASSERTION: \"client_assertion\",\n    CLIENT_ASSERTION_TYPE: \"client_assertion_type\",\n    TOKEN_TYPE: \"token_type\",\n    REQ_CNF: \"req_cnf\",\n    OBO_ASSERTION: \"assertion\",\n    REQUESTED_TOKEN_USE: \"requested_token_use\",\n    ON_BEHALF_OF: \"on_behalf_of\",\n    FOCI: \"foci\",\n    CCS_HEADER: \"X-AnchorMailbox\",\n    RETURN_SPA_CODE: \"return_spa_code\",\n    NATIVE_BROKER: \"nativebroker\",\n    LOGOUT_HINT: \"logout_hint\",\n};\n/**\n * Claims request keys\n */\nconst ClaimsRequestKeys = {\n    ACCESS_TOKEN: \"access_token\",\n    XMS_CC: \"xms_cc\",\n};\n/**\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\n */\nconst PromptValue = {\n    LOGIN: \"login\",\n    SELECT_ACCOUNT: \"select_account\",\n    CONSENT: \"consent\",\n    NONE: \"none\",\n    CREATE: \"create\",\n    NO_SESSION: \"no_session\",\n};\n/**\n * SSO Types - generated to populate hints\n */\nconst SSOTypes = {\n    ACCOUNT: \"account\",\n    SID: \"sid\",\n    LOGIN_HINT: \"login_hint\",\n    ID_TOKEN: \"id_token\",\n    DOMAIN_HINT: \"domain_hint\",\n    ORGANIZATIONS: \"organizations\",\n    CONSUMERS: \"consumers\",\n    ACCOUNT_ID: \"accountIdentifier\",\n    HOMEACCOUNT_ID: \"homeAccountIdentifier\",\n};\n/**\n * allowed values for codeVerifier\n */\nconst CodeChallengeMethodValues = {\n    PLAIN: \"plain\",\n    S256: \"S256\",\n};\n/**\n * allowed values for server response type\n */\nconst ServerResponseType = {\n    QUERY: \"query\",\n    FRAGMENT: \"fragment\",\n};\n/**\n * allowed values for response_mode\n */\nconst ResponseMode = {\n    ...ServerResponseType,\n    FORM_POST: \"form_post\",\n};\n/**\n * allowed grant_type\n */\nconst GrantType = {\n    IMPLICIT_GRANT: \"implicit\",\n    AUTHORIZATION_CODE_GRANT: \"authorization_code\",\n    CLIENT_CREDENTIALS_GRANT: \"client_credentials\",\n    RESOURCE_OWNER_PASSWORD_GRANT: \"password\",\n    REFRESH_TOKEN_GRANT: \"refresh_token\",\n    DEVICE_CODE_GRANT: \"device_code\",\n    JWT_BEARER: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n};\n/**\n * Account types in Cache\n */\nconst CacheAccountType = {\n    MSSTS_ACCOUNT_TYPE: \"MSSTS\",\n    ADFS_ACCOUNT_TYPE: \"ADFS\",\n    MSAV1_ACCOUNT_TYPE: \"MSA\",\n    GENERIC_ACCOUNT_TYPE: \"Generic\", // NTLM, Kerberos, FBA, Basic etc\n};\n/**\n * Separators used in cache\n */\nconst Separators = {\n    CACHE_KEY_SEPARATOR: \"-\",\n    CLIENT_INFO_SEPARATOR: \".\",\n};\n/**\n * Credential Type stored in the cache\n */\nconst CredentialType = {\n    ID_TOKEN: \"IdToken\",\n    ACCESS_TOKEN: \"AccessToken\",\n    ACCESS_TOKEN_WITH_AUTH_SCHEME: \"AccessToken_With_AuthScheme\",\n    REFRESH_TOKEN: \"RefreshToken\",\n};\n/**\n * Combine all cache types\n */\nconst CacheType = {\n    ADFS: 1001,\n    MSA: 1002,\n    MSSTS: 1003,\n    GENERIC: 1004,\n    ACCESS_TOKEN: 2001,\n    REFRESH_TOKEN: 2002,\n    ID_TOKEN: 2003,\n    APP_METADATA: 3001,\n    UNDEFINED: 9999,\n};\n/**\n * More Cache related constants\n */\nconst APP_METADATA = \"appmetadata\";\nconst CLIENT_INFO = \"client_info\";\nconst THE_FAMILY_ID = \"1\";\nconst AUTHORITY_METADATA_CONSTANTS = {\n    CACHE_KEY: \"authority-metadata\",\n    REFRESH_TIME_SECONDS: 3600 * 24, // 24 Hours\n};\nconst AuthorityMetadataSource = {\n    CONFIG: \"config\",\n    CACHE: \"cache\",\n    NETWORK: \"network\",\n    HARDCODED_VALUES: \"hardcoded_values\",\n};\nconst SERVER_TELEM_CONSTANTS = {\n    SCHEMA_VERSION: 5,\n    MAX_CUR_HEADER_BYTES: 80,\n    MAX_LAST_HEADER_BYTES: 330,\n    MAX_CACHED_ERRORS: 50,\n    CACHE_KEY: \"server-telemetry\",\n    CATEGORY_SEPARATOR: \"|\",\n    VALUE_SEPARATOR: \",\",\n    OVERFLOW_TRUE: \"1\",\n    OVERFLOW_FALSE: \"0\",\n    UNKNOWN_ERROR: \"unknown_error\",\n};\n/**\n * Type of the authentication request\n */\nconst AuthenticationScheme = {\n    BEARER: \"Bearer\",\n    POP: \"pop\",\n    SSH: \"ssh-cert\",\n};\n/**\n * Constants related to throttling\n */\nconst ThrottlingConstants = {\n    // Default time to throttle RequestThumbprint in seconds\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\n    // Default maximum time to throttle in seconds, overrides what the server sends back\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\n    // Prefix for storing throttling entries\n    THROTTLING_PREFIX: \"throttling\",\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\",\n};\nconst Errors = {\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\n};\n/**\n * Password grant parameters\n */\nconst PasswordGrantConstants = {\n    username: \"username\",\n    password: \"password\",\n};\n/**\n * Response codes\n */\nconst ResponseCodes = {\n    httpSuccess: 200,\n    httpBadRequest: 400,\n};\n/**\n * Region Discovery Sources\n */\nconst RegionDiscoverySources = {\n    FAILED_AUTO_DETECTION: \"1\",\n    INTERNAL_CACHE: \"2\",\n    ENVIRONMENT_VARIABLE: \"3\",\n    IMDS: \"4\",\n};\n/**\n * Region Discovery Outcomes\n */\nconst RegionDiscoveryOutcomes = {\n    CONFIGURED_MATCHES_DETECTED: \"1\",\n    CONFIGURED_NO_AUTO_DETECTION: \"2\",\n    CONFIGURED_NOT_DETECTED: \"3\",\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL: \"4\",\n    AUTO_DETECTION_REQUESTED_FAILED: \"5\",\n};\nconst CacheOutcome = {\n    NO_CACHE_HIT: \"0\",\n    FORCE_REFRESH: \"1\",\n    NO_CACHED_ACCESS_TOKEN: \"2\",\n    CACHED_ACCESS_TOKEN_EXPIRED: \"3\",\n    REFRESH_CACHED_ACCESS_TOKEN: \"4\",\n};\nconst JsonTypes = {\n    Jwt: \"JWT\",\n    Jwk: \"JWK\",\n    Pop: \"pop\",\n};\nconst ONE_DAY_IN_MS = 86400000;\n\n\n//# sourceMappingURL=Constants.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/utils/Constants.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtocolUtils: function() { return /* binding */ ProtocolUtils; }\n/* harmony export */ });\n/* harmony import */ var _StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class which provides helpers for OAuth 2.0 protocol specific values\n */\nclass ProtocolUtils {\n    /**\n     * Appends user state with random guid, or returns random guid.\n     * @param userState\n     * @param randomGuid\n     */\n    static setRequestState(cryptoObj, userState, meta) {\n        const libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\n        return !_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(userState)\n            ? `${libraryState}${_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.RESOURCE_DELIM}${userState}`\n            : libraryState;\n    }\n    /**\n     * Generates the state value used by the common library.\n     * @param randomGuid\n     * @param cryptoObj\n     */\n    static generateLibraryState(cryptoObj, meta) {\n        if (!cryptoObj) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.ClientAuthError.createNoCryptoObjectError(\"generateLibraryState\");\n        }\n        // Create a state object containing a unique id and the timestamp of the request creation\n        const stateObj = {\n            id: cryptoObj.createNewGuid(),\n        };\n        if (meta) {\n            stateObj.meta = meta;\n        }\n        const stateString = JSON.stringify(stateObj);\n        return cryptoObj.base64Encode(stateString);\n    }\n    /**\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\n     * @param state\n     * @param cryptoObj\n     */\n    static parseRequestState(cryptoObj, state) {\n        if (!cryptoObj) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.ClientAuthError.createNoCryptoObjectError(\"parseRequestState\");\n        }\n        if (_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(state)) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.ClientAuthError.createInvalidStateError(state, \"Null, undefined or empty state\");\n        }\n        try {\n            // Split the state between library state and user passed state and decode them separately\n            const splitState = state.split(_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.RESOURCE_DELIM);\n            const libraryState = splitState[0];\n            const userState = splitState.length > 1\n                ? splitState.slice(1).join(_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.RESOURCE_DELIM)\n                : _Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\n            const libraryStateObj = JSON.parse(libraryStateString);\n            return {\n                userRequestState: !_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmpty(userState)\n                    ? userState\n                    : _Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n                libraryState: libraryStateObj,\n            };\n        }\n        catch (e) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.ClientAuthError.createInvalidStateError(state, e);\n        }\n    }\n}\n\n\n//# sourceMappingURL=ProtocolUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvUHJvdG9jb2xVdGlscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2E7QUFDbUM7QUFDSjtBQUNtQjs7QUFFL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHlEQUFXO0FBQzNCLGlCQUFpQixhQUFhLEVBQUUscURBQVMsZ0JBQWdCLEVBQUUsVUFBVTtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsdUVBQWU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHVFQUFlO0FBQ2pDO0FBQ0EsWUFBWSx5REFBVztBQUN2QixrQkFBa0IsdUVBQWU7QUFDakM7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLHFEQUFTO0FBQ3BEO0FBQ0E7QUFDQSwyQ0FBMkMscURBQVM7QUFDcEQsa0JBQWtCLHFEQUFTO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyx5REFBVztBQUM5QztBQUNBLHNCQUFzQixxREFBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1RUFBZTtBQUNqQztBQUNBO0FBQ0E7O0FBRXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC91dGlscy9Qcm90b2NvbFV0aWxzLm1qcz85YTc3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBTdHJpbmdVdGlscyB9IGZyb20gJy4vU3RyaW5nVXRpbHMubWpzJztcbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gJy4vQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIENsYXNzIHdoaWNoIHByb3ZpZGVzIGhlbHBlcnMgZm9yIE9BdXRoIDIuMCBwcm90b2NvbCBzcGVjaWZpYyB2YWx1ZXNcbiAqL1xuY2xhc3MgUHJvdG9jb2xVdGlscyB7XG4gICAgLyoqXG4gICAgICogQXBwZW5kcyB1c2VyIHN0YXRlIHdpdGggcmFuZG9tIGd1aWQsIG9yIHJldHVybnMgcmFuZG9tIGd1aWQuXG4gICAgICogQHBhcmFtIHVzZXJTdGF0ZVxuICAgICAqIEBwYXJhbSByYW5kb21HdWlkXG4gICAgICovXG4gICAgc3RhdGljIHNldFJlcXVlc3RTdGF0ZShjcnlwdG9PYmosIHVzZXJTdGF0ZSwgbWV0YSkge1xuICAgICAgICBjb25zdCBsaWJyYXJ5U3RhdGUgPSBQcm90b2NvbFV0aWxzLmdlbmVyYXRlTGlicmFyeVN0YXRlKGNyeXB0b09iaiwgbWV0YSk7XG4gICAgICAgIHJldHVybiAhU3RyaW5nVXRpbHMuaXNFbXB0eSh1c2VyU3RhdGUpXG4gICAgICAgICAgICA/IGAke2xpYnJhcnlTdGF0ZX0ke0NvbnN0YW50cy5SRVNPVVJDRV9ERUxJTX0ke3VzZXJTdGF0ZX1gXG4gICAgICAgICAgICA6IGxpYnJhcnlTdGF0ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIHRoZSBzdGF0ZSB2YWx1ZSB1c2VkIGJ5IHRoZSBjb21tb24gbGlicmFyeS5cbiAgICAgKiBAcGFyYW0gcmFuZG9tR3VpZFxuICAgICAqIEBwYXJhbSBjcnlwdG9PYmpcbiAgICAgKi9cbiAgICBzdGF0aWMgZ2VuZXJhdGVMaWJyYXJ5U3RhdGUoY3J5cHRvT2JqLCBtZXRhKSB7XG4gICAgICAgIGlmICghY3J5cHRvT2JqKSB7XG4gICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlTm9DcnlwdG9PYmplY3RFcnJvcihcImdlbmVyYXRlTGlicmFyeVN0YXRlXCIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIENyZWF0ZSBhIHN0YXRlIG9iamVjdCBjb250YWluaW5nIGEgdW5pcXVlIGlkIGFuZCB0aGUgdGltZXN0YW1wIG9mIHRoZSByZXF1ZXN0IGNyZWF0aW9uXG4gICAgICAgIGNvbnN0IHN0YXRlT2JqID0ge1xuICAgICAgICAgICAgaWQ6IGNyeXB0b09iai5jcmVhdGVOZXdHdWlkKCksXG4gICAgICAgIH07XG4gICAgICAgIGlmIChtZXRhKSB7XG4gICAgICAgICAgICBzdGF0ZU9iai5tZXRhID0gbWV0YTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzdGF0ZVN0cmluZyA9IEpTT04uc3RyaW5naWZ5KHN0YXRlT2JqKTtcbiAgICAgICAgcmV0dXJuIGNyeXB0b09iai5iYXNlNjRFbmNvZGUoc3RhdGVTdHJpbmcpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQYXJzZXMgdGhlIHN0YXRlIGludG8gdGhlIFJlcXVlc3RTdGF0ZU9iamVjdCwgd2hpY2ggY29udGFpbnMgdGhlIExpYnJhcnlTdGF0ZSBpbmZvIGFuZCB0aGUgc3RhdGUgcGFzc2VkIGJ5IHRoZSB1c2VyLlxuICAgICAqIEBwYXJhbSBzdGF0ZVxuICAgICAqIEBwYXJhbSBjcnlwdG9PYmpcbiAgICAgKi9cbiAgICBzdGF0aWMgcGFyc2VSZXF1ZXN0U3RhdGUoY3J5cHRvT2JqLCBzdGF0ZSkge1xuICAgICAgICBpZiAoIWNyeXB0b09iaikge1xuICAgICAgICAgICAgdGhyb3cgQ2xpZW50QXV0aEVycm9yLmNyZWF0ZU5vQ3J5cHRvT2JqZWN0RXJyb3IoXCJwYXJzZVJlcXVlc3RTdGF0ZVwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoU3RyaW5nVXRpbHMuaXNFbXB0eShzdGF0ZSkpIHtcbiAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVJbnZhbGlkU3RhdGVFcnJvcihzdGF0ZSwgXCJOdWxsLCB1bmRlZmluZWQgb3IgZW1wdHkgc3RhdGVcIik7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFNwbGl0IHRoZSBzdGF0ZSBiZXR3ZWVuIGxpYnJhcnkgc3RhdGUgYW5kIHVzZXIgcGFzc2VkIHN0YXRlIGFuZCBkZWNvZGUgdGhlbSBzZXBhcmF0ZWx5XG4gICAgICAgICAgICBjb25zdCBzcGxpdFN0YXRlID0gc3RhdGUuc3BsaXQoQ29uc3RhbnRzLlJFU09VUkNFX0RFTElNKTtcbiAgICAgICAgICAgIGNvbnN0IGxpYnJhcnlTdGF0ZSA9IHNwbGl0U3RhdGVbMF07XG4gICAgICAgICAgICBjb25zdCB1c2VyU3RhdGUgPSBzcGxpdFN0YXRlLmxlbmd0aCA+IDFcbiAgICAgICAgICAgICAgICA/IHNwbGl0U3RhdGUuc2xpY2UoMSkuam9pbihDb25zdGFudHMuUkVTT1VSQ0VfREVMSU0pXG4gICAgICAgICAgICAgICAgOiBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xuICAgICAgICAgICAgY29uc3QgbGlicmFyeVN0YXRlU3RyaW5nID0gY3J5cHRvT2JqLmJhc2U2NERlY29kZShsaWJyYXJ5U3RhdGUpO1xuICAgICAgICAgICAgY29uc3QgbGlicmFyeVN0YXRlT2JqID0gSlNPTi5wYXJzZShsaWJyYXJ5U3RhdGVTdHJpbmcpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB1c2VyUmVxdWVzdFN0YXRlOiAhU3RyaW5nVXRpbHMuaXNFbXB0eSh1c2VyU3RhdGUpXG4gICAgICAgICAgICAgICAgICAgID8gdXNlclN0YXRlXG4gICAgICAgICAgICAgICAgICAgIDogQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcbiAgICAgICAgICAgICAgICBsaWJyYXJ5U3RhdGU6IGxpYnJhcnlTdGF0ZU9iaixcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVJbnZhbGlkU3RhdGVFcnJvcihzdGF0ZSwgZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCB7IFByb3RvY29sVXRpbHMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVByb3RvY29sVXRpbHMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StringUtils: function() { return /* binding */ StringUtils; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * @hidden\n */\nclass StringUtils {\n    /**\n     * decode a JWT\n     *\n     * @param authToken\n     */\n    static decodeAuthToken(authToken) {\n        if (StringUtils.isEmpty(authToken)) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createTokenNullOrEmptyError(authToken);\n        }\n        const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n        const matches = tokenPartsRegex.exec(authToken);\n        if (!matches || matches.length < 4) {\n            throw _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError.createTokenParsingError(`Given token is malformed: ${JSON.stringify(authToken)}`);\n        }\n        const crackedToken = {\n            header: matches[1],\n            JWSPayload: matches[2],\n            JWSSig: matches[3],\n        };\n        return crackedToken;\n    }\n    /**\n     * Check if a string is empty.\n     *\n     * @param str\n     */\n    static isEmpty(str) {\n        return typeof str === \"undefined\" || !str || 0 === str.length;\n    }\n    /**\n     * Check if stringified object is empty\n     * @param strObj\n     */\n    static isEmptyObj(strObj) {\n        if (strObj && !StringUtils.isEmpty(strObj)) {\n            try {\n                const obj = JSON.parse(strObj);\n                return Object.keys(obj).length === 0;\n            }\n            catch (e) { }\n        }\n        return true;\n    }\n    static startsWith(str, search) {\n        return str.indexOf(search) === 0;\n    }\n    static endsWith(str, search) {\n        return (str.length >= search.length &&\n            str.lastIndexOf(search) === str.length - search.length);\n    }\n    /**\n     * Parses string into an object.\n     *\n     * @param query\n     */\n    static queryStringToObject(query) {\n        const obj = {};\n        const params = query.split(\"&\");\n        const decode = (s) => decodeURIComponent(s.replace(/\\+/g, \" \"));\n        params.forEach((pair) => {\n            if (pair.trim()) {\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\n                if (key && value) {\n                    obj[decode(key)] = decode(value);\n                }\n            }\n        });\n        return obj;\n    }\n    /**\n     * Trims entries in an array.\n     *\n     * @param arr\n     */\n    static trimArrayEntries(arr) {\n        return arr.map((entry) => entry.trim());\n    }\n    /**\n     * Removes empty strings from array\n     * @param arr\n     */\n    static removeEmptyStringsFromArray(arr) {\n        return arr.filter((entry) => {\n            return !StringUtils.isEmpty(entry);\n        });\n    }\n    /**\n     * Attempts to parse a string into JSON\n     * @param str\n     */\n    static jsonParseHelper(str) {\n        try {\n            return JSON.parse(str);\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    /**\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\n     * @param input String to match against\n     */\n    static matchPattern(pattern, input) {\n        /**\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\n         */\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        const regex = new RegExp(pattern\n            .replace(/\\\\/g, \"\\\\\\\\\")\n            .replace(/\\*/g, \"[^ ]*\")\n            .replace(/\\?/g, \"\\\\?\"));\n        return regex.test(input);\n    }\n}\n\n\n//# sourceMappingURL=StringUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvU3RyaW5nVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUNrRDs7QUFFL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHVFQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHVFQUFlLHNEQUFzRCwwQkFBMEI7QUFDakg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThEO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC91dGlscy9TdHJpbmdVdGlscy5tanM/ZjY2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQ2xpZW50QXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNsYXNzIFN0cmluZ1V0aWxzIHtcbiAgICAvKipcbiAgICAgKiBkZWNvZGUgYSBKV1RcbiAgICAgKlxuICAgICAqIEBwYXJhbSBhdXRoVG9rZW5cbiAgICAgKi9cbiAgICBzdGF0aWMgZGVjb2RlQXV0aFRva2VuKGF1dGhUb2tlbikge1xuICAgICAgICBpZiAoU3RyaW5nVXRpbHMuaXNFbXB0eShhdXRoVG9rZW4pKSB7XG4gICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlVG9rZW5OdWxsT3JFbXB0eUVycm9yKGF1dGhUb2tlbik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdG9rZW5QYXJ0c1JlZ2V4ID0gL14oW15cXC5cXHNdKilcXC4oW15cXC5cXHNdKylcXC4oW15cXC5cXHNdKikkLztcbiAgICAgICAgY29uc3QgbWF0Y2hlcyA9IHRva2VuUGFydHNSZWdleC5leGVjKGF1dGhUb2tlbik7XG4gICAgICAgIGlmICghbWF0Y2hlcyB8fCBtYXRjaGVzLmxlbmd0aCA8IDQpIHtcbiAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVUb2tlblBhcnNpbmdFcnJvcihgR2l2ZW4gdG9rZW4gaXMgbWFsZm9ybWVkOiAke0pTT04uc3RyaW5naWZ5KGF1dGhUb2tlbil9YCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY3JhY2tlZFRva2VuID0ge1xuICAgICAgICAgICAgaGVhZGVyOiBtYXRjaGVzWzFdLFxuICAgICAgICAgICAgSldTUGF5bG9hZDogbWF0Y2hlc1syXSxcbiAgICAgICAgICAgIEpXU1NpZzogbWF0Y2hlc1szXSxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIGNyYWNrZWRUb2tlbjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hlY2sgaWYgYSBzdHJpbmcgaXMgZW1wdHkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc3RyXG4gICAgICovXG4gICAgc3RhdGljIGlzRW1wdHkoc3RyKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2Ygc3RyID09PSBcInVuZGVmaW5lZFwiIHx8ICFzdHIgfHwgMCA9PT0gc3RyLmxlbmd0aDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hlY2sgaWYgc3RyaW5naWZpZWQgb2JqZWN0IGlzIGVtcHR5XG4gICAgICogQHBhcmFtIHN0ck9ialxuICAgICAqL1xuICAgIHN0YXRpYyBpc0VtcHR5T2JqKHN0ck9iaikge1xuICAgICAgICBpZiAoc3RyT2JqICYmICFTdHJpbmdVdGlscy5pc0VtcHR5KHN0ck9iaikpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgb2JqID0gSlNPTi5wYXJzZShzdHJPYmopO1xuICAgICAgICAgICAgICAgIHJldHVybiBPYmplY3Qua2V5cyhvYmopLmxlbmd0aCA9PT0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7IH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgc3RhdGljIHN0YXJ0c1dpdGgoc3RyLCBzZWFyY2gpIHtcbiAgICAgICAgcmV0dXJuIHN0ci5pbmRleE9mKHNlYXJjaCkgPT09IDA7XG4gICAgfVxuICAgIHN0YXRpYyBlbmRzV2l0aChzdHIsIHNlYXJjaCkge1xuICAgICAgICByZXR1cm4gKHN0ci5sZW5ndGggPj0gc2VhcmNoLmxlbmd0aCAmJlxuICAgICAgICAgICAgc3RyLmxhc3RJbmRleE9mKHNlYXJjaCkgPT09IHN0ci5sZW5ndGggLSBzZWFyY2gubGVuZ3RoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2VzIHN0cmluZyBpbnRvIGFuIG9iamVjdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBxdWVyeVxuICAgICAqL1xuICAgIHN0YXRpYyBxdWVyeVN0cmluZ1RvT2JqZWN0KHF1ZXJ5KSB7XG4gICAgICAgIGNvbnN0IG9iaiA9IHt9O1xuICAgICAgICBjb25zdCBwYXJhbXMgPSBxdWVyeS5zcGxpdChcIiZcIik7XG4gICAgICAgIGNvbnN0IGRlY29kZSA9IChzKSA9PiBkZWNvZGVVUklDb21wb25lbnQocy5yZXBsYWNlKC9cXCsvZywgXCIgXCIpKTtcbiAgICAgICAgcGFyYW1zLmZvckVhY2goKHBhaXIpID0+IHtcbiAgICAgICAgICAgIGlmIChwYWlyLnRyaW0oKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtrZXksIHZhbHVlXSA9IHBhaXIuc3BsaXQoLz0oLispL2csIDIpOyAvLyBTcGxpdCBvbiB0aGUgZmlyc3Qgb2NjdXJlbmNlIG9mIHRoZSAnPScgY2hhcmFjdGVyXG4gICAgICAgICAgICAgICAgaWYgKGtleSAmJiB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBvYmpbZGVjb2RlKGtleSldID0gZGVjb2RlKHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gb2JqO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUcmltcyBlbnRyaWVzIGluIGFuIGFycmF5LlxuICAgICAqXG4gICAgICogQHBhcmFtIGFyclxuICAgICAqL1xuICAgIHN0YXRpYyB0cmltQXJyYXlFbnRyaWVzKGFycikge1xuICAgICAgICByZXR1cm4gYXJyLm1hcCgoZW50cnkpID0+IGVudHJ5LnRyaW0oKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgZW1wdHkgc3RyaW5ncyBmcm9tIGFycmF5XG4gICAgICogQHBhcmFtIGFyclxuICAgICAqL1xuICAgIHN0YXRpYyByZW1vdmVFbXB0eVN0cmluZ3NGcm9tQXJyYXkoYXJyKSB7XG4gICAgICAgIHJldHVybiBhcnIuZmlsdGVyKChlbnRyeSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuICFTdHJpbmdVdGlscy5pc0VtcHR5KGVudHJ5KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEF0dGVtcHRzIHRvIHBhcnNlIGEgc3RyaW5nIGludG8gSlNPTlxuICAgICAqIEBwYXJhbSBzdHJcbiAgICAgKi9cbiAgICBzdGF0aWMganNvblBhcnNlSGVscGVyKHN0cikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2Uoc3RyKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogVGVzdHMgaWYgYSBnaXZlbiBzdHJpbmcgbWF0Y2hlcyBhIGdpdmVuIHBhdHRlcm4sIHdpdGggc3VwcG9ydCBmb3Igd2lsZGNhcmRzIGFuZCBxdWVyaWVzLlxuICAgICAqIEBwYXJhbSBwYXR0ZXJuIFdpbGRjYXJkIHBhdHRlcm4gdG8gc3RyaW5nIG1hdGNoLiBTdXBwb3J0cyBcIipcIiBmb3Igd2lsZGNhcmRzIGFuZCBcIj9cIiBmb3IgcXVlcmllc1xuICAgICAqIEBwYXJhbSBpbnB1dCBTdHJpbmcgdG8gbWF0Y2ggYWdhaW5zdFxuICAgICAqL1xuICAgIHN0YXRpYyBtYXRjaFBhdHRlcm4ocGF0dGVybiwgaW5wdXQpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFdpbGRjYXJkIHN1cHBvcnQ6IGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8zMTE3MjQ4LzQ4ODg1NTlcbiAgICAgICAgICogUXVlcmllczogcmVwbGFjZXMgXCI/XCIgaW4gc3RyaW5nIHdpdGggZXNjYXBlZCBcIlxcP1wiIGZvciByZWdleCB0ZXN0XG4gICAgICAgICAqL1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2VjdXJpdHkvZGV0ZWN0LW5vbi1saXRlcmFsLXJlZ2V4cFxuICAgICAgICBjb25zdCByZWdleCA9IG5ldyBSZWdFeHAocGF0dGVyblxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcXFwvZywgXCJcXFxcXFxcXFwiKVxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcKi9nLCBcIlteIF0qXCIpXG4gICAgICAgICAgICAucmVwbGFjZSgvXFw/L2csIFwiXFxcXD9cIikpO1xuICAgICAgICByZXR1cm4gcmVnZXgudGVzdChpbnB1dCk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBTdHJpbmdVdGlscyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RyaW5nVXRpbHMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TimeUtils: function() { return /* binding */ TimeUtils; }\n/* harmony export */ });\n/*! @azure/msal-common v14.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Utility class which exposes functions for managing date and time operations.\n */\nclass TimeUtils {\n    /**\n     * return the current time in Unix time (seconds).\n     */\n    static nowSeconds() {\n        // Date.getTime() returns in milliseconds.\n        return Math.round(new Date().getTime() / 1000.0);\n    }\n    /**\n     * check if a token is expired based on given UTC time in seconds.\n     * @param expiresOn\n     */\n    static isTokenExpired(expiresOn, offset) {\n        // check for access token expiry\n        const expirationSec = Number(expiresOn) || 0;\n        const offsetCurrentTimeSec = TimeUtils.nowSeconds() + offset;\n        // If current time + offset is greater than token expiration time, then token is expired.\n        return offsetCurrentTimeSec > expirationSec;\n    }\n    /**\n     * If the current time is earlier than the time that a token was cached at, we must discard the token\n     * i.e. The system clock was turned back after acquiring the cached token\n     * @param cachedAt\n     * @param offset\n     */\n    static wasClockTurnedBack(cachedAt) {\n        const cachedAtSec = Number(cachedAt);\n        return cachedAtSec > TimeUtils.nowSeconds();\n    }\n    /**\n     * Waits for t number of milliseconds\n     * @param t number\n     * @param value T\n     */\n    static delay(t, value) {\n        return new Promise((resolve) => setTimeout(() => resolve(value), t));\n    }\n}\n\n\n//# sourceMappingURL=TimeUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvVGltZVV0aWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L3V0aWxzL1RpbWVVdGlscy5tanM/MmYyNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIFV0aWxpdHkgY2xhc3Mgd2hpY2ggZXhwb3NlcyBmdW5jdGlvbnMgZm9yIG1hbmFnaW5nIGRhdGUgYW5kIHRpbWUgb3BlcmF0aW9ucy5cbiAqL1xuY2xhc3MgVGltZVV0aWxzIHtcbiAgICAvKipcbiAgICAgKiByZXR1cm4gdGhlIGN1cnJlbnQgdGltZSBpbiBVbml4IHRpbWUgKHNlY29uZHMpLlxuICAgICAqL1xuICAgIHN0YXRpYyBub3dTZWNvbmRzKCkge1xuICAgICAgICAvLyBEYXRlLmdldFRpbWUoKSByZXR1cm5zIGluIG1pbGxpc2Vjb25kcy5cbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQobmV3IERhdGUoKS5nZXRUaW1lKCkgLyAxMDAwLjApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBjaGVjayBpZiBhIHRva2VuIGlzIGV4cGlyZWQgYmFzZWQgb24gZ2l2ZW4gVVRDIHRpbWUgaW4gc2Vjb25kcy5cbiAgICAgKiBAcGFyYW0gZXhwaXJlc09uXG4gICAgICovXG4gICAgc3RhdGljIGlzVG9rZW5FeHBpcmVkKGV4cGlyZXNPbiwgb2Zmc2V0KSB7XG4gICAgICAgIC8vIGNoZWNrIGZvciBhY2Nlc3MgdG9rZW4gZXhwaXJ5XG4gICAgICAgIGNvbnN0IGV4cGlyYXRpb25TZWMgPSBOdW1iZXIoZXhwaXJlc09uKSB8fCAwO1xuICAgICAgICBjb25zdCBvZmZzZXRDdXJyZW50VGltZVNlYyA9IFRpbWVVdGlscy5ub3dTZWNvbmRzKCkgKyBvZmZzZXQ7XG4gICAgICAgIC8vIElmIGN1cnJlbnQgdGltZSArIG9mZnNldCBpcyBncmVhdGVyIHRoYW4gdG9rZW4gZXhwaXJhdGlvbiB0aW1lLCB0aGVuIHRva2VuIGlzIGV4cGlyZWQuXG4gICAgICAgIHJldHVybiBvZmZzZXRDdXJyZW50VGltZVNlYyA+IGV4cGlyYXRpb25TZWM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIElmIHRoZSBjdXJyZW50IHRpbWUgaXMgZWFybGllciB0aGFuIHRoZSB0aW1lIHRoYXQgYSB0b2tlbiB3YXMgY2FjaGVkIGF0LCB3ZSBtdXN0IGRpc2NhcmQgdGhlIHRva2VuXG4gICAgICogaS5lLiBUaGUgc3lzdGVtIGNsb2NrIHdhcyB0dXJuZWQgYmFjayBhZnRlciBhY3F1aXJpbmcgdGhlIGNhY2hlZCB0b2tlblxuICAgICAqIEBwYXJhbSBjYWNoZWRBdFxuICAgICAqIEBwYXJhbSBvZmZzZXRcbiAgICAgKi9cbiAgICBzdGF0aWMgd2FzQ2xvY2tUdXJuZWRCYWNrKGNhY2hlZEF0KSB7XG4gICAgICAgIGNvbnN0IGNhY2hlZEF0U2VjID0gTnVtYmVyKGNhY2hlZEF0KTtcbiAgICAgICAgcmV0dXJuIGNhY2hlZEF0U2VjID4gVGltZVV0aWxzLm5vd1NlY29uZHMoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV2FpdHMgZm9yIHQgbnVtYmVyIG9mIG1pbGxpc2Vjb25kc1xuICAgICAqIEBwYXJhbSB0IG51bWJlclxuICAgICAqIEBwYXJhbSB2YWx1ZSBUXG4gICAgICovXG4gICAgc3RhdGljIGRlbGF5KHQsIHZhbHVlKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dCgoKSA9PiByZXNvbHZlKHZhbHVlKSwgdCkpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgVGltZVV0aWxzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UaW1lVXRpbHMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/MsalContext.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/MsalContext.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MsalConsumer: function() { return /* binding */ MsalConsumer; },\n/* harmony export */   MsalContext: function() { return /* binding */ MsalContext; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/*! @azure/msal-react v2.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/*\n * Stubbed context implementation\n * Only used when there is no provider, which is an unsupported scenario\n */\nconst defaultMsalContext = {\n    instance: _azure_msal_browser__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplication,\n    inProgress: _azure_msal_browser__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.None,\n    accounts: [],\n    logger: new _azure_msal_browser__WEBPACK_IMPORTED_MODULE_1__.Logger({}),\n};\nconst MsalContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultMsalContext);\nconst MsalConsumer = MsalContext.Consumer;\n\n\n//# sourceMappingURL=MsalContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9Nc2FsQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDYTtBQUNrQjtBQUNpRTs7QUFFaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywrRUFBOEI7QUFDNUMsZ0JBQWdCLGtFQUFpQjtBQUNqQztBQUNBLGdCQUFnQix1REFBTSxHQUFHO0FBQ3pCO0FBQ0Esb0JBQW9CLGdEQUFtQjtBQUN2Qzs7QUFFcUM7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLXJlYWN0L2Rpc3QvTXNhbENvbnRleHQuanM/ODhhYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtcmVhY3QgdjIuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbiwgSW50ZXJhY3Rpb25TdGF0dXMsIExvZ2dlciB9IGZyb20gJ0BhenVyZS9tc2FsLWJyb3dzZXInO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qXG4gKiBTdHViYmVkIGNvbnRleHQgaW1wbGVtZW50YXRpb25cbiAqIE9ubHkgdXNlZCB3aGVuIHRoZXJlIGlzIG5vIHByb3ZpZGVyLCB3aGljaCBpcyBhbiB1bnN1cHBvcnRlZCBzY2VuYXJpb1xuICovXG5jb25zdCBkZWZhdWx0TXNhbENvbnRleHQgPSB7XG4gICAgaW5zdGFuY2U6IHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbixcbiAgICBpblByb2dyZXNzOiBJbnRlcmFjdGlvblN0YXR1cy5Ob25lLFxuICAgIGFjY291bnRzOiBbXSxcbiAgICBsb2dnZXI6IG5ldyBMb2dnZXIoe30pLFxufTtcbmNvbnN0IE1zYWxDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChkZWZhdWx0TXNhbENvbnRleHQpO1xuY29uc3QgTXNhbENvbnN1bWVyID0gTXNhbENvbnRleHQuQ29uc3VtZXI7XG5cbmV4cG9ydCB7IE1zYWxDb25zdW1lciwgTXNhbENvbnRleHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1zYWxDb250ZXh0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/MsalContext.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/MsalProvider.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/MsalProvider.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MsalProvider: function() { return /* binding */ MsalProvider; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/* harmony import */ var _MsalContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MsalContext.js */ \"./node_modules/@azure/msal-react/dist/MsalContext.js\");\n/* harmony import */ var _utils_utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/utilities.js */ \"./node_modules/@azure/msal-react/dist/utils/utilities.js\");\n/* harmony import */ var _packageMetadata_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./packageMetadata.js */ \"./node_modules/@azure/msal-react/dist/packageMetadata.js\");\n/*! @azure/msal-react v2.0.2 2023-08-18 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst MsalProviderActionType = {\n    UNBLOCK_INPROGRESS: \"UNBLOCK_INPROGRESS\",\n    EVENT: \"EVENT\",\n};\n/**\n * Returns the next inProgress and accounts state based on event message\n * @param previousState\n * @param action\n */\nconst reducer = (previousState, action) => {\n    const { type, payload } = action;\n    let newInProgress = previousState.inProgress;\n    switch (type) {\n        case MsalProviderActionType.UNBLOCK_INPROGRESS:\n            if (previousState.inProgress === _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.InteractionStatus.Startup) {\n                newInProgress = _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.InteractionStatus.None;\n                payload.logger.info(\"MsalProvider - handleRedirectPromise resolved, setting inProgress to 'none'\");\n            }\n            break;\n        case MsalProviderActionType.EVENT:\n            const message = payload.message;\n            const status = _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.EventMessageUtils.getInteractionStatusFromEvent(message, previousState.inProgress);\n            if (status) {\n                payload.logger.info(`MsalProvider - ${message.eventType} results in setting inProgress from ${previousState.inProgress} to ${status}`);\n                newInProgress = status;\n            }\n            break;\n        default:\n            throw new Error(`Unknown action type: ${type}`);\n    }\n    const currentAccounts = payload.instance.getAllAccounts();\n    if (newInProgress !== previousState.inProgress &&\n        !(0,_utils_utilities_js__WEBPACK_IMPORTED_MODULE_2__.accountArraysAreEqual)(currentAccounts, previousState.accounts)) {\n        // Both inProgress and accounts changed\n        return {\n            ...previousState,\n            inProgress: newInProgress,\n            accounts: currentAccounts,\n        };\n    }\n    else if (newInProgress !== previousState.inProgress) {\n        // Only only inProgress changed\n        return {\n            ...previousState,\n            inProgress: newInProgress,\n        };\n    }\n    else if (!(0,_utils_utilities_js__WEBPACK_IMPORTED_MODULE_2__.accountArraysAreEqual)(currentAccounts, previousState.accounts)) {\n        // Only accounts changed\n        return {\n            ...previousState,\n            accounts: currentAccounts,\n        };\n    }\n    else {\n        // Nothing changed\n        return previousState;\n    }\n};\n/**\n * MSAL context provider component. This must be rendered above any other components that use MSAL.\n */\nfunction MsalProvider({ instance, children, }) {\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        instance.initializeWrapperLibrary(_azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.WrapperSKU.React, _packageMetadata_js__WEBPACK_IMPORTED_MODULE_3__.version);\n    }, [instance]);\n    // Create a logger instance for msal-react with the same options as PublicClientApplication\n    const logger = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return instance.getLogger().clone(_packageMetadata_js__WEBPACK_IMPORTED_MODULE_3__.name, _packageMetadata_js__WEBPACK_IMPORTED_MODULE_3__.version);\n    }, [instance]);\n    const [state, updateState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(reducer, undefined, () => {\n        // Lazy initialization of the initial state\n        return {\n            inProgress: _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.InteractionStatus.Startup,\n            accounts: instance.getAllAccounts(),\n        };\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const callbackId = instance.addEventCallback((message) => {\n            updateState({\n                payload: {\n                    instance,\n                    logger,\n                    message,\n                },\n                type: MsalProviderActionType.EVENT,\n            });\n        });\n        logger.verbose(`MsalProvider - Registered event callback with id: ${callbackId}`);\n        instance.initialize().then(() => {\n            instance\n                .handleRedirectPromise()\n                .catch(() => {\n                // Errors should be handled by listening to the LOGIN_FAILURE event\n                return;\n            })\n                .finally(() => {\n                /*\n                 * If handleRedirectPromise returns a cached promise the necessary events may not be fired\n                 * This is a fallback to prevent inProgress from getting stuck in 'startup'\n                 */\n                updateState({\n                    payload: {\n                        instance,\n                        logger,\n                    },\n                    type: MsalProviderActionType.UNBLOCK_INPROGRESS,\n                });\n            });\n        });\n        return () => {\n            // Remove callback when component unmounts or accounts change\n            if (callbackId) {\n                logger.verbose(`MsalProvider - Removing event callback ${callbackId}`);\n                instance.removeEventCallback(callbackId);\n            }\n        };\n    }, [instance, logger]);\n    const contextValue = {\n        instance,\n        inProgress: state.inProgress,\n        accounts: state.accounts,\n        logger,\n    };\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MsalContext_js__WEBPACK_IMPORTED_MODULE_1__.MsalContext.Provider, { value: contextValue }, children));\n}\n\n\n//# sourceMappingURL=MsalProvider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/MsalProvider.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/components/AuthenticatedTemplate.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/components/AuthenticatedTemplate.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticatedTemplate: function() { return /* binding */ AuthenticatedTemplate; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _utils_utilities_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utilities.js */ \"./node_modules/@azure/msal-react/dist/utils/utilities.js\");\n/* harmony import */ var _hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/* harmony import */ var _hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks/useIsAuthenticated.js */ \"./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/*! @azure/msal-react v2.0.2 2023-08-18 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Renders child components if user is authenticated\n * @param props\n */\nfunction AuthenticatedTemplate({ username, homeAccountId, localAccountId, children, }) {\n    const context = (0,_hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_2__.useMsal)();\n    const accountIdentifier = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            username,\n            homeAccountId,\n            localAccountId,\n        };\n    }, [username, homeAccountId, localAccountId]);\n    const isAuthenticated = (0,_hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_3__.useIsAuthenticated)(accountIdentifier);\n    if (isAuthenticated && context.inProgress !== _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.InteractionStatus.Startup) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_utils_utilities_js__WEBPACK_IMPORTED_MODULE_1__.getChildrenOrFunction)(children, context)));\n    }\n    return null;\n}\n\n\n//# sourceMappingURL=AuthenticatedTemplate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9jb21wb25lbnRzL0F1dGhlbnRpY2F0ZWRUZW1wbGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ21DO0FBQ2M7QUFDaEI7QUFDc0I7QUFDWjs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxvREFBb0Q7QUFDckYsb0JBQW9CLDBEQUFPO0FBQzNCLDhCQUE4Qiw4Q0FBTztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDRCQUE0QixnRkFBa0I7QUFDOUMsa0RBQWtELGtFQUFpQjtBQUNuRSxnQkFBZ0IsZ0RBQTRCLENBQUMsMkNBQXVCLFFBQVEsMEVBQXFCO0FBQ2pHO0FBQ0E7QUFDQTs7QUFFaUM7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLXJlYWN0L2Rpc3QvY29tcG9uZW50cy9BdXRoZW50aWNhdGVkVGVtcGxhdGUuanM/ZGQ4MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtcmVhY3QgdjIuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCBSZWFjdF9fZGVmYXVsdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZ2V0Q2hpbGRyZW5PckZ1bmN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvdXRpbGl0aWVzLmpzJztcbmltcG9ydCB7IHVzZU1zYWwgfSBmcm9tICcuLi9ob29rcy91c2VNc2FsLmpzJztcbmltcG9ydCB7IHVzZUlzQXV0aGVudGljYXRlZCB9IGZyb20gJy4uL2hvb2tzL3VzZUlzQXV0aGVudGljYXRlZC5qcyc7XG5pbXBvcnQgeyBJbnRlcmFjdGlvblN0YXR1cyB9IGZyb20gJ0BhenVyZS9tc2FsLWJyb3dzZXInO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogUmVuZGVycyBjaGlsZCBjb21wb25lbnRzIGlmIHVzZXIgaXMgYXV0aGVudGljYXRlZFxuICogQHBhcmFtIHByb3BzXG4gKi9cbmZ1bmN0aW9uIEF1dGhlbnRpY2F0ZWRUZW1wbGF0ZSh7IHVzZXJuYW1lLCBob21lQWNjb3VudElkLCBsb2NhbEFjY291bnRJZCwgY2hpbGRyZW4sIH0pIHtcbiAgICBjb25zdCBjb250ZXh0ID0gdXNlTXNhbCgpO1xuICAgIGNvbnN0IGFjY291bnRJZGVudGlmaWVyID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB1c2VybmFtZSxcbiAgICAgICAgICAgIGhvbWVBY2NvdW50SWQsXG4gICAgICAgICAgICBsb2NhbEFjY291bnRJZCxcbiAgICAgICAgfTtcbiAgICB9LCBbdXNlcm5hbWUsIGhvbWVBY2NvdW50SWQsIGxvY2FsQWNjb3VudElkXSk7XG4gICAgY29uc3QgaXNBdXRoZW50aWNhdGVkID0gdXNlSXNBdXRoZW50aWNhdGVkKGFjY291bnRJZGVudGlmaWVyKTtcbiAgICBpZiAoaXNBdXRoZW50aWNhdGVkICYmIGNvbnRleHQuaW5Qcm9ncmVzcyAhPT0gSW50ZXJhY3Rpb25TdGF0dXMuU3RhcnR1cCkge1xuICAgICAgICByZXR1cm4gKFJlYWN0X19kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoUmVhY3RfX2RlZmF1bHQuRnJhZ21lbnQsIG51bGwsIGdldENoaWxkcmVuT3JGdW5jdGlvbihjaGlsZHJlbiwgY29udGV4dCkpKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCB7IEF1dGhlbnRpY2F0ZWRUZW1wbGF0ZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aGVudGljYXRlZFRlbXBsYXRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/components/AuthenticatedTemplate.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/components/MsalAuthenticationTemplate.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/components/MsalAuthenticationTemplate.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MsalAuthenticationTemplate: function() { return /* binding */ MsalAuthenticationTemplate; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _utils_utilities_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utilities.js */ \"./node_modules/@azure/msal-react/dist/utils/utilities.js\");\n/* harmony import */ var _hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/* harmony import */ var _hooks_useMsalAuthentication_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks/useMsalAuthentication.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsalAuthentication.js\");\n/* harmony import */ var _hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hooks/useIsAuthenticated.js */ \"./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/*! @azure/msal-react v2.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Attempts to authenticate user if not already authenticated, then renders child components\n * @param props\n */\nfunction MsalAuthenticationTemplate({ interactionType, username, homeAccountId, localAccountId, authenticationRequest, loadingComponent: LoadingComponent, errorComponent: ErrorComponent, children, }) {\n    const accountIdentifier = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            username,\n            homeAccountId,\n            localAccountId,\n        };\n    }, [username, homeAccountId, localAccountId]);\n    const context = (0,_hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_2__.useMsal)();\n    const msalAuthResult = (0,_hooks_useMsalAuthentication_js__WEBPACK_IMPORTED_MODULE_3__.useMsalAuthentication)(interactionType, authenticationRequest, accountIdentifier);\n    const isAuthenticated = (0,_hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_4__.useIsAuthenticated)(accountIdentifier);\n    if (msalAuthResult.error && context.inProgress === _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionStatus.None) {\n        if (!!ErrorComponent) {\n            return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorComponent, { ...msalAuthResult });\n        }\n        throw msalAuthResult.error;\n    }\n    if (isAuthenticated) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_utils_utilities_js__WEBPACK_IMPORTED_MODULE_1__.getChildrenOrFunction)(children, msalAuthResult)));\n    }\n    if (!!LoadingComponent && context.inProgress !== _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionStatus.None) {\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(LoadingComponent, { ...context });\n    }\n    return null;\n}\n\n\n//# sourceMappingURL=MsalAuthenticationTemplate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9jb21wb25lbnRzL01zYWxBdXRoZW50aWNhdGlvblRlbXBsYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ21DO0FBQ2M7QUFDaEI7QUFDNEI7QUFDTjtBQUNaOztBQUV4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGdLQUFnSztBQUN0TSw4QkFBOEIsOENBQU87QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxvQkFBb0IsMERBQU87QUFDM0IsMkJBQTJCLHNGQUFxQjtBQUNoRCw0QkFBNEIsZ0ZBQWtCO0FBQzlDLHVEQUF1RCxrRUFBaUI7QUFDeEU7QUFDQSxtQkFBbUIsZ0RBQTRCLG1CQUFtQixtQkFBbUI7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0RBQTRCLENBQUMsMkNBQXVCLFFBQVEsMEVBQXFCO0FBQ2pHO0FBQ0EscURBQXFELGtFQUFpQjtBQUN0RSxlQUFlLGdEQUE0QixxQkFBcUIsWUFBWTtBQUM1RTtBQUNBO0FBQ0E7O0FBRXNDO0FBQ3RDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1yZWFjdC9kaXN0L2NvbXBvbmVudHMvTXNhbEF1dGhlbnRpY2F0aW9uVGVtcGxhdGUuanM/NWYzMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtcmVhY3QgdjIuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCBSZWFjdF9fZGVmYXVsdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZ2V0Q2hpbGRyZW5PckZ1bmN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvdXRpbGl0aWVzLmpzJztcbmltcG9ydCB7IHVzZU1zYWwgfSBmcm9tICcuLi9ob29rcy91c2VNc2FsLmpzJztcbmltcG9ydCB7IHVzZU1zYWxBdXRoZW50aWNhdGlvbiB9IGZyb20gJy4uL2hvb2tzL3VzZU1zYWxBdXRoZW50aWNhdGlvbi5qcyc7XG5pbXBvcnQgeyB1c2VJc0F1dGhlbnRpY2F0ZWQgfSBmcm9tICcuLi9ob29rcy91c2VJc0F1dGhlbnRpY2F0ZWQuanMnO1xuaW1wb3J0IHsgSW50ZXJhY3Rpb25TdGF0dXMgfSBmcm9tICdAYXp1cmUvbXNhbC1icm93c2VyJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIEF0dGVtcHRzIHRvIGF1dGhlbnRpY2F0ZSB1c2VyIGlmIG5vdCBhbHJlYWR5IGF1dGhlbnRpY2F0ZWQsIHRoZW4gcmVuZGVycyBjaGlsZCBjb21wb25lbnRzXG4gKiBAcGFyYW0gcHJvcHNcbiAqL1xuZnVuY3Rpb24gTXNhbEF1dGhlbnRpY2F0aW9uVGVtcGxhdGUoeyBpbnRlcmFjdGlvblR5cGUsIHVzZXJuYW1lLCBob21lQWNjb3VudElkLCBsb2NhbEFjY291bnRJZCwgYXV0aGVudGljYXRpb25SZXF1ZXN0LCBsb2FkaW5nQ29tcG9uZW50OiBMb2FkaW5nQ29tcG9uZW50LCBlcnJvckNvbXBvbmVudDogRXJyb3JDb21wb25lbnQsIGNoaWxkcmVuLCB9KSB7XG4gICAgY29uc3QgYWNjb3VudElkZW50aWZpZXIgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHVzZXJuYW1lLFxuICAgICAgICAgICAgaG9tZUFjY291bnRJZCxcbiAgICAgICAgICAgIGxvY2FsQWNjb3VudElkLFxuICAgICAgICB9O1xuICAgIH0sIFt1c2VybmFtZSwgaG9tZUFjY291bnRJZCwgbG9jYWxBY2NvdW50SWRdKTtcbiAgICBjb25zdCBjb250ZXh0ID0gdXNlTXNhbCgpO1xuICAgIGNvbnN0IG1zYWxBdXRoUmVzdWx0ID0gdXNlTXNhbEF1dGhlbnRpY2F0aW9uKGludGVyYWN0aW9uVHlwZSwgYXV0aGVudGljYXRpb25SZXF1ZXN0LCBhY2NvdW50SWRlbnRpZmllcik7XG4gICAgY29uc3QgaXNBdXRoZW50aWNhdGVkID0gdXNlSXNBdXRoZW50aWNhdGVkKGFjY291bnRJZGVudGlmaWVyKTtcbiAgICBpZiAobXNhbEF1dGhSZXN1bHQuZXJyb3IgJiYgY29udGV4dC5pblByb2dyZXNzID09PSBJbnRlcmFjdGlvblN0YXR1cy5Ob25lKSB7XG4gICAgICAgIGlmICghIUVycm9yQ29tcG9uZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3RfX2RlZmF1bHQuY3JlYXRlRWxlbWVudChFcnJvckNvbXBvbmVudCwgeyAuLi5tc2FsQXV0aFJlc3VsdCB9KTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBtc2FsQXV0aFJlc3VsdC5lcnJvcjtcbiAgICB9XG4gICAgaWYgKGlzQXV0aGVudGljYXRlZCkge1xuICAgICAgICByZXR1cm4gKFJlYWN0X19kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoUmVhY3RfX2RlZmF1bHQuRnJhZ21lbnQsIG51bGwsIGdldENoaWxkcmVuT3JGdW5jdGlvbihjaGlsZHJlbiwgbXNhbEF1dGhSZXN1bHQpKSk7XG4gICAgfVxuICAgIGlmICghIUxvYWRpbmdDb21wb25lbnQgJiYgY29udGV4dC5pblByb2dyZXNzICE9PSBJbnRlcmFjdGlvblN0YXR1cy5Ob25lKSB7XG4gICAgICAgIHJldHVybiBSZWFjdF9fZGVmYXVsdC5jcmVhdGVFbGVtZW50KExvYWRpbmdDb21wb25lbnQsIHsgLi4uY29udGV4dCB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCB7IE1zYWxBdXRoZW50aWNhdGlvblRlbXBsYXRlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Nc2FsQXV0aGVudGljYXRpb25UZW1wbGF0ZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/components/MsalAuthenticationTemplate.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/components/UnauthenticatedTemplate.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/components/UnauthenticatedTemplate.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnauthenticatedTemplate: function() { return /* binding */ UnauthenticatedTemplate; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hooks/useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/* harmony import */ var _hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useIsAuthenticated.js */ \"./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js\");\n/* harmony import */ var _utils_utilities_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/utilities.js */ \"./node_modules/@azure/msal-react/dist/utils/utilities.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/*! @azure/msal-react v2.0.2 2023-08-18 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Renders child components if user is unauthenticated\n * @param props\n */\nfunction UnauthenticatedTemplate({ username, homeAccountId, localAccountId, children, }) {\n    const context = (0,_hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_1__.useMsal)();\n    const accountIdentifier = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            username,\n            homeAccountId,\n            localAccountId,\n        };\n    }, [username, homeAccountId, localAccountId]);\n    const isAuthenticated = (0,_hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_2__.useIsAuthenticated)(accountIdentifier);\n    if (!isAuthenticated &&\n        context.inProgress !== _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.InteractionStatus.Startup &&\n        context.inProgress !== _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.InteractionStatus.HandleRedirect) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_utils_utilities_js__WEBPACK_IMPORTED_MODULE_3__.getChildrenOrFunction)(children, context)));\n    }\n    return null;\n}\n\n\n//# sourceMappingURL=UnauthenticatedTemplate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9jb21wb25lbnRzL1VuYXV0aGVudGljYXRlZFRlbXBsYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDbUM7QUFDRjtBQUNzQjtBQUNOO0FBQ047O0FBRXhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsb0RBQW9EO0FBQ3ZGLG9CQUFvQiwwREFBTztBQUMzQiw4QkFBOEIsOENBQU87QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCw0QkFBNEIsZ0ZBQWtCO0FBQzlDO0FBQ0EsK0JBQStCLGtFQUFpQjtBQUNoRCwrQkFBK0Isa0VBQWlCO0FBQ2hELGdCQUFnQixnREFBNEIsQ0FBQywyQ0FBdUIsUUFBUSwwRUFBcUI7QUFDakc7QUFDQTtBQUNBOztBQUVtQztBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9jb21wb25lbnRzL1VuYXV0aGVudGljYXRlZFRlbXBsYXRlLmpzPzZlZmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLXJlYWN0IHYyLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgUmVhY3RfX2RlZmF1bHQsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZU1zYWwgfSBmcm9tICcuLi9ob29rcy91c2VNc2FsLmpzJztcbmltcG9ydCB7IHVzZUlzQXV0aGVudGljYXRlZCB9IGZyb20gJy4uL2hvb2tzL3VzZUlzQXV0aGVudGljYXRlZC5qcyc7XG5pbXBvcnQgeyBnZXRDaGlsZHJlbk9yRnVuY3Rpb24gfSBmcm9tICcuLi91dGlscy91dGlsaXRpZXMuanMnO1xuaW1wb3J0IHsgSW50ZXJhY3Rpb25TdGF0dXMgfSBmcm9tICdAYXp1cmUvbXNhbC1icm93c2VyJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIFJlbmRlcnMgY2hpbGQgY29tcG9uZW50cyBpZiB1c2VyIGlzIHVuYXV0aGVudGljYXRlZFxuICogQHBhcmFtIHByb3BzXG4gKi9cbmZ1bmN0aW9uIFVuYXV0aGVudGljYXRlZFRlbXBsYXRlKHsgdXNlcm5hbWUsIGhvbWVBY2NvdW50SWQsIGxvY2FsQWNjb3VudElkLCBjaGlsZHJlbiwgfSkge1xuICAgIGNvbnN0IGNvbnRleHQgPSB1c2VNc2FsKCk7XG4gICAgY29uc3QgYWNjb3VudElkZW50aWZpZXIgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHVzZXJuYW1lLFxuICAgICAgICAgICAgaG9tZUFjY291bnRJZCxcbiAgICAgICAgICAgIGxvY2FsQWNjb3VudElkLFxuICAgICAgICB9O1xuICAgIH0sIFt1c2VybmFtZSwgaG9tZUFjY291bnRJZCwgbG9jYWxBY2NvdW50SWRdKTtcbiAgICBjb25zdCBpc0F1dGhlbnRpY2F0ZWQgPSB1c2VJc0F1dGhlbnRpY2F0ZWQoYWNjb3VudElkZW50aWZpZXIpO1xuICAgIGlmICghaXNBdXRoZW50aWNhdGVkICYmXG4gICAgICAgIGNvbnRleHQuaW5Qcm9ncmVzcyAhPT0gSW50ZXJhY3Rpb25TdGF0dXMuU3RhcnR1cCAmJlxuICAgICAgICBjb250ZXh0LmluUHJvZ3Jlc3MgIT09IEludGVyYWN0aW9uU3RhdHVzLkhhbmRsZVJlZGlyZWN0KSB7XG4gICAgICAgIHJldHVybiAoUmVhY3RfX2RlZmF1bHQuY3JlYXRlRWxlbWVudChSZWFjdF9fZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgZ2V0Q2hpbGRyZW5PckZ1bmN0aW9uKGNoaWxkcmVuLCBjb250ZXh0KSkpO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbn1cblxuZXhwb3J0IHsgVW5hdXRoZW50aWNhdGVkVGVtcGxhdGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVVuYXV0aGVudGljYXRlZFRlbXBsYXRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/components/UnauthenticatedTemplate.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/components/withMsal.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/components/withMsal.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withMsal: function() { return /* binding */ withMsal; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hooks/useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/*! @azure/msal-react v2.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Higher order component wraps provided component with msal by injecting msal context values into the component's props\n * @param Component\n */\nconst withMsal = (Component) => {\n    const ComponentWithMsal = (props) => {\n        const msal = (0,_hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_1__.useMsal)();\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, { ...props, msalContext: msal });\n    };\n    const componentName = Component.displayName || Component.name || \"Component\";\n    ComponentWithMsal.displayName = `withMsal(${componentName})`;\n    return ComponentWithMsal;\n};\n\n\n//# sourceMappingURL=withMsal.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9jb21wb25lbnRzL3dpdGhNc2FsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDc0I7QUFDVzs7QUFFOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsMERBQU87QUFDNUIsZUFBZSxnREFBNEIsY0FBYyw2QkFBNkI7QUFDdEY7QUFDQTtBQUNBLGdEQUFnRCxjQUFjO0FBQzlEO0FBQ0E7O0FBRW9CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1yZWFjdC9kaXN0L2NvbXBvbmVudHMvd2l0aE1zYWwuanM/NWIzZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtcmVhY3QgdjIuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCBSZWFjdF9fZGVmYXVsdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VNc2FsIH0gZnJvbSAnLi4vaG9va3MvdXNlTXNhbC5qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBIaWdoZXIgb3JkZXIgY29tcG9uZW50IHdyYXBzIHByb3ZpZGVkIGNvbXBvbmVudCB3aXRoIG1zYWwgYnkgaW5qZWN0aW5nIG1zYWwgY29udGV4dCB2YWx1ZXMgaW50byB0aGUgY29tcG9uZW50J3MgcHJvcHNcbiAqIEBwYXJhbSBDb21wb25lbnRcbiAqL1xuY29uc3Qgd2l0aE1zYWwgPSAoQ29tcG9uZW50KSA9PiB7XG4gICAgY29uc3QgQ29tcG9uZW50V2l0aE1zYWwgPSAocHJvcHMpID0+IHtcbiAgICAgICAgY29uc3QgbXNhbCA9IHVzZU1zYWwoKTtcbiAgICAgICAgcmV0dXJuIFJlYWN0X19kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCB7IC4uLnByb3BzLCBtc2FsQ29udGV4dDogbXNhbCB9KTtcbiAgICB9O1xuICAgIGNvbnN0IGNvbXBvbmVudE5hbWUgPSBDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWUgfHwgXCJDb21wb25lbnRcIjtcbiAgICBDb21wb25lbnRXaXRoTXNhbC5kaXNwbGF5TmFtZSA9IGB3aXRoTXNhbCgke2NvbXBvbmVudE5hbWV9KWA7XG4gICAgcmV0dXJuIENvbXBvbmVudFdpdGhNc2FsO1xufTtcblxuZXhwb3J0IHsgd2l0aE1zYWwgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdpdGhNc2FsLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/components/withMsal.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/error/ReactAuthError.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/error/ReactAuthError.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReactAuthError: function() { return /* binding */ ReactAuthError; },\n/* harmony export */   ReactAuthErrorMessage: function() { return /* binding */ ReactAuthErrorMessage; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/*! @azure/msal-react v2.0.2 2023-08-18 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst ReactAuthErrorMessage = {\n    invalidInteractionType: {\n        code: \"invalid_interaction_type\",\n        desc: \"The provided interaction type is invalid.\",\n    },\n    unableToFallbackToInteraction: {\n        code: \"unable_to_fallback_to_interaction\",\n        desc: \"Interaction is required but another interaction is already in progress. Please try again when the current interaction is complete.\",\n    },\n};\nclass ReactAuthError extends _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__.AuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        Object.setPrototypeOf(this, ReactAuthError.prototype);\n        this.name = \"ReactAuthError\";\n    }\n    static createInvalidInteractionTypeError() {\n        return new ReactAuthError(ReactAuthErrorMessage.invalidInteractionType.code, ReactAuthErrorMessage.invalidInteractionType.desc);\n    }\n    static createUnableToFallbackToInteractionError() {\n        return new ReactAuthError(ReactAuthErrorMessage.unableToFallbackToInteraction.code, ReactAuthErrorMessage.unableToFallbackToInteraction.desc);\n    }\n}\n\n\n//# sourceMappingURL=ReactAuthError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9lcnJvci9SZWFjdEF1dGhFcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQ21DOztBQUVoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDZCQUE2QiwwREFBUztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlEO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1yZWFjdC9kaXN0L2Vycm9yL1JlYWN0QXV0aEVycm9yLmpzPzEzZWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLXJlYWN0IHYyLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tICdAYXp1cmUvbXNhbC1icm93c2VyJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jb25zdCBSZWFjdEF1dGhFcnJvck1lc3NhZ2UgPSB7XG4gICAgaW52YWxpZEludGVyYWN0aW9uVHlwZToge1xuICAgICAgICBjb2RlOiBcImludmFsaWRfaW50ZXJhY3Rpb25fdHlwZVwiLFxuICAgICAgICBkZXNjOiBcIlRoZSBwcm92aWRlZCBpbnRlcmFjdGlvbiB0eXBlIGlzIGludmFsaWQuXCIsXG4gICAgfSxcbiAgICB1bmFibGVUb0ZhbGxiYWNrVG9JbnRlcmFjdGlvbjoge1xuICAgICAgICBjb2RlOiBcInVuYWJsZV90b19mYWxsYmFja190b19pbnRlcmFjdGlvblwiLFxuICAgICAgICBkZXNjOiBcIkludGVyYWN0aW9uIGlzIHJlcXVpcmVkIGJ1dCBhbm90aGVyIGludGVyYWN0aW9uIGlzIGFscmVhZHkgaW4gcHJvZ3Jlc3MuIFBsZWFzZSB0cnkgYWdhaW4gd2hlbiB0aGUgY3VycmVudCBpbnRlcmFjdGlvbiBpcyBjb21wbGV0ZS5cIixcbiAgICB9LFxufTtcbmNsYXNzIFJlYWN0QXV0aEVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSkge1xuICAgICAgICBzdXBlcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSk7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBSZWFjdEF1dGhFcnJvci5wcm90b3R5cGUpO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIlJlYWN0QXV0aEVycm9yXCI7XG4gICAgfVxuICAgIHN0YXRpYyBjcmVhdGVJbnZhbGlkSW50ZXJhY3Rpb25UeXBlRXJyb3IoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUmVhY3RBdXRoRXJyb3IoUmVhY3RBdXRoRXJyb3JNZXNzYWdlLmludmFsaWRJbnRlcmFjdGlvblR5cGUuY29kZSwgUmVhY3RBdXRoRXJyb3JNZXNzYWdlLmludmFsaWRJbnRlcmFjdGlvblR5cGUuZGVzYyk7XG4gICAgfVxuICAgIHN0YXRpYyBjcmVhdGVVbmFibGVUb0ZhbGxiYWNrVG9JbnRlcmFjdGlvbkVycm9yKCkge1xuICAgICAgICByZXR1cm4gbmV3IFJlYWN0QXV0aEVycm9yKFJlYWN0QXV0aEVycm9yTWVzc2FnZS51bmFibGVUb0ZhbGxiYWNrVG9JbnRlcmFjdGlvbi5jb2RlLCBSZWFjdEF1dGhFcnJvck1lc3NhZ2UudW5hYmxlVG9GYWxsYmFja1RvSW50ZXJhY3Rpb24uZGVzYyk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBSZWFjdEF1dGhFcnJvciwgUmVhY3RBdXRoRXJyb3JNZXNzYWdlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWFjdEF1dGhFcnJvci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/error/ReactAuthError.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/hooks/useAccount.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/hooks/useAccount.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAccount: function() { return /* binding */ useAccount; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/* harmony import */ var _useMsal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/* harmony import */ var _utils_utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/utilities.js */ \"./node_modules/@azure/msal-react/dist/utils/utilities.js\");\n/*! @azure/msal-react v2.0.2 2023-08-18 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction getAccount(instance, accountIdentifiers) {\n    if (!accountIdentifiers ||\n        (!accountIdentifiers.homeAccountId &&\n            !accountIdentifiers.localAccountId &&\n            !accountIdentifiers.username)) {\n        // If no account identifiers are provided, return active account\n        return instance.getActiveAccount();\n    }\n    return (0,_utils_utilities_js__WEBPACK_IMPORTED_MODULE_2__.getAccountByIdentifiers)(instance.getAllAccounts(), accountIdentifiers);\n}\n/**\n * Given 1 or more accountIdentifiers, returns the Account object if the user is signed-in\n * @param accountIdentifiers\n */\nfunction useAccount(accountIdentifiers) {\n    const { instance, inProgress, logger } = (0,_useMsal_js__WEBPACK_IMPORTED_MODULE_1__.useMsal)();\n    const [account, setAccount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => getAccount(instance, accountIdentifiers));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        setAccount((currentAccount) => {\n            const nextAccount = getAccount(instance, accountIdentifiers);\n            if (!_azure_msal_browser__WEBPACK_IMPORTED_MODULE_3__.AccountEntity.accountInfoIsEqual(currentAccount, nextAccount, true)) {\n                logger.info(\"useAccount - Updating account\");\n                return nextAccount;\n            }\n            return currentAccount;\n        });\n    }, [inProgress, accountIdentifiers, instance, logger]);\n    return account;\n}\n\n\n//# sourceMappingURL=useAccount.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9ob29rcy91c2VBY2NvdW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDYTtBQUMrQjtBQUNRO0FBQ2I7QUFDeUI7O0FBRWhFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNEVBQXVCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksK0JBQStCLEVBQUUsb0RBQU87QUFDcEQsa0NBQWtDLCtDQUFRO0FBQzFDLElBQUksZ0RBQVM7QUFDYjtBQUNBO0FBQ0EsaUJBQWlCLDhEQUFhO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBOztBQUVzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9ob29rcy91c2VBY2NvdW50LmpzPzQzZTUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLXJlYWN0IHYyLjAuMiAyMDIzLTA4LTE4ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQWNjb3VudEVudGl0eSB9IGZyb20gJ0BhenVyZS9tc2FsLWJyb3dzZXInO1xuaW1wb3J0IHsgdXNlTXNhbCB9IGZyb20gJy4vdXNlTXNhbC5qcyc7XG5pbXBvcnQgeyBnZXRBY2NvdW50QnlJZGVudGlmaWVycyB9IGZyb20gJy4uL3V0aWxzL3V0aWxpdGllcy5qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuZnVuY3Rpb24gZ2V0QWNjb3VudChpbnN0YW5jZSwgYWNjb3VudElkZW50aWZpZXJzKSB7XG4gICAgaWYgKCFhY2NvdW50SWRlbnRpZmllcnMgfHxcbiAgICAgICAgKCFhY2NvdW50SWRlbnRpZmllcnMuaG9tZUFjY291bnRJZCAmJlxuICAgICAgICAgICAgIWFjY291bnRJZGVudGlmaWVycy5sb2NhbEFjY291bnRJZCAmJlxuICAgICAgICAgICAgIWFjY291bnRJZGVudGlmaWVycy51c2VybmFtZSkpIHtcbiAgICAgICAgLy8gSWYgbm8gYWNjb3VudCBpZGVudGlmaWVycyBhcmUgcHJvdmlkZWQsIHJldHVybiBhY3RpdmUgYWNjb3VudFxuICAgICAgICByZXR1cm4gaW5zdGFuY2UuZ2V0QWN0aXZlQWNjb3VudCgpO1xuICAgIH1cbiAgICByZXR1cm4gZ2V0QWNjb3VudEJ5SWRlbnRpZmllcnMoaW5zdGFuY2UuZ2V0QWxsQWNjb3VudHMoKSwgYWNjb3VudElkZW50aWZpZXJzKTtcbn1cbi8qKlxuICogR2l2ZW4gMSBvciBtb3JlIGFjY291bnRJZGVudGlmaWVycywgcmV0dXJucyB0aGUgQWNjb3VudCBvYmplY3QgaWYgdGhlIHVzZXIgaXMgc2lnbmVkLWluXG4gKiBAcGFyYW0gYWNjb3VudElkZW50aWZpZXJzXG4gKi9cbmZ1bmN0aW9uIHVzZUFjY291bnQoYWNjb3VudElkZW50aWZpZXJzKSB7XG4gICAgY29uc3QgeyBpbnN0YW5jZSwgaW5Qcm9ncmVzcywgbG9nZ2VyIH0gPSB1c2VNc2FsKCk7XG4gICAgY29uc3QgW2FjY291bnQsIHNldEFjY291bnRdID0gdXNlU3RhdGUoKCkgPT4gZ2V0QWNjb3VudChpbnN0YW5jZSwgYWNjb3VudElkZW50aWZpZXJzKSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgc2V0QWNjb3VudCgoY3VycmVudEFjY291bnQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5leHRBY2NvdW50ID0gZ2V0QWNjb3VudChpbnN0YW5jZSwgYWNjb3VudElkZW50aWZpZXJzKTtcbiAgICAgICAgICAgIGlmICghQWNjb3VudEVudGl0eS5hY2NvdW50SW5mb0lzRXF1YWwoY3VycmVudEFjY291bnQsIG5leHRBY2NvdW50LCB0cnVlKSkge1xuICAgICAgICAgICAgICAgIGxvZ2dlci5pbmZvKFwidXNlQWNjb3VudCAtIFVwZGF0aW5nIGFjY291bnRcIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5leHRBY2NvdW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRBY2NvdW50O1xuICAgICAgICB9KTtcbiAgICB9LCBbaW5Qcm9ncmVzcywgYWNjb3VudElkZW50aWZpZXJzLCBpbnN0YW5jZSwgbG9nZ2VyXSk7XG4gICAgcmV0dXJuIGFjY291bnQ7XG59XG5cbmV4cG9ydCB7IHVzZUFjY291bnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZUFjY291bnQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/hooks/useAccount.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useIsAuthenticated: function() { return /* binding */ useIsAuthenticated; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _useMsal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/* harmony import */ var _utils_utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/utilities.js */ \"./node_modules/@azure/msal-react/dist/utils/utilities.js\");\n/*! @azure/msal-react v2.0.2 2023-08-18 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isAuthenticated(allAccounts, matchAccount) {\n    if (matchAccount &&\n        (matchAccount.username ||\n            matchAccount.homeAccountId ||\n            matchAccount.localAccountId)) {\n        return !!(0,_utils_utilities_js__WEBPACK_IMPORTED_MODULE_2__.getAccountByIdentifiers)(allAccounts, matchAccount);\n    }\n    return allAccounts.length > 0;\n}\n/**\n * Returns whether or not a user is currently signed-in. Optionally provide 1 or more accountIdentifiers to determine if a specific user is signed-in\n * @param matchAccount\n */\nfunction useIsAuthenticated(matchAccount) {\n    const { accounts: allAccounts, inProgress } = (0,_useMsal_js__WEBPACK_IMPORTED_MODULE_1__.useMsal)();\n    const [hasAuthenticated, setHasAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => {\n        if (inProgress === _azure_msal_browser__WEBPACK_IMPORTED_MODULE_3__.InteractionStatus.Startup) {\n            return false;\n        }\n        return isAuthenticated(allAccounts, matchAccount);\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        setHasAuthenticated(isAuthenticated(allAccounts, matchAccount));\n    }, [allAccounts, matchAccount]);\n    return hasAuthenticated;\n}\n\n\n//# sourceMappingURL=useIsAuthenticated.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9ob29rcy91c2VJc0F1dGhlbnRpY2F0ZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNhO0FBQytCO0FBQ0w7QUFDaUI7QUFDUTs7QUFFaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDRFQUF1QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvQ0FBb0MsRUFBRSxvREFBTztBQUN6RCxvREFBb0QsK0NBQVE7QUFDNUQsMkJBQTJCLGtFQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSSxnREFBUztBQUNiO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1yZWFjdC9kaXN0L2hvb2tzL3VzZUlzQXV0aGVudGljYXRlZC5qcz9jZjBjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1yZWFjdCB2Mi4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZU1zYWwgfSBmcm9tICcuL3VzZU1zYWwuanMnO1xuaW1wb3J0IHsgSW50ZXJhY3Rpb25TdGF0dXMgfSBmcm9tICdAYXp1cmUvbXNhbC1icm93c2VyJztcbmltcG9ydCB7IGdldEFjY291bnRCeUlkZW50aWZpZXJzIH0gZnJvbSAnLi4vdXRpbHMvdXRpbGl0aWVzLmpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5mdW5jdGlvbiBpc0F1dGhlbnRpY2F0ZWQoYWxsQWNjb3VudHMsIG1hdGNoQWNjb3VudCkge1xuICAgIGlmIChtYXRjaEFjY291bnQgJiZcbiAgICAgICAgKG1hdGNoQWNjb3VudC51c2VybmFtZSB8fFxuICAgICAgICAgICAgbWF0Y2hBY2NvdW50LmhvbWVBY2NvdW50SWQgfHxcbiAgICAgICAgICAgIG1hdGNoQWNjb3VudC5sb2NhbEFjY291bnRJZCkpIHtcbiAgICAgICAgcmV0dXJuICEhZ2V0QWNjb3VudEJ5SWRlbnRpZmllcnMoYWxsQWNjb3VudHMsIG1hdGNoQWNjb3VudCk7XG4gICAgfVxuICAgIHJldHVybiBhbGxBY2NvdW50cy5sZW5ndGggPiAwO1xufVxuLyoqXG4gKiBSZXR1cm5zIHdoZXRoZXIgb3Igbm90IGEgdXNlciBpcyBjdXJyZW50bHkgc2lnbmVkLWluLiBPcHRpb25hbGx5IHByb3ZpZGUgMSBvciBtb3JlIGFjY291bnRJZGVudGlmaWVycyB0byBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyB1c2VyIGlzIHNpZ25lZC1pblxuICogQHBhcmFtIG1hdGNoQWNjb3VudFxuICovXG5mdW5jdGlvbiB1c2VJc0F1dGhlbnRpY2F0ZWQobWF0Y2hBY2NvdW50KSB7XG4gICAgY29uc3QgeyBhY2NvdW50czogYWxsQWNjb3VudHMsIGluUHJvZ3Jlc3MgfSA9IHVzZU1zYWwoKTtcbiAgICBjb25zdCBbaGFzQXV0aGVudGljYXRlZCwgc2V0SGFzQXV0aGVudGljYXRlZF0gPSB1c2VTdGF0ZSgoKSA9PiB7XG4gICAgICAgIGlmIChpblByb2dyZXNzID09PSBJbnRlcmFjdGlvblN0YXR1cy5TdGFydHVwKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGlzQXV0aGVudGljYXRlZChhbGxBY2NvdW50cywgbWF0Y2hBY2NvdW50KTtcbiAgICB9KTtcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBzZXRIYXNBdXRoZW50aWNhdGVkKGlzQXV0aGVudGljYXRlZChhbGxBY2NvdW50cywgbWF0Y2hBY2NvdW50KSk7XG4gICAgfSwgW2FsbEFjY291bnRzLCBtYXRjaEFjY291bnRdKTtcbiAgICByZXR1cm4gaGFzQXV0aGVudGljYXRlZDtcbn1cblxuZXhwb3J0IHsgdXNlSXNBdXRoZW50aWNhdGVkIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VJc0F1dGhlbnRpY2F0ZWQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/hooks/useMsal.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/hooks/useMsal.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMsal: function() { return /* binding */ useMsal; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _MsalContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MsalContext.js */ \"./node_modules/@azure/msal-react/dist/MsalContext.js\");\n/*! @azure/msal-react v2.0.2 2023-08-18 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Returns Msal Context values\n */\nconst useMsal = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_MsalContext_js__WEBPACK_IMPORTED_MODULE_1__.MsalContext);\n\n\n//# sourceMappingURL=useMsal.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9ob29rcy91c2VNc2FsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDc0I7QUFDYTs7QUFFaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsaURBQVUsQ0FBQyx3REFBVzs7QUFFekI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLXJlYWN0L2Rpc3QvaG9va3MvdXNlTXNhbC5qcz85ZTlhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1yZWFjdCB2Mi4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IE1zYWxDb250ZXh0IH0gZnJvbSAnLi4vTXNhbENvbnRleHQuanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogUmV0dXJucyBNc2FsIENvbnRleHQgdmFsdWVzXG4gKi9cbmNvbnN0IHVzZU1zYWwgPSAoKSA9PiB1c2VDb250ZXh0KE1zYWxDb250ZXh0KTtcblxuZXhwb3J0IHsgdXNlTXNhbCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlTXNhbC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/hooks/useMsal.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/hooks/useMsalAuthentication.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/hooks/useMsalAuthentication.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMsalAuthentication: function() { return /* binding */ useMsalAuthentication; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/* harmony import */ var _useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useIsAuthenticated.js */ \"./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js\");\n/* harmony import */ var _useMsal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/* harmony import */ var _useAccount_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useAccount.js */ \"./node_modules/@azure/msal-react/dist/hooks/useAccount.js\");\n/* harmony import */ var _error_ReactAuthError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ReactAuthError.js */ \"./node_modules/@azure/msal-react/dist/error/ReactAuthError.js\");\n/*! @azure/msal-react v2.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * If a user is not currently signed in this hook invokes a login. Failed logins can be retried using the login callback returned.\n * If a user is currently signed in this hook attempts to acquire a token. Subsequent token requests can use the acquireToken callback returned.\n * Optionally provide a request object to be used in the login/acquireToken call.\n * Optionally provide a specific user that should be logged in.\n * @param interactionType\n * @param authenticationRequest\n * @param accountIdentifiers\n */\nfunction useMsalAuthentication(interactionType, authenticationRequest, accountIdentifiers) {\n    const { instance, inProgress, logger } = (0,_useMsal_js__WEBPACK_IMPORTED_MODULE_2__.useMsal)();\n    const isAuthenticated = (0,_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_1__.useIsAuthenticated)(accountIdentifiers);\n    const account = (0,_useAccount_js__WEBPACK_IMPORTED_MODULE_3__.useAccount)(accountIdentifiers);\n    const [[result, error], setResponse] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([null, null]);\n    // Used to prevent state updates after unmount\n    const mounted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        return () => {\n            mounted.current = false;\n        };\n    }, []);\n    // Boolean used to check if interaction is in progress in acquireTokenSilent fallback. Use Ref instead of state to prevent acquireToken function from being regenerated on each change to interactionInProgress value\n    const interactionInProgress = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(inProgress !== _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionStatus.None);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        interactionInProgress.current = inProgress !== _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionStatus.None;\n    }, [inProgress]);\n    // Flag used to control when the hook calls login/acquireToken\n    const shouldAcquireToken = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (!!error) {\n            // Errors should be handled by consuming component\n            shouldAcquireToken.current = false;\n            return;\n        }\n        if (!!result) {\n            // Token has already been acquired, consuming component/application is responsible for renewing\n            shouldAcquireToken.current = false;\n            return;\n        }\n    }, [error, result]);\n    const login = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (callbackInteractionType, callbackRequest) => {\n        const loginType = callbackInteractionType || interactionType;\n        const loginRequest = callbackRequest || authenticationRequest;\n        switch (loginType) {\n            case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Popup:\n                logger.verbose(\"useMsalAuthentication - Calling loginPopup\");\n                return instance.loginPopup(loginRequest);\n            case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Redirect:\n                // This promise is not expected to resolve due to full frame redirect\n                logger.verbose(\"useMsalAuthentication - Calling loginRedirect\");\n                return instance\n                    .loginRedirect(loginRequest)\n                    .then(null);\n            case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Silent:\n                logger.verbose(\"useMsalAuthentication - Calling ssoSilent\");\n                return instance.ssoSilent(loginRequest);\n            default:\n                throw _error_ReactAuthError_js__WEBPACK_IMPORTED_MODULE_4__.ReactAuthError.createInvalidInteractionTypeError();\n        }\n    }, [instance, interactionType, authenticationRequest, logger]);\n    const acquireToken = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (callbackInteractionType, callbackRequest) => {\n        const fallbackInteractionType = callbackInteractionType || interactionType;\n        let tokenRequest;\n        if (callbackRequest) {\n            logger.trace(\"useMsalAuthentication - acquireToken - Using request provided in the callback\");\n            tokenRequest = {\n                ...callbackRequest,\n            };\n        }\n        else if (authenticationRequest) {\n            logger.trace(\"useMsalAuthentication - acquireToken - Using request provided in the hook\");\n            tokenRequest = {\n                ...authenticationRequest,\n                scopes: authenticationRequest.scopes || _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.OIDC_DEFAULT_SCOPES,\n            };\n        }\n        else {\n            logger.trace(\"useMsalAuthentication - acquireToken - No request object provided, using default request.\");\n            tokenRequest = {\n                scopes: _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.OIDC_DEFAULT_SCOPES,\n            };\n        }\n        if (!tokenRequest.account && account) {\n            logger.trace(\"useMsalAuthentication - acquireToken - Attaching account to request\");\n            tokenRequest.account = account;\n        }\n        const getToken = async () => {\n            logger.verbose(\"useMsalAuthentication - Calling acquireTokenSilent\");\n            return instance\n                .acquireTokenSilent(tokenRequest)\n                .catch(async (e) => {\n                if (e instanceof _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionRequiredAuthError) {\n                    if (!interactionInProgress.current) {\n                        logger.error(\"useMsalAuthentication - Interaction required, falling back to interaction\");\n                        return login(fallbackInteractionType, tokenRequest);\n                    }\n                    else {\n                        logger.error(\"useMsalAuthentication - Interaction required but is already in progress. Please try again, if needed, after interaction completes.\");\n                        throw _error_ReactAuthError_js__WEBPACK_IMPORTED_MODULE_4__.ReactAuthError.createUnableToFallbackToInteractionError();\n                    }\n                }\n                throw e;\n            });\n        };\n        return getToken()\n            .then((response) => {\n            if (mounted.current) {\n                setResponse([response, null]);\n            }\n            return response;\n        })\n            .catch((e) => {\n            if (mounted.current) {\n                setResponse([null, e]);\n            }\n            throw e;\n        });\n    }, [\n        instance,\n        interactionType,\n        authenticationRequest,\n        logger,\n        account,\n        login,\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const callbackId = instance.addEventCallback((message) => {\n            switch (message.eventType) {\n                case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.EventType.LOGIN_SUCCESS:\n                case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.EventType.SSO_SILENT_SUCCESS:\n                    if (message.payload) {\n                        setResponse([\n                            message.payload,\n                            null,\n                        ]);\n                    }\n                    break;\n                case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.EventType.LOGIN_FAILURE:\n                case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.EventType.SSO_SILENT_FAILURE:\n                    if (message.error) {\n                        setResponse([null, message.error]);\n                    }\n                    break;\n            }\n        });\n        logger.verbose(`useMsalAuthentication - Registered event callback with id: ${callbackId}`);\n        return () => {\n            if (callbackId) {\n                logger.verbose(`useMsalAuthentication - Removing event callback ${callbackId}`);\n                instance.removeEventCallback(callbackId);\n            }\n        };\n    }, [instance, logger]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (shouldAcquireToken.current &&\n            inProgress === _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionStatus.None) {\n            shouldAcquireToken.current = false;\n            if (!isAuthenticated) {\n                logger.info(\"useMsalAuthentication - No user is authenticated, attempting to login\");\n                login().catch(() => {\n                    // Errors are saved in state above\n                    return;\n                });\n            }\n            else if (account) {\n                logger.info(\"useMsalAuthentication - User is authenticated, attempting to acquire token\");\n                acquireToken().catch(() => {\n                    // Errors are saved in state above\n                    return;\n                });\n            }\n        }\n    }, [isAuthenticated, account, inProgress, login, acquireToken, logger]);\n    return {\n        login,\n        acquireToken,\n        result,\n        error,\n    };\n}\n\n\n//# sourceMappingURL=useMsalAuthentication.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/hooks/useMsalAuthentication.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticatedTemplate: function() { return /* reexport safe */ _components_AuthenticatedTemplate_js__WEBPACK_IMPORTED_MODULE_2__.AuthenticatedTemplate; },\n/* harmony export */   MsalAuthenticationTemplate: function() { return /* reexport safe */ _components_MsalAuthenticationTemplate_js__WEBPACK_IMPORTED_MODULE_4__.MsalAuthenticationTemplate; },\n/* harmony export */   MsalConsumer: function() { return /* reexport safe */ _MsalContext_js__WEBPACK_IMPORTED_MODULE_0__.MsalConsumer; },\n/* harmony export */   MsalContext: function() { return /* reexport safe */ _MsalContext_js__WEBPACK_IMPORTED_MODULE_0__.MsalContext; },\n/* harmony export */   MsalProvider: function() { return /* reexport safe */ _MsalProvider_js__WEBPACK_IMPORTED_MODULE_1__.MsalProvider; },\n/* harmony export */   UnauthenticatedTemplate: function() { return /* reexport safe */ _components_UnauthenticatedTemplate_js__WEBPACK_IMPORTED_MODULE_3__.UnauthenticatedTemplate; },\n/* harmony export */   useAccount: function() { return /* reexport safe */ _hooks_useAccount_js__WEBPACK_IMPORTED_MODULE_7__.useAccount; },\n/* harmony export */   useIsAuthenticated: function() { return /* reexport safe */ _hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_8__.useIsAuthenticated; },\n/* harmony export */   useMsal: function() { return /* reexport safe */ _hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_6__.useMsal; },\n/* harmony export */   useMsalAuthentication: function() { return /* reexport safe */ _hooks_useMsalAuthentication_js__WEBPACK_IMPORTED_MODULE_9__.useMsalAuthentication; },\n/* harmony export */   version: function() { return /* reexport safe */ _packageMetadata_js__WEBPACK_IMPORTED_MODULE_10__.version; },\n/* harmony export */   withMsal: function() { return /* reexport safe */ _components_withMsal_js__WEBPACK_IMPORTED_MODULE_5__.withMsal; }\n/* harmony export */ });\n/* harmony import */ var _MsalContext_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MsalContext.js */ \"./node_modules/@azure/msal-react/dist/MsalContext.js\");\n/* harmony import */ var _MsalProvider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MsalProvider.js */ \"./node_modules/@azure/msal-react/dist/MsalProvider.js\");\n/* harmony import */ var _components_AuthenticatedTemplate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/AuthenticatedTemplate.js */ \"./node_modules/@azure/msal-react/dist/components/AuthenticatedTemplate.js\");\n/* harmony import */ var _components_UnauthenticatedTemplate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/UnauthenticatedTemplate.js */ \"./node_modules/@azure/msal-react/dist/components/UnauthenticatedTemplate.js\");\n/* harmony import */ var _components_MsalAuthenticationTemplate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/MsalAuthenticationTemplate.js */ \"./node_modules/@azure/msal-react/dist/components/MsalAuthenticationTemplate.js\");\n/* harmony import */ var _components_withMsal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/withMsal.js */ \"./node_modules/@azure/msal-react/dist/components/withMsal.js\");\n/* harmony import */ var _hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hooks/useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/* harmony import */ var _hooks_useAccount_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./hooks/useAccount.js */ \"./node_modules/@azure/msal-react/dist/hooks/useAccount.js\");\n/* harmony import */ var _hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./hooks/useIsAuthenticated.js */ \"./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js\");\n/* harmony import */ var _hooks_useMsalAuthentication_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./hooks/useMsalAuthentication.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsalAuthentication.js\");\n/* harmony import */ var _packageMetadata_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./packageMetadata.js */ \"./node_modules/@azure/msal-react/dist/packageMetadata.js\");\n/*! @azure/msal-react v2.0.2 2023-08-18 */\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDZ0Q7QUFDWjtBQUM2QjtBQUNJO0FBQ007QUFDcEM7QUFDUDtBQUNNO0FBQ2dCO0FBQ007QUFDMUI7QUFDL0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLXJlYWN0L2Rpc3QvaW5kZXguanM/YTJiOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtcmVhY3QgdjIuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0JztcbmV4cG9ydCB7IE1zYWxDb25zdW1lciwgTXNhbENvbnRleHQgfSBmcm9tICcuL01zYWxDb250ZXh0LmpzJztcbmV4cG9ydCB7IE1zYWxQcm92aWRlciB9IGZyb20gJy4vTXNhbFByb3ZpZGVyLmpzJztcbmV4cG9ydCB7IEF1dGhlbnRpY2F0ZWRUZW1wbGF0ZSB9IGZyb20gJy4vY29tcG9uZW50cy9BdXRoZW50aWNhdGVkVGVtcGxhdGUuanMnO1xuZXhwb3J0IHsgVW5hdXRoZW50aWNhdGVkVGVtcGxhdGUgfSBmcm9tICcuL2NvbXBvbmVudHMvVW5hdXRoZW50aWNhdGVkVGVtcGxhdGUuanMnO1xuZXhwb3J0IHsgTXNhbEF1dGhlbnRpY2F0aW9uVGVtcGxhdGUgfSBmcm9tICcuL2NvbXBvbmVudHMvTXNhbEF1dGhlbnRpY2F0aW9uVGVtcGxhdGUuanMnO1xuZXhwb3J0IHsgd2l0aE1zYWwgfSBmcm9tICcuL2NvbXBvbmVudHMvd2l0aE1zYWwuanMnO1xuZXhwb3J0IHsgdXNlTXNhbCB9IGZyb20gJy4vaG9va3MvdXNlTXNhbC5qcyc7XG5leHBvcnQgeyB1c2VBY2NvdW50IH0gZnJvbSAnLi9ob29rcy91c2VBY2NvdW50LmpzJztcbmV4cG9ydCB7IHVzZUlzQXV0aGVudGljYXRlZCB9IGZyb20gJy4vaG9va3MvdXNlSXNBdXRoZW50aWNhdGVkLmpzJztcbmV4cG9ydCB7IHVzZU1zYWxBdXRoZW50aWNhdGlvbiB9IGZyb20gJy4vaG9va3MvdXNlTXNhbEF1dGhlbnRpY2F0aW9uLmpzJztcbmV4cG9ydCB7IHZlcnNpb24gfSBmcm9tICcuL3BhY2thZ2VNZXRhZGF0YS5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/packageMetadata.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/packageMetadata.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   name: function() { return /* binding */ name; },\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\n/*! @azure/msal-react v2.0.2 2023-08-18 */\n\n/* eslint-disable header/header */\nconst name = \"@azure/msal-react\";\nconst version = \"2.0.2\";\n\n\n//# sourceMappingURL=packageMetadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9wYWNrYWdlTWV0YWRhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9wYWNrYWdlTWV0YWRhdGEuanM/ZWQxMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtcmVhY3QgdjIuMC4yIDIwMjMtMDgtMTggKi9cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIGhlYWRlci9oZWFkZXIgKi9cbmNvbnN0IG5hbWUgPSBcIkBhenVyZS9tc2FsLXJlYWN0XCI7XG5jb25zdCB2ZXJzaW9uID0gXCIyLjAuMlwiO1xuXG5leHBvcnQgeyBuYW1lLCB2ZXJzaW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWNrYWdlTWV0YWRhdGEuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/packageMetadata.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/utils/utilities.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/utils/utilities.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   accountArraysAreEqual: function() { return /* binding */ accountArraysAreEqual; },\n/* harmony export */   getAccountByIdentifiers: function() { return /* binding */ getAccountByIdentifiers; },\n/* harmony export */   getChildrenOrFunction: function() { return /* binding */ getChildrenOrFunction; }\n/* harmony export */ });\n/*! @azure/msal-react v2.0.2 2023-08-18 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction getChildrenOrFunction(children, args) {\n    if (typeof children === \"function\") {\n        return children(args);\n    }\n    return children;\n}\n/**\n * Helper function to determine whether 2 arrays are equal\n * Used to avoid unnecessary state updates\n * @param arrayA\n * @param arrayB\n */\nfunction accountArraysAreEqual(arrayA, arrayB) {\n    if (arrayA.length !== arrayB.length) {\n        return false;\n    }\n    const comparisonArray = [...arrayB];\n    return arrayA.every((elementA) => {\n        const elementB = comparisonArray.shift();\n        if (!elementA || !elementB) {\n            return false;\n        }\n        return (elementA.homeAccountId === elementB.homeAccountId &&\n            elementA.localAccountId === elementB.localAccountId &&\n            elementA.username === elementB.username);\n    });\n}\nfunction getAccountByIdentifiers(allAccounts, accountIdentifiers) {\n    if (allAccounts.length > 0 &&\n        (accountIdentifiers.homeAccountId ||\n            accountIdentifiers.localAccountId ||\n            accountIdentifiers.username)) {\n        const matchedAccounts = allAccounts.filter((accountObj) => {\n            if (accountIdentifiers.username &&\n                accountIdentifiers.username.toLowerCase() !==\n                    accountObj.username.toLowerCase()) {\n                return false;\n            }\n            if (accountIdentifiers.homeAccountId &&\n                accountIdentifiers.homeAccountId.toLowerCase() !==\n                    accountObj.homeAccountId.toLowerCase()) {\n                return false;\n            }\n            if (accountIdentifiers.localAccountId &&\n                accountIdentifiers.localAccountId.toLowerCase() !==\n                    accountObj.localAccountId.toLowerCase()) {\n                return false;\n            }\n            return true;\n        });\n        return matchedAccounts[0] || null;\n    }\n    else {\n        return null;\n    }\n}\n\n\n//# sourceMappingURL=utilities.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC91dGlscy91dGlsaXRpZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlGO0FBQ2pGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1yZWFjdC9kaXN0L3V0aWxzL3V0aWxpdGllcy5qcz9hZjM0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1yZWFjdCB2Mi4wLjIgMjAyMy0wOC0xOCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5mdW5jdGlvbiBnZXRDaGlsZHJlbk9yRnVuY3Rpb24oY2hpbGRyZW4sIGFyZ3MpIHtcbiAgICBpZiAodHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIGNoaWxkcmVuKGFyZ3MpO1xuICAgIH1cbiAgICByZXR1cm4gY2hpbGRyZW47XG59XG4vKipcbiAqIEhlbHBlciBmdW5jdGlvbiB0byBkZXRlcm1pbmUgd2hldGhlciAyIGFycmF5cyBhcmUgZXF1YWxcbiAqIFVzZWQgdG8gYXZvaWQgdW5uZWNlc3Nhcnkgc3RhdGUgdXBkYXRlc1xuICogQHBhcmFtIGFycmF5QVxuICogQHBhcmFtIGFycmF5QlxuICovXG5mdW5jdGlvbiBhY2NvdW50QXJyYXlzQXJlRXF1YWwoYXJyYXlBLCBhcnJheUIpIHtcbiAgICBpZiAoYXJyYXlBLmxlbmd0aCAhPT0gYXJyYXlCLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IGNvbXBhcmlzb25BcnJheSA9IFsuLi5hcnJheUJdO1xuICAgIHJldHVybiBhcnJheUEuZXZlcnkoKGVsZW1lbnRBKSA9PiB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnRCID0gY29tcGFyaXNvbkFycmF5LnNoaWZ0KCk7XG4gICAgICAgIGlmICghZWxlbWVudEEgfHwgIWVsZW1lbnRCKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChlbGVtZW50QS5ob21lQWNjb3VudElkID09PSBlbGVtZW50Qi5ob21lQWNjb3VudElkICYmXG4gICAgICAgICAgICBlbGVtZW50QS5sb2NhbEFjY291bnRJZCA9PT0gZWxlbWVudEIubG9jYWxBY2NvdW50SWQgJiZcbiAgICAgICAgICAgIGVsZW1lbnRBLnVzZXJuYW1lID09PSBlbGVtZW50Qi51c2VybmFtZSk7XG4gICAgfSk7XG59XG5mdW5jdGlvbiBnZXRBY2NvdW50QnlJZGVudGlmaWVycyhhbGxBY2NvdW50cywgYWNjb3VudElkZW50aWZpZXJzKSB7XG4gICAgaWYgKGFsbEFjY291bnRzLmxlbmd0aCA+IDAgJiZcbiAgICAgICAgKGFjY291bnRJZGVudGlmaWVycy5ob21lQWNjb3VudElkIHx8XG4gICAgICAgICAgICBhY2NvdW50SWRlbnRpZmllcnMubG9jYWxBY2NvdW50SWQgfHxcbiAgICAgICAgICAgIGFjY291bnRJZGVudGlmaWVycy51c2VybmFtZSkpIHtcbiAgICAgICAgY29uc3QgbWF0Y2hlZEFjY291bnRzID0gYWxsQWNjb3VudHMuZmlsdGVyKChhY2NvdW50T2JqKSA9PiB7XG4gICAgICAgICAgICBpZiAoYWNjb3VudElkZW50aWZpZXJzLnVzZXJuYW1lICYmXG4gICAgICAgICAgICAgICAgYWNjb3VudElkZW50aWZpZXJzLnVzZXJuYW1lLnRvTG93ZXJDYXNlKCkgIT09XG4gICAgICAgICAgICAgICAgICAgIGFjY291bnRPYmoudXNlcm5hbWUudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChhY2NvdW50SWRlbnRpZmllcnMuaG9tZUFjY291bnRJZCAmJlxuICAgICAgICAgICAgICAgIGFjY291bnRJZGVudGlmaWVycy5ob21lQWNjb3VudElkLnRvTG93ZXJDYXNlKCkgIT09XG4gICAgICAgICAgICAgICAgICAgIGFjY291bnRPYmouaG9tZUFjY291bnRJZC50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGFjY291bnRJZGVudGlmaWVycy5sb2NhbEFjY291bnRJZCAmJlxuICAgICAgICAgICAgICAgIGFjY291bnRJZGVudGlmaWVycy5sb2NhbEFjY291bnRJZC50b0xvd2VyQ2FzZSgpICE9PVxuICAgICAgICAgICAgICAgICAgICBhY2NvdW50T2JqLmxvY2FsQWNjb3VudElkLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBtYXRjaGVkQWNjb3VudHNbMF0gfHwgbnVsbDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgYWNjb3VudEFycmF5c0FyZUVxdWFsLCBnZXRBY2NvdW50QnlJZGVudGlmaWVycywgZ2V0Q2hpbGRyZW5PckZ1bmN0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlsaXRpZXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/utils/utilities.js\n"));

/***/ }),

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Axios: function() { return /* binding */ Axios; },\n/* harmony export */   AxiosError: function() { return /* binding */ AxiosError; },\n/* harmony export */   AxiosHeaders: function() { return /* binding */ AxiosHeaders; },\n/* harmony export */   Cancel: function() { return /* binding */ Cancel; },\n/* harmony export */   CancelToken: function() { return /* binding */ CancelToken; },\n/* harmony export */   CanceledError: function() { return /* binding */ CanceledError; },\n/* harmony export */   HttpStatusCode: function() { return /* binding */ HttpStatusCode; },\n/* harmony export */   VERSION: function() { return /* binding */ VERSION; },\n/* harmony export */   all: function() { return /* binding */ all; },\n/* harmony export */   \"default\": function() { return /* reexport safe */ _lib_axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   formToJSON: function() { return /* binding */ formToJSON; },\n/* harmony export */   getAdapter: function() { return /* binding */ getAdapter; },\n/* harmony export */   isAxiosError: function() { return /* binding */ isAxiosError; },\n/* harmony export */   isCancel: function() { return /* binding */ isCancel; },\n/* harmony export */   mergeConfig: function() { return /* binding */ mergeConfig; },\n/* harmony export */   spread: function() { return /* binding */ spread; },\n/* harmony export */   toFormData: function() { return /* binding */ toFormData; }\n/* harmony export */ });\n/* harmony import */ var _lib_axios_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/axios.js */ \"./node_modules/axios/lib/axios.js\");\n\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = _lib_axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQW1DOztBQUVuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxFQUFFLHFEQUFLOztBQW9CUiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanM/ZjBjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnLi9saWIvYXhpb3MuanMnO1xuXG4vLyBUaGlzIG1vZHVsZSBpcyBpbnRlbmRlZCB0byB1bndyYXAgQXhpb3MgZGVmYXVsdCBleHBvcnQgYXMgbmFtZWQuXG4vLyBLZWVwIHRvcC1sZXZlbCBleHBvcnQgc2FtZSB3aXRoIHN0YXRpYyBwcm9wZXJ0aWVzXG4vLyBzbyB0aGF0IGl0IGNhbiBrZWVwIHNhbWUgd2l0aCBlcyBtb2R1bGUgb3IgY2pzXG5jb25zdCB7XG4gIEF4aW9zLFxuICBBeGlvc0Vycm9yLFxuICBDYW5jZWxlZEVycm9yLFxuICBpc0NhbmNlbCxcbiAgQ2FuY2VsVG9rZW4sXG4gIFZFUlNJT04sXG4gIGFsbCxcbiAgQ2FuY2VsLFxuICBpc0F4aW9zRXJyb3IsXG4gIHNwcmVhZCxcbiAgdG9Gb3JtRGF0YSxcbiAgQXhpb3NIZWFkZXJzLFxuICBIdHRwU3RhdHVzQ29kZSxcbiAgZm9ybVRvSlNPTixcbiAgZ2V0QWRhcHRlcixcbiAgbWVyZ2VDb25maWdcbn0gPSBheGlvcztcblxuZXhwb3J0IHtcbiAgYXhpb3MgYXMgZGVmYXVsdCxcbiAgQXhpb3MsXG4gIEF4aW9zRXJyb3IsXG4gIENhbmNlbGVkRXJyb3IsXG4gIGlzQ2FuY2VsLFxuICBDYW5jZWxUb2tlbixcbiAgVkVSU0lPTixcbiAgYWxsLFxuICBDYW5jZWwsXG4gIGlzQXhpb3NFcnJvcixcbiAgc3ByZWFkLFxuICB0b0Zvcm1EYXRhLFxuICBBeGlvc0hlYWRlcnMsXG4gIEh0dHBTdGF0dXNDb2RlLFxuICBmb3JtVG9KU09OLFxuICBnZXRBZGFwdGVyLFxuICBtZXJnZUNvbmZpZ1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/index.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/adapters/adapters.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/adapters/adapters.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _http_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http.js */ \"./node_modules/axios/lib/helpers/null.js\");\n/* harmony import */ var _xhr_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./xhr.js */ \"./node_modules/axios/lib/adapters/xhr.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n\nconst knownAdapters = {\n  http: _http_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  xhr: _xhr_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  getAdapter: (adapters) => {\n    adapters = _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2FkYXB0ZXJzL2FkYXB0ZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdDO0FBQ0k7QUFDRjtBQUNhOztBQUUvQztBQUNBLFFBQVEsZ0RBQVc7QUFDbkIsT0FBTywrQ0FBVTtBQUNqQjs7QUFFQSx5REFBYTtBQUNiO0FBQ0E7QUFDQSx5Q0FBeUMsTUFBTTtBQUMvQyxNQUFNO0FBQ047QUFDQTtBQUNBLDhDQUE4QyxNQUFNO0FBQ3BEO0FBQ0EsQ0FBQzs7QUFFRCwrREFBZTtBQUNmO0FBQ0EsZUFBZSx5REFBYTs7QUFFNUIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7O0FBRUEsb0JBQW9CLFlBQVk7QUFDaEM7QUFDQSxvQkFBb0IsMERBQWM7QUFDbEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0IsMkRBQVU7QUFDNUIscUJBQXFCLGVBQWU7QUFDcEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsUUFBUSw0REFBZ0I7QUFDeEIsc0JBQXNCLGNBQWM7QUFDcEMsOEJBQThCLGNBQWM7QUFDNUM7QUFDQTs7QUFFQSxTQUFTLDREQUFnQjtBQUN6QjtBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2FkYXB0ZXJzL2FkYXB0ZXJzLmpzP2FmMzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCBodHRwQWRhcHRlciBmcm9tICcuL2h0dHAuanMnO1xuaW1wb3J0IHhockFkYXB0ZXIgZnJvbSAnLi94aHIuanMnO1xuaW1wb3J0IEF4aW9zRXJyb3IgZnJvbSBcIi4uL2NvcmUvQXhpb3NFcnJvci5qc1wiO1xuXG5jb25zdCBrbm93bkFkYXB0ZXJzID0ge1xuICBodHRwOiBodHRwQWRhcHRlcixcbiAgeGhyOiB4aHJBZGFwdGVyXG59XG5cbnV0aWxzLmZvckVhY2goa25vd25BZGFwdGVycywgKGZuLCB2YWx1ZSkgPT4ge1xuICBpZihmbikge1xuICAgIHRyeSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZm4sICduYW1lJywge3ZhbHVlfSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShmbiwgJ2FkYXB0ZXJOYW1lJywge3ZhbHVlfSk7XG4gIH1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGdldEFkYXB0ZXI6IChhZGFwdGVycykgPT4ge1xuICAgIGFkYXB0ZXJzID0gdXRpbHMuaXNBcnJheShhZGFwdGVycykgPyBhZGFwdGVycyA6IFthZGFwdGVyc107XG5cbiAgICBjb25zdCB7bGVuZ3RofSA9IGFkYXB0ZXJzO1xuICAgIGxldCBuYW1lT3JBZGFwdGVyO1xuICAgIGxldCBhZGFwdGVyO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgbmFtZU9yQWRhcHRlciA9IGFkYXB0ZXJzW2ldO1xuICAgICAgaWYoKGFkYXB0ZXIgPSB1dGlscy5pc1N0cmluZyhuYW1lT3JBZGFwdGVyKSA/IGtub3duQWRhcHRlcnNbbmFtZU9yQWRhcHRlci50b0xvd2VyQ2FzZSgpXSA6IG5hbWVPckFkYXB0ZXIpKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICghYWRhcHRlcikge1xuICAgICAgaWYgKGFkYXB0ZXIgPT09IGZhbHNlKSB7XG4gICAgICAgIHRocm93IG5ldyBBeGlvc0Vycm9yKFxuICAgICAgICAgIGBBZGFwdGVyICR7bmFtZU9yQWRhcHRlcn0gaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgZW52aXJvbm1lbnRgLFxuICAgICAgICAgICdFUlJfTk9UX1NVUFBPUlQnXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgdXRpbHMuaGFzT3duUHJvcChrbm93bkFkYXB0ZXJzLCBuYW1lT3JBZGFwdGVyKSA/XG4gICAgICAgICAgYEFkYXB0ZXIgJyR7bmFtZU9yQWRhcHRlcn0nIGlzIG5vdCBhdmFpbGFibGUgaW4gdGhlIGJ1aWxkYCA6XG4gICAgICAgICAgYFVua25vd24gYWRhcHRlciAnJHtuYW1lT3JBZGFwdGVyfSdgXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmICghdXRpbHMuaXNGdW5jdGlvbihhZGFwdGVyKSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYWRhcHRlciBpcyBub3QgYSBmdW5jdGlvbicpO1xuICAgIH1cblxuICAgIHJldHVybiBhZGFwdGVyO1xuICB9LFxuICBhZGFwdGVyczoga25vd25BZGFwdGVyc1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/adapters/adapters.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_settle_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../core/settle.js */ \"./node_modules/axios/lib/core/settle.js\");\n/* harmony import */ var _helpers_cookies_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../helpers/cookies.js */ \"./node_modules/axios/lib/helpers/cookies.js\");\n/* harmony import */ var _helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../helpers/buildURL.js */ \"./node_modules/axios/lib/helpers/buildURL.js\");\n/* harmony import */ var _core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/buildFullPath.js */ \"./node_modules/axios/lib/core/buildFullPath.js\");\n/* harmony import */ var _helpers_isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../helpers/isURLSameOrigin.js */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\n/* harmony import */ var _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../defaults/transitional.js */ \"./node_modules/axios/lib/defaults/transitional.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../helpers/parseProtocol.js */ \"./node_modules/axios/lib/helpers/parseProtocol.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _helpers_speedometer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/speedometer.js */ \"./node_modules/axios/lib/helpers/speedometer.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = (0,_helpers_speedometer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isFormData(requestData)) {\n      if (_platform_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isStandardBrowserEnv || _platform_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else {\n        requestHeaders.setContentType('multipart/form-data;', false); // mobile/desktop app frameworks\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = (0,_core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), (0,_helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      (0,_core_settle_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]('Request aborted', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]('Network Error', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"];\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"](\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ETIMEDOUT : _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (_platform_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || (0,_helpers_isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(fullPath))\n        && config.xsrfCookieName && _helpers_cookies_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"].read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"](null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = (0,_helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(fullPath);\n\n    if (protocol && _platform_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].protocols.indexOf(protocol) === -1) {\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]('Unsupported protocol ' + protocol + ':', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2FkYXB0ZXJzL3hoci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFhOztBQUVxQjtBQUNPO0FBQ0s7QUFDRTtBQUNLO0FBQ1M7QUFDQztBQUNoQjtBQUNRO0FBQ0M7QUFDWjtBQUNPO0FBQ0M7O0FBRXBEO0FBQ0E7QUFDQSx1QkFBdUIsbUVBQVc7O0FBRWxDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBLCtEQUFlO0FBQ2Y7QUFDQTtBQUNBLDJCQUEyQixrRUFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFFBQVEsNERBQWdCO0FBQ3hCLFVBQVUsK0VBQTZCLElBQUksd0ZBQXNDO0FBQ2pGLDhDQUE4QztBQUM5QyxRQUFRO0FBQ1IsMkRBQTJELFdBQVc7QUFDdEU7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCLGtFQUFhOztBQUVsQyw4Q0FBOEMsZ0VBQVE7O0FBRXREO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixrRUFBaUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU0sMkRBQU07QUFDWjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsMkRBQVUsb0JBQW9CLHdFQUF1Qjs7QUFFdEU7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDJEQUFVLGtCQUFrQix1RUFBc0I7O0FBRW5FO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsaUVBQW9CO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwyREFBVTtBQUMzQjtBQUNBLDJDQUEyQyxxRUFBb0IsR0FBRyx3RUFBdUI7QUFDekY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUSwrRUFBNkI7QUFDckM7QUFDQSxtREFBbUQsdUVBQWU7QUFDbEUsb0NBQW9DLGlFQUFZOztBQUVoRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNLHlEQUFhO0FBQ25CO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0EsU0FBUyw2REFBaUI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxpRUFBYTtBQUN6RDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxxQkFBcUIsc0VBQWE7O0FBRWxDLG9CQUFvQixvRUFBa0I7QUFDdEMsaUJBQWlCLDJEQUFVLDJDQUEyQywyRUFBMEI7QUFDaEc7QUFDQTs7O0FBR0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYWRhcHRlcnMveGhyLmpzPzZlYTQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi8uLi91dGlscy5qcyc7XG5pbXBvcnQgc2V0dGxlIGZyb20gJy4vLi4vY29yZS9zZXR0bGUuanMnO1xuaW1wb3J0IGNvb2tpZXMgZnJvbSAnLi8uLi9oZWxwZXJzL2Nvb2tpZXMuanMnO1xuaW1wb3J0IGJ1aWxkVVJMIGZyb20gJy4vLi4vaGVscGVycy9idWlsZFVSTC5qcyc7XG5pbXBvcnQgYnVpbGRGdWxsUGF0aCBmcm9tICcuLi9jb3JlL2J1aWxkRnVsbFBhdGguanMnO1xuaW1wb3J0IGlzVVJMU2FtZU9yaWdpbiBmcm9tICcuLy4uL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzJztcbmltcG9ydCB0cmFuc2l0aW9uYWxEZWZhdWx0cyBmcm9tICcuLi9kZWZhdWx0cy90cmFuc2l0aW9uYWwuanMnO1xuaW1wb3J0IEF4aW9zRXJyb3IgZnJvbSAnLi4vY29yZS9BeGlvc0Vycm9yLmpzJztcbmltcG9ydCBDYW5jZWxlZEVycm9yIGZyb20gJy4uL2NhbmNlbC9DYW5jZWxlZEVycm9yLmpzJztcbmltcG9ydCBwYXJzZVByb3RvY29sIGZyb20gJy4uL2hlbHBlcnMvcGFyc2VQcm90b2NvbC5qcyc7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vcGxhdGZvcm0vaW5kZXguanMnO1xuaW1wb3J0IEF4aW9zSGVhZGVycyBmcm9tICcuLi9jb3JlL0F4aW9zSGVhZGVycy5qcyc7XG5pbXBvcnQgc3BlZWRvbWV0ZXIgZnJvbSAnLi4vaGVscGVycy9zcGVlZG9tZXRlci5qcyc7XG5cbmZ1bmN0aW9uIHByb2dyZXNzRXZlbnRSZWR1Y2VyKGxpc3RlbmVyLCBpc0Rvd25sb2FkU3RyZWFtKSB7XG4gIGxldCBieXRlc05vdGlmaWVkID0gMDtcbiAgY29uc3QgX3NwZWVkb21ldGVyID0gc3BlZWRvbWV0ZXIoNTAsIDI1MCk7XG5cbiAgcmV0dXJuIGUgPT4ge1xuICAgIGNvbnN0IGxvYWRlZCA9IGUubG9hZGVkO1xuICAgIGNvbnN0IHRvdGFsID0gZS5sZW5ndGhDb21wdXRhYmxlID8gZS50b3RhbCA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBwcm9ncmVzc0J5dGVzID0gbG9hZGVkIC0gYnl0ZXNOb3RpZmllZDtcbiAgICBjb25zdCByYXRlID0gX3NwZWVkb21ldGVyKHByb2dyZXNzQnl0ZXMpO1xuICAgIGNvbnN0IGluUmFuZ2UgPSBsb2FkZWQgPD0gdG90YWw7XG5cbiAgICBieXRlc05vdGlmaWVkID0gbG9hZGVkO1xuXG4gICAgY29uc3QgZGF0YSA9IHtcbiAgICAgIGxvYWRlZCxcbiAgICAgIHRvdGFsLFxuICAgICAgcHJvZ3Jlc3M6IHRvdGFsID8gKGxvYWRlZCAvIHRvdGFsKSA6IHVuZGVmaW5lZCxcbiAgICAgIGJ5dGVzOiBwcm9ncmVzc0J5dGVzLFxuICAgICAgcmF0ZTogcmF0ZSA/IHJhdGUgOiB1bmRlZmluZWQsXG4gICAgICBlc3RpbWF0ZWQ6IHJhdGUgJiYgdG90YWwgJiYgaW5SYW5nZSA/ICh0b3RhbCAtIGxvYWRlZCkgLyByYXRlIDogdW5kZWZpbmVkLFxuICAgICAgZXZlbnQ6IGVcbiAgICB9O1xuXG4gICAgZGF0YVtpc0Rvd25sb2FkU3RyZWFtID8gJ2Rvd25sb2FkJyA6ICd1cGxvYWQnXSA9IHRydWU7XG5cbiAgICBsaXN0ZW5lcihkYXRhKTtcbiAgfTtcbn1cblxuY29uc3QgaXNYSFJBZGFwdGVyU3VwcG9ydGVkID0gdHlwZW9mIFhNTEh0dHBSZXF1ZXN0ICE9PSAndW5kZWZpbmVkJztcblxuZXhwb3J0IGRlZmF1bHQgaXNYSFJBZGFwdGVyU3VwcG9ydGVkICYmIGZ1bmN0aW9uIChjb25maWcpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIGRpc3BhdGNoWGhyUmVxdWVzdChyZXNvbHZlLCByZWplY3QpIHtcbiAgICBsZXQgcmVxdWVzdERhdGEgPSBjb25maWcuZGF0YTtcbiAgICBjb25zdCByZXF1ZXN0SGVhZGVycyA9IEF4aW9zSGVhZGVycy5mcm9tKGNvbmZpZy5oZWFkZXJzKS5ub3JtYWxpemUoKTtcbiAgICBjb25zdCByZXNwb25zZVR5cGUgPSBjb25maWcucmVzcG9uc2VUeXBlO1xuICAgIGxldCBvbkNhbmNlbGVkO1xuICAgIGZ1bmN0aW9uIGRvbmUoKSB7XG4gICAgICBpZiAoY29uZmlnLmNhbmNlbFRva2VuKSB7XG4gICAgICAgIGNvbmZpZy5jYW5jZWxUb2tlbi51bnN1YnNjcmliZShvbkNhbmNlbGVkKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNvbmZpZy5zaWduYWwpIHtcbiAgICAgICAgY29uZmlnLnNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKCdhYm9ydCcsIG9uQ2FuY2VsZWQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh1dGlscy5pc0Zvcm1EYXRhKHJlcXVlc3REYXRhKSkge1xuICAgICAgaWYgKHBsYXRmb3JtLmlzU3RhbmRhcmRCcm93c2VyRW52IHx8IHBsYXRmb3JtLmlzU3RhbmRhcmRCcm93c2VyV2ViV29ya2VyRW52KSB7XG4gICAgICAgIHJlcXVlc3RIZWFkZXJzLnNldENvbnRlbnRUeXBlKGZhbHNlKTsgLy8gTGV0IHRoZSBicm93c2VyIHNldCBpdFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVxdWVzdEhlYWRlcnMuc2V0Q29udGVudFR5cGUoJ211bHRpcGFydC9mb3JtLWRhdGE7JywgZmFsc2UpOyAvLyBtb2JpbGUvZGVza3RvcCBhcHAgZnJhbWV3b3Jrc1xuICAgICAgfVxuICAgIH1cblxuICAgIGxldCByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICAvLyBIVFRQIGJhc2ljIGF1dGhlbnRpY2F0aW9uXG4gICAgaWYgKGNvbmZpZy5hdXRoKSB7XG4gICAgICBjb25zdCB1c2VybmFtZSA9IGNvbmZpZy5hdXRoLnVzZXJuYW1lIHx8ICcnO1xuICAgICAgY29uc3QgcGFzc3dvcmQgPSBjb25maWcuYXV0aC5wYXNzd29yZCA/IHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChjb25maWcuYXV0aC5wYXNzd29yZCkpIDogJyc7XG4gICAgICByZXF1ZXN0SGVhZGVycy5zZXQoJ0F1dGhvcml6YXRpb24nLCAnQmFzaWMgJyArIGJ0b2EodXNlcm5hbWUgKyAnOicgKyBwYXNzd29yZCkpO1xuICAgIH1cblxuICAgIGNvbnN0IGZ1bGxQYXRoID0gYnVpbGRGdWxsUGF0aChjb25maWcuYmFzZVVSTCwgY29uZmlnLnVybCk7XG5cbiAgICByZXF1ZXN0Lm9wZW4oY29uZmlnLm1ldGhvZC50b1VwcGVyQ2FzZSgpLCBidWlsZFVSTChmdWxsUGF0aCwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpLCB0cnVlKTtcblxuICAgIC8vIFNldCB0aGUgcmVxdWVzdCB0aW1lb3V0IGluIE1TXG4gICAgcmVxdWVzdC50aW1lb3V0ID0gY29uZmlnLnRpbWVvdXQ7XG5cbiAgICBmdW5jdGlvbiBvbmxvYWRlbmQoKSB7XG4gICAgICBpZiAoIXJlcXVlc3QpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgLy8gUHJlcGFyZSB0aGUgcmVzcG9uc2VcbiAgICAgIGNvbnN0IHJlc3BvbnNlSGVhZGVycyA9IEF4aW9zSGVhZGVycy5mcm9tKFxuICAgICAgICAnZ2V0QWxsUmVzcG9uc2VIZWFkZXJzJyBpbiByZXF1ZXN0ICYmIHJlcXVlc3QuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKClcbiAgICAgICk7XG4gICAgICBjb25zdCByZXNwb25zZURhdGEgPSAhcmVzcG9uc2VUeXBlIHx8IHJlc3BvbnNlVHlwZSA9PT0gJ3RleHQnIHx8IHJlc3BvbnNlVHlwZSA9PT0gJ2pzb24nID9cbiAgICAgICAgcmVxdWVzdC5yZXNwb25zZVRleHQgOiByZXF1ZXN0LnJlc3BvbnNlO1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSB7XG4gICAgICAgIGRhdGE6IHJlc3BvbnNlRGF0YSxcbiAgICAgICAgc3RhdHVzOiByZXF1ZXN0LnN0YXR1cyxcbiAgICAgICAgc3RhdHVzVGV4dDogcmVxdWVzdC5zdGF0dXNUZXh0LFxuICAgICAgICBoZWFkZXJzOiByZXNwb25zZUhlYWRlcnMsXG4gICAgICAgIGNvbmZpZyxcbiAgICAgICAgcmVxdWVzdFxuICAgICAgfTtcblxuICAgICAgc2V0dGxlKGZ1bmN0aW9uIF9yZXNvbHZlKHZhbHVlKSB7XG4gICAgICAgIHJlc29sdmUodmFsdWUpO1xuICAgICAgICBkb25lKCk7XG4gICAgICB9LCBmdW5jdGlvbiBfcmVqZWN0KGVycikge1xuICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSwgcmVzcG9uc2UpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9XG5cbiAgICBpZiAoJ29ubG9hZGVuZCcgaW4gcmVxdWVzdCkge1xuICAgICAgLy8gVXNlIG9ubG9hZGVuZCBpZiBhdmFpbGFibGVcbiAgICAgIHJlcXVlc3Qub25sb2FkZW5kID0gb25sb2FkZW5kO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBMaXN0ZW4gZm9yIHJlYWR5IHN0YXRlIHRvIGVtdWxhdGUgb25sb2FkZW5kXG4gICAgICByZXF1ZXN0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uIGhhbmRsZUxvYWQoKSB7XG4gICAgICAgIGlmICghcmVxdWVzdCB8fCByZXF1ZXN0LnJlYWR5U3RhdGUgIT09IDQpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBUaGUgcmVxdWVzdCBlcnJvcmVkIG91dCBhbmQgd2UgZGlkbid0IGdldCBhIHJlc3BvbnNlLCB0aGlzIHdpbGwgYmVcbiAgICAgICAgLy8gaGFuZGxlZCBieSBvbmVycm9yIGluc3RlYWRcbiAgICAgICAgLy8gV2l0aCBvbmUgZXhjZXB0aW9uOiByZXF1ZXN0IHRoYXQgdXNpbmcgZmlsZTogcHJvdG9jb2wsIG1vc3QgYnJvd3NlcnNcbiAgICAgICAgLy8gd2lsbCByZXR1cm4gc3RhdHVzIGFzIDAgZXZlbiB0aG91Z2ggaXQncyBhIHN1Y2Nlc3NmdWwgcmVxdWVzdFxuICAgICAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDAgJiYgIShyZXF1ZXN0LnJlc3BvbnNlVVJMICYmIHJlcXVlc3QucmVzcG9uc2VVUkwuaW5kZXhPZignZmlsZTonKSA9PT0gMCkpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gcmVhZHlzdGF0ZSBoYW5kbGVyIGlzIGNhbGxpbmcgYmVmb3JlIG9uZXJyb3Igb3Igb250aW1lb3V0IGhhbmRsZXJzLFxuICAgICAgICAvLyBzbyB3ZSBzaG91bGQgY2FsbCBvbmxvYWRlbmQgb24gdGhlIG5leHQgJ3RpY2snXG4gICAgICAgIHNldFRpbWVvdXQob25sb2FkZW5kKTtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIGJyb3dzZXIgcmVxdWVzdCBjYW5jZWxsYXRpb24gKGFzIG9wcG9zZWQgdG8gYSBtYW51YWwgY2FuY2VsbGF0aW9uKVxuICAgIHJlcXVlc3Qub25hYm9ydCA9IGZ1bmN0aW9uIGhhbmRsZUFib3J0KCkge1xuICAgICAgaWYgKCFyZXF1ZXN0KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgcmVqZWN0KG5ldyBBeGlvc0Vycm9yKCdSZXF1ZXN0IGFib3J0ZWQnLCBBeGlvc0Vycm9yLkVDT05OQUJPUlRFRCwgY29uZmlnLCByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBIYW5kbGUgbG93IGxldmVsIG5ldHdvcmsgZXJyb3JzXG4gICAgcmVxdWVzdC5vbmVycm9yID0gZnVuY3Rpb24gaGFuZGxlRXJyb3IoKSB7XG4gICAgICAvLyBSZWFsIGVycm9ycyBhcmUgaGlkZGVuIGZyb20gdXMgYnkgdGhlIGJyb3dzZXJcbiAgICAgIC8vIG9uZXJyb3Igc2hvdWxkIG9ubHkgZmlyZSBpZiBpdCdzIGEgbmV0d29yayBlcnJvclxuICAgICAgcmVqZWN0KG5ldyBBeGlvc0Vycm9yKCdOZXR3b3JrIEVycm9yJywgQXhpb3NFcnJvci5FUlJfTkVUV09SSywgY29uZmlnLCByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBIYW5kbGUgdGltZW91dFxuICAgIHJlcXVlc3Qub250aW1lb3V0ID0gZnVuY3Rpb24gaGFuZGxlVGltZW91dCgpIHtcbiAgICAgIGxldCB0aW1lb3V0RXJyb3JNZXNzYWdlID0gY29uZmlnLnRpbWVvdXQgPyAndGltZW91dCBvZiAnICsgY29uZmlnLnRpbWVvdXQgKyAnbXMgZXhjZWVkZWQnIDogJ3RpbWVvdXQgZXhjZWVkZWQnO1xuICAgICAgY29uc3QgdHJhbnNpdGlvbmFsID0gY29uZmlnLnRyYW5zaXRpb25hbCB8fCB0cmFuc2l0aW9uYWxEZWZhdWx0cztcbiAgICAgIGlmIChjb25maWcudGltZW91dEVycm9yTWVzc2FnZSkge1xuICAgICAgICB0aW1lb3V0RXJyb3JNZXNzYWdlID0gY29uZmlnLnRpbWVvdXRFcnJvck1lc3NhZ2U7XG4gICAgICB9XG4gICAgICByZWplY3QobmV3IEF4aW9zRXJyb3IoXG4gICAgICAgIHRpbWVvdXRFcnJvck1lc3NhZ2UsXG4gICAgICAgIHRyYW5zaXRpb25hbC5jbGFyaWZ5VGltZW91dEVycm9yID8gQXhpb3NFcnJvci5FVElNRURPVVQgOiBBeGlvc0Vycm9yLkVDT05OQUJPUlRFRCxcbiAgICAgICAgY29uZmlnLFxuICAgICAgICByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBBZGQgeHNyZiBoZWFkZXJcbiAgICAvLyBUaGlzIGlzIG9ubHkgZG9uZSBpZiBydW5uaW5nIGluIGEgc3RhbmRhcmQgYnJvd3NlciBlbnZpcm9ubWVudC5cbiAgICAvLyBTcGVjaWZpY2FsbHkgbm90IGlmIHdlJ3JlIGluIGEgd2ViIHdvcmtlciwgb3IgcmVhY3QtbmF0aXZlLlxuICAgIGlmIChwbGF0Zm9ybS5pc1N0YW5kYXJkQnJvd3NlckVudikge1xuICAgICAgLy8gQWRkIHhzcmYgaGVhZGVyXG4gICAgICBjb25zdCB4c3JmVmFsdWUgPSAoY29uZmlnLndpdGhDcmVkZW50aWFscyB8fCBpc1VSTFNhbWVPcmlnaW4oZnVsbFBhdGgpKVxuICAgICAgICAmJiBjb25maWcueHNyZkNvb2tpZU5hbWUgJiYgY29va2llcy5yZWFkKGNvbmZpZy54c3JmQ29va2llTmFtZSk7XG5cbiAgICAgIGlmICh4c3JmVmFsdWUpIHtcbiAgICAgICAgcmVxdWVzdEhlYWRlcnMuc2V0KGNvbmZpZy54c3JmSGVhZGVyTmFtZSwgeHNyZlZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBSZW1vdmUgQ29udGVudC1UeXBlIGlmIGRhdGEgaXMgdW5kZWZpbmVkXG4gICAgcmVxdWVzdERhdGEgPT09IHVuZGVmaW5lZCAmJiByZXF1ZXN0SGVhZGVycy5zZXRDb250ZW50VHlwZShudWxsKTtcblxuICAgIC8vIEFkZCBoZWFkZXJzIHRvIHRoZSByZXF1ZXN0XG4gICAgaWYgKCdzZXRSZXF1ZXN0SGVhZGVyJyBpbiByZXF1ZXN0KSB7XG4gICAgICB1dGlscy5mb3JFYWNoKHJlcXVlc3RIZWFkZXJzLnRvSlNPTigpLCBmdW5jdGlvbiBzZXRSZXF1ZXN0SGVhZGVyKHZhbCwga2V5KSB7XG4gICAgICAgIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcihrZXksIHZhbCk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBBZGQgd2l0aENyZWRlbnRpYWxzIHRvIHJlcXVlc3QgaWYgbmVlZGVkXG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcud2l0aENyZWRlbnRpYWxzKSkge1xuICAgICAgcmVxdWVzdC53aXRoQ3JlZGVudGlhbHMgPSAhIWNvbmZpZy53aXRoQ3JlZGVudGlhbHM7XG4gICAgfVxuXG4gICAgLy8gQWRkIHJlc3BvbnNlVHlwZSB0byByZXF1ZXN0IGlmIG5lZWRlZFxuICAgIGlmIChyZXNwb25zZVR5cGUgJiYgcmVzcG9uc2VUeXBlICE9PSAnanNvbicpIHtcbiAgICAgIHJlcXVlc3QucmVzcG9uc2VUeXBlID0gY29uZmlnLnJlc3BvbnNlVHlwZTtcbiAgICB9XG5cbiAgICAvLyBIYW5kbGUgcHJvZ3Jlc3MgaWYgbmVlZGVkXG4gICAgaWYgKHR5cGVvZiBjb25maWcub25Eb3dubG9hZFByb2dyZXNzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXF1ZXN0LmFkZEV2ZW50TGlzdGVuZXIoJ3Byb2dyZXNzJywgcHJvZ3Jlc3NFdmVudFJlZHVjZXIoY29uZmlnLm9uRG93bmxvYWRQcm9ncmVzcywgdHJ1ZSkpO1xuICAgIH1cblxuICAgIC8vIE5vdCBhbGwgYnJvd3NlcnMgc3VwcG9ydCB1cGxvYWQgZXZlbnRzXG4gICAgaWYgKHR5cGVvZiBjb25maWcub25VcGxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJyAmJiByZXF1ZXN0LnVwbG9hZCkge1xuICAgICAgcmVxdWVzdC51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBwcm9ncmVzc0V2ZW50UmVkdWNlcihjb25maWcub25VcGxvYWRQcm9ncmVzcykpO1xuICAgIH1cblxuICAgIGlmIChjb25maWcuY2FuY2VsVG9rZW4gfHwgY29uZmlnLnNpZ25hbCkge1xuICAgICAgLy8gSGFuZGxlIGNhbmNlbGxhdGlvblxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgICAgIG9uQ2FuY2VsZWQgPSBjYW5jZWwgPT4ge1xuICAgICAgICBpZiAoIXJlcXVlc3QpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgcmVqZWN0KCFjYW5jZWwgfHwgY2FuY2VsLnR5cGUgPyBuZXcgQ2FuY2VsZWRFcnJvcihudWxsLCBjb25maWcsIHJlcXVlc3QpIDogY2FuY2VsKTtcbiAgICAgICAgcmVxdWVzdC5hYm9ydCgpO1xuICAgICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICAgIH07XG5cbiAgICAgIGNvbmZpZy5jYW5jZWxUb2tlbiAmJiBjb25maWcuY2FuY2VsVG9rZW4uc3Vic2NyaWJlKG9uQ2FuY2VsZWQpO1xuICAgICAgaWYgKGNvbmZpZy5zaWduYWwpIHtcbiAgICAgICAgY29uZmlnLnNpZ25hbC5hYm9ydGVkID8gb25DYW5jZWxlZCgpIDogY29uZmlnLnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsIG9uQ2FuY2VsZWQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IHByb3RvY29sID0gcGFyc2VQcm90b2NvbChmdWxsUGF0aCk7XG5cbiAgICBpZiAocHJvdG9jb2wgJiYgcGxhdGZvcm0ucHJvdG9jb2xzLmluZGV4T2YocHJvdG9jb2wpID09PSAtMSkge1xuICAgICAgcmVqZWN0KG5ldyBBeGlvc0Vycm9yKCdVbnN1cHBvcnRlZCBwcm90b2NvbCAnICsgcHJvdG9jb2wgKyAnOicsIEF4aW9zRXJyb3IuRVJSX0JBRF9SRVFVRVNULCBjb25maWcpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cblxuICAgIC8vIFNlbmQgdGhlIHJlcXVlc3RcbiAgICByZXF1ZXN0LnNlbmQocmVxdWVzdERhdGEgfHwgbnVsbCk7XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/adapters/xhr.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/bind.js */ \"./node_modules/axios/lib/helpers/bind.js\");\n/* harmony import */ var _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/Axios.js */ \"./node_modules/axios/lib/core/Axios.js\");\n/* harmony import */ var _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/mergeConfig.js */ \"./node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults/index.js */ \"./node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers/formDataToJSON.js */ \"./node_modules/axios/lib/helpers/formDataToJSON.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cancel/CanceledError.js */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cancel/CancelToken.js */ \"./node_modules/axios/lib/cancel/CancelToken.js\");\n/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cancel/isCancel.js */ \"./node_modules/axios/lib/cancel/isCancel.js\");\n/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./env/data.js */ \"./node_modules/axios/lib/env/data.js\");\n/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./helpers/toFormData.js */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _helpers_spread_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./helpers/spread.js */ \"./node_modules/axios/lib/helpers/spread.js\");\n/* harmony import */ var _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/isAxiosError.js */ \"./node_modules/axios/lib/helpers/isAxiosError.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./core/AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./adapters/adapters.js */ \"./node_modules/axios/lib/adapters/adapters.js\");\n/* harmony import */ var _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./helpers/HttpStatusCode.js */ \"./node_modules/axios/lib/helpers/HttpStatusCode.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](defaultConfig);\n  const instance = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.request, context);\n\n  // Copy axios.prototype to instance\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(instance, _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance((0,_core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(_defaults_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n\n// Expose Cancel & CancelToken\naxios.CanceledError = _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\naxios.CancelToken = _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\naxios.isCancel = _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\naxios.VERSION = _env_data_js__WEBPACK_IMPORTED_MODULE_8__.VERSION;\naxios.toFormData = _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"];\n\n// Expose AxiosError class\naxios.AxiosError = _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"];\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = _helpers_spread_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"];\n\n// Expose isAxiosError\naxios.isAxiosError = _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"];\n\n// Expose mergeConfig\naxios.mergeConfig = _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n\naxios.AxiosHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"];\n\naxios.formToJSON = thing => (0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].getAdapter;\n\naxios.HttpStatusCode = _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"];\n\naxios.default = axios;\n\n// this module should only have a default export\n/* harmony default export */ __webpack_exports__[\"default\"] = (axios);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFhOztBQUVrQjtBQUNNO0FBQ0Q7QUFDWTtBQUNMO0FBQ2M7QUFDSDtBQUNKO0FBQ047QUFDTjtBQUNXO0FBQ0g7QUFDTDtBQUNZO0FBQ0g7QUFDSjtBQUNXOztBQUV6RDtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBLHNCQUFzQixzREFBSztBQUMzQixtQkFBbUIsNERBQUksQ0FBQyxnRUFBZTs7QUFFdkM7QUFDQSxFQUFFLHdEQUFZLFdBQVcsZ0VBQWUsWUFBWSxpQkFBaUI7O0FBRXJFO0FBQ0EsRUFBRSx3REFBWSwyQkFBMkIsaUJBQWlCOztBQUUxRDtBQUNBO0FBQ0EsMEJBQTBCLGdFQUFXO0FBQ3JDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSw2QkFBNkIsMERBQVE7O0FBRXJDO0FBQ0EsY0FBYyxzREFBSzs7QUFFbkI7QUFDQSxzQkFBc0IsZ0VBQWE7QUFDbkMsb0JBQW9CLDhEQUFXO0FBQy9CLGlCQUFpQiwyREFBUTtBQUN6QixnQkFBZ0IsaURBQU87QUFDdkIsbUJBQW1CLDhEQUFVOztBQUU3QjtBQUNBLG1CQUFtQiw0REFBVTs7QUFFN0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLDJEQUFNOztBQUVyQjtBQUNBLHFCQUFxQixpRUFBWTs7QUFFakM7QUFDQSxvQkFBb0IsNERBQVc7O0FBRS9CLHFCQUFxQiw4REFBWTs7QUFFakMsNEJBQTRCLHVFQUFjLENBQUMsNERBQWdCOztBQUUzRCxtQkFBbUIseUVBQW1COztBQUV0Qyx1QkFBdUIsbUVBQWM7O0FBRXJDOztBQUVBO0FBQ0EsK0RBQWUsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzPzA4NmUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi91dGlscy5qcyc7XG5pbXBvcnQgYmluZCBmcm9tICcuL2hlbHBlcnMvYmluZC5qcyc7XG5pbXBvcnQgQXhpb3MgZnJvbSAnLi9jb3JlL0F4aW9zLmpzJztcbmltcG9ydCBtZXJnZUNvbmZpZyBmcm9tICcuL2NvcmUvbWVyZ2VDb25maWcuanMnO1xuaW1wb3J0IGRlZmF1bHRzIGZyb20gJy4vZGVmYXVsdHMvaW5kZXguanMnO1xuaW1wb3J0IGZvcm1EYXRhVG9KU09OIGZyb20gJy4vaGVscGVycy9mb3JtRGF0YVRvSlNPTi5qcyc7XG5pbXBvcnQgQ2FuY2VsZWRFcnJvciBmcm9tICcuL2NhbmNlbC9DYW5jZWxlZEVycm9yLmpzJztcbmltcG9ydCBDYW5jZWxUb2tlbiBmcm9tICcuL2NhbmNlbC9DYW5jZWxUb2tlbi5qcyc7XG5pbXBvcnQgaXNDYW5jZWwgZnJvbSAnLi9jYW5jZWwvaXNDYW5jZWwuanMnO1xuaW1wb3J0IHtWRVJTSU9OfSBmcm9tICcuL2Vudi9kYXRhLmpzJztcbmltcG9ydCB0b0Zvcm1EYXRhIGZyb20gJy4vaGVscGVycy90b0Zvcm1EYXRhLmpzJztcbmltcG9ydCBBeGlvc0Vycm9yIGZyb20gJy4vY29yZS9BeGlvc0Vycm9yLmpzJztcbmltcG9ydCBzcHJlYWQgZnJvbSAnLi9oZWxwZXJzL3NwcmVhZC5qcyc7XG5pbXBvcnQgaXNBeGlvc0Vycm9yIGZyb20gJy4vaGVscGVycy9pc0F4aW9zRXJyb3IuanMnO1xuaW1wb3J0IEF4aW9zSGVhZGVycyBmcm9tIFwiLi9jb3JlL0F4aW9zSGVhZGVycy5qc1wiO1xuaW1wb3J0IGFkYXB0ZXJzIGZyb20gJy4vYWRhcHRlcnMvYWRhcHRlcnMuanMnO1xuaW1wb3J0IEh0dHBTdGF0dXNDb2RlIGZyb20gJy4vaGVscGVycy9IdHRwU3RhdHVzQ29kZS5qcyc7XG5cbi8qKlxuICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIEF4aW9zXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGRlZmF1bHRDb25maWcgVGhlIGRlZmF1bHQgY29uZmlnIGZvciB0aGUgaW5zdGFuY2VcbiAqXG4gKiBAcmV0dXJucyB7QXhpb3N9IEEgbmV3IGluc3RhbmNlIG9mIEF4aW9zXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUluc3RhbmNlKGRlZmF1bHRDb25maWcpIHtcbiAgY29uc3QgY29udGV4dCA9IG5ldyBBeGlvcyhkZWZhdWx0Q29uZmlnKTtcbiAgY29uc3QgaW5zdGFuY2UgPSBiaW5kKEF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0LCBjb250ZXh0KTtcblxuICAvLyBDb3B5IGF4aW9zLnByb3RvdHlwZSB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIEF4aW9zLnByb3RvdHlwZSwgY29udGV4dCwge2FsbE93bktleXM6IHRydWV9KTtcblxuICAvLyBDb3B5IGNvbnRleHQgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBjb250ZXh0LCBudWxsLCB7YWxsT3duS2V5czogdHJ1ZX0pO1xuXG4gIC8vIEZhY3RvcnkgZm9yIGNyZWF0aW5nIG5ldyBpbnN0YW5jZXNcbiAgaW5zdGFuY2UuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGluc3RhbmNlQ29uZmlnKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUluc3RhbmNlKG1lcmdlQ29uZmlnKGRlZmF1bHRDb25maWcsIGluc3RhbmNlQ29uZmlnKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluc3RhbmNlO1xufVxuXG4vLyBDcmVhdGUgdGhlIGRlZmF1bHQgaW5zdGFuY2UgdG8gYmUgZXhwb3J0ZWRcbmNvbnN0IGF4aW9zID0gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdHMpO1xuXG4vLyBFeHBvc2UgQXhpb3MgY2xhc3MgdG8gYWxsb3cgY2xhc3MgaW5oZXJpdGFuY2VcbmF4aW9zLkF4aW9zID0gQXhpb3M7XG5cbi8vIEV4cG9zZSBDYW5jZWwgJiBDYW5jZWxUb2tlblxuYXhpb3MuQ2FuY2VsZWRFcnJvciA9IENhbmNlbGVkRXJyb3I7XG5heGlvcy5DYW5jZWxUb2tlbiA9IENhbmNlbFRva2VuO1xuYXhpb3MuaXNDYW5jZWwgPSBpc0NhbmNlbDtcbmF4aW9zLlZFUlNJT04gPSBWRVJTSU9OO1xuYXhpb3MudG9Gb3JtRGF0YSA9IHRvRm9ybURhdGE7XG5cbi8vIEV4cG9zZSBBeGlvc0Vycm9yIGNsYXNzXG5heGlvcy5BeGlvc0Vycm9yID0gQXhpb3NFcnJvcjtcblxuLy8gYWxpYXMgZm9yIENhbmNlbGVkRXJyb3IgZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHlcbmF4aW9zLkNhbmNlbCA9IGF4aW9zLkNhbmNlbGVkRXJyb3I7XG5cbi8vIEV4cG9zZSBhbGwvc3ByZWFkXG5heGlvcy5hbGwgPSBmdW5jdGlvbiBhbGwocHJvbWlzZXMpIHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbn07XG5cbmF4aW9zLnNwcmVhZCA9IHNwcmVhZDtcblxuLy8gRXhwb3NlIGlzQXhpb3NFcnJvclxuYXhpb3MuaXNBeGlvc0Vycm9yID0gaXNBeGlvc0Vycm9yO1xuXG4vLyBFeHBvc2UgbWVyZ2VDb25maWdcbmF4aW9zLm1lcmdlQ29uZmlnID0gbWVyZ2VDb25maWc7XG5cbmF4aW9zLkF4aW9zSGVhZGVycyA9IEF4aW9zSGVhZGVycztcblxuYXhpb3MuZm9ybVRvSlNPTiA9IHRoaW5nID0+IGZvcm1EYXRhVG9KU09OKHV0aWxzLmlzSFRNTEZvcm0odGhpbmcpID8gbmV3IEZvcm1EYXRhKHRoaW5nKSA6IHRoaW5nKTtcblxuYXhpb3MuZ2V0QWRhcHRlciA9IGFkYXB0ZXJzLmdldEFkYXB0ZXI7XG5cbmF4aW9zLkh0dHBTdGF0dXNDb2RlID0gSHR0cFN0YXR1c0NvZGU7XG5cbmF4aW9zLmRlZmF1bHQgPSBheGlvcztcblxuLy8gdGhpcyBtb2R1bGUgc2hvdWxkIG9ubHkgaGF2ZSBhIGRlZmF1bHQgZXhwb3J0XG5leHBvcnQgZGVmYXVsdCBheGlvc1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/axios.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CanceledError.js */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n\n\n\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CancelToken);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcyIsIm1hcHBpbmdzIjoiOztBQUFhOztBQUVrQzs7QUFFL0M7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlCQUF5Qix5REFBYTtBQUN0QztBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0RBQWUsV0FBVyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbFRva2VuLmpzP2M2YTAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgQ2FuY2VsZWRFcnJvciBmcm9tICcuL0NhbmNlbGVkRXJyb3IuanMnO1xuXG4vKipcbiAqIEEgYENhbmNlbFRva2VuYCBpcyBhbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byByZXF1ZXN0IGNhbmNlbGxhdGlvbiBvZiBhbiBvcGVyYXRpb24uXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZXhlY3V0b3IgVGhlIGV4ZWN1dG9yIGZ1bmN0aW9uLlxuICpcbiAqIEByZXR1cm5zIHtDYW5jZWxUb2tlbn1cbiAqL1xuY2xhc3MgQ2FuY2VsVG9rZW4ge1xuICBjb25zdHJ1Y3RvcihleGVjdXRvcikge1xuICAgIGlmICh0eXBlb2YgZXhlY3V0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2V4ZWN1dG9yIG11c3QgYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICBsZXQgcmVzb2x2ZVByb21pc2U7XG5cbiAgICB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiBwcm9taXNlRXhlY3V0b3IocmVzb2x2ZSkge1xuICAgICAgcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICAgIH0pO1xuXG4gICAgY29uc3QgdG9rZW4gPSB0aGlzO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgICB0aGlzLnByb21pc2UudGhlbihjYW5jZWwgPT4ge1xuICAgICAgaWYgKCF0b2tlbi5fbGlzdGVuZXJzKSByZXR1cm47XG5cbiAgICAgIGxldCBpID0gdG9rZW4uX2xpc3RlbmVycy5sZW5ndGg7XG5cbiAgICAgIHdoaWxlIChpLS0gPiAwKSB7XG4gICAgICAgIHRva2VuLl9saXN0ZW5lcnNbaV0oY2FuY2VsKTtcbiAgICAgIH1cbiAgICAgIHRva2VuLl9saXN0ZW5lcnMgPSBudWxsO1xuICAgIH0pO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgICB0aGlzLnByb21pc2UudGhlbiA9IG9uZnVsZmlsbGVkID0+IHtcbiAgICAgIGxldCBfcmVzb2x2ZTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gICAgICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIHRva2VuLnN1YnNjcmliZShyZXNvbHZlKTtcbiAgICAgICAgX3Jlc29sdmUgPSByZXNvbHZlO1xuICAgICAgfSkudGhlbihvbmZ1bGZpbGxlZCk7XG5cbiAgICAgIHByb21pc2UuY2FuY2VsID0gZnVuY3Rpb24gcmVqZWN0KCkge1xuICAgICAgICB0b2tlbi51bnN1YnNjcmliZShfcmVzb2x2ZSk7XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gcHJvbWlzZTtcbiAgICB9O1xuXG4gICAgZXhlY3V0b3IoZnVuY3Rpb24gY2FuY2VsKG1lc3NhZ2UsIGNvbmZpZywgcmVxdWVzdCkge1xuICAgICAgaWYgKHRva2VuLnJlYXNvbikge1xuICAgICAgICAvLyBDYW5jZWxsYXRpb24gaGFzIGFscmVhZHkgYmVlbiByZXF1ZXN0ZWRcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0b2tlbi5yZWFzb24gPSBuZXcgQ2FuY2VsZWRFcnJvcihtZXNzYWdlLCBjb25maWcsIHJlcXVlc3QpO1xuICAgICAgcmVzb2x2ZVByb21pc2UodG9rZW4ucmVhc29uKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaHJvd3MgYSBgQ2FuY2VsZWRFcnJvcmAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAgICovXG4gIHRocm93SWZSZXF1ZXN0ZWQoKSB7XG4gICAgaWYgKHRoaXMucmVhc29uKSB7XG4gICAgICB0aHJvdyB0aGlzLnJlYXNvbjtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogU3Vic2NyaWJlIHRvIHRoZSBjYW5jZWwgc2lnbmFsXG4gICAqL1xuXG4gIHN1YnNjcmliZShsaXN0ZW5lcikge1xuICAgIGlmICh0aGlzLnJlYXNvbikge1xuICAgICAgbGlzdGVuZXIodGhpcy5yZWFzb24pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9saXN0ZW5lcnMpIHtcbiAgICAgIHRoaXMuX2xpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fbGlzdGVuZXJzID0gW2xpc3RlbmVyXTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogVW5zdWJzY3JpYmUgZnJvbSB0aGUgY2FuY2VsIHNpZ25hbFxuICAgKi9cblxuICB1bnN1YnNjcmliZShsaXN0ZW5lcikge1xuICAgIGlmICghdGhpcy5fbGlzdGVuZXJzKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5fbGlzdGVuZXJzLmluZGV4T2YobGlzdGVuZXIpO1xuICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIHRoaXMuX2xpc3RlbmVycy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIGEgbmV3IGBDYW5jZWxUb2tlbmAgYW5kIGEgZnVuY3Rpb24gdGhhdCwgd2hlbiBjYWxsZWQsXG4gICAqIGNhbmNlbHMgdGhlIGBDYW5jZWxUb2tlbmAuXG4gICAqL1xuICBzdGF0aWMgc291cmNlKCkge1xuICAgIGxldCBjYW5jZWw7XG4gICAgY29uc3QgdG9rZW4gPSBuZXcgQ2FuY2VsVG9rZW4oZnVuY3Rpb24gZXhlY3V0b3IoYykge1xuICAgICAgY2FuY2VsID0gYztcbiAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgdG9rZW4sXG4gICAgICBjYW5jZWxcbiAgICB9O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENhbmNlbFRva2VuO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/CancelToken.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CanceledError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CanceledError.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].call(this, message == null ? 'canceled' : message, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inherits(CanceledError, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {\n  __CANCEL__: true\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CanceledError);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxlZEVycm9yLmpzIiwibWFwcGluZ3MiOiI7OztBQUFhOztBQUVrQztBQUNmOztBQUVoQztBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWEsZUFBZTtBQUM1QjtBQUNBO0FBQ0E7QUFDQSxFQUFFLGdFQUFlLCtDQUErQyx3RUFBdUI7QUFDdkY7QUFDQTs7QUFFQSwwREFBYyxnQkFBZ0IsMkRBQVU7QUFDeEM7QUFDQSxDQUFDOztBQUVELCtEQUFlLGFBQWEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxlZEVycm9yLmpzP2UwZjAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgQXhpb3NFcnJvciBmcm9tICcuLi9jb3JlL0F4aW9zRXJyb3IuanMnO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcblxuLyoqXG4gKiBBIGBDYW5jZWxlZEVycm9yYCBpcyBhbiBvYmplY3QgdGhhdCBpcyB0aHJvd24gd2hlbiBhbiBvcGVyYXRpb24gaXMgY2FuY2VsZWQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmc9fSBtZXNzYWdlIFRoZSBtZXNzYWdlLlxuICogQHBhcmFtIHtPYmplY3Q9fSBjb25maWcgVGhlIGNvbmZpZy5cbiAqIEBwYXJhbSB7T2JqZWN0PX0gcmVxdWVzdCBUaGUgcmVxdWVzdC5cbiAqXG4gKiBAcmV0dXJucyB7Q2FuY2VsZWRFcnJvcn0gVGhlIGNyZWF0ZWQgZXJyb3IuXG4gKi9cbmZ1bmN0aW9uIENhbmNlbGVkRXJyb3IobWVzc2FnZSwgY29uZmlnLCByZXF1ZXN0KSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lcS1udWxsLGVxZXFlcVxuICBBeGlvc0Vycm9yLmNhbGwodGhpcywgbWVzc2FnZSA9PSBudWxsID8gJ2NhbmNlbGVkJyA6IG1lc3NhZ2UsIEF4aW9zRXJyb3IuRVJSX0NBTkNFTEVELCBjb25maWcsIHJlcXVlc3QpO1xuICB0aGlzLm5hbWUgPSAnQ2FuY2VsZWRFcnJvcic7XG59XG5cbnV0aWxzLmluaGVyaXRzKENhbmNlbGVkRXJyb3IsIEF4aW9zRXJyb3IsIHtcbiAgX19DQU5DRUxfXzogdHJ1ZVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IENhbmNlbGVkRXJyb3I7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/CanceledError.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isCancel; }\n/* harmony export */ });\n\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7O0FBRUU7QUFDZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL2lzQ2FuY2VsLmpzP2JjYTEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc0NhbmNlbCh2YWx1ZSkge1xuICByZXR1cm4gISEodmFsdWUgJiYgdmFsdWUuX19DQU5DRUxfXyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/isCancel.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/buildURL.js */ \"./node_modules/axios/lib/helpers/buildURL.js\");\n/* harmony import */ var _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InterceptorManager.js */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\n/* harmony import */ var _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dispatchRequest.js */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\n/* harmony import */ var _mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mergeConfig.js */ \"./node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _buildFullPath_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./buildFullPath.js */ \"./node_modules/axios/lib/core/buildFullPath.js\");\n/* harmony import */ var _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/validator.js */ \"./node_modules/axios/lib/helpers/validator.js\");\n/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst validators = _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](),\n      response: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [_dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.defaults, config);\n    const fullPath = (0,_buildFullPath_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(config.baseURL, config.url);\n    return (0,_helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Axios);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/Axios.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/AxiosError.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/core/AxiosError.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AxiosError);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3NFcnJvci5qcyIsIm1hcHBpbmdzIjoiOztBQUFhOztBQUVtQjs7QUFFaEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBEQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOERBQWtCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QixDQUFDOztBQUVEO0FBQ0Esa0RBQWtELFlBQVk7O0FBRTlEO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLDhEQUFrQjtBQUNwQjtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQSwrREFBZSxVQUFVLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0F4aW9zRXJyb3IuanM/ZDc4YSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB1dGlscyBmcm9tICcuLi91dGlscy5qcyc7XG5cbi8qKlxuICogQ3JlYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBtZXNzYWdlLCBjb25maWcsIGVycm9yIGNvZGUsIHJlcXVlc3QgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIFRoZSBlcnJvciBtZXNzYWdlLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbY29uZmlnXSBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqXG4gKiBAcmV0dXJucyB7RXJyb3J9IFRoZSBjcmVhdGVkIGVycm9yLlxuICovXG5mdW5jdGlvbiBBeGlvc0Vycm9yKG1lc3NhZ2UsIGNvZGUsIGNvbmZpZywgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgRXJyb3IuY2FsbCh0aGlzKTtcblxuICBpZiAoRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UpIHtcbiAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCB0aGlzLmNvbnN0cnVjdG9yKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLnN0YWNrID0gKG5ldyBFcnJvcigpKS5zdGFjaztcbiAgfVxuXG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gIHRoaXMubmFtZSA9ICdBeGlvc0Vycm9yJztcbiAgY29kZSAmJiAodGhpcy5jb2RlID0gY29kZSk7XG4gIGNvbmZpZyAmJiAodGhpcy5jb25maWcgPSBjb25maWcpO1xuICByZXF1ZXN0ICYmICh0aGlzLnJlcXVlc3QgPSByZXF1ZXN0KTtcbiAgcmVzcG9uc2UgJiYgKHRoaXMucmVzcG9uc2UgPSByZXNwb25zZSk7XG59XG5cbnV0aWxzLmluaGVyaXRzKEF4aW9zRXJyb3IsIEVycm9yLCB7XG4gIHRvSlNPTjogZnVuY3Rpb24gdG9KU09OKCkge1xuICAgIHJldHVybiB7XG4gICAgICAvLyBTdGFuZGFyZFxuICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxuICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgLy8gTWljcm9zb2Z0XG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbixcbiAgICAgIG51bWJlcjogdGhpcy5udW1iZXIsXG4gICAgICAvLyBNb3ppbGxhXG4gICAgICBmaWxlTmFtZTogdGhpcy5maWxlTmFtZSxcbiAgICAgIGxpbmVOdW1iZXI6IHRoaXMubGluZU51bWJlcixcbiAgICAgIGNvbHVtbk51bWJlcjogdGhpcy5jb2x1bW5OdW1iZXIsXG4gICAgICBzdGFjazogdGhpcy5zdGFjayxcbiAgICAgIC8vIEF4aW9zXG4gICAgICBjb25maWc6IHV0aWxzLnRvSlNPTk9iamVjdCh0aGlzLmNvbmZpZyksXG4gICAgICBjb2RlOiB0aGlzLmNvZGUsXG4gICAgICBzdGF0dXM6IHRoaXMucmVzcG9uc2UgJiYgdGhpcy5yZXNwb25zZS5zdGF0dXMgPyB0aGlzLnJlc3BvbnNlLnN0YXR1cyA6IG51bGxcbiAgICB9O1xuICB9XG59KTtcblxuY29uc3QgcHJvdG90eXBlID0gQXhpb3NFcnJvci5wcm90b3R5cGU7XG5jb25zdCBkZXNjcmlwdG9ycyA9IHt9O1xuXG5bXG4gICdFUlJfQkFEX09QVElPTl9WQUxVRScsXG4gICdFUlJfQkFEX09QVElPTicsXG4gICdFQ09OTkFCT1JURUQnLFxuICAnRVRJTUVET1VUJyxcbiAgJ0VSUl9ORVRXT1JLJyxcbiAgJ0VSUl9GUl9UT09fTUFOWV9SRURJUkVDVFMnLFxuICAnRVJSX0RFUFJFQ0FURUQnLFxuICAnRVJSX0JBRF9SRVNQT05TRScsXG4gICdFUlJfQkFEX1JFUVVFU1QnLFxuICAnRVJSX0NBTkNFTEVEJyxcbiAgJ0VSUl9OT1RfU1VQUE9SVCcsXG4gICdFUlJfSU5WQUxJRF9VUkwnXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXS5mb3JFYWNoKGNvZGUgPT4ge1xuICBkZXNjcmlwdG9yc1tjb2RlXSA9IHt2YWx1ZTogY29kZX07XG59KTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoQXhpb3NFcnJvciwgZGVzY3JpcHRvcnMpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3RvdHlwZSwgJ2lzQXhpb3NFcnJvcicsIHt2YWx1ZTogdHJ1ZX0pO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuQXhpb3NFcnJvci5mcm9tID0gKGVycm9yLCBjb2RlLCBjb25maWcsIHJlcXVlc3QsIHJlc3BvbnNlLCBjdXN0b21Qcm9wcykgPT4ge1xuICBjb25zdCBheGlvc0Vycm9yID0gT2JqZWN0LmNyZWF0ZShwcm90b3R5cGUpO1xuXG4gIHV0aWxzLnRvRmxhdE9iamVjdChlcnJvciwgYXhpb3NFcnJvciwgZnVuY3Rpb24gZmlsdGVyKG9iaikge1xuICAgIHJldHVybiBvYmogIT09IEVycm9yLnByb3RvdHlwZTtcbiAgfSwgcHJvcCA9PiB7XG4gICAgcmV0dXJuIHByb3AgIT09ICdpc0F4aW9zRXJyb3InO1xuICB9KTtcblxuICBBeGlvc0Vycm9yLmNhbGwoYXhpb3NFcnJvciwgZXJyb3IubWVzc2FnZSwgY29kZSwgY29uZmlnLCByZXF1ZXN0LCByZXNwb25zZSk7XG5cbiAgYXhpb3NFcnJvci5jYXVzZSA9IGVycm9yO1xuXG4gIGF4aW9zRXJyb3IubmFtZSA9IGVycm9yLm5hbWU7XG5cbiAgY3VzdG9tUHJvcHMgJiYgT2JqZWN0LmFzc2lnbihheGlvc0Vycm9yLCBjdXN0b21Qcm9wcyk7XG5cbiAgcmV0dXJuIGF4aW9zRXJyb3I7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBeGlvc0Vycm9yO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/AxiosError.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/AxiosHeaders.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/AxiosHeaders.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/parseHeaders.js */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\n\n\n\n\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(value)) return;\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders((0,_helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this, (value, header) => {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].freezeMethods(AxiosHeaders);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AxiosHeaders);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/AxiosHeaders.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (InterceptorManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7O0FBQWE7O0FBRXFCOztBQUVsQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFVBQVU7QUFDdkIsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsVUFBVTtBQUN2QjtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EsSUFBSSx5REFBYTtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQSwrREFBZSxrQkFBa0IsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzPzZjODgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi8uLi91dGlscy5qcyc7XG5cbmNsYXNzIEludGVyY2VwdG9yTWFuYWdlciB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuaGFuZGxlcnMgPSBbXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgYSBuZXcgaW50ZXJjZXB0b3IgdG8gdGhlIHN0YWNrXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bGZpbGxlZCBUaGUgZnVuY3Rpb24gdG8gaGFuZGxlIGB0aGVuYCBmb3IgYSBgUHJvbWlzZWBcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0ZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgcmVqZWN0YCBmb3IgYSBgUHJvbWlzZWBcbiAgICpcbiAgICogQHJldHVybiB7TnVtYmVyfSBBbiBJRCB1c2VkIHRvIHJlbW92ZSBpbnRlcmNlcHRvciBsYXRlclxuICAgKi9cbiAgdXNlKGZ1bGZpbGxlZCwgcmVqZWN0ZWQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLmhhbmRsZXJzLnB1c2goe1xuICAgICAgZnVsZmlsbGVkLFxuICAgICAgcmVqZWN0ZWQsXG4gICAgICBzeW5jaHJvbm91czogb3B0aW9ucyA/IG9wdGlvbnMuc3luY2hyb25vdXMgOiBmYWxzZSxcbiAgICAgIHJ1bldoZW46IG9wdGlvbnMgPyBvcHRpb25zLnJ1bldoZW4gOiBudWxsXG4gICAgfSk7XG4gICAgcmV0dXJuIHRoaXMuaGFuZGxlcnMubGVuZ3RoIC0gMTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgYW4gaW50ZXJjZXB0b3IgZnJvbSB0aGUgc3RhY2tcbiAgICpcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGlkIFRoZSBJRCB0aGF0IHdhcyByZXR1cm5lZCBieSBgdXNlYFxuICAgKlxuICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0gYHRydWVgIGlmIHRoZSBpbnRlcmNlcHRvciB3YXMgcmVtb3ZlZCwgYGZhbHNlYCBvdGhlcndpc2VcbiAgICovXG4gIGVqZWN0KGlkKSB7XG4gICAgaWYgKHRoaXMuaGFuZGxlcnNbaWRdKSB7XG4gICAgICB0aGlzLmhhbmRsZXJzW2lkXSA9IG51bGw7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIENsZWFyIGFsbCBpbnRlcmNlcHRvcnMgZnJvbSB0aGUgc3RhY2tcbiAgICpcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICBjbGVhcigpIHtcbiAgICBpZiAodGhpcy5oYW5kbGVycykge1xuICAgICAgdGhpcy5oYW5kbGVycyA9IFtdO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBJdGVyYXRlIG92ZXIgYWxsIHRoZSByZWdpc3RlcmVkIGludGVyY2VwdG9yc1xuICAgKlxuICAgKiBUaGlzIG1ldGhvZCBpcyBwYXJ0aWN1bGFybHkgdXNlZnVsIGZvciBza2lwcGluZyBvdmVyIGFueVxuICAgKiBpbnRlcmNlcHRvcnMgdGhhdCBtYXkgaGF2ZSBiZWNvbWUgYG51bGxgIGNhbGxpbmcgYGVqZWN0YC5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIGNhbGwgZm9yIGVhY2ggaW50ZXJjZXB0b3JcbiAgICpcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICBmb3JFYWNoKGZuKSB7XG4gICAgdXRpbHMuZm9yRWFjaCh0aGlzLmhhbmRsZXJzLCBmdW5jdGlvbiBmb3JFYWNoSGFuZGxlcihoKSB7XG4gICAgICBpZiAoaCAhPT0gbnVsbCkge1xuICAgICAgICBmbihoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBJbnRlcmNlcHRvck1hbmFnZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/InterceptorManager.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ buildFullPath; }\n/* harmony export */ });\n/* harmony import */ var _helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/isAbsoluteURL.js */ \"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\n/* harmony import */ var _helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/combineURLs.js */ \"./node_modules/axios/lib/helpers/combineURLs.js\");\n\n\n\n\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !(0,_helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(requestedURL)) {\n    return (0,_helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvYnVpbGRGdWxsUGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTs7QUFFMkM7QUFDSjs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDZTtBQUNmLGtCQUFrQixxRUFBYTtBQUMvQixXQUFXLG1FQUFXO0FBQ3RCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvYnVpbGRGdWxsUGF0aC5qcz84MzdhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IGlzQWJzb2x1dGVVUkwgZnJvbSAnLi4vaGVscGVycy9pc0Fic29sdXRlVVJMLmpzJztcbmltcG9ydCBjb21iaW5lVVJMcyBmcm9tICcuLi9oZWxwZXJzL2NvbWJpbmVVUkxzLmpzJztcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFVSTCBieSBjb21iaW5pbmcgdGhlIGJhc2VVUkwgd2l0aCB0aGUgcmVxdWVzdGVkVVJMLFxuICogb25seSB3aGVuIHRoZSByZXF1ZXN0ZWRVUkwgaXMgbm90IGFscmVhZHkgYW4gYWJzb2x1dGUgVVJMLlxuICogSWYgdGhlIHJlcXVlc3RVUkwgaXMgYWJzb2x1dGUsIHRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgcmVxdWVzdGVkVVJMIHVudG91Y2hlZC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVVSTCBUaGUgYmFzZSBVUkxcbiAqIEBwYXJhbSB7c3RyaW5nfSByZXF1ZXN0ZWRVUkwgQWJzb2x1dGUgb3IgcmVsYXRpdmUgVVJMIHRvIGNvbWJpbmVcbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgY29tYmluZWQgZnVsbCBwYXRoXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJ1aWxkRnVsbFBhdGgoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKSB7XG4gIGlmIChiYXNlVVJMICYmICFpc0Fic29sdXRlVVJMKHJlcXVlc3RlZFVSTCkpIHtcbiAgICByZXR1cm4gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKTtcbiAgfVxuICByZXR1cm4gcmVxdWVzdGVkVVJMO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/buildFullPath.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ dispatchRequest; }\n/* harmony export */ });\n/* harmony import */ var _transformData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transformData.js */ \"./node_modules/axios/lib/core/transformData.js\");\n/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cancel/isCancel.js */ \"./node_modules/axios/lib/cancel/isCancel.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../defaults/index.js */ \"./node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../adapters/adapters.js */ \"./node_modules/axios/lib/adapters/adapters.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(config.headers);\n\n  // Transform request data\n  config.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getAdapter(config.adapter || _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!(0,_cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBYTs7QUFFa0M7QUFDRjtBQUNEO0FBQ1c7QUFDSjtBQUNKOztBQUUvQztBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGNBQWMsZ0VBQWE7QUFDM0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDZTtBQUNmOztBQUVBLG1CQUFtQixrRUFBaUI7O0FBRXBDO0FBQ0EsZ0JBQWdCLDhEQUFrQjtBQUNsQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGtCQUFrQix3RUFBbUIsbUJBQW1CLGtFQUFnQjs7QUFFeEU7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQiw4REFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLGtFQUFpQjs7QUFFeEM7QUFDQSxHQUFHO0FBQ0gsU0FBUywrREFBUTtBQUNqQjs7QUFFQTtBQUNBO0FBQ0EsK0JBQStCLDhEQUFrQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxrRUFBaUI7QUFDbkQ7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzPzBlNzEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdHJhbnNmb3JtRGF0YSBmcm9tICcuL3RyYW5zZm9ybURhdGEuanMnO1xuaW1wb3J0IGlzQ2FuY2VsIGZyb20gJy4uL2NhbmNlbC9pc0NhbmNlbC5qcyc7XG5pbXBvcnQgZGVmYXVsdHMgZnJvbSAnLi4vZGVmYXVsdHMvaW5kZXguanMnO1xuaW1wb3J0IENhbmNlbGVkRXJyb3IgZnJvbSAnLi4vY2FuY2VsL0NhbmNlbGVkRXJyb3IuanMnO1xuaW1wb3J0IEF4aW9zSGVhZGVycyBmcm9tICcuLi9jb3JlL0F4aW9zSGVhZGVycy5qcyc7XG5pbXBvcnQgYWRhcHRlcnMgZnJvbSBcIi4uL2FkYXB0ZXJzL2FkYXB0ZXJzLmpzXCI7XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGVkRXJyb3JgIGlmIGNhbmNlbGxhdGlvbiBoYXMgYmVlbiByZXF1ZXN0ZWQuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnIHRoYXQgaXMgdG8gYmUgdXNlZCBmb3IgdGhlIHJlcXVlc3RcbiAqXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cblxuICBpZiAoY29uZmlnLnNpZ25hbCAmJiBjb25maWcuc2lnbmFsLmFib3J0ZWQpIHtcbiAgICB0aHJvdyBuZXcgQ2FuY2VsZWRFcnJvcihudWxsLCBjb25maWcpO1xuICB9XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0IHRvIHRoZSBzZXJ2ZXIgdXNpbmcgdGhlIGNvbmZpZ3VyZWQgYWRhcHRlci5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gY29uZmlnIFRoZSBjb25maWcgdGhhdCBpcyB0byBiZSB1c2VkIGZvciB0aGUgcmVxdWVzdFxuICpcbiAqIEByZXR1cm5zIHtQcm9taXNlfSBUaGUgUHJvbWlzZSB0byBiZSBmdWxmaWxsZWRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgY29uZmlnLmhlYWRlcnMgPSBBeGlvc0hlYWRlcnMuZnJvbShjb25maWcuaGVhZGVycyk7XG5cbiAgLy8gVHJhbnNmb3JtIHJlcXVlc3QgZGF0YVxuICBjb25maWcuZGF0YSA9IHRyYW5zZm9ybURhdGEuY2FsbChcbiAgICBjb25maWcsXG4gICAgY29uZmlnLnRyYW5zZm9ybVJlcXVlc3RcbiAgKTtcblxuICBpZiAoWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLmluZGV4T2YoY29uZmlnLm1ldGhvZCkgIT09IC0xKSB7XG4gICAgY29uZmlnLmhlYWRlcnMuc2V0Q29udGVudFR5cGUoJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsIGZhbHNlKTtcbiAgfVxuXG4gIGNvbnN0IGFkYXB0ZXIgPSBhZGFwdGVycy5nZXRBZGFwdGVyKGNvbmZpZy5hZGFwdGVyIHx8IGRlZmF1bHRzLmFkYXB0ZXIpO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YS5jYWxsKFxuICAgICAgY29uZmlnLFxuICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlLFxuICAgICAgcmVzcG9uc2VcbiAgICApO1xuXG4gICAgcmVzcG9uc2UuaGVhZGVycyA9IEF4aW9zSGVhZGVycy5mcm9tKHJlc3BvbnNlLmhlYWRlcnMpO1xuXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9LCBmdW5jdGlvbiBvbkFkYXB0ZXJSZWplY3Rpb24ocmVhc29uKSB7XG4gICAgaWYgKCFpc0NhbmNlbChyZWFzb24pKSB7XG4gICAgICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgICAgIC8vIFRyYW5zZm9ybSByZXNwb25zZSBkYXRhXG4gICAgICBpZiAocmVhc29uICYmIHJlYXNvbi5yZXNwb25zZSkge1xuICAgICAgICByZWFzb24ucmVzcG9uc2UuZGF0YSA9IHRyYW5zZm9ybURhdGEuY2FsbChcbiAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZVxuICAgICAgICApO1xuICAgICAgICByZWFzb24ucmVzcG9uc2UuaGVhZGVycyA9IEF4aW9zSGVhZGVycy5mcm9tKHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVhc29uKTtcbiAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/dispatchRequest.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ mergeConfig; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\nconst headersToObject = (thing) => thing instanceof _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(target) && _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(source)) {\n      return _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].merge.call({caseless}, target, source);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(source)) {\n      return _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].merge({}, source);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvbWVyZ2VDb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7O0FBRW1CO0FBQ2E7O0FBRTdDLG9EQUFvRCx3REFBWTs7QUFFaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxRQUFRLCtEQUFtQixZQUFZLCtEQUFtQjtBQUMxRCxhQUFhLHVEQUFXLE9BQU8sU0FBUztBQUN4QyxNQUFNLFNBQVMsK0RBQW1CO0FBQ2xDLGFBQWEsdURBQVcsR0FBRztBQUMzQixNQUFNLFNBQVMseURBQWE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVMsNkRBQWlCO0FBQzFCO0FBQ0EsTUFBTSxVQUFVLDZEQUFpQjtBQUNqQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVMsNkRBQWlCO0FBQzFCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUyw2REFBaUI7QUFDMUI7QUFDQSxNQUFNLFVBQVUsNkRBQWlCO0FBQ2pDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUseURBQWEsNkJBQTZCO0FBQzVDO0FBQ0E7QUFDQSxLQUFLLDZEQUFpQjtBQUN0QixHQUFHOztBQUVIO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL21lcmdlQ29uZmlnLmpzP2JkZjQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vdXRpbHMuanMnO1xuaW1wb3J0IEF4aW9zSGVhZGVycyBmcm9tIFwiLi9BeGlvc0hlYWRlcnMuanNcIjtcblxuY29uc3QgaGVhZGVyc1RvT2JqZWN0ID0gKHRoaW5nKSA9PiB0aGluZyBpbnN0YW5jZW9mIEF4aW9zSGVhZGVycyA/IHRoaW5nLnRvSlNPTigpIDogdGhpbmc7XG5cbi8qKlxuICogQ29uZmlnLXNwZWNpZmljIG1lcmdlLWZ1bmN0aW9uIHdoaWNoIGNyZWF0ZXMgYSBuZXcgY29uZmlnLW9iamVjdFxuICogYnkgbWVyZ2luZyB0d28gY29uZmlndXJhdGlvbiBvYmplY3RzIHRvZ2V0aGVyLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcxXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnMlxuICpcbiAqIEByZXR1cm5zIHtPYmplY3R9IE5ldyBvYmplY3QgcmVzdWx0aW5nIGZyb20gbWVyZ2luZyBjb25maWcyIHRvIGNvbmZpZzFcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWVyZ2VDb25maWcoY29uZmlnMSwgY29uZmlnMikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgY29uZmlnMiA9IGNvbmZpZzIgfHwge307XG4gIGNvbnN0IGNvbmZpZyA9IHt9O1xuXG4gIGZ1bmN0aW9uIGdldE1lcmdlZFZhbHVlKHRhcmdldCwgc291cmNlLCBjYXNlbGVzcykge1xuICAgIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KHRhcmdldCkgJiYgdXRpbHMuaXNQbGFpbk9iamVjdChzb3VyY2UpKSB7XG4gICAgICByZXR1cm4gdXRpbHMubWVyZ2UuY2FsbCh7Y2FzZWxlc3N9LCB0YXJnZXQsIHNvdXJjZSk7XG4gICAgfSBlbHNlIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh7fSwgc291cmNlKTtcbiAgICB9IGVsc2UgaWYgKHV0aWxzLmlzQXJyYXkoc291cmNlKSkge1xuICAgICAgcmV0dXJuIHNvdXJjZS5zbGljZSgpO1xuICAgIH1cbiAgICByZXR1cm4gc291cmNlO1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIG1lcmdlRGVlcFByb3BlcnRpZXMoYSwgYiwgY2FzZWxlc3MpIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGIpKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUoYSwgYiwgY2FzZWxlc3MpO1xuICAgIH0gZWxzZSBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGEpKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBhLCBjYXNlbGVzcyk7XG4gICAgfVxuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIHZhbHVlRnJvbUNvbmZpZzIoYSwgYikge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoYikpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGIpO1xuICAgIH1cbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICBmdW5jdGlvbiBkZWZhdWx0VG9Db25maWcyKGEsIGIpIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGIpKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBiKTtcbiAgICB9IGVsc2UgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChhKSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgYSk7XG4gICAgfVxuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIG1lcmdlRGlyZWN0S2V5cyhhLCBiLCBwcm9wKSB7XG4gICAgaWYgKHByb3AgaW4gY29uZmlnMikge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKGEsIGIpO1xuICAgIH0gZWxzZSBpZiAocHJvcCBpbiBjb25maWcxKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBhKTtcbiAgICB9XG4gIH1cblxuICBjb25zdCBtZXJnZU1hcCA9IHtcbiAgICB1cmw6IHZhbHVlRnJvbUNvbmZpZzIsXG4gICAgbWV0aG9kOiB2YWx1ZUZyb21Db25maWcyLFxuICAgIGRhdGE6IHZhbHVlRnJvbUNvbmZpZzIsXG4gICAgYmFzZVVSTDogZGVmYXVsdFRvQ29uZmlnMixcbiAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBkZWZhdWx0VG9Db25maWcyLFxuICAgIHRyYW5zZm9ybVJlc3BvbnNlOiBkZWZhdWx0VG9Db25maWcyLFxuICAgIHBhcmFtc1NlcmlhbGl6ZXI6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgdGltZW91dDogZGVmYXVsdFRvQ29uZmlnMixcbiAgICB0aW1lb3V0TWVzc2FnZTogZGVmYXVsdFRvQ29uZmlnMixcbiAgICB3aXRoQ3JlZGVudGlhbHM6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgYWRhcHRlcjogZGVmYXVsdFRvQ29uZmlnMixcbiAgICByZXNwb25zZVR5cGU6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgeHNyZkNvb2tpZU5hbWU6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgeHNyZkhlYWRlck5hbWU6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgb25VcGxvYWRQcm9ncmVzczogZGVmYXVsdFRvQ29uZmlnMixcbiAgICBvbkRvd25sb2FkUHJvZ3Jlc3M6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgZGVjb21wcmVzczogZGVmYXVsdFRvQ29uZmlnMixcbiAgICBtYXhDb250ZW50TGVuZ3RoOiBkZWZhdWx0VG9Db25maWcyLFxuICAgIG1heEJvZHlMZW5ndGg6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgYmVmb3JlUmVkaXJlY3Q6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgdHJhbnNwb3J0OiBkZWZhdWx0VG9Db25maWcyLFxuICAgIGh0dHBBZ2VudDogZGVmYXVsdFRvQ29uZmlnMixcbiAgICBodHRwc0FnZW50OiBkZWZhdWx0VG9Db25maWcyLFxuICAgIGNhbmNlbFRva2VuOiBkZWZhdWx0VG9Db25maWcyLFxuICAgIHNvY2tldFBhdGg6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgcmVzcG9uc2VFbmNvZGluZzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICB2YWxpZGF0ZVN0YXR1czogbWVyZ2VEaXJlY3RLZXlzLFxuICAgIGhlYWRlcnM6IChhLCBiKSA9PiBtZXJnZURlZXBQcm9wZXJ0aWVzKGhlYWRlcnNUb09iamVjdChhKSwgaGVhZGVyc1RvT2JqZWN0KGIpLCB0cnVlKVxuICB9O1xuXG4gIHV0aWxzLmZvckVhY2goT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgY29uZmlnMSwgY29uZmlnMikpLCBmdW5jdGlvbiBjb21wdXRlQ29uZmlnVmFsdWUocHJvcCkge1xuICAgIGNvbnN0IG1lcmdlID0gbWVyZ2VNYXBbcHJvcF0gfHwgbWVyZ2VEZWVwUHJvcGVydGllcztcbiAgICBjb25zdCBjb25maWdWYWx1ZSA9IG1lcmdlKGNvbmZpZzFbcHJvcF0sIGNvbmZpZzJbcHJvcF0sIHByb3ApO1xuICAgICh1dGlscy5pc1VuZGVmaW5lZChjb25maWdWYWx1ZSkgJiYgbWVyZ2UgIT09IG1lcmdlRGlyZWN0S2V5cykgfHwgKGNvbmZpZ1twcm9wXSA9IGNvbmZpZ1ZhbHVlKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGNvbmZpZztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/mergeConfig.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ settle; }\n/* harmony export */ });\n/* harmony import */ var _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\n      'Request failed with status code ' + response.status,\n      [_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_BAD_REQUEST, _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7O0FBRTRCOztBQUV6QztBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLGVBQWUsc0RBQVU7QUFDekI7QUFDQSxPQUFPLHNFQUEwQixFQUFFLHVFQUEyQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3NldHRsZS5qcz9mMWIyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IEF4aW9zRXJyb3IgZnJvbSAnLi9BeGlvc0Vycm9yLmpzJztcblxuLyoqXG4gKiBSZXNvbHZlIG9yIHJlamVjdCBhIFByb21pc2UgYmFzZWQgb24gcmVzcG9uc2Ugc3RhdHVzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlc29sdmUgQSBmdW5jdGlvbiB0aGF0IHJlc29sdmVzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0IEEgZnVuY3Rpb24gdGhhdCByZWplY3RzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtvYmplY3R9IHJlc3BvbnNlIFRoZSByZXNwb25zZS5cbiAqXG4gKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgcmVzcG9uc2UuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKSB7XG4gIGNvbnN0IHZhbGlkYXRlU3RhdHVzID0gcmVzcG9uc2UuY29uZmlnLnZhbGlkYXRlU3RhdHVzO1xuICBpZiAoIXJlc3BvbnNlLnN0YXR1cyB8fCAhdmFsaWRhdGVTdGF0dXMgfHwgdmFsaWRhdGVTdGF0dXMocmVzcG9uc2Uuc3RhdHVzKSkge1xuICAgIHJlc29sdmUocmVzcG9uc2UpO1xuICB9IGVsc2Uge1xuICAgIHJlamVjdChuZXcgQXhpb3NFcnJvcihcbiAgICAgICdSZXF1ZXN0IGZhaWxlZCB3aXRoIHN0YXR1cyBjb2RlICcgKyByZXNwb25zZS5zdGF0dXMsXG4gICAgICBbQXhpb3NFcnJvci5FUlJfQkFEX1JFUVVFU1QsIEF4aW9zRXJyb3IuRVJSX0JBRF9SRVNQT05TRV1bTWF0aC5mbG9vcihyZXNwb25zZS5zdGF0dXMgLyAxMDApIC0gNF0sXG4gICAgICByZXNwb25zZS5jb25maWcsXG4gICAgICByZXNwb25zZS5yZXF1ZXN0LFxuICAgICAgcmVzcG9uc2VcbiAgICApKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/settle.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ transformData; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../defaults/index.js */ \"./node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || _defaults_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n  const context = response || config;\n  const headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(context.headers);\n  let data = context.data;\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBRXFCO0FBQ1U7QUFDTzs7QUFFbkQ7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnQkFBZ0I7QUFDM0IsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsYUFBYSxHQUFHO0FBQ2hCO0FBQ2U7QUFDZix5QkFBeUIsMERBQVE7QUFDakM7QUFDQSxrQkFBa0Isa0VBQWlCO0FBQ25DOztBQUVBLEVBQUUseURBQWE7QUFDZjtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcz81NTk0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4vLi4vdXRpbHMuanMnO1xuaW1wb3J0IGRlZmF1bHRzIGZyb20gJy4uL2RlZmF1bHRzL2luZGV4LmpzJztcbmltcG9ydCBBeGlvc0hlYWRlcnMgZnJvbSAnLi4vY29yZS9BeGlvc0hlYWRlcnMuanMnO1xuXG4vKipcbiAqIFRyYW5zZm9ybSB0aGUgZGF0YSBmb3IgYSByZXF1ZXN0IG9yIGEgcmVzcG9uc2VcbiAqXG4gKiBAcGFyYW0ge0FycmF5fEZ1bmN0aW9ufSBmbnMgQSBzaW5nbGUgZnVuY3Rpb24gb3IgQXJyYXkgb2YgZnVuY3Rpb25zXG4gKiBAcGFyYW0gez9PYmplY3R9IHJlc3BvbnNlIFRoZSByZXNwb25zZSBvYmplY3RcbiAqXG4gKiBAcmV0dXJucyB7Kn0gVGhlIHJlc3VsdGluZyB0cmFuc2Zvcm1lZCBkYXRhXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyYW5zZm9ybURhdGEoZm5zLCByZXNwb25zZSkge1xuICBjb25zdCBjb25maWcgPSB0aGlzIHx8IGRlZmF1bHRzO1xuICBjb25zdCBjb250ZXh0ID0gcmVzcG9uc2UgfHwgY29uZmlnO1xuICBjb25zdCBoZWFkZXJzID0gQXhpb3NIZWFkZXJzLmZyb20oY29udGV4dC5oZWFkZXJzKTtcbiAgbGV0IGRhdGEgPSBjb250ZXh0LmRhdGE7XG5cbiAgdXRpbHMuZm9yRWFjaChmbnMsIGZ1bmN0aW9uIHRyYW5zZm9ybShmbikge1xuICAgIGRhdGEgPSBmbi5jYWxsKGNvbmZpZywgZGF0YSwgaGVhZGVycy5ub3JtYWxpemUoKSwgcmVzcG9uc2UgPyByZXNwb25zZS5zdGF0dXMgOiB1bmRlZmluZWQpO1xuICB9KTtcblxuICBoZWFkZXJzLm5vcm1hbGl6ZSgpO1xuXG4gIHJldHVybiBkYXRhO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/transformData.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/defaults/index.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/defaults/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _transitional_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transitional.js */ \"./node_modules/axios/lib/defaults/transitional.js\");\n/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/toFormData.js */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/toURLEncodedForm.js */ \"./node_modules/axios/lib/helpers/toURLEncodedForm.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/formDataToJSON.js */ \"./node_modules/axios/lib/helpers/formDataToJSON.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: _transitional_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n\n  adapter: _platform_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isNode ? 'http' : 'xhr',\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(data);\n\n    if (isObjectPayload && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify((0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(data)) : data;\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBuffer(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBuffer(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isStream(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFile(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBlob(data)\n    ) {\n      return data;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return (0,_helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return (0,_helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].from(e, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: _platform_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].classes.FormData,\n    Blob: _platform_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (defaults);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWE7O0FBRW1CO0FBQ2U7QUFDTTtBQUNIO0FBQ1k7QUFDbEI7QUFDYzs7QUFFMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsVUFBVTtBQUNyQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0EsTUFBTSwwREFBYztBQUNwQjtBQUNBO0FBQ0EsYUFBYSxzREFBVTtBQUN2QixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBLGdCQUFnQix3REFBb0I7O0FBRXBDLFdBQVcsaUVBQWU7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwwREFBYzs7QUFFMUMsMkJBQTJCLDREQUFnQjtBQUMzQztBQUNBOztBQUVBLHVCQUF1Qiw0REFBZ0I7O0FBRXZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELHNFQUFjO0FBQy9EOztBQUVBLFFBQVEsK0RBQW1CO0FBQzNCLE1BQU0sMERBQWM7QUFDcEIsTUFBTSwwREFBYztBQUNwQixNQUFNLHdEQUFZO0FBQ2xCLE1BQU0sd0RBQVk7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtRUFBdUI7QUFDL0I7QUFDQTtBQUNBLFFBQVEsbUVBQXVCO0FBQy9CLGdFQUFnRTtBQUNoRTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxlQUFlLHdFQUFnQjtBQUMvQjs7QUFFQSx3QkFBd0IsNERBQWdCO0FBQ3hDOztBQUVBLGVBQWUsa0VBQVU7QUFDekIsd0JBQXdCLGlCQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxnQkFBZ0IsMERBQWM7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxrQkFBa0IsZ0VBQWUsSUFBSSw0RUFBMkI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLGtFQUFnQjtBQUM5QixVQUFVLGtFQUFnQjtBQUMxQixHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlEQUFhO0FBQ2I7QUFDQSxDQUFDOztBQUVELCtEQUFlLFFBQVEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzL2luZGV4LmpzP2U5NmYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vdXRpbHMuanMnO1xuaW1wb3J0IEF4aW9zRXJyb3IgZnJvbSAnLi4vY29yZS9BeGlvc0Vycm9yLmpzJztcbmltcG9ydCB0cmFuc2l0aW9uYWxEZWZhdWx0cyBmcm9tICcuL3RyYW5zaXRpb25hbC5qcyc7XG5pbXBvcnQgdG9Gb3JtRGF0YSBmcm9tICcuLi9oZWxwZXJzL3RvRm9ybURhdGEuanMnO1xuaW1wb3J0IHRvVVJMRW5jb2RlZEZvcm0gZnJvbSAnLi4vaGVscGVycy90b1VSTEVuY29kZWRGb3JtLmpzJztcbmltcG9ydCBwbGF0Zm9ybSBmcm9tICcuLi9wbGF0Zm9ybS9pbmRleC5qcyc7XG5pbXBvcnQgZm9ybURhdGFUb0pTT04gZnJvbSAnLi4vaGVscGVycy9mb3JtRGF0YVRvSlNPTi5qcyc7XG5cbi8qKlxuICogSXQgdGFrZXMgYSBzdHJpbmcsIHRyaWVzIHRvIHBhcnNlIGl0LCBhbmQgaWYgaXQgZmFpbHMsIGl0IHJldHVybnMgdGhlIHN0cmluZ2lmaWVkIHZlcnNpb25cbiAqIG9mIHRoZSBpbnB1dFxuICpcbiAqIEBwYXJhbSB7YW55fSByYXdWYWx1ZSAtIFRoZSB2YWx1ZSB0byBiZSBzdHJpbmdpZmllZC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHBhcnNlciAtIEEgZnVuY3Rpb24gdGhhdCBwYXJzZXMgYSBzdHJpbmcgaW50byBhIEphdmFTY3JpcHQgb2JqZWN0LlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZW5jb2RlciAtIEEgZnVuY3Rpb24gdGhhdCB0YWtlcyBhIHZhbHVlIGFuZCByZXR1cm5zIGEgc3RyaW5nLlxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgc3RyaW5naWZpZWQgdmVyc2lvbiBvZiB0aGUgcmF3VmFsdWUuXG4gKi9cbmZ1bmN0aW9uIHN0cmluZ2lmeVNhZmVseShyYXdWYWx1ZSwgcGFyc2VyLCBlbmNvZGVyKSB7XG4gIGlmICh1dGlscy5pc1N0cmluZyhyYXdWYWx1ZSkpIHtcbiAgICB0cnkge1xuICAgICAgKHBhcnNlciB8fCBKU09OLnBhcnNlKShyYXdWYWx1ZSk7XG4gICAgICByZXR1cm4gdXRpbHMudHJpbShyYXdWYWx1ZSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgaWYgKGUubmFtZSAhPT0gJ1N5bnRheEVycm9yJykge1xuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoZW5jb2RlciB8fCBKU09OLnN0cmluZ2lmeSkocmF3VmFsdWUpO1xufVxuXG5jb25zdCBkZWZhdWx0cyA9IHtcblxuICB0cmFuc2l0aW9uYWw6IHRyYW5zaXRpb25hbERlZmF1bHRzLFxuXG4gIGFkYXB0ZXI6IHBsYXRmb3JtLmlzTm9kZSA/ICdodHRwJyA6ICd4aHInLFxuXG4gIHRyYW5zZm9ybVJlcXVlc3Q6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXF1ZXN0KGRhdGEsIGhlYWRlcnMpIHtcbiAgICBjb25zdCBjb250ZW50VHlwZSA9IGhlYWRlcnMuZ2V0Q29udGVudFR5cGUoKSB8fCAnJztcbiAgICBjb25zdCBoYXNKU09OQ29udGVudFR5cGUgPSBjb250ZW50VHlwZS5pbmRleE9mKCdhcHBsaWNhdGlvbi9qc29uJykgPiAtMTtcbiAgICBjb25zdCBpc09iamVjdFBheWxvYWQgPSB1dGlscy5pc09iamVjdChkYXRhKTtcblxuICAgIGlmIChpc09iamVjdFBheWxvYWQgJiYgdXRpbHMuaXNIVE1MRm9ybShkYXRhKSkge1xuICAgICAgZGF0YSA9IG5ldyBGb3JtRGF0YShkYXRhKTtcbiAgICB9XG5cbiAgICBjb25zdCBpc0Zvcm1EYXRhID0gdXRpbHMuaXNGb3JtRGF0YShkYXRhKTtcblxuICAgIGlmIChpc0Zvcm1EYXRhKSB7XG4gICAgICBpZiAoIWhhc0pTT05Db250ZW50VHlwZSkge1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBoYXNKU09OQ29udGVudFR5cGUgPyBKU09OLnN0cmluZ2lmeShmb3JtRGF0YVRvSlNPTihkYXRhKSkgOiBkYXRhO1xuICAgIH1cblxuICAgIGlmICh1dGlscy5pc0FycmF5QnVmZmVyKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0J1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNTdHJlYW0oZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzRmlsZShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCbG9iKGRhdGEpXG4gICAgKSB7XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzQXJyYXlCdWZmZXJWaWV3KGRhdGEpKSB7XG4gICAgICByZXR1cm4gZGF0YS5idWZmZXI7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc1VSTFNlYXJjaFBhcmFtcyhkYXRhKSkge1xuICAgICAgaGVhZGVycy5zZXRDb250ZW50VHlwZSgnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLTgnLCBmYWxzZSk7XG4gICAgICByZXR1cm4gZGF0YS50b1N0cmluZygpO1xuICAgIH1cblxuICAgIGxldCBpc0ZpbGVMaXN0O1xuXG4gICAgaWYgKGlzT2JqZWN0UGF5bG9hZCkge1xuICAgICAgaWYgKGNvbnRlbnRUeXBlLmluZGV4T2YoJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcpID4gLTEpIHtcbiAgICAgICAgcmV0dXJuIHRvVVJMRW5jb2RlZEZvcm0oZGF0YSwgdGhpcy5mb3JtU2VyaWFsaXplcikudG9TdHJpbmcoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKChpc0ZpbGVMaXN0ID0gdXRpbHMuaXNGaWxlTGlzdChkYXRhKSkgfHwgY29udGVudFR5cGUuaW5kZXhPZignbXVsdGlwYXJ0L2Zvcm0tZGF0YScpID4gLTEpIHtcbiAgICAgICAgY29uc3QgX0Zvcm1EYXRhID0gdGhpcy5lbnYgJiYgdGhpcy5lbnYuRm9ybURhdGE7XG5cbiAgICAgICAgcmV0dXJuIHRvRm9ybURhdGEoXG4gICAgICAgICAgaXNGaWxlTGlzdCA/IHsnZmlsZXNbXSc6IGRhdGF9IDogZGF0YSxcbiAgICAgICAgICBfRm9ybURhdGEgJiYgbmV3IF9Gb3JtRGF0YSgpLFxuICAgICAgICAgIHRoaXMuZm9ybVNlcmlhbGl6ZXJcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaXNPYmplY3RQYXlsb2FkIHx8IGhhc0pTT05Db250ZW50VHlwZSApIHtcbiAgICAgIGhlYWRlcnMuc2V0Q29udGVudFR5cGUoJ2FwcGxpY2F0aW9uL2pzb24nLCBmYWxzZSk7XG4gICAgICByZXR1cm4gc3RyaW5naWZ5U2FmZWx5KGRhdGEpO1xuICAgIH1cblxuICAgIHJldHVybiBkYXRhO1xuICB9XSxcblxuICB0cmFuc2Zvcm1SZXNwb25zZTogW2Z1bmN0aW9uIHRyYW5zZm9ybVJlc3BvbnNlKGRhdGEpIHtcbiAgICBjb25zdCB0cmFuc2l0aW9uYWwgPSB0aGlzLnRyYW5zaXRpb25hbCB8fCBkZWZhdWx0cy50cmFuc2l0aW9uYWw7XG4gICAgY29uc3QgZm9yY2VkSlNPTlBhcnNpbmcgPSB0cmFuc2l0aW9uYWwgJiYgdHJhbnNpdGlvbmFsLmZvcmNlZEpTT05QYXJzaW5nO1xuICAgIGNvbnN0IEpTT05SZXF1ZXN0ZWQgPSB0aGlzLnJlc3BvbnNlVHlwZSA9PT0gJ2pzb24nO1xuXG4gICAgaWYgKGRhdGEgJiYgdXRpbHMuaXNTdHJpbmcoZGF0YSkgJiYgKChmb3JjZWRKU09OUGFyc2luZyAmJiAhdGhpcy5yZXNwb25zZVR5cGUpIHx8IEpTT05SZXF1ZXN0ZWQpKSB7XG4gICAgICBjb25zdCBzaWxlbnRKU09OUGFyc2luZyA9IHRyYW5zaXRpb25hbCAmJiB0cmFuc2l0aW9uYWwuc2lsZW50SlNPTlBhcnNpbmc7XG4gICAgICBjb25zdCBzdHJpY3RKU09OUGFyc2luZyA9ICFzaWxlbnRKU09OUGFyc2luZyAmJiBKU09OUmVxdWVzdGVkO1xuXG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShkYXRhKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKHN0cmljdEpTT05QYXJzaW5nKSB7XG4gICAgICAgICAgaWYgKGUubmFtZSA9PT0gJ1N5bnRheEVycm9yJykge1xuICAgICAgICAgICAgdGhyb3cgQXhpb3NFcnJvci5mcm9tKGUsIEF4aW9zRXJyb3IuRVJSX0JBRF9SRVNQT05TRSwgdGhpcywgbnVsbCwgdGhpcy5yZXNwb25zZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgLyoqXG4gICAqIEEgdGltZW91dCBpbiBtaWxsaXNlY29uZHMgdG8gYWJvcnQgYSByZXF1ZXN0LiBJZiBzZXQgdG8gMCAoZGVmYXVsdCkgYVxuICAgKiB0aW1lb3V0IGlzIG5vdCBjcmVhdGVkLlxuICAgKi9cbiAgdGltZW91dDogMCxcblxuICB4c3JmQ29va2llTmFtZTogJ1hTUkYtVE9LRU4nLFxuICB4c3JmSGVhZGVyTmFtZTogJ1gtWFNSRi1UT0tFTicsXG5cbiAgbWF4Q29udGVudExlbmd0aDogLTEsXG4gIG1heEJvZHlMZW5ndGg6IC0xLFxuXG4gIGVudjoge1xuICAgIEZvcm1EYXRhOiBwbGF0Zm9ybS5jbGFzc2VzLkZvcm1EYXRhLFxuICAgIEJsb2I6IHBsYXRmb3JtLmNsYXNzZXMuQmxvYlxuICB9LFxuXG4gIHZhbGlkYXRlU3RhdHVzOiBmdW5jdGlvbiB2YWxpZGF0ZVN0YXR1cyhzdGF0dXMpIHtcbiAgICByZXR1cm4gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDA7XG4gIH0sXG5cbiAgaGVhZGVyczoge1xuICAgIGNvbW1vbjoge1xuICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyonLFxuICAgICAgJ0NvbnRlbnQtVHlwZSc6IHVuZGVmaW5lZFxuICAgIH1cbiAgfVxufTtcblxudXRpbHMuZm9yRWFjaChbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCcsICdwb3N0JywgJ3B1dCcsICdwYXRjaCddLCAobWV0aG9kKSA9PiB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHt9O1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGRlZmF1bHRzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/defaults/index.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/defaults/transitional.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/defaults/transitional.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzL3RyYW5zaXRpb25hbC5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7O0FBRWIsK0RBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy90cmFuc2l0aW9uYWwuanM/YzMyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgc2lsZW50SlNPTlBhcnNpbmc6IHRydWUsXG4gIGZvcmNlZEpTT05QYXJzaW5nOiB0cnVlLFxuICBjbGFyaWZ5VGltZW91dEVycm9yOiBmYWxzZVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/defaults/transitional.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/env/data.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/env/data.js ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERSION: function() { return /* binding */ VERSION; }\n/* harmony export */ });\nconst VERSION = \"1.5.0\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2Vudi9kYXRhLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2Vudi9kYXRhLmpzP2Y0ZGMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFZFUlNJT04gPSBcIjEuNS4wXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/env/data.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/AxiosURLSearchParams.js":
/*!****************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/AxiosURLSearchParams.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n\n\n\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AxiosURLSearchParams);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvQXhpb3NVUkxTZWFyY2hQYXJhbXMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBYTs7QUFFNEI7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcscUJBQXFCO0FBQ2hDLFdBQVcscUJBQXFCO0FBQ2hDO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLDBEQUFVO0FBQ3RCOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJOztBQUVKO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEsK0RBQWUsb0JBQW9CLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL0F4aW9zVVJMU2VhcmNoUGFyYW1zLmpzP2M2YzQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdG9Gb3JtRGF0YSBmcm9tICcuL3RvRm9ybURhdGEuanMnO1xuXG4vKipcbiAqIEl0IGVuY29kZXMgYSBzdHJpbmcgYnkgcmVwbGFjaW5nIGFsbCBjaGFyYWN0ZXJzIHRoYXQgYXJlIG5vdCBpbiB0aGUgdW5yZXNlcnZlZCBzZXQgd2l0aFxuICogdGhlaXIgcGVyY2VudC1lbmNvZGVkIGVxdWl2YWxlbnRzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0ciAtIFRoZSBzdHJpbmcgdG8gZW5jb2RlLlxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBlbmNvZGVkIHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gZW5jb2RlKHN0cikge1xuICBjb25zdCBjaGFyTWFwID0ge1xuICAgICchJzogJyUyMScsXG4gICAgXCInXCI6ICclMjcnLFxuICAgICcoJzogJyUyOCcsXG4gICAgJyknOiAnJTI5JyxcbiAgICAnfic6ICclN0UnLFxuICAgICclMjAnOiAnKycsXG4gICAgJyUwMCc6ICdcXHgwMCdcbiAgfTtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHIpLnJlcGxhY2UoL1shJygpfl18JTIwfCUwMC9nLCBmdW5jdGlvbiByZXBsYWNlcihtYXRjaCkge1xuICAgIHJldHVybiBjaGFyTWFwW21hdGNoXTtcbiAgfSk7XG59XG5cbi8qKlxuICogSXQgdGFrZXMgYSBwYXJhbXMgb2JqZWN0IGFuZCBjb252ZXJ0cyBpdCB0byBhIEZvcm1EYXRhIG9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0PHN0cmluZywgYW55Pn0gcGFyYW1zIC0gVGhlIHBhcmFtZXRlcnMgdG8gYmUgY29udmVydGVkIHRvIGEgRm9ybURhdGEgb2JqZWN0LlxuICogQHBhcmFtIHtPYmplY3Q8c3RyaW5nLCBhbnk+fSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgb2JqZWN0IHBhc3NlZCB0byB0aGUgQXhpb3MgY29uc3RydWN0b3IuXG4gKlxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmZ1bmN0aW9uIEF4aW9zVVJMU2VhcmNoUGFyYW1zKHBhcmFtcywgb3B0aW9ucykge1xuICB0aGlzLl9wYWlycyA9IFtdO1xuXG4gIHBhcmFtcyAmJiB0b0Zvcm1EYXRhKHBhcmFtcywgdGhpcywgb3B0aW9ucyk7XG59XG5cbmNvbnN0IHByb3RvdHlwZSA9IEF4aW9zVVJMU2VhcmNoUGFyYW1zLnByb3RvdHlwZTtcblxucHJvdG90eXBlLmFwcGVuZCA9IGZ1bmN0aW9uIGFwcGVuZChuYW1lLCB2YWx1ZSkge1xuICB0aGlzLl9wYWlycy5wdXNoKFtuYW1lLCB2YWx1ZV0pO1xufTtcblxucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoZW5jb2Rlcikge1xuICBjb25zdCBfZW5jb2RlID0gZW5jb2RlciA/IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIGVuY29kZXIuY2FsbCh0aGlzLCB2YWx1ZSwgZW5jb2RlKTtcbiAgfSA6IGVuY29kZTtcblxuICByZXR1cm4gdGhpcy5fcGFpcnMubWFwKGZ1bmN0aW9uIGVhY2gocGFpcikge1xuICAgIHJldHVybiBfZW5jb2RlKHBhaXJbMF0pICsgJz0nICsgX2VuY29kZShwYWlyWzFdKTtcbiAgfSwgJycpLmpvaW4oJyYnKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEF4aW9zVVJMU2VhcmNoUGFyYW1zO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/AxiosURLSearchParams.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/HttpStatusCode.js":
/*!**********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/HttpStatusCode.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (HttpStatusCode);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvSHR0cFN0YXR1c0NvZGUuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQsK0RBQWUsY0FBYyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9IdHRwU3RhdHVzQ29kZS5qcz9hNWZiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEh0dHBTdGF0dXNDb2RlID0ge1xuICBDb250aW51ZTogMTAwLFxuICBTd2l0Y2hpbmdQcm90b2NvbHM6IDEwMSxcbiAgUHJvY2Vzc2luZzogMTAyLFxuICBFYXJseUhpbnRzOiAxMDMsXG4gIE9rOiAyMDAsXG4gIENyZWF0ZWQ6IDIwMSxcbiAgQWNjZXB0ZWQ6IDIwMixcbiAgTm9uQXV0aG9yaXRhdGl2ZUluZm9ybWF0aW9uOiAyMDMsXG4gIE5vQ29udGVudDogMjA0LFxuICBSZXNldENvbnRlbnQ6IDIwNSxcbiAgUGFydGlhbENvbnRlbnQ6IDIwNixcbiAgTXVsdGlTdGF0dXM6IDIwNyxcbiAgQWxyZWFkeVJlcG9ydGVkOiAyMDgsXG4gIEltVXNlZDogMjI2LFxuICBNdWx0aXBsZUNob2ljZXM6IDMwMCxcbiAgTW92ZWRQZXJtYW5lbnRseTogMzAxLFxuICBGb3VuZDogMzAyLFxuICBTZWVPdGhlcjogMzAzLFxuICBOb3RNb2RpZmllZDogMzA0LFxuICBVc2VQcm94eTogMzA1LFxuICBVbnVzZWQ6IDMwNixcbiAgVGVtcG9yYXJ5UmVkaXJlY3Q6IDMwNyxcbiAgUGVybWFuZW50UmVkaXJlY3Q6IDMwOCxcbiAgQmFkUmVxdWVzdDogNDAwLFxuICBVbmF1dGhvcml6ZWQ6IDQwMSxcbiAgUGF5bWVudFJlcXVpcmVkOiA0MDIsXG4gIEZvcmJpZGRlbjogNDAzLFxuICBOb3RGb3VuZDogNDA0LFxuICBNZXRob2ROb3RBbGxvd2VkOiA0MDUsXG4gIE5vdEFjY2VwdGFibGU6IDQwNixcbiAgUHJveHlBdXRoZW50aWNhdGlvblJlcXVpcmVkOiA0MDcsXG4gIFJlcXVlc3RUaW1lb3V0OiA0MDgsXG4gIENvbmZsaWN0OiA0MDksXG4gIEdvbmU6IDQxMCxcbiAgTGVuZ3RoUmVxdWlyZWQ6IDQxMSxcbiAgUHJlY29uZGl0aW9uRmFpbGVkOiA0MTIsXG4gIFBheWxvYWRUb29MYXJnZTogNDEzLFxuICBVcmlUb29Mb25nOiA0MTQsXG4gIFVuc3VwcG9ydGVkTWVkaWFUeXBlOiA0MTUsXG4gIFJhbmdlTm90U2F0aXNmaWFibGU6IDQxNixcbiAgRXhwZWN0YXRpb25GYWlsZWQ6IDQxNyxcbiAgSW1BVGVhcG90OiA0MTgsXG4gIE1pc2RpcmVjdGVkUmVxdWVzdDogNDIxLFxuICBVbnByb2Nlc3NhYmxlRW50aXR5OiA0MjIsXG4gIExvY2tlZDogNDIzLFxuICBGYWlsZWREZXBlbmRlbmN5OiA0MjQsXG4gIFRvb0Vhcmx5OiA0MjUsXG4gIFVwZ3JhZGVSZXF1aXJlZDogNDI2LFxuICBQcmVjb25kaXRpb25SZXF1aXJlZDogNDI4LFxuICBUb29NYW55UmVxdWVzdHM6IDQyOSxcbiAgUmVxdWVzdEhlYWRlckZpZWxkc1Rvb0xhcmdlOiA0MzEsXG4gIFVuYXZhaWxhYmxlRm9yTGVnYWxSZWFzb25zOiA0NTEsXG4gIEludGVybmFsU2VydmVyRXJyb3I6IDUwMCxcbiAgTm90SW1wbGVtZW50ZWQ6IDUwMSxcbiAgQmFkR2F0ZXdheTogNTAyLFxuICBTZXJ2aWNlVW5hdmFpbGFibGU6IDUwMyxcbiAgR2F0ZXdheVRpbWVvdXQ6IDUwNCxcbiAgSHR0cFZlcnNpb25Ob3RTdXBwb3J0ZWQ6IDUwNSxcbiAgVmFyaWFudEFsc29OZWdvdGlhdGVzOiA1MDYsXG4gIEluc3VmZmljaWVudFN0b3JhZ2U6IDUwNyxcbiAgTG9vcERldGVjdGVkOiA1MDgsXG4gIE5vdEV4dGVuZGVkOiA1MTAsXG4gIE5ldHdvcmtBdXRoZW50aWNhdGlvblJlcXVpcmVkOiA1MTEsXG59O1xuXG5PYmplY3QuZW50cmllcyhIdHRwU3RhdHVzQ29kZSkuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gIEh0dHBTdGF0dXNDb2RlW3ZhbHVlXSA9IGtleTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBIdHRwU3RhdHVzQ29kZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/HttpStatusCode.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ bind; }\n/* harmony export */ });\n\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7O0FBRUU7QUFDZjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcz9kNDI3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYmluZChmbiwgdGhpc0FyZykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcCgpIHtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJndW1lbnRzKTtcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/bind.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ buildURL; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/AxiosURLSearchParams.js */ \"./node_modules/axios/lib/helpers/AxiosURLSearchParams.js\");\n\n\n\n\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isURLSearchParams(params) ?\n      params.toString() :\n      new _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7O0FBRW1CO0FBQ3NDOztBQUV0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osdUJBQXVCLG1FQUF1QjtBQUM5QztBQUNBLFVBQVUsd0VBQW9CO0FBQzlCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9idWlsZFVSTC5qcz9mMTNlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCBBeGlvc1VSTFNlYXJjaFBhcmFtcyBmcm9tICcuLi9oZWxwZXJzL0F4aW9zVVJMU2VhcmNoUGFyYW1zLmpzJztcblxuLyoqXG4gKiBJdCByZXBsYWNlcyBhbGwgaW5zdGFuY2VzIG9mIHRoZSBjaGFyYWN0ZXJzIGA6YCwgYCRgLCBgLGAsIGArYCwgYFtgLCBhbmQgYF1gIHdpdGggdGhlaXJcbiAqIFVSSSBlbmNvZGVkIGNvdW50ZXJwYXJ0c1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWwgVGhlIHZhbHVlIHRvIGJlIGVuY29kZWQuXG4gKlxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGVuY29kZWQgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyUzQS9naSwgJzonKS5cbiAgICByZXBsYWNlKC8lMjQvZywgJyQnKS5cbiAgICByZXBsYWNlKC8lMkMvZ2ksICcsJykuXG4gICAgcmVwbGFjZSgvJTIwL2csICcrJykuXG4gICAgcmVwbGFjZSgvJTVCL2dpLCAnWycpLlxuICAgIHJlcGxhY2UoLyU1RC9naSwgJ10nKTtcbn1cblxuLyoqXG4gKiBCdWlsZCBhIFVSTCBieSBhcHBlbmRpbmcgcGFyYW1zIHRvIHRoZSBlbmRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBiYXNlIG9mIHRoZSB1cmwgKGUuZy4sIGh0dHA6Ly93d3cuZ29vZ2xlLmNvbSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXSBUaGUgcGFyYW1zIHRvIGJlIGFwcGVuZGVkXG4gKiBAcGFyYW0gez9vYmplY3R9IG9wdGlvbnNcbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZm9ybWF0dGVkIHVybFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBidWlsZFVSTCh1cmwsIHBhcmFtcywgb3B0aW9ucykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgaWYgKCFwYXJhbXMpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG4gIFxuICBjb25zdCBfZW5jb2RlID0gb3B0aW9ucyAmJiBvcHRpb25zLmVuY29kZSB8fCBlbmNvZGU7XG5cbiAgY29uc3Qgc2VyaWFsaXplRm4gPSBvcHRpb25zICYmIG9wdGlvbnMuc2VyaWFsaXplO1xuXG4gIGxldCBzZXJpYWxpemVkUGFyYW1zO1xuXG4gIGlmIChzZXJpYWxpemVGbikge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBzZXJpYWxpemVGbihwYXJhbXMsIG9wdGlvbnMpO1xuICB9IGVsc2Uge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSB1dGlscy5pc1VSTFNlYXJjaFBhcmFtcyhwYXJhbXMpID9cbiAgICAgIHBhcmFtcy50b1N0cmluZygpIDpcbiAgICAgIG5ldyBBeGlvc1VSTFNlYXJjaFBhcmFtcyhwYXJhbXMsIG9wdGlvbnMpLnRvU3RyaW5nKF9lbmNvZGUpO1xuICB9XG5cbiAgaWYgKHNlcmlhbGl6ZWRQYXJhbXMpIHtcbiAgICBjb25zdCBoYXNobWFya0luZGV4ID0gdXJsLmluZGV4T2YoXCIjXCIpO1xuXG4gICAgaWYgKGhhc2htYXJrSW5kZXggIT09IC0xKSB7XG4gICAgICB1cmwgPSB1cmwuc2xpY2UoMCwgaGFzaG1hcmtJbmRleCk7XG4gICAgfVxuICAgIHVybCArPSAodXJsLmluZGV4T2YoJz8nKSA9PT0gLTEgPyAnPycgOiAnJicpICsgc2VyaWFsaXplZFBhcmFtcztcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/buildURL.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ combineURLs; }\n/* harmony export */ });\n\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb21iaW5lVVJMcy5qcz81YTA2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFVSTCBieSBjb21iaW5pbmcgdGhlIHNwZWNpZmllZCBVUkxzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVUkwgVGhlIGJhc2UgVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVsYXRpdmVVUkwgVGhlIHJlbGF0aXZlIFVSTFxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBVUkxcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVsYXRpdmVVUkwpIHtcbiAgcmV0dXJuIHJlbGF0aXZlVVJMXG4gICAgPyBiYXNlVVJMLnJlcGxhY2UoL1xcLyskLywgJycpICsgJy8nICsgcmVsYXRpdmVVUkwucmVwbGFjZSgvXlxcLysvLCAnJylcbiAgICA6IGJhc2VVUkw7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/combineURLs.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/index.js\");\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBYTs7QUFFcUI7QUFDVTs7QUFFNUMsK0RBQWUsK0VBQTZCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsWUFBWSwwREFBYztBQUMxQjtBQUNBOztBQUVBLFlBQVksMERBQWM7QUFDMUI7QUFDQTs7QUFFQSxZQUFZLDBEQUFjO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHlDQUF5QztBQUN6QyxPQUFPOztBQUVQO0FBQ0EsNERBQTRELHdCQUF3QjtBQUNwRjtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQyw4QkFBOEIsY0FBYztBQUM1QztBQUNBO0FBQ0EsR0FBRyxHQUFHLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2Nvb2tpZXMuanM/M2EyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB1dGlscyBmcm9tICcuLy4uL3V0aWxzLmpzJztcbmltcG9ydCBwbGF0Zm9ybSBmcm9tICcuLi9wbGF0Zm9ybS9pbmRleC5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IHBsYXRmb3JtLmlzU3RhbmRhcmRCcm93c2VyRW52ID9cblxuLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIHN1cHBvcnQgZG9jdW1lbnQuY29va2llXG4gIChmdW5jdGlvbiBzdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZShuYW1lLCB2YWx1ZSwgZXhwaXJlcywgcGF0aCwgZG9tYWluLCBzZWN1cmUpIHtcbiAgICAgICAgY29uc3QgY29va2llID0gW107XG4gICAgICAgIGNvb2tpZS5wdXNoKG5hbWUgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpKTtcblxuICAgICAgICBpZiAodXRpbHMuaXNOdW1iZXIoZXhwaXJlcykpIHtcbiAgICAgICAgICBjb29raWUucHVzaCgnZXhwaXJlcz0nICsgbmV3IERhdGUoZXhwaXJlcykudG9HTVRTdHJpbmcoKSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodXRpbHMuaXNTdHJpbmcocGF0aCkpIHtcbiAgICAgICAgICBjb29raWUucHVzaCgncGF0aD0nICsgcGF0aCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodXRpbHMuaXNTdHJpbmcoZG9tYWluKSkge1xuICAgICAgICAgIGNvb2tpZS5wdXNoKCdkb21haW49JyArIGRvbWFpbik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc2VjdXJlID09PSB0cnVlKSB7XG4gICAgICAgICAgY29va2llLnB1c2goJ3NlY3VyZScpO1xuICAgICAgICB9XG5cbiAgICAgICAgZG9jdW1lbnQuY29va2llID0gY29va2llLmpvaW4oJzsgJyk7XG4gICAgICB9LFxuXG4gICAgICByZWFkOiBmdW5jdGlvbiByZWFkKG5hbWUpIHtcbiAgICAgICAgY29uc3QgbWF0Y2ggPSBkb2N1bWVudC5jb29raWUubWF0Y2gobmV3IFJlZ0V4cCgnKF58O1xcXFxzKikoJyArIG5hbWUgKyAnKT0oW147XSopJykpO1xuICAgICAgICByZXR1cm4gKG1hdGNoID8gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzNdKSA6IG51bGwpO1xuICAgICAgfSxcblxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUobmFtZSkge1xuICAgICAgICB0aGlzLndyaXRlKG5hbWUsICcnLCBEYXRlLm5vdygpIC0gODY0MDAwMDApO1xuICAgICAgfVxuICAgIH07XG4gIH0pKCkgOlxuXG4vLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnYgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZSgpIHt9LFxuICAgICAgcmVhZDogZnVuY3Rpb24gcmVhZCgpIHsgcmV0dXJuIG51bGw7IH0sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfSkoKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/cookies.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/formDataToJSON.js":
/*!**********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/formDataToJSON.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormData(formData) && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(formData.entries)) {\n    const obj = {};\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (formDataToJSON);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvZm9ybURhdGFUb0pTT04uanMiLCJtYXBwaW5ncyI6Ijs7QUFBYTs7QUFFbUI7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywwREFBYztBQUN2QjtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSw0QkFBNEI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHlEQUFhOztBQUVqQztBQUNBLFVBQVUsNERBQWdCO0FBQzFCO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSwwQkFBMEIsMERBQWM7QUFDeEM7QUFDQTs7QUFFQTs7QUFFQSxrQkFBa0IseURBQWE7QUFDL0I7QUFDQTs7QUFFQTtBQUNBOztBQUVBLE1BQU0sNERBQWdCLGNBQWMsNERBQWdCO0FBQ3BEOztBQUVBLElBQUksOERBQWtCO0FBQ3RCO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsK0RBQWUsY0FBYyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9mb3JtRGF0YVRvSlNPTi5qcz8zNDUyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcblxuLyoqXG4gKiBJdCB0YWtlcyBhIHN0cmluZyBsaWtlIGBmb29beF1beV1bel1gIGFuZCByZXR1cm5zIGFuIGFycmF5IGxpa2UgYFsnZm9vJywgJ3gnLCAneScsICd6J11cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKlxuICogQHJldHVybnMgQW4gYXJyYXkgb2Ygc3RyaW5ncy5cbiAqL1xuZnVuY3Rpb24gcGFyc2VQcm9wUGF0aChuYW1lKSB7XG4gIC8vIGZvb1t4XVt5XVt6XVxuICAvLyBmb28ueC55LnpcbiAgLy8gZm9vLXgteS16XG4gIC8vIGZvbyB4IHkgelxuICByZXR1cm4gdXRpbHMubWF0Y2hBbGwoL1xcdyt8XFxbKFxcdyopXS9nLCBuYW1lKS5tYXAobWF0Y2ggPT4ge1xuICAgIHJldHVybiBtYXRjaFswXSA9PT0gJ1tdJyA/ICcnIDogbWF0Y2hbMV0gfHwgbWF0Y2hbMF07XG4gIH0pO1xufVxuXG4vKipcbiAqIENvbnZlcnQgYW4gYXJyYXkgdG8gYW4gb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB7QXJyYXk8YW55Pn0gYXJyIC0gVGhlIGFycmF5IHRvIGNvbnZlcnQgdG8gYW4gb2JqZWN0LlxuICpcbiAqIEByZXR1cm5zIEFuIG9iamVjdCB3aXRoIHRoZSBzYW1lIGtleXMgYW5kIHZhbHVlcyBhcyB0aGUgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9PYmplY3QoYXJyKSB7XG4gIGNvbnN0IG9iaiA9IHt9O1xuICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoYXJyKTtcbiAgbGV0IGk7XG4gIGNvbnN0IGxlbiA9IGtleXMubGVuZ3RoO1xuICBsZXQga2V5O1xuICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICBrZXkgPSBrZXlzW2ldO1xuICAgIG9ialtrZXldID0gYXJyW2tleV07XG4gIH1cbiAgcmV0dXJuIG9iajtcbn1cblxuLyoqXG4gKiBJdCB0YWtlcyBhIEZvcm1EYXRhIG9iamVjdCBhbmQgcmV0dXJucyBhIEphdmFTY3JpcHQgb2JqZWN0XG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGZvcm1EYXRhIFRoZSBGb3JtRGF0YSBvYmplY3QgdG8gY29udmVydCB0byBKU09OLlxuICpcbiAqIEByZXR1cm5zIHtPYmplY3Q8c3RyaW5nLCBhbnk+IHwgbnVsbH0gVGhlIGNvbnZlcnRlZCBvYmplY3QuXG4gKi9cbmZ1bmN0aW9uIGZvcm1EYXRhVG9KU09OKGZvcm1EYXRhKSB7XG4gIGZ1bmN0aW9uIGJ1aWxkUGF0aChwYXRoLCB2YWx1ZSwgdGFyZ2V0LCBpbmRleCkge1xuICAgIGxldCBuYW1lID0gcGF0aFtpbmRleCsrXTtcbiAgICBjb25zdCBpc051bWVyaWNLZXkgPSBOdW1iZXIuaXNGaW5pdGUoK25hbWUpO1xuICAgIGNvbnN0IGlzTGFzdCA9IGluZGV4ID49IHBhdGgubGVuZ3RoO1xuICAgIG5hbWUgPSAhbmFtZSAmJiB1dGlscy5pc0FycmF5KHRhcmdldCkgPyB0YXJnZXQubGVuZ3RoIDogbmFtZTtcblxuICAgIGlmIChpc0xhc3QpIHtcbiAgICAgIGlmICh1dGlscy5oYXNPd25Qcm9wKHRhcmdldCwgbmFtZSkpIHtcbiAgICAgICAgdGFyZ2V0W25hbWVdID0gW3RhcmdldFtuYW1lXSwgdmFsdWVdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGFyZ2V0W25hbWVdID0gdmFsdWU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAhaXNOdW1lcmljS2V5O1xuICAgIH1cblxuICAgIGlmICghdGFyZ2V0W25hbWVdIHx8ICF1dGlscy5pc09iamVjdCh0YXJnZXRbbmFtZV0pKSB7XG4gICAgICB0YXJnZXRbbmFtZV0gPSBbXTtcbiAgICB9XG5cbiAgICBjb25zdCByZXN1bHQgPSBidWlsZFBhdGgocGF0aCwgdmFsdWUsIHRhcmdldFtuYW1lXSwgaW5kZXgpO1xuXG4gICAgaWYgKHJlc3VsdCAmJiB1dGlscy5pc0FycmF5KHRhcmdldFtuYW1lXSkpIHtcbiAgICAgIHRhcmdldFtuYW1lXSA9IGFycmF5VG9PYmplY3QodGFyZ2V0W25hbWVdKTtcbiAgICB9XG5cbiAgICByZXR1cm4gIWlzTnVtZXJpY0tleTtcbiAgfVxuXG4gIGlmICh1dGlscy5pc0Zvcm1EYXRhKGZvcm1EYXRhKSAmJiB1dGlscy5pc0Z1bmN0aW9uKGZvcm1EYXRhLmVudHJpZXMpKSB7XG4gICAgY29uc3Qgb2JqID0ge307XG5cbiAgICB1dGlscy5mb3JFYWNoRW50cnkoZm9ybURhdGEsIChuYW1lLCB2YWx1ZSkgPT4ge1xuICAgICAgYnVpbGRQYXRoKHBhcnNlUHJvcFBhdGgobmFtZSksIHZhbHVlLCBvYmosIDApO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIG9iajtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmb3JtRGF0YVRvSlNPTjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/formDataToJSON.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isAbsoluteURL; }\n/* harmony export */ });\n\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc0Fic29sdXRlVVJMLmpzPzdiYWYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIFVSTCB0byB0ZXN0XG4gKlxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGUsIG90aGVyd2lzZSBmYWxzZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc0Fic29sdXRlVVJMKHVybCkge1xuICAvLyBBIFVSTCBpcyBjb25zaWRlcmVkIGFic29sdXRlIGlmIGl0IGJlZ2lucyB3aXRoIFwiPHNjaGVtZT46Ly9cIiBvciBcIi8vXCIgKHByb3RvY29sLXJlbGF0aXZlIFVSTCkuXG4gIC8vIFJGQyAzOTg2IGRlZmluZXMgc2NoZW1lIG5hbWUgYXMgYSBzZXF1ZW5jZSBvZiBjaGFyYWN0ZXJzIGJlZ2lubmluZyB3aXRoIGEgbGV0dGVyIGFuZCBmb2xsb3dlZFxuICAvLyBieSBhbnkgY29tYmluYXRpb24gb2YgbGV0dGVycywgZGlnaXRzLCBwbHVzLCBwZXJpb2QsIG9yIGh5cGhlbi5cbiAgcmV0dXJuIC9eKFthLXpdW2EtelxcZCtcXC0uXSo6KT9cXC9cXC8vaS50ZXN0KHVybCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isAbsoluteURL.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isAxiosError; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(payload) && (payload.isAxiosError === true);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7O0FBRXFCOztBQUVsQztBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZDtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNlO0FBQ2YsU0FBUywwREFBYztBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzP2RiNWUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi8uLi91dGlscy5qcyc7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBwYXlsb2FkIGlzIGFuIGVycm9yIHRocm93biBieSBBeGlvc1xuICpcbiAqIEBwYXJhbSB7Kn0gcGF5bG9hZCBUaGUgdmFsdWUgdG8gdGVzdFxuICpcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBwYXlsb2FkIGlzIGFuIGVycm9yIHRocm93biBieSBBeGlvcywgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzQXhpb3NFcnJvcihwYXlsb2FkKSB7XG4gIHJldHVybiB1dGlscy5pc09iamVjdChwYXlsb2FkKSAmJiAocGF5bG9hZC5pc0F4aW9zRXJyb3IgPT09IHRydWUpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isAxiosError.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/index.js\");\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzIiwibWFwcGluZ3MiOiI7OztBQUFhOztBQUVxQjtBQUNVOztBQUU1QywrREFBZSwrRUFBNkI7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0E7QUFDQSxzQkFBc0IsMERBQWM7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxHQUFHLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbi5qcz8xOWIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4vLi4vdXRpbHMuanMnO1xuaW1wb3J0IHBsYXRmb3JtIGZyb20gJy4uL3BsYXRmb3JtL2luZGV4LmpzJztcblxuZXhwb3J0IGRlZmF1bHQgcGxhdGZvcm0uaXNTdGFuZGFyZEJyb3dzZXJFbnYgP1xuXG4vLyBTdGFuZGFyZCBicm93c2VyIGVudnMgaGF2ZSBmdWxsIHN1cHBvcnQgb2YgdGhlIEFQSXMgbmVlZGVkIHRvIHRlc3Rcbi8vIHdoZXRoZXIgdGhlIHJlcXVlc3QgVVJMIGlzIG9mIHRoZSBzYW1lIG9yaWdpbiBhcyBjdXJyZW50IGxvY2F0aW9uLlxuICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgIGNvbnN0IG1zaWUgPSAvKG1zaWV8dHJpZGVudCkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuICAgIGNvbnN0IHVybFBhcnNpbmdOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgIGxldCBvcmlnaW5VUkw7XG5cbiAgICAvKipcbiAgICAqIFBhcnNlIGEgVVJMIHRvIGRpc2NvdmVyIGl0J3MgY29tcG9uZW50c1xuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgVGhlIFVSTCB0byBiZSBwYXJzZWRcbiAgICAqIEByZXR1cm5zIHtPYmplY3R9XG4gICAgKi9cbiAgICBmdW5jdGlvbiByZXNvbHZlVVJMKHVybCkge1xuICAgICAgbGV0IGhyZWYgPSB1cmw7XG5cbiAgICAgIGlmIChtc2llKSB7XG4gICAgICAgIC8vIElFIG5lZWRzIGF0dHJpYnV0ZSBzZXQgdHdpY2UgdG8gbm9ybWFsaXplIHByb3BlcnRpZXNcbiAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG4gICAgICAgIGhyZWYgPSB1cmxQYXJzaW5nTm9kZS5ocmVmO1xuICAgICAgfVxuXG4gICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcblxuICAgICAgLy8gdXJsUGFyc2luZ05vZGUgcHJvdmlkZXMgdGhlIFVybFV0aWxzIGludGVyZmFjZSAtIGh0dHA6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmx1dGlsc1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaHJlZjogdXJsUGFyc2luZ05vZGUuaHJlZixcbiAgICAgICAgcHJvdG9jb2w6IHVybFBhcnNpbmdOb2RlLnByb3RvY29sID8gdXJsUGFyc2luZ05vZGUucHJvdG9jb2wucmVwbGFjZSgvOiQvLCAnJykgOiAnJyxcbiAgICAgICAgaG9zdDogdXJsUGFyc2luZ05vZGUuaG9zdCxcbiAgICAgICAgc2VhcmNoOiB1cmxQYXJzaW5nTm9kZS5zZWFyY2ggPyB1cmxQYXJzaW5nTm9kZS5zZWFyY2gucmVwbGFjZSgvXlxcPy8sICcnKSA6ICcnLFxuICAgICAgICBoYXNoOiB1cmxQYXJzaW5nTm9kZS5oYXNoID8gdXJsUGFyc2luZ05vZGUuaGFzaC5yZXBsYWNlKC9eIy8sICcnKSA6ICcnLFxuICAgICAgICBob3N0bmFtZTogdXJsUGFyc2luZ05vZGUuaG9zdG5hbWUsXG4gICAgICAgIHBvcnQ6IHVybFBhcnNpbmdOb2RlLnBvcnQsXG4gICAgICAgIHBhdGhuYW1lOiAodXJsUGFyc2luZ05vZGUucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycpID9cbiAgICAgICAgICB1cmxQYXJzaW5nTm9kZS5wYXRobmFtZSA6XG4gICAgICAgICAgJy8nICsgdXJsUGFyc2luZ05vZGUucGF0aG5hbWVcbiAgICAgIH07XG4gICAgfVxuXG4gICAgb3JpZ2luVVJMID0gcmVzb2x2ZVVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG5cbiAgICAvKipcbiAgICAqIERldGVybWluZSBpZiBhIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luIGFzIHRoZSBjdXJyZW50IGxvY2F0aW9uXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3RVUkwgVGhlIFVSTCB0byB0ZXN0XG4gICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgKi9cbiAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKHJlcXVlc3RVUkwpIHtcbiAgICAgIGNvbnN0IHBhcnNlZCA9ICh1dGlscy5pc1N0cmluZyhyZXF1ZXN0VVJMKSkgPyByZXNvbHZlVVJMKHJlcXVlc3RVUkwpIDogcmVxdWVzdFVSTDtcbiAgICAgIHJldHVybiAocGFyc2VkLnByb3RvY29sID09PSBvcmlnaW5VUkwucHJvdG9jb2wgJiZcbiAgICAgICAgICBwYXJzZWQuaG9zdCA9PT0gb3JpZ2luVVJMLmhvc3QpO1xuICAgIH07XG4gIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudnMgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbigpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG4gIH0pKCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isURLSameOrigin.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/null.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/null.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n// eslint-disable-next-line strict\n/* harmony default export */ __webpack_exports__[\"default\"] = (null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbnVsbC5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQSwrREFBZSxJQUFJLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL251bGwuanM/YzFkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc3RyaWN0XG5leHBvcnQgZGVmYXVsdCBudWxsO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/null.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\n/* harmony default export */ __webpack_exports__[\"default\"] = (rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7O0FBQWE7O0FBRXFCOztBQUVsQztBQUNBO0FBQ0EsMEJBQTBCLDZEQUFpQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0EsK0RBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3BhcnNlSGVhZGVycy5qcz8yYzhkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4vLi4vdXRpbHMuanMnO1xuXG4vLyBSYXdBeGlvc0hlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG5jb25zdCBpZ25vcmVEdXBsaWNhdGVPZiA9IHV0aWxzLnRvT2JqZWN0U2V0KFtcbiAgJ2FnZScsICdhdXRob3JpemF0aW9uJywgJ2NvbnRlbnQtbGVuZ3RoJywgJ2NvbnRlbnQtdHlwZScsICdldGFnJyxcbiAgJ2V4cGlyZXMnLCAnZnJvbScsICdob3N0JywgJ2lmLW1vZGlmaWVkLXNpbmNlJywgJ2lmLXVubW9kaWZpZWQtc2luY2UnLFxuICAnbGFzdC1tb2RpZmllZCcsICdsb2NhdGlvbicsICdtYXgtZm9yd2FyZHMnLCAncHJveHktYXV0aG9yaXphdGlvbicsXG4gICdyZWZlcmVyJywgJ3JldHJ5LWFmdGVyJywgJ3VzZXItYWdlbnQnXG5dKTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHJhd0hlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICpcbiAqIEByZXR1cm5zIHtPYmplY3R9IEhlYWRlcnMgcGFyc2VkIGludG8gYW4gb2JqZWN0XG4gKi9cbmV4cG9ydCBkZWZhdWx0IHJhd0hlYWRlcnMgPT4ge1xuICBjb25zdCBwYXJzZWQgPSB7fTtcbiAgbGV0IGtleTtcbiAgbGV0IHZhbDtcbiAgbGV0IGk7XG5cbiAgcmF3SGVhZGVycyAmJiByYXdIZWFkZXJzLnNwbGl0KCdcXG4nKS5mb3JFYWNoKGZ1bmN0aW9uIHBhcnNlcihsaW5lKSB7XG4gICAgaSA9IGxpbmUuaW5kZXhPZignOicpO1xuICAgIGtleSA9IGxpbmUuc3Vic3RyaW5nKDAsIGkpLnRyaW0oKS50b0xvd2VyQ2FzZSgpO1xuICAgIHZhbCA9IGxpbmUuc3Vic3RyaW5nKGkgKyAxKS50cmltKCk7XG5cbiAgICBpZiAoIWtleSB8fCAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2Zba2V5XSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoa2V5ID09PSAnc2V0LWNvb2tpZScpIHtcbiAgICAgIGlmIChwYXJzZWRba2V5XSkge1xuICAgICAgICBwYXJzZWRba2V5XS5wdXNoKHZhbCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXJzZWRba2V5XSA9IFt2YWxdO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBwYXJzZWRba2V5XSA9IHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gKyAnLCAnICsgdmFsIDogdmFsO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIHBhcnNlZDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/parseHeaders.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseProtocol.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseProtocol.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ parseProtocol; }\n/* harmony export */ });\n\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VQcm90b2NvbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7O0FBRUU7QUFDZiwwQkFBMEIsS0FBSztBQUMvQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9wYXJzZVByb3RvY29sLmpzP2FjY2QiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwYXJzZVByb3RvY29sKHVybCkge1xuICBjb25zdCBtYXRjaCA9IC9eKFstK1xcd117MSwyNX0pKDo/XFwvXFwvfDopLy5leGVjKHVybCk7XG4gIHJldHVybiBtYXRjaCAmJiBtYXRjaFsxXSB8fCAnJztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/parseProtocol.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/speedometer.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/speedometer.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (speedometer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3BlZWRvbWV0ZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFhOztBQUViO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSwrREFBZSxXQUFXLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3NwZWVkb21ldGVyLmpzPzE5ODQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENhbGN1bGF0ZSBkYXRhIG1heFJhdGVcbiAqIEBwYXJhbSB7TnVtYmVyfSBbc2FtcGxlc0NvdW50PSAxMF1cbiAqIEBwYXJhbSB7TnVtYmVyfSBbbWluPSAxMDAwXVxuICogQHJldHVybnMge0Z1bmN0aW9ufVxuICovXG5mdW5jdGlvbiBzcGVlZG9tZXRlcihzYW1wbGVzQ291bnQsIG1pbikge1xuICBzYW1wbGVzQ291bnQgPSBzYW1wbGVzQ291bnQgfHwgMTA7XG4gIGNvbnN0IGJ5dGVzID0gbmV3IEFycmF5KHNhbXBsZXNDb3VudCk7XG4gIGNvbnN0IHRpbWVzdGFtcHMgPSBuZXcgQXJyYXkoc2FtcGxlc0NvdW50KTtcbiAgbGV0IGhlYWQgPSAwO1xuICBsZXQgdGFpbCA9IDA7XG4gIGxldCBmaXJzdFNhbXBsZVRTO1xuXG4gIG1pbiA9IG1pbiAhPT0gdW5kZWZpbmVkID8gbWluIDogMTAwMDtcblxuICByZXR1cm4gZnVuY3Rpb24gcHVzaChjaHVua0xlbmd0aCkge1xuICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG5cbiAgICBjb25zdCBzdGFydGVkQXQgPSB0aW1lc3RhbXBzW3RhaWxdO1xuXG4gICAgaWYgKCFmaXJzdFNhbXBsZVRTKSB7XG4gICAgICBmaXJzdFNhbXBsZVRTID0gbm93O1xuICAgIH1cblxuICAgIGJ5dGVzW2hlYWRdID0gY2h1bmtMZW5ndGg7XG4gICAgdGltZXN0YW1wc1toZWFkXSA9IG5vdztcblxuICAgIGxldCBpID0gdGFpbDtcbiAgICBsZXQgYnl0ZXNDb3VudCA9IDA7XG5cbiAgICB3aGlsZSAoaSAhPT0gaGVhZCkge1xuICAgICAgYnl0ZXNDb3VudCArPSBieXRlc1tpKytdO1xuICAgICAgaSA9IGkgJSBzYW1wbGVzQ291bnQ7XG4gICAgfVxuXG4gICAgaGVhZCA9IChoZWFkICsgMSkgJSBzYW1wbGVzQ291bnQ7XG5cbiAgICBpZiAoaGVhZCA9PT0gdGFpbCkge1xuICAgICAgdGFpbCA9ICh0YWlsICsgMSkgJSBzYW1wbGVzQ291bnQ7XG4gICAgfVxuXG4gICAgaWYgKG5vdyAtIGZpcnN0U2FtcGxlVFMgPCBtaW4pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBwYXNzZWQgPSBzdGFydGVkQXQgJiYgbm93IC0gc3RhcnRlZEF0O1xuXG4gICAgcmV0dXJuIHBhc3NlZCA/IE1hdGgucm91bmQoYnl0ZXNDb3VudCAqIDEwMDAgLyBwYXNzZWQpIDogdW5kZWZpbmVkO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBzcGVlZG9tZXRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/speedometer.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ spread; }\n/* harmony export */ });\n\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckI7QUFDQSxhQUFhO0FBQ2I7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9zcHJlYWQuanM/NDg3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU3ludGFjdGljIHN1Z2FyIGZvciBpbnZva2luZyBhIGZ1bmN0aW9uIGFuZCBleHBhbmRpbmcgYW4gYXJyYXkgZm9yIGFyZ3VtZW50cy5cbiAqXG4gKiBDb21tb24gdXNlIGNhc2Ugd291bGQgYmUgdG8gdXNlIGBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHlgLlxuICpcbiAqICBgYGBqc1xuICogIGZ1bmN0aW9uIGYoeCwgeSwgeikge31cbiAqICB2YXIgYXJncyA9IFsxLCAyLCAzXTtcbiAqICBmLmFwcGx5KG51bGwsIGFyZ3MpO1xuICogIGBgYFxuICpcbiAqIFdpdGggYHNwcmVhZGAgdGhpcyBleGFtcGxlIGNhbiBiZSByZS13cml0dGVuLlxuICpcbiAqICBgYGBqc1xuICogIHNwcmVhZChmdW5jdGlvbih4LCB5LCB6KSB7fSkoWzEsIDIsIDNdKTtcbiAqICBgYGBcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICpcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3ByZWFkKGNhbGxiYWNrKSB7XG4gIHJldHVybiBmdW5jdGlvbiB3cmFwKGFycikge1xuICAgIHJldHVybiBjYWxsYmFjay5hcHBseShudWxsLCBhcnIpO1xuICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/spread.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/toFormData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/toFormData.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/node/classes/FormData.js */ \"./node_modules/axios/lib/helpers/null.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\n\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isPlainObject(thing) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (_platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isSpecCompliantForm(formData);\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBlob(value)) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBuffer(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) && isFlatArray(value)) ||\n        ((_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFileList(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '[]')) && (arr = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(value, function each(el, key) {\n      const result = !(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(el) || el === null) && visitor.call(\n        formData, el, _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (toFormData);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/toFormData.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/toURLEncodedForm.js":
/*!************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/toURLEncodedForm.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ toURLEncodedForm; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/index.js\");\n\n\n\n\n\n\nfunction toURLEncodedForm(data, options) {\n  return (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(data, new _platform_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (_platform_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isNode && _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdG9VUkxFbmNvZGVkRm9ybS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBRW1CO0FBQ1M7QUFDRzs7QUFFN0I7QUFDZixTQUFTLDBEQUFVLFdBQVcsa0VBQWdCO0FBQzlDO0FBQ0EsVUFBVSxpRUFBZSxJQUFJLDBEQUFjO0FBQzNDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy90b1VSTEVuY29kZWRGb3JtLmpzP2QwZmUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vdXRpbHMuanMnO1xuaW1wb3J0IHRvRm9ybURhdGEgZnJvbSAnLi90b0Zvcm1EYXRhLmpzJztcbmltcG9ydCBwbGF0Zm9ybSBmcm9tICcuLi9wbGF0Zm9ybS9pbmRleC5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRvVVJMRW5jb2RlZEZvcm0oZGF0YSwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Gb3JtRGF0YShkYXRhLCBuZXcgcGxhdGZvcm0uY2xhc3Nlcy5VUkxTZWFyY2hQYXJhbXMoKSwgT2JqZWN0LmFzc2lnbih7XG4gICAgdmlzaXRvcjogZnVuY3Rpb24odmFsdWUsIGtleSwgcGF0aCwgaGVscGVycykge1xuICAgICAgaWYgKHBsYXRmb3JtLmlzTm9kZSAmJiB1dGlscy5pc0J1ZmZlcih2YWx1ZSkpIHtcbiAgICAgICAgdGhpcy5hcHBlbmQoa2V5LCB2YWx1ZS50b1N0cmluZygnYmFzZTY0JykpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBoZWxwZXJzLmRlZmF1bHRWaXNpdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9LCBvcHRpb25zKSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/toURLEncodedForm.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/validator.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/validator.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../env/data.js */ \"./node_modules/axios/lib/env/data.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + _env_data_js__WEBPACK_IMPORTED_MODULE_0__.VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('options must be an object', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('option ' + opt + ' must be ' + result, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('Unknown option ' + opt, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION);\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  assertOptions,\n  validators\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdmFsaWRhdG9yLmpzIiwibWFwcGluZ3MiOiI7OztBQUFhOztBQUUwQjtBQUNROztBQUUvQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixpREFBTztBQUMvQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMkRBQVU7QUFDMUI7QUFDQSxRQUFRLDBFQUF5QjtBQUNqQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQjtBQUNBLGFBQWE7QUFDYjs7QUFFQTtBQUNBO0FBQ0EsY0FBYywyREFBVSw4QkFBOEIsZ0ZBQStCO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDJEQUFVLHlDQUF5QyxnRkFBK0I7QUFDcEc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMkRBQVUsMEJBQTBCLDBFQUF5QjtBQUM3RTtBQUNBO0FBQ0E7O0FBRUEsK0RBQWU7QUFDZjtBQUNBO0FBQ0EsQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy92YWxpZGF0b3IuanM/NGEwMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7VkVSU0lPTn0gZnJvbSAnLi4vZW52L2RhdGEuanMnO1xuaW1wb3J0IEF4aW9zRXJyb3IgZnJvbSAnLi4vY29yZS9BeGlvc0Vycm9yLmpzJztcblxuY29uc3QgdmFsaWRhdG9ycyA9IHt9O1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuWydvYmplY3QnLCAnYm9vbGVhbicsICdudW1iZXInLCAnZnVuY3Rpb24nLCAnc3RyaW5nJywgJ3N5bWJvbCddLmZvckVhY2goKHR5cGUsIGkpID0+IHtcbiAgdmFsaWRhdG9yc1t0eXBlXSA9IGZ1bmN0aW9uIHZhbGlkYXRvcih0aGluZykge1xuICAgIHJldHVybiB0eXBlb2YgdGhpbmcgPT09IHR5cGUgfHwgJ2EnICsgKGkgPCAxID8gJ24gJyA6ICcgJykgKyB0eXBlO1xuICB9O1xufSk7XG5cbmNvbnN0IGRlcHJlY2F0ZWRXYXJuaW5ncyA9IHt9O1xuXG4vKipcbiAqIFRyYW5zaXRpb25hbCBvcHRpb24gdmFsaWRhdG9yXG4gKlxuICogQHBhcmFtIHtmdW5jdGlvbnxib29sZWFuP30gdmFsaWRhdG9yIC0gc2V0IHRvIGZhbHNlIGlmIHRoZSB0cmFuc2l0aW9uYWwgb3B0aW9uIGhhcyBiZWVuIHJlbW92ZWRcbiAqIEBwYXJhbSB7c3RyaW5nP30gdmVyc2lvbiAtIGRlcHJlY2F0ZWQgdmVyc2lvbiAvIHJlbW92ZWQgc2luY2UgdmVyc2lvblxuICogQHBhcmFtIHtzdHJpbmc/fSBtZXNzYWdlIC0gc29tZSBtZXNzYWdlIHdpdGggYWRkaXRpb25hbCBpbmZvXG4gKlxuICogQHJldHVybnMge2Z1bmN0aW9ufVxuICovXG52YWxpZGF0b3JzLnRyYW5zaXRpb25hbCA9IGZ1bmN0aW9uIHRyYW5zaXRpb25hbCh2YWxpZGF0b3IsIHZlcnNpb24sIG1lc3NhZ2UpIHtcbiAgZnVuY3Rpb24gZm9ybWF0TWVzc2FnZShvcHQsIGRlc2MpIHtcbiAgICByZXR1cm4gJ1tBeGlvcyB2JyArIFZFUlNJT04gKyAnXSBUcmFuc2l0aW9uYWwgb3B0aW9uIFxcJycgKyBvcHQgKyAnXFwnJyArIGRlc2MgKyAobWVzc2FnZSA/ICcuICcgKyBtZXNzYWdlIDogJycpO1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgcmV0dXJuICh2YWx1ZSwgb3B0LCBvcHRzKSA9PiB7XG4gICAgaWYgKHZhbGlkYXRvciA9PT0gZmFsc2UpIHtcbiAgICAgIHRocm93IG5ldyBBeGlvc0Vycm9yKFxuICAgICAgICBmb3JtYXRNZXNzYWdlKG9wdCwgJyBoYXMgYmVlbiByZW1vdmVkJyArICh2ZXJzaW9uID8gJyBpbiAnICsgdmVyc2lvbiA6ICcnKSksXG4gICAgICAgIEF4aW9zRXJyb3IuRVJSX0RFUFJFQ0FURURcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKHZlcnNpb24gJiYgIWRlcHJlY2F0ZWRXYXJuaW5nc1tvcHRdKSB7XG4gICAgICBkZXByZWNhdGVkV2FybmluZ3Nbb3B0XSA9IHRydWU7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICBmb3JtYXRNZXNzYWdlKFxuICAgICAgICAgIG9wdCxcbiAgICAgICAgICAnIGhhcyBiZWVuIGRlcHJlY2F0ZWQgc2luY2UgdicgKyB2ZXJzaW9uICsgJyBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZWFyIGZ1dHVyZSdcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsaWRhdG9yID8gdmFsaWRhdG9yKHZhbHVlLCBvcHQsIG9wdHMpIDogdHJ1ZTtcbiAgfTtcbn07XG5cbi8qKlxuICogQXNzZXJ0IG9iamVjdCdzIHByb3BlcnRpZXMgdHlwZVxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gKiBAcGFyYW0ge29iamVjdH0gc2NoZW1hXG4gKiBAcGFyYW0ge2Jvb2xlYW4/fSBhbGxvd1Vua25vd25cbiAqXG4gKiBAcmV0dXJucyB7b2JqZWN0fVxuICovXG5cbmZ1bmN0aW9uIGFzc2VydE9wdGlvbnMob3B0aW9ucywgc2NoZW1hLCBhbGxvd1Vua25vd24pIHtcbiAgaWYgKHR5cGVvZiBvcHRpb25zICE9PSAnb2JqZWN0Jykge1xuICAgIHRocm93IG5ldyBBeGlvc0Vycm9yKCdvcHRpb25zIG11c3QgYmUgYW4gb2JqZWN0JywgQXhpb3NFcnJvci5FUlJfQkFEX09QVElPTl9WQUxVRSk7XG4gIH1cbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKG9wdGlvbnMpO1xuICBsZXQgaSA9IGtleXMubGVuZ3RoO1xuICB3aGlsZSAoaS0tID4gMCkge1xuICAgIGNvbnN0IG9wdCA9IGtleXNbaV07XG4gICAgY29uc3QgdmFsaWRhdG9yID0gc2NoZW1hW29wdF07XG4gICAgaWYgKHZhbGlkYXRvcikge1xuICAgICAgY29uc3QgdmFsdWUgPSBvcHRpb25zW29wdF07XG4gICAgICBjb25zdCByZXN1bHQgPSB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbGlkYXRvcih2YWx1ZSwgb3B0LCBvcHRpb25zKTtcbiAgICAgIGlmIChyZXN1bHQgIT09IHRydWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEF4aW9zRXJyb3IoJ29wdGlvbiAnICsgb3B0ICsgJyBtdXN0IGJlICcgKyByZXN1bHQsIEF4aW9zRXJyb3IuRVJSX0JBRF9PUFRJT05fVkFMVUUpO1xuICAgICAgfVxuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChhbGxvd1Vua25vd24gIT09IHRydWUpIHtcbiAgICAgIHRocm93IG5ldyBBeGlvc0Vycm9yKCdVbmtub3duIG9wdGlvbiAnICsgb3B0LCBBeGlvc0Vycm9yLkVSUl9CQURfT1BUSU9OKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBhc3NlcnRPcHRpb25zLFxuICB2YWxpZGF0b3JzXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/validator.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/classes/Blob.js":
/*!*****************************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/classes/Blob.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (typeof Blob !== 'undefined' ? Blob : null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvY2xhc3Nlcy9CbG9iLmpzIiwibWFwcGluZ3MiOiI7QUFBWTs7QUFFWiwrREFBZSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9icm93c2VyL2NsYXNzZXMvQmxvYi5qcz82ZTA1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5leHBvcnQgZGVmYXVsdCB0eXBlb2YgQmxvYiAhPT0gJ3VuZGVmaW5lZCcgPyBCbG9iIDogbnVsbFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/platform/browser/classes/Blob.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/classes/FormData.js":
/*!*********************************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/classes/FormData.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (typeof FormData !== 'undefined' ? FormData : null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvY2xhc3Nlcy9Gb3JtRGF0YS5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7O0FBRWIsK0RBQWUsaURBQWlELEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9icm93c2VyL2NsYXNzZXMvRm9ybURhdGEuanM/MjM1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydCBkZWZhdWx0IHR5cGVvZiBGb3JtRGF0YSAhPT0gJ3VuZGVmaW5lZCcgPyBGb3JtRGF0YSA6IG51bGw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/platform/browser/classes/FormData.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js":
/*!****************************************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../helpers/AxiosURLSearchParams.js */ \"./node_modules/axios/lib/helpers/AxiosURLSearchParams.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (typeof URLSearchParams !== 'undefined' ? URLSearchParams : _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvY2xhc3Nlcy9VUkxTZWFyY2hQYXJhbXMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBYTs7QUFFK0Q7QUFDNUUsK0RBQWUsMkRBQTJELHdFQUFvQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvcGxhdGZvcm0vYnJvd3Nlci9jbGFzc2VzL1VSTFNlYXJjaFBhcmFtcy5qcz8xMmI0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IEF4aW9zVVJMU2VhcmNoUGFyYW1zIGZyb20gJy4uLy4uLy4uL2hlbHBlcnMvQXhpb3NVUkxTZWFyY2hQYXJhbXMuanMnO1xuZXhwb3J0IGRlZmF1bHQgdHlwZW9mIFVSTFNlYXJjaFBhcmFtcyAhPT0gJ3VuZGVmaW5lZCcgPyBVUkxTZWFyY2hQYXJhbXMgOiBBeGlvc1VSTFNlYXJjaFBhcmFtcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classes/URLSearchParams.js */ \"./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js\");\n/* harmony import */ var _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes/FormData.js */ \"./node_modules/axios/lib/platform/browser/classes/FormData.js\");\n/* harmony import */ var _classes_Blob_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./classes/Blob.js */ \"./node_modules/axios/lib/platform/browser/classes/Blob.js\");\n\n\n\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  isBrowser: true,\n  classes: {\n    URLSearchParams: _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    FormData: _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Blob: _classes_Blob_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUEwRDtBQUNkO0FBQ1I7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOzs7QUFHRCwrREFBZTtBQUNmO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIsWUFBWTtBQUNaLFFBQVE7QUFDUixHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvcGxhdGZvcm0vYnJvd3Nlci9pbmRleC5qcz8zNjAxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBVUkxTZWFyY2hQYXJhbXMgZnJvbSAnLi9jbGFzc2VzL1VSTFNlYXJjaFBhcmFtcy5qcydcbmltcG9ydCBGb3JtRGF0YSBmcm9tICcuL2NsYXNzZXMvRm9ybURhdGEuanMnXG5pbXBvcnQgQmxvYiBmcm9tICcuL2NsYXNzZXMvQmxvYi5qcydcblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgd2UncmUgcnVubmluZyBpbiBhIHN0YW5kYXJkIGJyb3dzZXIgZW52aXJvbm1lbnRcbiAqXG4gKiBUaGlzIGFsbG93cyBheGlvcyB0byBydW4gaW4gYSB3ZWIgd29ya2VyLCBhbmQgcmVhY3QtbmF0aXZlLlxuICogQm90aCBlbnZpcm9ubWVudHMgc3VwcG9ydCBYTUxIdHRwUmVxdWVzdCwgYnV0IG5vdCBmdWxseSBzdGFuZGFyZCBnbG9iYWxzLlxuICpcbiAqIHdlYiB3b3JrZXJzOlxuICogIHR5cGVvZiB3aW5kb3cgLT4gdW5kZWZpbmVkXG4gKiAgdHlwZW9mIGRvY3VtZW50IC0+IHVuZGVmaW5lZFxuICpcbiAqIHJlYWN0LW5hdGl2ZTpcbiAqICBuYXZpZ2F0b3IucHJvZHVjdCAtPiAnUmVhY3ROYXRpdmUnXG4gKiBuYXRpdmVzY3JpcHRcbiAqICBuYXZpZ2F0b3IucHJvZHVjdCAtPiAnTmF0aXZlU2NyaXB0JyBvciAnTlMnXG4gKlxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmNvbnN0IGlzU3RhbmRhcmRCcm93c2VyRW52ID0gKCgpID0+IHtcbiAgbGV0IHByb2R1Y3Q7XG4gIGlmICh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiAoXG4gICAgKHByb2R1Y3QgPSBuYXZpZ2F0b3IucHJvZHVjdCkgPT09ICdSZWFjdE5hdGl2ZScgfHxcbiAgICBwcm9kdWN0ID09PSAnTmF0aXZlU2NyaXB0JyB8fFxuICAgIHByb2R1Y3QgPT09ICdOUycpXG4gICkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnO1xufSkoKTtcblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgd2UncmUgcnVubmluZyBpbiBhIHN0YW5kYXJkIGJyb3dzZXIgd2ViV29ya2VyIGVudmlyb25tZW50XG4gKlxuICogQWx0aG91Z2ggdGhlIGBpc1N0YW5kYXJkQnJvd3NlckVudmAgbWV0aG9kIGluZGljYXRlcyB0aGF0XG4gKiBgYWxsb3dzIGF4aW9zIHRvIHJ1biBpbiBhIHdlYiB3b3JrZXJgLCB0aGUgV2ViV29ya2VyIHdpbGwgc3RpbGwgYmVcbiAqIGZpbHRlcmVkIG91dCBkdWUgdG8gaXRzIGp1ZGdtZW50IHN0YW5kYXJkXG4gKiBgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJ2AuXG4gKiBUaGlzIGxlYWRzIHRvIGEgcHJvYmxlbSB3aGVuIGF4aW9zIHBvc3QgYEZvcm1EYXRhYCBpbiB3ZWJXb3JrZXJcbiAqL1xuIGNvbnN0IGlzU3RhbmRhcmRCcm93c2VyV2ViV29ya2VyRW52ID0gKCgpID0+IHtcbiAgcmV0dXJuIChcbiAgICB0eXBlb2YgV29ya2VyR2xvYmFsU2NvcGUgIT09ICd1bmRlZmluZWQnICYmXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gICAgc2VsZiBpbnN0YW5jZW9mIFdvcmtlckdsb2JhbFNjb3BlICYmXG4gICAgdHlwZW9mIHNlbGYuaW1wb3J0U2NyaXB0cyA9PT0gJ2Z1bmN0aW9uJ1xuICApO1xufSkoKTtcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGlzQnJvd3NlcjogdHJ1ZSxcbiAgY2xhc3Nlczoge1xuICAgIFVSTFNlYXJjaFBhcmFtcyxcbiAgICBGb3JtRGF0YSxcbiAgICBCbG9iXG4gIH0sXG4gIGlzU3RhbmRhcmRCcm93c2VyRW52LFxuICBpc1N0YW5kYXJkQnJvd3NlcldlYldvcmtlckVudixcbiAgcHJvdG9jb2xzOiBbJ2h0dHAnLCAnaHR0cHMnLCAnZmlsZScsICdibG9iJywgJ3VybCcsICdkYXRhJ11cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/platform/browser/index.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/platform/index.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/platform/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _node_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _node_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node/index.js */ \"./node_modules/axios/lib/platform/browser/index.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVDOztBQUVYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvcGxhdGZvcm0vaW5kZXguanM/NjQ0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi9ub2RlL2luZGV4LmpzJztcblxuZXhwb3J0IHtwbGF0Zm9ybSBhcyBkZWZhdWx0fVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/platform/index.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/bind.js */ \"./node_modules/axios/lib/helpers/bind.js\");\n\n\n\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/utils.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);